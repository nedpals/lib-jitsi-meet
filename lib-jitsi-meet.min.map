{"version":3,"sources":["webpack://JitsiMeetJS/webpack/bootstrap","webpack://JitsiMeetJS/./service/xmpp/XMPPEvents.js","webpack://JitsiMeetJS/./JitsiConferenceEvents.js","webpack://JitsiMeetJS/./node_modules/strophe.js/dist/strophe.umd.js","webpack://JitsiMeetJS/./modules/browser/index.js","webpack://JitsiMeetJS/./service/RTC/MediaType.js","webpack://JitsiMeetJS/./node_modules/jitsi-meet-logger/lib/index.js","webpack://JitsiMeetJS/./modules/statistics/statistics.js","webpack://JitsiMeetJS/./service/RTC/RTCEvents.js","webpack://JitsiMeetJS/./service/statistics/AnalyticsEvents.js","webpack://JitsiMeetJS/./modules/sdp/SDPUtil.js","webpack://JitsiMeetJS/./service/RTC/MediaDirection.js","webpack://JitsiMeetJS/./modules/RTC/RTCUtils.js","webpack://JitsiMeetJS/./modules/util/GlobalOnErrorHandler.js","webpack://JitsiMeetJS/./modules/RTC/RTC.js","webpack://JitsiMeetJS/./service/RTC/VideoType.js","webpack://JitsiMeetJS/./JitsiTrackErrors.js","webpack://JitsiMeetJS/./JitsiTrackEvents.js","webpack://JitsiMeetJS/./JitsiConferenceErrors.js","webpack://JitsiMeetJS/./modules/sdp/SDP.js","webpack://JitsiMeetJS/./node_modules/events/events.js","webpack://JitsiMeetJS/./service/RTC/CodecMimeType.js","webpack://JitsiMeetJS/./JitsiTrackError.js","webpack://JitsiMeetJS/./modules/util/Listenable.js","webpack://JitsiMeetJS/./node_modules/sdp-transform/lib/index.js","webpack://JitsiMeetJS/./modules/detection/DetectionEvents.js","webpack://JitsiMeetJS/./modules/xmpp/xmpp.js","webpack://JitsiMeetJS/./modules/videosipgw/VideoSIPGWConstants.js","webpack://JitsiMeetJS/./JitsiConnectionEvents.js","webpack://JitsiMeetJS/./service/statistics/Events.js","webpack://JitsiMeetJS/./modules/settings/Settings.js","webpack://JitsiMeetJS/./modules/sdp/SdpTransformUtil.js","webpack://JitsiMeetJS/./modules/util/MathUtil.js","webpack://JitsiMeetJS/./service/connectivity/ConnectionQualityEvents.js","webpack://JitsiMeetJS/./node_modules/lodash.isequal/index.js","webpack://JitsiMeetJS/./modules/xmpp/JingleSessionState.js","webpack://JitsiMeetJS/./modules/proxyconnection/constants.js","webpack://JitsiMeetJS/./modules/statistics/CallStats.js","webpack://JitsiMeetJS/./node_modules/jquery/dist/jquery.js","webpack://JitsiMeetJS/./modules/util/RandomUtil.js","webpack://JitsiMeetJS/./modules/xmpp/ConnectionPlugin.js","webpack://JitsiMeetJS/./modules/RTC/ScreenObtainer.js","webpack://JitsiMeetJS/./JitsiConnectionErrors.js","webpack://JitsiMeetJS/./modules/xmpp/XmppConnection.js","webpack://JitsiMeetJS/./service/RTC/SignalingEvents.js","webpack://JitsiMeetJS/./modules/statistics/constants.js","webpack://JitsiMeetJS/./node_modules/lodash.clonedeep/index.js","webpack://JitsiMeetJS/(webpack)/buildin/global.js","webpack://JitsiMeetJS/./modules/util/Deferred.js","webpack://JitsiMeetJS/./service/RTC/CameraFacingMode.js","webpack://JitsiMeetJS/./node_modules/sdp/sdp.js","webpack://JitsiMeetJS/./JitsiMediaDevicesEvents.js","webpack://JitsiMeetJS/./modules/util/ScriptUtil.js","webpack://JitsiMeetJS/./modules/connectivity/ParticipantConnectionStatus.js","webpack://JitsiMeetJS/./modules/connectivity/NetworkInfo.js","webpack://JitsiMeetJS/./modules/recording/recordingXMLUtils.js","webpack://JitsiMeetJS/./modules/e2ee/OlmAdapter.js","webpack://JitsiMeetJS/./modules/e2ee/E2EEncryption.js","webpack://JitsiMeetJS/./modules/xmpp/JingleSessionPC.js","webpack://JitsiMeetJS/./node_modules/@jitsi/js-utils/browser-detection/browsers.js","webpack://JitsiMeetJS/./node_modules/@jitsi/js-utils/browser-detection/BrowserDetection.js","webpack://JitsiMeetJS/./node_modules/@jitsi/js-utils/jitsi-local-storage/index.js","webpack://JitsiMeetJS/./node_modules/base64-js/index.js","webpack://JitsiMeetJS/./modules/sdp/SDPDiffer.js","webpack://JitsiMeetJS/./modules/RTC/TPCUtils.js","webpack://JitsiMeetJS/./node_modules/process/browser.js","webpack://JitsiMeetJS/./modules/statistics/LocalStatsCollector.js","webpack://JitsiMeetJS/./JitsiTranscriptionStatus.js","webpack://JitsiMeetJS/./modules/xmpp/MediaSessionEvents.js","webpack://JitsiMeetJS/./modules/RTC/JitsiTrack.js","webpack://JitsiMeetJS/./service/RTC/Resolutions.js","webpack://JitsiMeetJS/./modules/detection/TrackVADEmitter.js","webpack://JitsiMeetJS/./modules/webaudio/WebAudioUtils.js","webpack://JitsiMeetJS/./service/e2eping/E2ePingEvents.js","webpack://JitsiMeetJS/./modules/statistics/SpeakerStats.js","webpack://JitsiMeetJS/./JitsiMediaDevices.js","webpack://JitsiMeetJS/./service/authentication/AuthenticationEvents.js","webpack://JitsiMeetJS/./node_modules/lodash.debounce/index.js","webpack://JitsiMeetJS/./modules/e2ee/crypto-utils.js","webpack://JitsiMeetJS/./modules/xmpp/Caps.js","webpack://JitsiMeetJS/./modules/detection/VADAudioAnalyser.js","webpack://JitsiMeetJS/./modules/recording/JibriSession.js","webpack://JitsiMeetJS/./node_modules/uuid/dist/esm-browser/rng.js","webpack://JitsiMeetJS/./node_modules/uuid/dist/esm-browser/bytesToUuid.js","webpack://JitsiMeetJS/./node_modules/uuid/dist/esm-browser/v4.js","webpack://JitsiMeetJS/./node_modules/jitsi-meet-logger/lib/Logger.js","webpack://JitsiMeetJS/(webpack)/buildin/module.js","webpack://JitsiMeetJS/./node_modules/sdp-transform/lib/grammar.js","webpack://JitsiMeetJS/./modules/transcription/audioRecorder.js","webpack://JitsiMeetJS/./JitsiConnection.js","webpack://JitsiMeetJS/./JitsiConference.js","webpack://JitsiMeetJS/./JitsiConferenceEventManager.js","webpack://JitsiMeetJS/./modules/browser/BrowserCapabilities.js","webpack://JitsiMeetJS/./node_modules/js-md5/src/md5.js","webpack://JitsiMeetJS/./node_modules/bowser/es5.js","webpack://JitsiMeetJS/./modules/statistics/AnalyticsAdapter.js","webpack://JitsiMeetJS/./modules/statistics/PerformanceObserverStats.js","webpack://JitsiMeetJS/./modules/statistics/RTPStatsCollector.js","webpack://JitsiMeetJS/./modules/util/EventEmitterForwarder.js","webpack://JitsiMeetJS/./JitsiParticipant.js","webpack://JitsiMeetJS/./authenticateAndUpgradeRole.js","webpack://JitsiMeetJS/./modules/e2ee/E2EEContext.js","webpack://JitsiMeetJS/./modules/xmpp/ResumeTask.js","webpack://JitsiMeetJS/./modules/util/Retry.js","webpack://JitsiMeetJS/./modules/xmpp/StropheLastSuccess.js","webpack://JitsiMeetJS/./modules/xmpp/strophe.ping.js","webpack://JitsiMeetJS/./modules/xmpp/strophe.emuc.js","webpack://JitsiMeetJS/./modules/xmpp/ChatRoom.js","webpack://JitsiMeetJS/./modules/xmpp/AVModeration.js","webpack://JitsiMeetJS/./modules/xmpp/Lobby.js","webpack://JitsiMeetJS/./modules/xmpp/moderator.js","webpack://JitsiMeetJS/./modules/util/UsernameGenerator.js","webpack://JitsiMeetJS/./modules/xmpp/strophe.jingle.js","webpack://JitsiMeetJS/./modules/util/AsyncQueue.js","webpack://JitsiMeetJS/./node_modules/async/lib/async.js","webpack://JitsiMeetJS/./modules/util/StringUtils.js","webpack://JitsiMeetJS/./modules/xmpp/JingleSession.js","webpack://JitsiMeetJS/./modules/xmpp/SignalingLayerImpl.js","webpack://JitsiMeetJS/./service/RTC/SignalingLayer.js","webpack://JitsiMeetJS/./modules/xmpp/strophe.logger.js","webpack://JitsiMeetJS/./modules/xmpp/strophe.rayo.js","webpack://JitsiMeetJS/./modules/xmpp/strophe.util.js","webpack://JitsiMeetJS/./modules/RTC/CodecSelection.js","webpack://JitsiMeetJS/./modules/RTC/BridgeChannel.js","webpack://JitsiMeetJS/./modules/RTC/JitsiLocalTrack.js","webpack://JitsiMeetJS/./modules/RTC/TraceablePeerConnection.js","webpack://JitsiMeetJS/./modules/sdp/LocalSdpMunger.js","webpack://JitsiMeetJS/./modules/sdp/RtxModifier.js","webpack://JitsiMeetJS/./modules/sdp/SdpConsistency.js","webpack://JitsiMeetJS/./modules/RTC/JitsiRemoteTrack.js","webpack://JitsiMeetJS/./modules/connectivity/ConnectionQuality.js","webpack://JitsiMeetJS/./modules/connectivity/IceFailedHandling.js","webpack://JitsiMeetJS/./modules/detection/NoAudioSignalDetection.js","webpack://JitsiMeetJS/./modules/detection/P2PDominantSpeakerDetection.js","webpack://JitsiMeetJS/./modules/detection/VADNoiseDetection.js","webpack://JitsiMeetJS/./modules/detection/VADTalkMutedDetection.js","webpack://JitsiMeetJS/./modules/e2eping/e2eping.js","webpack://JitsiMeetJS/./modules/event/Jvb121EventGenerator.js","webpack://JitsiMeetJS/./modules/qualitycontrol/ReceiveVideoController.js","webpack://JitsiMeetJS/./modules/qualitycontrol/SendVideoController.js","webpack://JitsiMeetJS/./modules/recording/RecordingManager.js","webpack://JitsiMeetJS/./modules/statistics/AudioOutputProblemDetector.js","webpack://JitsiMeetJS/./modules/statistics/AvgRTPStatsReporter.js","webpack://JitsiMeetJS/./modules/statistics/SpeakerStatsCollector.js","webpack://JitsiMeetJS/./modules/transcription/transcriber.js","webpack://JitsiMeetJS/./modules/version/ComponentsVersions.js","webpack://JitsiMeetJS/./modules/videosipgw/VideoSIPGW.js","webpack://JitsiMeetJS/./modules/videosipgw/JitsiVideoSIPGWSession.js","webpack://JitsiMeetJS/./modules/detection/ActiveDeviceDetector.js","webpack://JitsiMeetJS/./modules/proxyconnection/ProxyConnectionService.js","webpack://JitsiMeetJS/./modules/proxyconnection/ProxyConnectionPC.js","webpack://JitsiMeetJS/./modules/recording/recordingConstants.js","webpack://JitsiMeetJS/./modules/statistics/PrecallTest.js","webpack://JitsiMeetJS/./modules/util/AuthUtil.js","webpack://JitsiMeetJS/./modules/webaudio/AudioMixer.js","webpack://JitsiMeetJS/./node_modules/@jitsi/sdp-interop/lib/transform.js","webpack://JitsiMeetJS/./node_modules/@jitsi/sdp-interop/lib/interop.js","webpack://JitsiMeetJS/./index.js","webpack://JitsiMeetJS/./JitsiMeetJS.js","webpack://JitsiMeetJS/./node_modules/jitsi-meet-logger/lib/LogCollector.js","webpack://JitsiMeetJS/(webpack)/buildin/amd-options.js","webpack://JitsiMeetJS/./node_modules/current-executing-script/dist/currentExecutingScript.js","webpack://JitsiMeetJS/./service/statistics/constants.js","webpack://JitsiMeetJS/./node_modules/strophejs-plugin-disco/lib/strophe.disco.js","webpack://JitsiMeetJS/./node_modules/strophejs-plugin-stream-management/lib/strophe.stream-management.js","webpack://JitsiMeetJS/./node_modules/timers-browserify/main.js","webpack://JitsiMeetJS/./node_modules/setimmediate/setImmediate.js","webpack://JitsiMeetJS/./node_modules/sdp-transform/lib/parser.js","webpack://JitsiMeetJS/./node_modules/sdp-transform/lib/writer.js","webpack://JitsiMeetJS/./node_modules/@jitsi/sdp-simulcast/lib/index.js","webpack://JitsiMeetJS/./node_modules/@jitsi/sdp-simulcast/lib/transform-utils.js","webpack://JitsiMeetJS/./modules/transcription/recordingResult.js","webpack://JitsiMeetJS/./modules/transcription/transcriptionServices/SphinxTranscriptionService.js","webpack://JitsiMeetJS/./modules/transcription/word.js","webpack://JitsiMeetJS/./modules/transcription/transcriptionServices/AbstractTranscriptionService.js","webpack://JitsiMeetJS/./node_modules/webrtc-adapter/src/js/utils.js","webpack://JitsiMeetJS/./node_modules/webrtc-adapter/src/js/chrome/getusermedia.js","webpack://JitsiMeetJS/./node_modules/webrtc-adapter/src/js/chrome/getdisplaymedia.js","webpack://JitsiMeetJS/./node_modules/webrtc-adapter/src/js/chrome/chrome_shim.js","webpack://JitsiMeetJS/./node_modules/webrtc-adapter/src/js/firefox/getusermedia.js","webpack://JitsiMeetJS/./node_modules/webrtc-adapter/src/js/firefox/getdisplaymedia.js","webpack://JitsiMeetJS/./node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js","webpack://JitsiMeetJS/./node_modules/webrtc-adapter/src/js/safari/safari_shim.js","webpack://JitsiMeetJS/./node_modules/webrtc-adapter/src/js/common_shim.js","webpack://JitsiMeetJS/./node_modules/webrtc-adapter/src/js/adapter_core.js","webpack://JitsiMeetJS/./node_modules/webrtc-adapter/src/js/adapter_factory.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ADD_ICE_CANDIDATE_FAILED","AUDIO_MUTED_BY_FOCUS","VIDEO_MUTED_BY_FOCUS","AUTHENTICATION_REQUIRED","BRIDGE_DOWN","CALL_ACCEPTED","CALL_INCOMING","CALL_ENDED","CHAT_ERROR_RECEIVED","CONFERENCE_PROPERTIES_CHANGED","CONNECTION_ESTABLISHED","CONNECTION_FAILED","CONNECTION_INTERRUPTED","CONNECTION_RESTORED","CONNECTION_ICE_FAILED","CONNECTION_RESTARTED","CONNECTION_STATUS_CHANGED","DISPLAY_NAME_CHANGED","EMUC_ROOM_ADDED","EMUC_ROOM_REMOVED","ETHERPAD","FOCUS_DISCONNECTED","FOCUS_LEFT","GRACEFUL_SHUTDOWN","ICE_RESTARTING","ICE_RESTART_SUCCESS","KICKED","LOCAL_ROLE_CHANGED","MEETING_ID_SET","MESSAGE_RECEIVED","INVITE_MESSAGE_RECEIVED","PRIVATE_MESSAGE_RECEIVED","MUC_MEMBER_BOT_TYPE_CHANGED","MUC_DESTROYED","MUC_JOINED","MUC_MEMBER_JOINED","MUC_MEMBER_LEFT","MUC_LOBBY_MEMBER_JOINED","MUC_LOBBY_MEMBER_UPDATED","MUC_LOBBY_MEMBER_LEFT","MUC_DENIED_ACCESS","MUC_LEFT","MUC_ROLE_CHANGED","MUC_LOCK_CHANGED","MUC_MEMBERS_ONLY_CHANGED","PARTICIPANT_AUDIO_MUTED","PARTICIPANT_VIDEO_MUTED","PARTICIPANT_VIDEO_TYPE_CHANGED","PARTICIPANT_FEATURES_CHANGED","PASSWORD_REQUIRED","PHONE_NUMBER_CHANGED","PRESENCE_RECEIVED","PRESENCE_STATUS","PROMPT_FOR_LOGIN","READY_TO_JOIN","RECORDER_STATE_CHANGED","REMOTE_STATS","RENEGOTIATION_FAILED","RESERVATION_ERROR","ROOM_CONNECT_ERROR","ROOM_CONNECT_NOT_ALLOWED_ERROR","ROOM_JOIN_ERROR","ROOM_CONNECT_MEMBERS_ONLY_ERROR","ROOM_MAX_USERS_ERROR","SENDING_CHAT_MESSAGE","SENDING_PRIVATE_CHAT_MESSAGE","SESSION_ACCEPT_TIMEOUT","SPEAKER_STATS_RECEIVED","CONFERENCE_TIMESTAMP_RECEIVED","AV_MODERATION_APPROVED","AV_MODERATION_RECEIVED","AV_MODERATION_CHANGED","AV_MODERATION_PARTICIPANT_APPROVED","START_MUTED_FROM_FOCUS","SUBJECT_CHANGED","SUSPEND_DETECTED","TRANSCRIPTION_STATUS_CHANGED","TRANSPORT_INFO","VIDEO_SIP_GW_AVAILABILITY_CHANGED","VIDEO_SIP_GW_SESSION_STATE_CHANGED","ICE_CONNECTION_STATE_CHANGED","JSON_MESSAGE_RECEIVED","AUDIO_INPUT_STATE_CHANGE","AUTH_STATUS_CHANGED","BEFORE_STATISTICS_DISPOSED","CONFERENCE_ERROR","CONFERENCE_FAILED","CONFERENCE_JOINED","CONFERENCE_LEFT","CONFERENCE_UNIQUE_ID_SET","DATA_CHANNEL_OPENED","DOMINANT_SPEAKER_CHANGED","CONFERENCE_CREATED_TIMESTAMP","DTMF_SUPPORT_CHANGED","ENDPOINT_MESSAGE_RECEIVED","ENDPOINT_STATS_RECEIVED","JVB121_STATUS","PARTICIPANT_KICKED","LAST_N_ENDPOINTS_CHANGED","LOCK_STATE_CHANGED","SERVER_REGION_CHANGED","_MEDIA_SESSION_STARTED","_MEDIA_SESSION_ACTIVE_CHANGED","MEMBERS_ONLY_CHANGED","NO_AUDIO_INPUT","NOISY_MIC","PARTICIPANT_CONN_STATUS_CHANGED","PARTCIPANT_FEATURES_CHANGED","PARTICIPANT_PROPERTY_CHANGED","P2P_STATUS","PROPERTIES_CHANGED","START_MUTED_POLICY_CHANGED","STARTED_MUTED","TALK_WHILE_MUTED","TRACK_ADDED","TRACK_AUDIO_LEVEL_CHANGED","TRACK_MUTE_CHANGED","TRACK_REMOVED","USER_JOINED","USER_LEFT","USER_ROLE_CHANGED","USER_STATUS_CHANGED","BOT_TYPE_CHANGED","LOBBY_USER_JOINED","LOBBY_USER_UPDATED","LOBBY_USER_LEFT","global$1","global","self","window","_typeof","obj","iterator","constructor","_toConsumableArray","arr","Array","isArray","arr2","length","_arrayWithoutHoles","iter","toString","from","_iterableToArray","TypeError","_nonIterableSpread","safe_add","x","y","lsw","str2binl","str","Error","bin","charCodeAt","md5_cmn","q","a","b","num","cnt","md5_ff","md5_gg","md5_hh","md5_ii","core_md5","len","olda","oldb","oldc","oldd","MD5","hexdigest","binarray","charAt","binl2hex","hash","String","fromCharCode","binl2str","core_sha1","j","olde","w","e","rol","safe_add$1","sha1_ft","sha1_kt","core_hmac_sha1","data","bkey","str2binb","ipad","opad","concat","binb2b64","triplet","binb2str","SHA1","b64_hmac_sha1","b64_sha1","str_hmac_sha1","str_sha1","utils","out","cookies","cookieName","expires","domain","path","cookieObj","isObj","cookieValue","escape","unescape","document","cookie","$build","attrs","Strophe","Builder","$iq","$pres","VERSION","NS","HTTPBIND","BOSH","CLIENT","AUTH","ROSTER","PROFILE","DISCO_INFO","DISCO_ITEMS","MUC","SASL","STREAM","FRAMING","BIND","SESSION","STANZAS","XHTML_IM","XHTML","tags","attributes","css","validTag","tag","validAttribute","attribute","validCSS","style","Status","ERROR","CONNECTING","CONNFAIL","AUTHENTICATING","AUTHFAIL","CONNECTED","DISCONNECTED","DISCONNECTING","ATTACHED","REDIRECT","CONNTIMEOUT","BINDREQUIRED","ErrorCondition","BAD_FORMAT","CONFLICT","MISSING_JID_NODE","NO_AUTH_MECH","UNKNOWN_REASON","LogLevel","DEBUG","INFO","WARN","FATAL","ElementType","NORMAL","TEXT","CDATA","FRAGMENT","TIMEOUT","SECONDARY_TIMEOUT","addNamespace","forEachChild","elem","elemName","func","childNodes","childNode","nodeType","this","isTagEqual","el","tagName","_xmlGenerator","_makeGenerator","doc","undefined","implementation","createDocument","documentMode","_getIEXmlDom","appendChild","createElement","xmlGenerator","docStrings","ActiveXObject","xmlElement","node","arguments","arg","xmlTextNode","sort","attr","setAttribute","k","xmlescape","text","replace","xmlunescape","createTextNode","xmlHtmlNode","html","DOMParser","parseFromString","async","loadXML","getText","nodeValue","copyElement","nodeName","_i","createHtml","toLowerCase","getAttribute","cssText","cssAttrs","split","cssName","cssValue","push","join","_i2","createDocumentFragment","_i3","_i4","escapeNode","unescapeNode","getNodeFromJid","jid","indexOf","getDomainFromJid","bare","getBareJidFromJid","parts","splice","getResourceFromJid","_handleError","stack","fatal","sourceURL","handler","line","message","fileName","lineNumber","log","level","msg","console","error","debug","info","warn","serialize","tree","names","keys","map","result","reduce","getNamedItem","child","_requestId","_connectionPlugins","addConnectionPlugin","ptype","xmlns","nodeTree","up","parentNode","root","moreattrs","removeAttribute","cnode","impNode","xmlGen","importNode","newElem","h","fragment","innerHTML","xhtml","Handler","type","id","options","matchBare","matchBareFromJid","user","getNamespace","elNamespace","ignoreNamespaceFragment","namespaceMatch","_this","nsMatch","isMatch","elem_type","run","TimedHandler","period","lastCalled","Date","getTime","reset","Connection","service","_this2","proto","protocol","_proto","Websocket","Bosh","features","_sasl_data","do_session","do_bind","timedHandlers","handlers","removeTimeds","removeHandlers","addTimeds","addHandlers","protocolErrorHandlers","_idleTimeout","_disconnectTimeout","authenticated","connected","disconnecting","do_authentication","paused","restored","_data","_uniqueId","_sasl_success_handler","_sasl_failure_handler","_sasl_challenge_handler","maxRetries","setTimeout","_onIdle","registerSASLMechanisms","mechanisms","F","init","_reset","_requests","pause","resume","getUniqueId","suffix","uuid","Math","random","addProtocolErrorHandler","status_code","callback","connect","pass","wait","hold","route","authcid","authzid","servtype","connect_callback","_changeConnectStatus","_connect","attach","sid","rid","wind","_attach","restore","_sessionCachingSupported","_restore","JSON","sessionStorage","setItem","removeItem","xmlInput","xmlOutput","rawInput","rawOutput","nextValidRid","send","_queueData","_send","flush","clearTimeout","sendPresence","errback","timeout","_this3","timeoutHandler","addHandler","stanza","deleteTimedHandler","addTimedHandler","deleteHandler","sendIQ","_this4","iqtype","element","_sendRestart","_this5","thand","handRef","hand","SASLAnonymous","SASLExternal","SASLMD5","SASLOAuthBearer","SASLXOAuth2","SASLPlain","SASLSHA1","forEach","registerSASLMechanism","mechanism","disconnect","reason","pres","_addSysTimedHandler","_onDisconnectTimeout","_disconnect","_abortAllRequests","_doDisconnect","status","condition","plugin","statusChanged","err","_dataRecv","req","raw","_this6","_reqToData","strip","pop","_emptyQueue","cond","conflict","getElementsByTagName","UNKOWN_REASON","newList","_i5","_hand","_connect_cb","_callback","bodyWrap","getElementsByTagNameNS","matched","mech","authenticate","_no_auth_received","sortMechanismsByPriority","higher","priority","swap","_attemptSASLAuth","_attemptLegacyAuth","mechanism_found","test","_addSysHandler","_sasl_success_cb","_sasl_failure_cb","_sasl_challenge_cb","_sasl_mechanism","onStart","request_auth_exchange","isClientFirst","response","onChallenge","btoa","challenge","atob","_onLegacyAuthIQResult","iq","_auth2_cb","_this7","serverSignature","matches","match","onSuccess","streamfeature_handlers","wrapper","_onStreamFeaturesAfterSASL","explicitResourceBinding","_onResourceBindResultIQ","resource","jidNode","_establishSession","_onSessionResultIQ","onFailure","_this8","now","_i6","_thand","SASLMechanism","connection","_connection","auth_str","test_cnonce","cnonce","nonce","salt","Hi","U","U_old","responseText","authMessage","attribMatch","substr","clientKey","serverKey","clientSignature","_quote","realm","host","digest_uri","cred","A1","A2","core","Strophe$1","$build$1","Request","sends","xmlData","origFunc","date","NaN","abort","dead","age","timeDead","xhr","_newXHR","getResponse","responseXML","documentElement","querySelector","textContent","XMLHttpRequest","overrideMimeType","onreadystatechange","_conn","floor","errors","inactivity","lastResponseHeaders","_buildBody","keepalive","_cacheSession","body","_onRequestStateChange","_throttledRequestHandler","session","parse","getItem","stringify","typ","parseInt","_sendTerminate","_callProtocolErrorHandlers","reqStatus","_getRequestStatus","err_callback","HTTP","_hitError","time_elapsed","def","readyState","getAllResponseHeaders","valid_request","too_many_retries","_removeRequest","reqIs0","_restartRequest","Number","_processRequest","primary_timeout","isNaN","secondary_timeout","server_error","content_type","contentType","open","sync","setRequestHeader","withCredentials","e2","sendFunc","customHeaders","headers","header","backoff","min","pow","abs","Strophe$2","$build$2","new_service","location","pathname","_buildStream","_check_streamerror","connectstatus","errorString","_closeSocket","socket","WebSocket","onopen","_onOpen","onerror","_onError","onclose","_onClose","onmessage","_connect_cb_wrapper","_handleStreamStart","ver","streamStart","parsedMessage","see_uri","string","_streamWrap","_onMessage","CLOSED","close","closeString","code","rawStanza","search","firstChild","start","startString","$msg","factory","BrowserCapabilities","AUDIO","PRESENTER","VIDEO","Logger","LogCollector","idLoggers","loggers","curLevel","levels","TRACE","addGlobalTransport","transport","removeGlobalTransport","setGlobalOptions","getLogger","transports","logger","setLogLevelById","setLevel","setLogLevel","require","__filename","_instances","isCallstatsLoaded","_initCallStatsBackend","CallStats","isBackendInitialized","initBackend","callStatsID","callStatsSecret","userName","aliasName","applicationName","getWiFiStatsMethod","confID","siteID","Statistics","xmpp","rtpStatsMap","Map","eventEmitter","EventEmitter","callStatsIntegrationEnabled","enableCallStats","disableThirdPartyRequests","callStatsApplicationLogsDisabled","browser","isReactNative","ScriptUtil","loadScript","customScriptUrl","CALLSTATS_SCRIPT_URL","loadCallStatsAPI","callsStatsInstances","instances","add","audioLevelsEnabled","disableAudioLevels","pcStatsInterval","audioLevelsInterval","longTasksStatsInterval","analytics","Set","startRemoteStats","peerconnection","stopRemoteStats","rtpStats","RTPStats","set","localStats","startLocalStats","stream","LocalStats","addAudioLevelListener","listener","on","StatisticsEvents","removeAudioLevelListener","removeListener","addBeforeDisposedListener","removeBeforeDisposedListener","addConnectionStatsListener","removeConnectionStatsListener","addByteSentStatsListener","removeByteSentStatsListener","addLongTasksStatsListener","attachLongTasksStats","conference","supportsPerformanceObserver","performanceObserverStats","PerformanceObserverStats","JitsiConferenceEvents","startObserver","stopObserver","getLongTasksStats","removeLongTasksStatsListener","setSpeakerList","speakerList","values","isP2P","dispose","size","emit","callStats","stopCallStats","tpc","tpcId","_stopRemoteStats","removeAllListeners","delete","stopLocalStats","stop","startCallStats","remoteUserID","has","newInstance","_getAllCallStatsInstances","csInstances","statistics","cs","callStatsInstance","sendTerminateEvent","isCallstatsEnabled","sendConnectionResumeOrHoldEvent","isResume","instance","sendResumeOrHoldEvent","sendIceConnectionFailedEvent","sendMuteEvent","muted","sendScreenSharingEvent","ssrc","sendDominantSpeakerEvent","roomJid","sendActiveDeviceListEvent","devicesData","globalSet","associateStreamWithVideoTag","isLocal","userId","usageLabel","containerId","sendGetUserMediaFailed","JitsiTrackError","gum","constraintName","constraints","formatJitsiTrackErrorForCallStats","sendCreateOfferFailed","sendCreateAnswerFailed","sendSetLocalDescFailed","sendSetRemoteDescFailed","sendAddIceCandidateFailed","sendLog","globalSubSet","stats","next","csPerStats","sendApplicationLog","sendFeedback","overall","comment","sendEvent","FEEDBACK","rating","LOCAL_JID","reportGlobalError","sendAnalyticsAndLog","event","properties","eventToLog","sendAnalytics","eventName","CREATE_ANSWER_FAILED","CREATE_OFFER_FAILED","DATA_CHANNEL_OPEN","ENDPOINT_CONN_STATUS_CHANGED","LASTN_ENDPOINT_CHANGED","PERMISSIONS_CHANGED","SENDER_VIDEO_CONSTRAINTS_CHANGED","LASTN_VALUE_CHANGED","LOCAL_TRACK_SSRC_UPDATED","LOCAL_TRACK_MAX_ENABLED_RESOLUTION_CHANGED","TRACK_ATTACHED","REMOTE_TRACK_ADDED","REMOTE_TRACK_MUTE","REMOTE_TRACK_REMOVED","REMOTE_TRACK_UNMUTE","SET_LOCAL_DESCRIPTION_FAILED","SET_REMOTE_DESCRIPTION_FAILED","AUDIO_OUTPUT_DEVICE_CHANGED","DEVICE_LIST_CHANGED","DEVICE_LIST_WILL_CHANGE","DEVICE_LIST_AVAILABLE","LOCAL_UFRAG_CHANGED","REMOTE_UFRAG_CHANGED","TYPE_OPERATIONAL","TYPE_PAGE","TYPE_TRACK","TYPE_UI","ACTION_JINGLE_RESTART","ACTION_JINGLE_SA_TIMEOUT","ACTION_JINGLE_SI_RECEIVED","ACTION_JINGLE_SI_TIMEOUT","ACTION_JINGLE_TERMINATE","ACTION_JINGLE_TR_RECEIVED","ACTION_JINGLE_TR_SUCCESS","ACTION_P2P_DECLINED","ACTION_P2P_ESTABLISHED","ACTION_P2P_FAILED","ACTION_P2P_SWITCH_TO_JVB","AVAILABLE_DEVICE","CONNECTION_DISCONNECTED","ICE_DURATION","ICE_ESTABLISHMENT_DURATION_DIFF","ICE_STATE_CHANGED","NO_BYTES_SENT","TRACK_UNMUTED","createBridgeDownEvent","action","actionSubject","createConnectionFailedEvent","errorType","errorMessage","details","createConferenceEvent","source","createConnectionStageReachedEvent","stage","createE2eRttEvent","participantId","region","rtt","createFocusLeftEvent","createGetUserMediaEvent","createParticipantConnectionStatusEvent","createJingleEvent","createNoDataFromSourceEvent","mediaType","createP2PEvent","createRemotelyMutedEvent","createRtpStatsEvent","createTransportStatsEvent","createAudioOutputProblemEvent","userID","localAudioLevels","remoteAudioLevels","createBridgeChannelClosedEvent","createTtfmEvent","SDPUtil","filterSpecialChars","iceparams","mediadesc","sessiondesc","pwd","ufrag","findLine","parseICEUfrag","parseICEPwd","substring","buildICEUfrag","frag","buildICEPwd","parseMID","parseMLine","media","shift","port","fmt","buildMLine","mline","parseRTPMap","clockrate","channels","parseSCTPMap","buildRTPMap","parseCrypto","parseFingerprint","fingerprint","parseFmtp","parseICECandidate","candidate","elems","foundation","component","ip","generation","tcptype","network","buildICECandidate","cand","hasOwnAttribute","parseSSRC","desc","lines","parseRTCPFB","pt","params","parseExtmap","direction","uri","haystack","needle","sessionpart","findLines","needles","candidateToJingle","candidateFromJingle","isFirefox","parsePrimaryVideoSsrc","videoMLine","numSsrcs","ssrcs","ssrcInfo","filter","index","array","numGroups","ssrcGroups","primarySsrc","fidGroup","find","group","semantics","simGroup","generateSsrc","RandomUtil","randomInt","getSsrcAttribute","mLine","attributeName","ssrcLine","parseGroupSsrcs","ssrcGroup","ssrcStr","getMedia","sdp","getUfrag","ufragLines","startsWith","preferCodec","codecName","matchingPayloadTypes","rtp","codec","payload","payloadTypes","payloads","reverse","payloadIndex","unshift","stripCodec","highProfile","h264Pts","removePts","stripH264HighCodec","CodecMimeType","H264","fmtp","item","config","includes","rtxApts","rtxPts","keepPts","MediaDirection","INACTIVE","rtcpFb","RECVONLY","SENDONLY","SENDRECV","usesAdapter","DEFAULT_CONSTRAINTS","video","height","ideal","max","width","audioOutputDeviceId","audioOutputChanged","disableAP","disableAEC","disableNS","disableAGC","stereo","featureDetectionAudioEl","isAudioOutputDeviceChangeAvailable","setSinkId","availableDevicesPollTimer","availableDevices","emptyFuncton","updateGrantedPermissions","um","audioTracksReceived","Boolean","getAudioTracks","videoTracksReceived","getVideoTracks","grantedPermissions","audio","RTCEvents","sendDeviceListToAnalytics","deviceList","audioInputDeviceCount","kind","audioOutputDeviceCount","videoInputDeviceCount","videoOutputDeviceCount","device","deviceId","groupId","label","updateKnownDevices","pds","newDevices","mediaDeviceInfoToJSON","facing","compareAvailableMediaDevices","slice","RTCUtils","Listenable","super","origAttachMediaStream","audioQuality","clearInterval","RTCPeerConnectionType","RTCPeerConnection","attachMediaStream","getStreamID","getTrackID","srcObject","res","apply","rtcUtils","isDeviceChangeAvailable","getAudioOutputDevice","catch","ex","GlobalOnErrorHandler","callUnhandledRejectionHandler","promise","pcConstraints","isChromiumBased","optional","googScreencastMinBitrate","googCpuOveruseDetection","screenObtainer","isDeviceListAvailable","enumerateDevices","ds","supportsDeviceChangeEvent","navigator","mediaDevices","addEventListener","setInterval","then","devices","_getUserMedia","umDevices","Promise","resolve","reject","gumTimeout","timeoutExpired","JitsiTrackErrors","getUserMedia","jitsiError","_getDesktopMedia","isSupported","obtainStream","_getMissingTracks","requestedDevices","missingDevices","audioDeviceRequested","videoDeviceRequested","obtainAudioAndVideoPermissions","otherOptions","mediaStreamsMetaData","maybeRequestDesktopDevice","desktopSharingSourceDevice","matchingDevice","sourceType","maybeRequestCaptureDevices","requestedCaptureDevices","clonedeep","Resolutions","resolution","isWebKitBased","cameraDeviceId","facingMode","CameraFacingMode","USER","autoGainControl","micDeviceId","echoCancellation","noiseSuppression","assign","channelCount","getConstraints","desktopStream","sourceId","desktopAudioTracks","desktopAudioStream","MediaStream","track","desktopVideoTracks","desktopVideoStream","videoType","VideoType","DESKTOP","avStream","audioTracks","audioStream","effects","videoTracks","videoStream","CAMERA","stopMediaStream","deviceType","mediaStream","getTracks","release","isDesktopSharingEnabled","setAudioOutputDevice","setDesktopSharingFrameRate","maxFps","getCurrentlyAvailableMediaDevices","arePermissionsGrantedForAvailableDevices","some","getEventDataForActiveDevice","deviceData","setSuspendVideo","enable","googSuspendBelowMinBitrate","oldOnErrorHandler","oldOnUnhandledRejection","onunhandledrejection","args","callErrorHandler","errHandler","peerConnectionIdCounter","rtcTrackIdCounter","_createLocalTracks","mediaStreamMetaData","metaData","getSettings","safeCounterIncrement","JitsiLocalTrack","rtcId","RTC","peerConnections","localTracks","_channel","_lastN","_lastNEndpoints","_maxFrameHeight","_selectedEndpoints","_lastNChangeListener","_onLastNChanged","_onDeviceListChanged","_updateAudioOutputForAudioTracks","_videoType","NONE","addListener","destroy","_channelOpenListener","tracksInfo","initializeBridgeChannel","wsUrl","BridgeChannel","logError","msgType","_receiverVideoConstraints","sendNewReceiverVideoConstraintsMessage","sendSelectedEndpointsMessage","_selectedEndpoint","sendReceiverVideoConstraintMessage","sendSetLastNMessage","sendVideoTypeMessage","lastNEndpoints","oldLastNEndpoints","leavingLastNEndpoints","enteringLastNEndpoints","isInLastN","onCallEnded","setNewReceiverVideoConstraints","isOpen","setReceiverVideoConstraint","maxFrameHeight","setVideoType","selectEndpoints","ids","eventType","createPeerConnection","signaling","iceConfig","abtestSuspendVideo","addPermanentProperties","enableInsertableStreams","encodedInsertableStreams","usesUnifiedPlan","sdpSemantics","forceTurnRelay","iceTransportPolicy","bundlePolicy","newConnection","TraceablePeerConnection","_removePeerConnection","traceablePeerConnection","addLocalTrack","getLocalVideoTrack","localVideo","getLocalTracks","MediaType","getLocalAudioTrack","localAudio","getLocalEndpointId","myUserId","tracks","getType","getRemoteTracks","remoteTracks","pcRemoteTracks","setAudioMute","mutePromises","audioTrack","mute","unmute","all","setVideoMute","videoTrack","removeLocalTrack","pos","elSelector","isUserStreamById","streamId","closeBridgeChannel","setAudioLevel","audioLevel","getTrackBySSRC","isAudioTrack","sendChannelMessage","to","sendMessage","sendEndpointStatsMessage","setLastN","remoteAudioTracks","setAudioOutput","CONSTRAINT_FAILED","ELECTRON_DESKTOP_PICKER_ERROR","ELECTRON_DESKTOP_PICKER_NOT_FOUND","GENERAL","NOT_FOUND","PERMISSION_DENIED","SCREENSHARING_GENERIC_ERROR","SCREENSHARING_USER_CANCELED","TRACK_IS_DISPOSED","TRACK_NO_STREAM_FOUND","UNSUPPORTED_RESOLUTION","LOCAL_TRACK_STOPPED","TRACK_AUDIO_OUTPUT_CHANGED","TRACK_VIDEOTYPE_CHANGED","NO_DATA_FROM_SOURCE","CHAT_ERROR","CONFERENCE_DESTROYED","CONFERENCE_MAX_USERS","CONNECTION_ERROR","CONFERENCE_RESTARTED","NOT_ALLOWED_ERROR","MEMBERS_ONLY_ERROR","CONFERENCE_ACCESS_DENIED","ICE_FAILED","INCOMPATIBLE_SERVER_VERSIONS","OFFER_ANSWER_FAILED","PASSWORD_NOT_SUPPORTED","VIDEOBRIDGE_NOT_AVAILABLE","SDP","mediaI","failICE","removeTcpCandidates","removeUdpCandidates","getMediaSsrcMap","mediaSSRCs","mediaindex","mid","linessrc","idx","containsSSRC","medias","toJingle","thecreator","assrcline","creator","amidline","rtpmap","afmtpline","fmtpParameters","rtcpFbToJingle","ssrcMap","availableSsrc","ssrcParameters","ssrcSdpLine","kv","v","ridLines","usesRidsForSimulcast","rids","ridLine","ridInfo","extmapLines","extmap","senders","transportToJingle","sctpmap","sctpAttrs","number","streams","setupLine","setup","iceParameters","payloadtype","feedback","rtcpFbFromJingle","feedbackElementTrrInt","each","_","fb","hasAttribute","fromJingle","jingle","sessionId","groups","$","contents","content","jingle2media","sctp","streamCount","payloadType","__","parameter","hdrExt","ReflectOwnKeys","R","Reflect","ReflectApply","target","receiver","Function","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","NumberIsNaN","once","emitter","errorListener","resolver","eventTargetAgnosticAddListener","flags","addErrorHandlerIfEventEmitter","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","_getMaxListeners","that","_addListener","prepend","events","existing","warning","newListener","warned","count","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","_listeners","unwrap","evlistener","ret","unwrapListeners","arrayClone","listenerCount","copy","wrapListener","removeEventListener","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","er","context","listeners","prependListener","prependOnceListener","list","position","originalListener","spliceOne","off","rawListeners","eventNames","OPUS","VP8","VP9","TRACK_ERROR_TO_MESSAGE_MAP","constraint","failedConstraintName","mandatory","minWidth","minHeight","getResolutionFromFailedConstraint","parser","writer","write","parseFmtpConfig","parseParams","parsePayloads","parseRemoteCandidates","parseImageAttributes","parseSimulcastStreamList","DETECTOR_STATE_CHANGE","VAD_NOISY_DEVICE","VAD_REPORT_PUBLISHED","VAD_SCORE_PUBLISHED","VAD_TALK_WHILE_MUTED","FAILURE_REGEX","DEFAULT_STUN_SERVERS","urls","JITSI_MEET_MUC_TYPE","FEATURE_JIGASI","FEATURE_E2EE","XMPP","token","disconnectInProgress","connectionTimes","authenticatedUser","initStropheUtil","initStropheLogger","xmppPing","hosts","enableWebsocketResume","serviceUrl","shard","websocketKeepAlive","websocketKeepAliveUrl","XmppConnection","createConnection","bosh","deploymentInfo","Events","CONN_SHARD_CHANGED","shard_changed","suspend_time","ping","getPingSuspendTime","time_since_last_success","getTimeSinceLastSuccess","JitsiConnectionEvents","JitsiConnectionErrors","_initStrophePlugins","caps","Caps","clientNode","initFeaturesList","ev","addFeature","disableRtx","isVersionLessThan","enableOpusRed","supportsAudioRed","enableRemb","enableTcc","enableLipSync","rayo","E2EEncryption","getConnection","connectionHandler","credentials","performance","statusStr","getStatusString","XMPPEvents","_sysMessageHandler","_stropheConn","sendDiscoInfo","getStunAndTurnCredentials","_resetState","getFeaturesAndIdentities","identities","PING","_processDiscoInfoIdentities","errmsg","password","anonymousConnectionFailed","connectionFailed","lastErrorMsg","stopInterval","wasIntentionalDisconnect","errMsg","_getConnectionFailedReasonDetails","lastErrorStatus","getLastErrorStatus","lastFailedRawMessage","getLastFailedMessage","_parseConnectionFailedMessage","identity","avModerationComponentAddress","speakerStatsComponentAddress","conferenceDurationComponentAddress","lobbySupported","processLobbyFeatures","f","fr","endsWith","_onPrivateMessage","exec","_onSystemMessage","foundIceServers","onReceiveStunAndTurnCredentials","parseDiscoInfo","attaching","anonymousdomain","configDomain","hostname","createRoom","roomName","onCreateResource","roomjid","customDomain","muc","mucNickname","randomHexString","emuc","getJid","getJingleLog","getLog","getXmppLog","dial","pingDomain","getSessions","sessions","disconnectListener","_cleanupXmppConnection","isUsingWebSocket","evType","sendUnavailableBeacon","jvb","iceServers","p2p","p2pStunServers","stunServers","MucConnectionPlugin","JingleConnectionPlugin","RayoConnectionPlugin","headersArr","trim","room","tryParseJSONAndVerify","jsonString","json","jsonMessage","parsedJson","users","created_timestamp","STATUS_AVAILABLE","STATUS_UNDEFINED","STATUS_BUSY","STATE_ON","STATE_OFF","STATE_PENDING","STATE_RETRYING","STATE_FAILED","ERROR_NO_CONNECTION","ERROR_SESSION_EXISTS","WRONG_STATE","DISPLAY_NAME_REQUIRED","AUDIO_LEVEL","BEFORE_DISPOSED","BYTE_SENT_STATS","CONNECTION_STATS","LONG_TASKS_STATS","_callStatsUserName","_machineId","_p8","_storage","jitsiLocalStorage","externalStorage","username","UsernameGenerator","generateUsername","generateCallStatsUserName","amDid","jitsiMeetId","generateJitsiMeetId","parsePrimarySSRC","parseSecondarySSRC","_getSSRCCount","MLineWrap","getSSRCAttrValue","ssrcNumber","attrName","ssrcObj","removeSSRC","ssrcNum","addSSRCAttribute","findGroup","findGroups","findGroupByPrimarySSRC","primarySSRC","findSSRCByMSID","msid","getSSRCCount","containsAnySSRCGroups","getPrimaryVideoSsrc","fecGroup","getRtxSSRC","getSSRCs","getPrimaryVideoSSRCs","videoSSRCs","ssrcGroupInfo","secondarySsrc","dumpSSRCGroups","removeGroupsWithSSRC","groupInfo","removeGroupsBySemantics","replaceSSRC","oldSSRC","newSSRC","addSSRCGroup","SdpTransformWrap","rawSDP","parsedSDP","transform","selectMedia","selectedMLine","toRawSDP","nextValue","MAX_SAFE_INTEGER","calculateAverage","valueArray","filterPositiveValues","RunningAverage","average","addNext","getAverage","LOCAL_STATS_UPDATED","REMOTE_STATS_UPDATED","argsTag","mapTag","objectTag","setTag","reIsHostCtor","reIsUint","typedArrayTags","freeGlobal","freeSelf","freeExports","freeModule","moduleExports","freeProcess","process","nodeUtil","binding","nodeIsTypedArray","isTypedArray","arraySome","predicate","mapToArray","setToArray","uid","arrayProto","funcProto","objectProto","coreJsData","funcToString","maskSrcKey","IE_PROTO","nativeObjectToString","reIsNative","RegExp","Buffer","Uint8Array","propertyIsEnumerable","symToStringTag","nativeGetSymbols","nativeIsBuffer","isBuffer","nativeKeys","DataView","getNative","WeakMap","nativeCreate","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","valueOf","Hash","entries","clear","entry","ListCache","MapCache","SetCache","__data__","Stack","arrayLikeKeys","inherited","isArr","isArg","isArguments","isBuff","isType","skipIndexes","iteratee","baseTimes","isIndex","assocIndexOf","eq","baseGetTag","isOwn","unmasked","getRawTag","objectToString","baseIsArguments","isObjectLike","baseIsEqual","other","bitmask","customizer","equalFunc","objIsArr","othIsArr","objTag","getTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","byteLength","byteOffset","buffer","convert","isPartial","stacked","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","objProps","getAllKeys","objLength","othLength","skipCtor","objValue","othValue","compared","objCtor","othCtor","equalObjects","baseIsEqualDeep","baseIsNative","isObject","isMasked","isFunction","baseKeys","Ctor","arrLength","seen","arrValue","othIndex","keysFunc","symbolsFunc","offset","arrayPush","baseGetAllKeys","getSymbols","getMapData","getValue","pairs","LARGE_ARRAY_SIZE","resIndex","arrayFilter","symbol","ArrayBuffer","ctorString","isLength","baseUnary","PENDING","ACTIVE","ENDED","ACTIONS","ACCEPT","INITIATE","TERMINATE","UNAVAILABLE","wrtcFuncNames","fabricEvent","reportType","_fabrics","backend","backendInitialized","atLeastOneFabric","defaultInstance","fabrics","hasFabric","_addNewFabric","_emptyReportQueue","csInstance","defaultConfID","defaultPC","report","reportsQueue","errorData","_reportError","pc","eventData","sendFabricEvent","associateMstWithUserID","callStatsId","_error","reportError","theBackend","tryCatchMethods","methodName","originalMethod","theArguments","debugMethods","originalReportError","exception","CallStatsBackend","callstats","configParams","_traceAndCatchBackendCalls","applicationVersion","getName","initialize","_initCallback","attachWifiStatsHandler","addresses","_reportEvent","conferenceID","sendUserFeedback","fabricAttributes","remoteEndpointType","endpointType","peer","server","addNewFabric","fabricUsage","multiplex","_addNewFabricCallback","success","streamEndpointId","fabricTerminated","noGlobal","getProto","flat","class2type","hasOwn","fnToString","ObjectFunctionString","support","isWindow","preservedScriptAttributes","src","noModule","DOMEval","val","script","head","removeChild","toType","jQuery","selector","fn","isArrayLike","jquery","toArray","pushStack","merge","prevObject","first","last","even","grep","_elem","odd","end","extend","copyIsArray","clone","deep","isPlainObject","expando","isReady","noop","isEmptyObject","globalEval","makeArray","results","inArray","second","invert","callbackExpect","guid","Sizzle","Expr","isXML","tokenize","compile","select","outermostContext","sortInput","hasDuplicate","setDocument","docElem","documentIsHTML","rbuggyQSA","rbuggyMatches","contains","preferredDoc","dirruns","done","classCache","createCache","tokenCache","compilerCache","nonnativeSelectorCache","sortOrder","pushNative","booleans","whitespace","identifier","pseudos","rwhitespace","rtrim","rcomma","rcombinators","rdescend","rpseudo","ridentifier","matchExpr","rhtml","rinputs","rheader","rnative","rquickExpr","rsibling","runescape","funescape","nonHex","high","rcssescape","fcssescape","ch","asCodePoint","unloadHandler","inDisabledFieldset","addCombinator","disabled","dir","els","seed","nid","newSelector","newContext","ownerDocument","getElementById","getElementsByClassName","qsa","testContext","scope","toSelector","querySelectorAll","qsaError","cache","cacheLength","markFunction","assert","addHandle","attrHandle","siblingCheck","cur","diff","sourceIndex","nextSibling","createInputPseudo","createButtonPseudo","createDisabledPseudo","isDisabled","createPositionalPseudo","argument","matchIndexes","namespace","namespaceURI","hasCompare","subWindow","defaultView","top","attachEvent","className","createComment","getById","getElementsByName","attrId","getAttributeNode","tmp","input","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","disconnectedMatch","compareDocumentPosition","adown","bup","compare","sortDetached","aup","ap","bp","expr","elements","specified","sel","uniqueSort","duplicates","detectDuplicates","sortStable","selectors","createPseudo","relative","preFilter","excess","unquoted","nodeNameSelector","pattern","operator","check","what","_argument","simple","forward","ofType","_context","xml","uniqueCache","outerCache","nodeIndex","parent","useCache","lastChild","uniqueID","pseudo","setFilters","matcher","unmatched","lang","elemLang","activeElement","hasFocus","href","tabIndex","checked","selected","selectedIndex","_matchIndexes","radio","checkbox","file","image","submit","tokens","combinator","base","skip","checkNonElements","doneName","oldCache","newCache","elementMatcher","matchers","condense","newUnmatched","mapped","setMatcher","postFilter","postFinder","postSelector","temp","preMap","postMap","preexisting","contexts","multipleContexts","matcherIn","matcherOut","matcherFromTokens","checkContext","leadingRelative","implicitRelative","matchContext","matchAnyContext","filters","parseOnly","soFar","preFilters","cached","setMatchers","elementMatchers","bySet","byElement","superMatcher","outermost","matchedCount","setMatched","contextBackup","dirrunsUnique","matcherFromGroupMatchers","compiled","_name","defaultValue","unique","isXMLDoc","escapeSelector","until","truncate","is","siblings","rneedsContext","needsContext","rsingleTag","winnow","qualifier","not","rootjQuery","parseHTML","ready","rparentsprev","guaranteedUnique","children","prev","sibling","targets","closest","prevAll","addBack","parents","parentsUntil","nextAll","nextUntil","prevUntil","contentDocument","rnothtmlwhite","Identity","Thrower","adoptValue","noValue","method","fail","Callbacks","flag","createOptions","firing","memory","locked","queue","firingIndex","fire","stopOnFalse","remove","empty","disable","lock","fireWith","Deferred","tuples","always","deferred","pipe","fns","newDefer","tuple","returned","progress","notify","onFulfilled","onRejected","onProgress","maxDepth","depth","special","mightThrow","notifyWith","resolveWith","exceptionHook","stackTrace","rejectWith","getStackHook","stateString","when","singleValue","remaining","resolveContexts","resolveValues","primary","updateFunc","rerrorNames","readyException","readyList","completed","readyWait","doScroll","access","chainable","emptyGet","bulk","_key","rmsPrefix","rdashAlpha","fcamelCase","_all","letter","toUpperCase","camelCase","acceptData","owner","Data","configurable","prop","hasData","dataPriv","dataUser","rbrace","rmultiDash","dataAttr","getData","removeData","_removeData","dequeue","startLength","hooks","_queueHooks","setter","clearQueue","defer","pnum","rcssNum","cssExpand","isAttached","composed","getRootNode","isHiddenWithinTree","display","adjustCSS","valueParts","tween","adjusted","scale","maxIterations","currentValue","initial","unit","cssNumber","initialInUnit","defaultDisplayMap","getDefaultDisplay","showHide","show","hide","toggle","div","rcheckableType","rtagName","rscriptType","checkClone","cloneNode","noCloneChecked","option","wrapMap","thead","col","tr","td","_default","getAll","setGlobalEval","refElements","tbody","tfoot","colgroup","caption","th","optgroup","buildFragment","scripts","selection","ignored","wrap","attached","nodes","htmlPrefilter","rtypenamespace","returnTrue","returnFalse","expectSync","safeActiveElement","types","one","origFn","leverageNative","notAsync","saved","isTrigger","delegateType","stopPropagation","stopImmediatePropagation","preventDefault","trigger","Event","handleObjIn","eventHandle","handleObj","namespaces","origType","elemData","handle","triggered","dispatch","bindType","delegateCount","mappedTypes","origCount","teardown","removeEvent","nativeEvent","handlerQueue","fix","delegateTarget","preDispatch","isPropagationStopped","currentTarget","isImmediatePropagationStopped","rnamespace","postDispatch","matchedHandlers","matchedSelectors","button","addProp","hook","originalEvent","writable","load","noBubble","click","beforeunload","returnValue","props","isDefaultPrevented","defaultPrevented","relatedTarget","timeStamp","isSimulated","altKey","bubbles","cancelable","changedTouches","ctrlKey","detail","eventPhase","metaKey","pageX","pageY","shiftKey","view","charCode","keyCode","buttons","clientX","clientY","offsetX","offsetY","pointerId","pointerType","screenX","screenY","targetTouches","toElement","touches","which","focus","blur","mouseenter","mouseleave","pointerenter","pointerleave","orig","related","rnoInnerhtml","rchecked","rcleanScript","manipulationTarget","disableScript","restoreScript","cloneCopyEvent","dest","udataOld","udataCur","fixInput","domManip","collection","hasScripts","iNoClone","valueIsFunction","_evalUrl","keepData","cleanData","dataAndEvents","deepDataAndEvents","srcElements","destElements","inPage","detach","append","insertBefore","before","after","replaceWith","replaceChild","appendTo","prependTo","insertAfter","replaceAll","original","insert","rnumnonpx","getStyles","opener","getComputedStyle","old","rboxStyle","curCSS","computed","maxWidth","getPropertyValue","pixelBoxStyles","addGetHookIf","conditionFn","hookFn","computeStyleTests","container","divStyle","pixelPositionVal","reliableMarginLeftVal","roundPixelMeasures","marginLeft","right","pixelBoxStylesVal","boxSizingReliableVal","scrollboxSizeVal","offsetWidth","measure","round","parseFloat","reliableTrDimensionsVal","backgroundClip","clearCloneStyle","boxSizingReliable","pixelPosition","reliableMarginLeft","scrollboxSize","reliableTrDimensions","table","trChild","trStyle","borderTopWidth","borderBottomWidth","offsetHeight","cssPrefixes","emptyStyle","vendorProps","finalPropName","final","cssProps","capName","vendorPropName","rdisplayswap","rcustomProp","cssShow","visibility","cssNormalTransform","letterSpacing","fontWeight","setPositiveNumber","subtract","boxModelAdjustment","dimension","box","isBorderBox","styles","computedVal","extra","delta","ceil","getWidthOrHeight","valueIsBorderBox","offsetProp","getClientRects","Tween","easing","cssHooks","opacity","origName","isCustomProp","setProperty","isFinite","getBoundingClientRect","scrollboxSizeBuggy","left","margin","padding","border","prefix","expand","expanded","propHooks","percent","eased","duration","step","fx","scrollTop","scrollLeft","linear","swing","cos","PI","fxNow","inProgress","rfxtypes","rrun","schedule","hidden","requestAnimationFrame","interval","tick","createFxNow","genFx","includeWidth","createTween","animation","Animation","tweeners","stopped","prefilters","currentTime","startTime","tweens","opts","specialEasing","originalProperties","originalOptions","gotoEnd","propFilter","complete","timer","anim","tweener","oldfire","propTween","restoreDisplay","isBox","dataShow","unqueued","overflow","overflowX","overflowY","prefilter","speed","opt","speeds","fadeTo","animate","optall","doAnimation","finish","stopQueue","timers","cssFn","slideDown","slideUp","slideToggle","fadeIn","fadeOut","fadeToggle","slow","fast","delay","time","checkOn","optSelected","radioValue","boolHook","removeAttr","nType","attrHooks","bool","attrNames","lowercaseName","rfocusable","rclickable","stripAndCollapse","getClass","classesToArray","removeProp","propFix","tabindex","addClass","classes","curValue","clazz","finalValue","removeClass","toggleClass","stateVal","isValidValue","classNames","hasClass","rreturn","valHooks","optionSet","focusin","rfocusMorph","stopPropagationCallback","onlyHandlers","bubbleType","ontype","lastElement","eventPath","parentWindow","simulate","triggerHandler","attaches","rquery","parseXML","parserErrorElem","rbracket","rCRLF","rsubmitterTypes","rsubmittable","buildParams","traditional","param","valueOrFunction","encodeURIComponent","serializeArray","r20","rhash","rantiCache","rheaders","rnoContent","rprotocol","allTypes","originAnchor","addToPrefiltersOrTransports","structure","dataTypeExpression","dataType","dataTypes","inspectPrefiltersOrTransports","jqXHR","inspected","seekingTransport","inspect","prefilterOrFactory","dataTypeOrTransport","ajaxExtend","flatOptions","ajaxSettings","active","lastModified","etag","url","processData","accepts","responseFields","converters","ajaxSetup","settings","ajaxPrefilter","ajaxTransport","ajax","cacheURL","responseHeadersString","responseHeaders","timeoutTimer","urlAnchor","fireGlobals","uncached","callbackContext","globalEventContext","completeDeferred","statusCode","requestHeaders","requestHeadersNames","strAbort","getResponseHeader","mimeType","statusText","finalText","crossDomain","hasContent","ifModified","beforeSend","nativeStatusText","responses","isSuccess","modified","ct","finalDataType","firstDataType","ajaxHandleResponses","conv2","current","conv","dataFilter","throws","ajaxConvert","getJSON","getScript","wrapAll","firstElementChild","wrapInner","htmlIsFunction","visible","xhrSuccessStatus","0","1223","xhrSupported","cors","errorCallback","xhrFields","onload","onabort","ontimeout","responseType","binary","scriptAttrs","charset","scriptCharset","evt","oldCallbacks","rjsonp","jsonp","jsonpCallback","originalSettings","callbackName","overwritten","responseContainer","jsonProp","createHTMLDocument","keepScripts","parsed","animated","setOffset","curPosition","curLeft","curCSSTop","curTop","curOffset","curCSSLeft","curElem","using","rect","win","pageYOffset","pageXOffset","offsetParent","parentOffset","scrollTo","Height","Width","defaultExtra","funcName","unbind","delegate","undelegate","hover","fnOver","fnOut","proxy","holdReady","parseJSON","isNumeric","_jQuery","_$","noConflict","randomElement","randomHexDigit","randomAlphanumStr","getConnectionPluginDefinition","ConnectionPluginListenable","SS_DEFAULT_FRAME_RATE","ScreenObtainer","_createObtainStreamMethod","isNWJS","JitsiMeetNW","obtainDesktopStream","isElectron","obtainScreenOnElectron","supportsGetDisplayMedia","obtainScreenFromGetDisplayMediaRN","obtainScreenFromGetDisplayMedia","_getAudioConstraints","JitsiMeetScreenObtainer","openDesktopPicker","desktopSharingFrameRate","desktopSharingSources","streamType","screenShareAudio","audioConstraints","optionalConstraints","chromeMediaSource","chromeMediaSourceId","minFrameRate","maxFrameRate","screen","maxHeight","getDisplayMedia","frameRate","cursor","errorDetails","errorName","errorMsg","errorStack","CONNECTION_DROPPED_ERROR","OTHER_ERROR","SERVER_ERROR","CONN_STATUS_CHANGED","_options","pingOptions","_usesWebsocket","_rawInputTracker","LastSuccessTracker","startTracking","_resumeTask","ResumeTask","_deferredIQs","PingConnectionPlugin","getTimeSinceLastServerResponse","onPingThresholdExceeded","_onPingErrorThresholdExceeded","_oneSuccessfulConnect","websocket","_status","OPEN","disco","_stropheConnectionCb","targetCallback","blockCallback","_maybeEnableStreamResume","_keepAliveAndCheckShard","_maybeStartWSKeepAlive","_processDeferredIQs","cancel","startInterval","_tryResumingConnection","_wsKeepAlive","_clearDeferredIQs","closeWebsocket","streamManagement","getResumeToken","intervalWithJitter","fetch","responseShard","timeLeft","sendIQ2","sendBeacon","PEER_MUTED_CHANGED","PEER_VIDEO_TYPE_CHANGED","SPEAKERS_AUDIO_LEVELS","funcTag","genTag","reFlags","cloneableTags","addMapEntry","pair","addSetEntry","arrayReduce","accumulator","initAccum","isHostObject","overArg","getPrototype","objectCreate","isArrayLikeObject","assignValue","baseClone","isDeep","isFull","initCloneArray","copyArray","isFunc","cloneBuffer","isPrototype","initCloneObject","copyObject","copySymbols","baseAssign","cloneFunc","cloneArrayBuffer","dataView","cloneDataView","typedArray","cloneTypedArray","cloneMap","regexp","lastIndex","cloneRegExp","cloneSet","initCloneByTag","arrayEach","subValue","arrayBuffer","newValue","g","clearRejectTimeout","_timeout","setRejectTimeout","ms","ENVIRONMENT","SDPUtils","localCName","generateIdentifier","splitLines","blob","splitSections","part","getDescription","sections","getMediaSections","matchPrefix","parseCandidate","1","2","address","relatedAddress","relatedPort","tcpType","usernameFragment","writeCandidate","parseIceOptions","parseRtpMap","clockRate","numChannels","writeRtpMap","preferredPayloadType","writeExtmap","headerExtension","preferredId","writeFmtp","parameters","parseRtcpFb","writeRtcpFb","rtcpFeedback","parseSsrcMedia","sp","colon","parseSsrcGroup","getMid","mediaSection","algorithm","getDtlsParameters","role","fingerprints","writeDtlsParameters","setupType","fp","parseCryptoLine","cryptoSuite","keyParams","sessionParams","writeCryptoLine","writeCryptoKeyParams","parseCryptoKeyParams","keyMethod","keySalt","lifeTime","mkiValue","mkiLength","getCryptoParameters","getIceParameters","writeIceParameters","iceLite","parseRtpParameters","description","codecs","headerExtensions","fecMechanisms","rtcp","rtpmapline","fmtps","writeRtpDescription","maxptime","extension","parseRtpEncodingParameters","encodingParameters","hasRed","hasUlpfec","flows","apt","encParam","codecPayloadType","rtx","fec","bandwidth","maxBitrate","parseRtcpParameters","rtcpParameters","remoteSsrc","cname","rsize","reducedSize","compound","mux","writeRtcpParameters","parseMsid","spec","planB","msidParts","parseSctpDescription","maxSizeLine","maxMessageSize","sctpPort","sctpMapLines","writeSctpDescription","output","generateSessionId","writeSessionBoilerplate","sessId","sessVer","sessUser","version","getDirection","getKind","isRejected","parseOLine","sessionVersion","netType","addressType","isValidSDP","PERMISSION_PROMPT_IS_SHOWN","SLOW_GET_USER_MEDIA","currentExecutingScript","relativeURL","loadCallback","referenceNode","scriptEl","scriptSrc","baseScriptSrc","lastIndexOf","ParticipantConnectionStatus","INTERRUPTED","RESTORING","ParticipantConnectionStatusHandler","isConnectionActiveByJvb","isRestoringTimedout","isVideoMuted","isVideoTrackFrozen","supportsVideoMuteOnConnInterrupted","rtc","trackTimers","connStatusFromJvb","outOfLastNTimeout","rtcMuteTimeout","rtcMutedTimestamp","enteredLastNTimestamp","restoringTimers","connectionStatusMap","_getVideoFrozenTimeout","_onEndpointConnStatusChanged","onEndpointConnStatusChanged","_onP2PStatus","refreshConnectionStatusForAll","_onUserLeft","onUserLeft","_onTrackRtcMuted","onTrackRtcMuted","_onTrackRtcUnmuted","onTrackRtcUnmuted","_onRemoteTrackAdded","onRemoteTrackAdded","_onRemoteTrackRemoved","onRemoteTrackRemoved","_onSignallingMuteChanged","onSignallingMuteChanged","_onTrackVideoTypeChanged","onTrackVideoTypeChanged","_onLastNValueChanged","participantIds","clearRtcMutedTimestamp","endpointId","isActive","figureOutConnectionStatus","_changeConnectionStatus","participant","newStatus","getConnectionStatus","getId","_setConnectionStatus","remoteTrack","getParticipantId","JitsiTrackEvents","hasAnyVideoRTCMuted","hasAnyVideoTrackWebRTCMuted","participants","getParticipants","getParticipantById","inP2PMode","isP2PActive","isRestoringTimedOut","_isRestoringTimedout","audioOnlyMode","getLastN","isConnActiveByJvb","newState","_getNewStateForP2PMode","_getNewStateForJvbMode","_clearRestoringTimer","oldConnectionStatus","connectionStatus","nowMs","maybeSendParticipantConnectionStatusEvent","startedMs","getTracksByMediaType","participantConnectionStatus","leavingLastN","enteringLastN","rTimer","isMuted","NETWORK_INFO_EVENT","NetworkInfo","_current","isOnline","updateNetworkInfo","networkInfo","getFocusRecordingUpdate","presence","jibriStatus","initiator","recordingMode","sessionID","getHiddenDomainUpdate","liveStreamViewURLContainer","liveStreamViewURL","modeContainer","sessionIDContainer","getSessionIdFromIq","jibri","getSessionId","sessionIdContainer","isFromFocus","OLM_MESSAGE_TYPES","kOlmData","OlmAdapterEvents","OLM_ID_KEY_READY","PARTICIPANT_E2EE_CHANNEL_READY","PARTICIPANT_KEY_UPDATED","OlmAdapter","_conf","_init","_keyIndex","_reqs","_sessionInitialization","_bootstrapOlm","_onEndpointMessageReceived","_onConferenceLeft","_onParticipantLeft","_onParticipantPropertyChanged","promises","localParticipantId","getFeatures","_sendSessionInit","allSettled","Olm","pId","olmData","_getParticipantOlmData","uuidv4","olm","ciphertext","_encryptKeyInfo","_sendMessage","updateCurrentKey","clearParticipantSession","free","clearAllParticipantsSessions","_olmAccount","Account","idKeys","identity_keys","_idKey","curve25519","get_library_version","keyInfo","base64js","fromByteArray","keyIndex","encrypt","_sendError","Session","create_outbound","idKey","otKey","ack","pendingSessionUuid","create_inbound","remove_one_time_keys","decrypt","safeJsonParse","toByteArray","lastKey","isEqual","oldValue","isE2EEEnabled","generate_one_time_keys","otKeys","one_time_keys","mark_keys_as_published","_conferenceJoined","_enabled","_enabling","_e2eeCtx","E2EEContext","_olmAdapter","_ratchetKey","debounce","_ratchetKeyImpl","_rotateKey","_rotateKeyImpl","_onParticipantJoined","_onMediaSessionStarted","_onLocalTrackAdded","_setupReceiverE2EEForTrack","_trackMuteChanged","_onOlmIdKeyReady","_onParticipantE2EEChannelReady","_onParticipantKeyUpdated","supportsInsertableStreams","testing","disableE2EE","isEnabled","enabled","initSessions","cleanup","setLocalParticipantProperty","_restartMediaSessions","_generateKey","updateKey","setKey","crypto","getRandomValues","_getMediaSessions","_setupSenderE2EEForTrack","material","importKey","newKey","ratchet","findReceiverForTrack","handleReceiver","sender","findSenderForTrack","handleSender","doesVideoMuteByStreamRemove","isVideoTrack","JingleSessionPC","JingleSession","jingleContents","videoContents","maxFrameHeightSel","localJid","remoteJid","mediaConstraints","isInitiator","_bridgeSessionId","_cachedOldLocalSdp","_cachedNewLocalSdp","_iceCheckingStartedTimestamp","_gatheringStartedTimestamp","localRecvMaxFrameHeight","_localVideoActive","_remoteVideoActive","_gatheringReported","lasticecandidate","closed","remoteRecvMaxFrameHeight","signalingLayer","SignalingLayerImpl","modificationQueue","AsyncQueue","wasConnected","establishmentDuration","_xmppListeners","onXmppStatusChanged","_removeSenderVideoConstraintsChangeListener","_assertNotEnded","JingleSessionState","doInitialize","isReconnect","wasstable","webrtcIceUdpDisable","webrtcIceTcpDisable","pcOptions","gatherStats","maxstats","capScreenshareBitrate","videoQuality","supportsUnifiedPlan","enableUnifiedOnChrome","disableSimulcast","_abtestSuspendVideoEnabled","preferH264","disableH264","preferredCodec","startSilent","onicecandidate","phase","sendIceCandidate","onsignalingstatechange","signalingState","connectionState","oniceconnectionstatechange","isStable","iceConnectionState","reconnect","usesTerminateForRestart","enableIceRestart","supportsRestartByTerminate","iceStarted","onnegotiationneeded","remoteDescription","workFunction","finishedCallback","oldSdp","localDescription","_renegotiate","newSdp","notifyMySSRCUpdate","setChatRoom","getRemoteRecvMaxFrameHeight","localSDP","ice","sdpMLineIndex","jcand","errorMesssage","usedrip","dripContainer","sendIceCandidates","candidates","initiatorJid","cands","sdpMid","fingerprintLine","required","newJingleErrorHandler","sendIceFailedNotification","sessionInfo","addIceCandidates","iceCandidates","rtcCandidate","RTCIceCandidate","outerHTML","iceCandidate","addIceCandidate","readSsrcInfo","ssrcElement","setSSRCOwner","i3","ssrcInfoElement","generateRecvonlySsrc","getConfiguredVideoCodec","acceptOffer","jingleOffer","failure","setOfferAnswerCycle","sendSessionAccept","invite","addTracks","localTrack","addTrack","createOffer","offerSdp","setLocalDescription","sendSessionInitiate","setAnswer","jingleAnswer","remoteSdp","RTCSessionDescription","_responderRenegotiate","jingleOfferAnswerIq","newRemoteSdp","_processNewJingleOfferIq","oldLocalSdp","bridgeSessionId","sendContentModify","newLocalSdp","setVideoCodecs","preferred","replaceTransport","jingleOfferElem","enableForcedReload","sendTransportAccept","originalOffer","newFingerprint","accept","responder","responderJid","sessionModify","transportAccept","medialines","sendTransportReject","transportReject","setSenderMaxBitrates","setMaxBitRate","setSenderVideoConstraint","videoActive","setMediaTransferActive","setSenderVideoDegradationPreference","terminate","sendSessionTerminate","sessionTerminate","reasonDescription","restart","requestRestart","onTerminated","reasonCondition","reasonText","_parseSsrcInfoFromSourceAdd","sourceAddElem","currentRemoteSdp","addSsrcInfo","i1","i2","addRemoteStream","_addOrRemoveRemoteStream","removeRemoteStream","removeRemoteStreamsOnLeave","finishCallback","removeSsrcInfo","getRemoteSourceInfoByParticipant","_processRemoteRemoveSource","removeRemoteTracks","newLocalSDP","isAdd","logPrefix","addOrRemoveSsrcInfo","_parseSsrcInfoFromSourceRemove","_processRemoteAddSource","offerIq","findIndex","desiredDirection","getDesiredMediaDirection","optionalRemoteSdp","_initiatorRenegotiate","setRemoteDescription","createAnswer","answer","offer","replaceTrack","oldTrack","newTrack","clearRecvonlySsrc","shouldRenegotiate","sourceRemoveElem","ssrcLines","_verifyNoSSRCChanged","operationName","oldSDP","currentLocalSDP","sdpDiff","SDPDiffer","addedMedia","getNewMedia","removedMedia","addTrackAsUnmute","_addRemoveTrackAsMuteUnmute","removeTrackAsMute","isMute","oldLocalSDP","removeTrackMute","addTrackUnmute","audioActive","logAudioStr","logVideoStr","isSessionActive","audioActiveChanged","setAudioTransferActive","pcVideoActiveChanged","setVideoTransferActive","modifyContents","newVideoSenders","parseVideoSenders","newMaxFrameHeight","parseMaxFrameHeight","MediaSessionEvents","REMOTE_VIDEO_CONSTRAINTS_CHANGED","_modifyRemoteVideoActive","remoteVideoSenders","isRemoteVideoActive","newSDP","sdpDiffer","request","failureCb","errResponse","errorElSel","errorReasonSel","errorMsgSel","getIceConnectionState","getConnectionState","shutdown","abTesting","enableSuspendVideoTest","_getInitiatorJid","integerHash","bowserNameToJitsiName","_detectElectron","userAgent","_detectNWJS","_detectReactNative","product","_detect","bowser","browserInfo","detectors","getBrowserName","getBrowserVersion","_detectChromiumBased","BrowserDetection","_bowser","Bowser","getParser","detectedBrowserInfo","_version","isChrome","isOpera","isIExplorer","isSafari","getVersion","_checkCondition","checkTree","satisfies","isVersionGreaterThan","isVersionEqualTo","DummyLocalStorage","keyName","keyValue","JitsiLocalStorage","localStorage","_localStorageDisabled","ignore","isLocalStorageDisabled","dontEmitChangedEvent","localStorageContent","b64","lens","getLens","validLen","placeHoldersLen","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","len2","encodeChunk","lookup","arrayEquals","array1","array2","equals","mySDP","otherSDP","myMedias","othersMedias","newMedia","othersMediaIdx","myMedia","othersMedia","otherSsrcGroup","mySsrcGroup","modify","sdpMediaSsrcs","mediaSsrc","nv","SIM_LAYER_RIDS","TPCUtils","videoBitrates","localStreamEncodingsConfig","low","scaleResolutionDownBy","standard","_findTransceiver","transceiver","getTransceivers","getTrackId","_getStreamEncodings","isSimulcastOn","ensureCorrectOrderOfSsrcs","parsedSdp","reorderedSsrcs","sources","insertUnifiedPlanSimulcastReceive","usesSdpMungingForSimulcast","simulcast_03","simulcast","simulcastLine","getTrack","transceiverInit","getOriginalStream","sendEncodings","addTransceiver","getLocalStreamHeightConstraints","localVideoHeightConstraints","encoding","localSSRCs","_addedStreams","setEncodings","getParameters","encodings","setParameters","transceivers","updateEncodingsResolution","every","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","marker","runClearTimeout","Item","nextTick","title","env","argv","versions","cwd","chdir","umask","AudioContext","webkitAudioContext","LocalStatsCollector","intervalId","intervalMilis","suspend","isLocalStatsSupported","analyser","createAnalyser","smoothingTimeConstant","fftSize","createMediaStreamSource","frequencyBinCount","getByteTimeDomainData","samples","maxVolume","toFixed","timeDomainDataToAudioLevel","newLevel","lastLevel","animateLevel","ON","OFF","trackHandler2Prop","JitsiTrack","streamInactiveHandler","trackMediaType","containers","disposed","_streamInactiveHandler","_setStream","_addMediaStreamInactiveHandler","onended","oninactive","_setHandler","_unregisterHandlers","getVideoType","isWebRTCTrackMuted","isLocalAudioTrack","getStreamId","getTrackLabel","getUsageLabel","_maybeFireTrackAttached","_onTrackAttach","_attachTTFMTracker","_onTrackDetach","isScreenSharing","newAudioLevel","supportsReceiverStats","getMSID","trackId","TrackVADEmitter","procNodeSampleRate","vadProcessor","jitsiLocalTrack","_procNodeSampleRate","_vadProcessor","_localTrack","_bufferResidue","Float32Array","_audioContext","createAudioContext","sampleRate","getRequiredPCMFrequency","_vadSampleSize","getSampleLength","_onAudioProcess","_initializeAudioContext","_audioSource","_audioProcessingNode","createScriptProcessor","audioEvent","inData","inputBuffer","getChannelData","completeInData","sampleTimestamp","pcmSample","vadScore","calculateAudioFrameVAD","timestamp","score","pcmData","getDeviceId","_connectAudioGraph","onaudioprocess","destination","_disconnectAudioGraph","_cleanupResources","stopStream","getDeviceLabel","_destroyed","AudioContextImpl","E2E_RTT_CHANGED","displayName","isLocalStats","_userId","setDisplayName","_isLocalStats","setDominantSpeaker","totalDominantSpeakerTime","_dominantSpeakerStart","_hasLeft","getUserId","getDisplayName","newName","isDominantSpeaker","isNowDominantSpeaker","timeElapsed","getTotalDominantSpeakerTime","total","hasLeft","markAsHasLeft","_eventEmitter","_permissions","JitsiMediaDevicesEvents","_logOutputDevice","permissions","_handlePermissionsChange","_permissionsApiSupported","query","_parsePermissionState","onchange","supported","permissionStatus","deviceID","isDevicePermissionGranted","isMultipleAudioInputSupported","emitEvent","IDENTITY_UPDATED","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","nativeMax","nativeMin","toNumber","isSymbol","isBinary","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","invokeFunc","thisArg","leadingEdge","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","remainingWait","debounced","isInvoking","textEncoder","TextEncoder","subtle","deriveBits","encode","keyBytes","IDENTITY_PROPERTIES","IDENTITY_PROPERTIES_FOR_COMPARE","compareIdentities","category","rooms","externalFeatures","_addChatRoom","_removeChatRoom","CAPS","feature","external","_generateVersion","_updateRoomWithExternalFeatures","removeFeature","removeFromPresence","addOrReplaceInPresence","_getDiscoInfo","_fixChatRoomPresenceMap","_notifyVersionChanged","sortedIdentities","accumulatedValue","sortedFeatures","generateSha","_identities","_features","VADAudioAnalyser","createVADProcessor","_createVADProcessor","_vadEmitter","_isVADEmitterRunning","_detectionServices","_vadInitTracker","_processVADScore","_trackAdded","_trackRemoved","addVADDetectionService","vadService","detector","_stopVADEmitter","_startVADEmitter","processVADScore","_changeDetectorsMuteState","changeMuteState","vadEmitter","JibriSession","_mode","_setSessionID","setStatus","getError","getID","_sessionID","getInitiator","_initiator","getLiveStreamViewURL","_liveStreamViewURL","getStatus","getTerminator","_terminator","getMode","setError","setLiveStreamViewURL","setInitiator","setTerminator","appData","broadcastId","focusMucJid","_createIQ","recordingXMLUtils","_setErrorFromIq","errorIq","msCrypto","rnds8","rng","byteToHex","buf","bth","rnds","consoleTransport","globalTransports","transportIdx","globalOptions","getCallerInfo","callerInfo","fileLocation","column","disableCallerInfo","logPrefixes","toISOString","fullLogParts","methods","LOG","webpackPolyfill","deprecate","paths","grammar","reg","format","u","z","rate","subtype","sessionConfig","raddr","dir2","RecordingResult","TrackRecorder","recorder","startRecorder","trackRecorder","stopRecorder","determineCorrectFileType","MediaRecorder","isTypeSupported","AudioRecorder","jitsiConference","recorders","fileType","isRecording","instantiateTrackRecorder","updateNames","originalStream","ondataavailable","dataEvent","removeTrack","recorderToRemove","download","Blob","URL","createObjectURL","revokeObjectURL","getRecordingResults","getFileType","JitsiConnection","appID","errType","ANALYTICS_CONNECTION_DISCONNECTED","setToken","initJitsiConference","JitsiConference","getConnectionTimes","getLogs","metadata","ua","eventManager","JitsiConferenceEventManager","componentsVersions","ComponentsVersions","jvbJingleSession","lastDominantSpeaker","dtmfManager","somebodySupportsDTMF","authEnabled","startAudioMuted","startVideoMuted","startMutedPolicy","isMutedByFocus","mutedByFocusActor","isVideoMutedByFocus","mutedVideoByFocusActor","wasStopped","connectionQuality","ConnectionQuality","avgRtpStatsReporter","AvgRTPStatsReporter","avgRtpStatsN","_audioOutputProblemDetector","AudioOutputProblemDetector","isJvbConnectionInterrupted","speakerStatsCollector","SpeakerStatsCollector","deferredStartP2PTask","backToP2PDelay","isP2PConnectionInterrupted","p2pJingleSession","videoSIPGWHandler","VideoSIPGW","recordingManager","RecordingManager","_conferenceJoinAnalyticsEventSent","isE2EESupported","_e2eEncryption","resourceCreator","isAuthenticatedUser","setupXMPPListeners","codecSettings","disabledCodec","enforcePreferredCodec","jvbCodec","p2pCodec","codecSelection","CodecSelection","_statsCurrentId","statisticsId","Settings","callStatsUserName","statsId","_onIceConnectionInterrupted","_onIceConnectionRestored","_onIceConnectionEstablished","_updateProperties","_sendConferenceJoinAnalyticsEvent","e2eping","E2ePing","setupRTCListeners","receiveVideoController","ReceiveVideoController","sendVideoController","SendVideoController","_peerConnStatusRtcMuteTimeout","_peerConnStatusOutOfLastNTimeout","callStatsThreshold","statisticsDisplayName","callStatsCustomScriptUrl","setupChatRoomListeners","setupStatisticsListeners","enableTalkWhileMuted","supportsVADDetection","_audioAnalyser","vadTalkMutedDetection","VADTalkMutedDetection","DetectionEvents","enableNoisyMicDetection","vadNoiseDetection","VADNoiseDetection","enableNoAudioDetection","_noAudioSignalDetection","NoAudioSignalDetection","hasAudioSignal","channelLastN","jvb121Status","Jvb121EventGenerator","p2pDominantSpeakerDetection","P2PDominantSpeakerDetection","userRegion","getPreferredCodec","replaceParticipant","_maybeSetSITimeout","authenticateAndUpgradeRole","isJoined","joined","isP2PEnabled","isP2PTestModeEnabled","p2pTestMode","leave","onLocalTrackRemoved","_sendConferenceLeftAnalyticsEvent","_delayedIceFailed","removeXMPPListeners","onMemberLeft","_getActiveMediaSession","isAuthEnabled","isLoggedIn","authIdentity","getAuthLogin","isExternalAuthEnabled","moderator","getExternalAuthUrl","urlForPopup","getPopupLoginUrl","getLoginUrl","getPerformanceStats","longTasksStats","eventId","addCommandListener","command","addPresenceListener","removeCommandListener","removePresenceListener","sendTextMessage","elementName","sendPrivateTextMessage","sendPrivateMessage","sendCommand","sendCommandOnce","removeCommand","setSubject","subject","isModerator","getTranscriber","transcriber","Transcriber","localAudioTracks","getTranscriptionStatus","transcriptionStatus","_fireAudioLevelChangeEvent","activeTpc","getActivePeerConnection","_fireMuteChangeEvent","actorParticipant","muteParticipant","myroomjid","actorId","_getInitialLocalTracks","isStartAudioMuted","isStartVideoMuted","_setConference","muteHandler","audioLevelHandler","_doReplaceTrack","_setupNewTrack","replaceTrackPromises","videoTypeTagName","getFromPresence","_addLocalTrackAsUnmute","addAsUnmutePromises","_removeLocalTrackAsMute","removeAsMutePromises","getRole","isHidden","hiddenDomain","lockRoom","JitsiConferenceErrors","unlock","selectParticipant","selectParticipants","lastN","isInteger","isVideoActive","getParticipantCount","countHidden","grantOwner","setAffiliation","revokeOwner","isMyself","isMembersOnly","kickParticipant","kick","_maybeClearSITimeout","_sessionInitiateTimeout","muteMediaType","onMemberJoined","nick","statsID","botType","fullJid","isReplaceParticipant","JitsiParticipant","setRole","setBotType","setFeatures","setIsReplacing","_updateFeatures","_maybeStartOrStopP2P","_onMucJoined","_supportsDTMF","updateDTMFSupport","_onMemberBotTypeChanged","botParticipant","getBotType","mediaSessions","removePromises","removedTracks","onMemberKicked","isSelfPresence","kickedParticipantId","kickedParticipant","setIsReplaced","onLocalRoleChanged","onUserRoleChanged","onDisplayNameChanged","_displayName","_tracks","onCallAccepted","onTransportInfo","transportInfo","removedTrack","_onIncomingCallP2P","jingleSession","rejectReason","_shouldBeInP2PMode","_rejectIncomingCall","_acceptP2PIncomingCall","onIncomingCall","isFocus","_acceptJvbIncomingCall","serverRegion","_setBridgeChannel","_suspendMediaTransferForJvbConnection","_desktopSharingFrameRate","webSocket","forceJvb121","p2pFailed","_stopP2PSession","onSuspendDetected","supportsDTMF","isDTMFSupported","sendTones","tones","peerConnection","startRecording","stopRecording","isSIPCallingSupported","hangup","startTranscriber","stopTranscriber","getPhoneNumber","getPhonePin","getMeetingUniqueId","getMeetingId","setStartMutedPolicy","policy","getStartMutedPolicy","removeLocalParticipantProperty","getLocalParticipantProperty","presMap","overallFeedback","detailedFeedback","getSsrcByTrack","getLocalSSRC","getSSRC","remoteUserId","_isFocus","mucJid","_fireIncompatibleVersionsEvent","sendEndpointMessage","broadcastEndpointMessage","sendThroughVideobridge","messageType","messageToSend","isConnectionInterrupted","_onConferenceRestarted","restartInProgress","_onIceConnectionFailed","IceFailedHandling","remoteID","getStatsID","_addRemoteJVBTracks","_addRemoteTracks","_addRemoteP2PTracks","logName","p2pEstablishmentDuration","jvbEstablishmentDuration","forceJVB121Ratio","establishmentDurationDiff","_setP2PStatus","_removeRemoteJVBTracks","changed","getProperty","_maybeClearDeferredStartP2P","_removeRemoteTracks","_removeRemoteP2PTracks","sessionNickname","_resumeMediaTransferForJvbConnection","_startP2PSession","newP2PJingleSession","userLeftEvent","peers","peerCount","shouldBeInP2P","myId","peersId","hasBotPeer","hasFeature","wasP2PEstablished","getP2PConnectionState","startP2PSession","peerJid","stopP2PSession","getSpeakerStats","getStats","setReceiverConstraints","videoConstraints","setPreferredReceiveMaxFrameHeight","setPreferredSendMaxFrameHeight","createVideoSIPGWSession","sipAddress","VideoSIPGWConstants","meetingId","perf","toggleE2EE","setEnabled","isLobbySupported","getLobby","membersOnlyEnabled","enableLobby","disableLobby","joinLobby","email","lobbyDenyAccess","denyAccess","lobbyApproveAccess","approveAccess","isAVModerationSupported","getAVModeration","enableAVModeration","disableAVModeration","avModerationApprove","approve","xmppListeners","chatRoom","chatRoomForwarder","EventEmitterForwarder","actor","setParticipantPropertyListener","recorderSession","logObject","AuthenticationEvents","txt","myJid","ts","updated","dominant","previous","_addConferenceXMPPListener","audioMuted","videoMuted","ignoreStartMuted","createdTimestamp","actorJid","_onByteSentStatsReceived","isEngine","RTCRtpTransceiver","isTwa","matchMedia","_getChromiumBasedVersion","isUserInteractionRequiredForUnmute","supportsBandwidthStatistics","supportsCodecPreferences","RTCRtpReceiver","getCapabilities","ondevicechange","supportsLocalCandidateRttStatistics","PerformanceObserver","supportedEntryTypes","supportsRTTStatistics","RTCRtpSender","createEncodedStreams","ReadableStream","postMessage","chromium","WINDOW","JS_MD5_NO_WINDOW","WEB_WORKER","NODE_JS","JS_MD5_NO_NODE_JS","COMMON_JS","JS_MD5_NO_COMMON_JS","AMD","ARRAY_BUFFER","JS_MD5_NO_ARRAY_BUFFER","HEX_CHARS","EXTRA","SHIFT","OUTPUT_TYPES","BASE64_ENCODE_CHAR","blocks","buffer8","Uint32Array","JS_MD5_NO_ARRAY_BUFFER_IS_VIEW","isView","createOutputMethod","outputType","Md5","update","createMethod","nodeWrap","eval","nodeMethod","createHash","digest","sharedMemory","h0","h1","h2","h3","bytes","hBytes","finalized","hashed","notString","lastByteIndex","finalize","bc","da","hex","base64","v1","v2","v3","base64Str","md5","default","17","getFirstMatch","getSecondMatch","matchAndReturnConst","getWindowsVersionName","getMacOSVersionName","getAndroidVersionName","getVersionPrecision","compareVersions","getBrowserAlias","BROWSER_ALIASES_MAP","getBrowserTypeByAlias","BROWSER_MAP","18","ENGINE_MAP","OS_MAP","PLATFORMS_MAP","Bada","BlackBerry","Chrome","Chromium","Epiphany","Firefox","Focus","Generic","Googlebot","Maxthon","Opera","PhantomJS","Puffin","QupZilla","QQ","QQLite","Safari","Sailfish","SeaMonkey","Sleipnir","Swing","Tizen","Vivaldi","WeChat","Roku","amazon_silk","android","bada","blackberry","chrome","epiphany","firefox","generic","googlebot","google_search","ie","k_meleon","maxthon","edge","mz","naver","opera","opera_coast","phantomjs","puffin","qupzilla","qq","qqlite","safari","sailfish","samsung_internet","seamonkey","sleipnir","tizen","uc","vivaldi","webos","wechat","yandex","tablet","mobile","desktop","tv","WindowsPhone","Windows","MacOS","iOS","Android","WebOS","Linux","ChromeOS","PlayStation4","EdgeHTML","Blink","Trident","Presto","Gecko","WebKit","90","getResult","91","_ua","parsedResult","getUA","parseBrowser","describe","getBrowser","getOS","os","parseOS","getOSName","getOSVersion","getPlatform","platform","parsePlatform","getPlatformType","getEngine","engine","parseEngine","getEngineName","isOS","isPlatform","isBrowser","compareVersion","92","93","versionName","94","vendor","model","95","analyticsHandlers","permanentProperties","conferenceName","setAnalyticsHandlers","_setUserProperties","_sendEvent","setUserProperties","setConferenceName","_verifyRequiredFields","objectType","containerType","objectId","_maybeCacheEvent","statsInterval","longTasks","maxDuration","performanceStatsInterval","avgRatePerMinute","maxDurationMs","longTaskEventHandler","getEntries","task","observer","observe","buffered","longTasksIntervalId","_lastTimeStamp","calculatePacketLoss","lostPackets","totalPackets","SsrcStats","loss","bitrate","upload","framerate","ConferenceStats","packetLoss","StatsCollector","baselineAudioLevelsReport","currentAudioLevelsReport","currentStatsReport","previousStatsReport","audioLevelReportHistory","audioLevelsIntervalId","conferenceStats","audioLevelsIntervalMilis","statsIntervalId","statsIntervalMilis","ssrc2stats","setLoss","setResolution","addBitrate","resetBitrate","setFramerate","setCodec","startAudioLevelStats","audioLevels","getAudioLevels","processAudioLevelReport","processStats","processStatsReport","_processAndEmitReport","bitrateDownload","bitrateUpload","resolutions","framerates","audioCodec","videoCodec","audioBitrateDownload","audioBitrateUpload","videoBitrateDownload","videoBitrateUpload","ssrcStats","isDownloadStream","packetsTotal","packetsLost","userResolutions","userFramerates","codecDesc","userCodecs","avgAudioLevels","localAvgAudioLevels","avgAudioLevel","sum","getNonNegativeValue","_calculateBitrate","fieldName","bytesNow","bytesBefore","bytesProcessed","timeMs","bitrateKbps","byteSentStats","nominated","availableIncomingBitrate","availableOutgoingBitrate","remoteUsedCandidate","remoteCandidateId","localUsedCandidate","localCandidateId","localip","conferenceStatsTransport","localCandidateType","candidateType","remoteCandidateType","networkType","currentRoundTripTime","packetsNow","packetsBefore","packetsDiff","packetsLostNow","packetsLostBefore","packetsLostDiff","frameHeight","frameWidth","framesPerSecond","bytesSent","codecId","codecShortType","remoteSource","localVideoTracks","framesSent","numberOfActiveStreams","getActiveSimulcastStreams","trackIdentifier","getSsrcByTrackId","srcEvent","isReplacing","isReplaced","_jid","_id","_conference","_role","_hidden","_statsID","_connectionStatus","_properties","_identity","_isReplacing","_isReplaced","getConference","jitsiTrack","isAudioMuted","_isMediaTypeMuted","newRole","newIsReplacing","newIsReplaced","newFeatures","_botType","newBotType","onLoginSuccessful","roomPassword","rejectPromise","canceled","authenticationError","connectionError","kJitsiE2EE","E2EEcontext","baseUrl","ljm","workerBlob","blobUrl","_worker","Worker","operation","receiverStreams","readableStream","readable","writableStream","senderStreams","stropheConnection","_resumeRetryN","_retryDelay","_cancelResume","_networkOnlineListener","_scheduleResume","_resumeTimeout","getJitterDelay","retryDelay","_resumeConnection","resumeToken","oldToken","retry","minDelay","LastRequestTracker","_lastSuccess","_lastFailedMessage","xmppConnection","originalRawInput","rawMessage","ConnectionPlugin","failedPings","_onPingThresholdExceeded","_getTimeSinceLastServerResponse","pingInterval","pingTimeout","pingThreshold","threshold","pingTimestampsToKeep","pingExecIntervals","_addPingExecutionTimestamp","_lastServerCheck","pingIntervals","maxInterval","previousTS","currentInterval","onPresence","onPresenceUnavailable","onPresenceError","onMessage","onMute","onMuteVideo","ChatRoom","doLeave","createNonAnonymousRoom","packet2JSON","json2packet","packet","filterNodeFromPresenceJSON","MEMBERS_AFFILIATIONS","members","presHandlers","_removeConnListeners","noBridgeAvailable","Moderator","lobby","Lobby","avModeration","AVModeration","initPresenceMap","lastPresences","phoneNumber","phonePin","participantPropertyListener","JitsiTranscriptionStatus","xns","presenceUpdateTime","disableFocus","allocateConferenceFocus","onConnStatusChanged","fromJoin","billingId","presenceSyncTime","discoRoomInfo","getInfo","meetingIdValEl","setMeetingId","membersOnly","lobbyRoomField","setLobbyRoomJid","disableDiscoInfo","getForm","form","formSubmit","member","statusEl","hasStatusUpdate","hasVersionUpdate","xElement","mucUserItem","affiliation","getFocusUserJid","isHiddenDomain","fromHiddenDomain","xEl","extractIdentityInformation","userInfo","_extractFeatures","_initFocus","memberOfThis","displayJids","restartByTerminateSupported","att","phone","pin","processNode","var","focusFeatures","tagHandlers","onParticipantLeft","skipEvents","onMucMemberLeft","destroySelect","reasonSelect","isKick","membersKeys","actorSelect","actorNick","subjectText","stamp","dateParts","passwordSelect","lobbyRoomNode","lobbyRoomJid","grantIQ","kickIQ","onError","onNotSupported","formsubmit","setMembersOnly","formToSubmit","addToPresence","matchingNodes","handlerIdx","getMemberRole","sendVideoInfoPresence","sendAudioInfoPresence","addAudioInfoToPresence","addVideoInfoToPresence","getMediaPresenceInfo","mutedNode","codecTypeNode","videoTypeNode","codecType","isSipGatewayEnabled","iqToFocus","clean","onMucLeft","doReject","_xmpp","_mainRoom","_momderationEnabledByType","_whitelistAudio","_whitelistVideo","jidToWhitelist","newWhitelists","whitelists","fireEventApprovedJids","oldList","approved","mainRoom","maybeJoinLobbyRoom","_maybeJoinLobbyRoom","lobbyRoom","_leaveLobbyRoom","avatar","invitePassword","memberRoomJid","msgToSend","createExpBackoffTimer","origin","xmppService","getNextTimeout","getNextErrorTimeout","externalAuthEnabled","sipGatewayEnabled","setFocusUserJid","focusJid","focusUserJid","getFocusComponent","focusComponent","createConferenceIq","machineUID","machineId","audioPacketDelay","startBitrate","minBitrate","parseSessionId","resultIq","parseConfigOptions","authenticationEnabled","_allocateConferenceFocusSuccess","_allocateConferenceFocusError","invalidSession","reservationErr","errorCode","errorTextNode","waitMs","retrySec","urlCallback","failureCallback","_getLoginUrl","popup","urlCb","decodeURIComponent","logout","logoutUrl","jvbIceConfig","p2pIceConfig","offerToReceiveAudio","offerToReceiveVideo","onJingle","fromJid","sess","startMuted","successTime","me","v2Res","v2Err","v1Res","v1Err","iceservers","dict","credential","useTurnUdp","updateLog","_queue","_processQueueTasks","_stopped","kill","previous_async","only_once","called","_toString","_isArray","_each","_map","_keys","setImmediate","eachSeries","iterate","forEachSeries","eachLimit","limit","_eachLimit","forEachLimit","started","running","replenish","doParallel","doSeries","_asyncMap","eachfn","mapSeries","mapLimit","_mapLimit","doParallelLimit","memo","inject","foldl","reduceRight","reversed","foldr","_filter","filterSeries","selectSeries","_reject","rejectSeries","main_callback","detect","detectSeries","any","sortBy","criteria","auto","tasks","remainingTasks","taskComplete","theCallback","taskCallback","safeResults","rkey","requires","times","attempts","wrappedTask","wrappedCallback","wrappedResults","retryAttempt","finalAttempt","seriesCallback","series","waterfall","wrapIterator","_parallel","parallel","parallelLimit","makeCallback","_concat","cb","concatSeries","whilst","doWhilst","doUntil","worker","concurrency","_insert","drain","saturated","workers","idle","priorityQueue","_compareTasks","sequence","beg","_binarySearch","cargo","working","drained","_console_fn","memoize","hasher","queues","memoized","unmemoized","unmemoize","counter","timesSeries","seq","newargs","nextargs","compose","_applyEach","go","applyEach","applyEachSeries","forever","char","getState","addSources","removeSources","SignalingLayer","ssrcOwners","oldChatRoom","_audioMuteHandler","_videoMuteHandler","_videoTypeHandler","SignalingEvents","getPeerMediaInfo","getSSRCOwner","StropheLogger","logIncoming","logOutgoing","onRayo","roomPass","callResource","resetLastErrorStatusRegExpr","lastErrorStatusRegExpr","trace","errStatusCapture","_getCodecMimeType","jvbPreferredCodec","_isCodecSupported","p2pPreferredCodec","_selectPreferredCodec","_onMediaSessionStared","mediaSession","currentCodec","selectedCodec","remoteParticipants","remote","peerMediaInfo","peerCodec","_areRetriesEnabled","_closedFromClient","datachannel","createDataChannel","_handleChannel","_wsUrl","_initWebSocket","ws","_startConnectionRetries","timeoutS","reload","_retryTimeout","_stopConnectionRetries","_retryWebSocketConnection","closeEvent","colibriClass","msgPayload","endpointIds","selectedEndpoints","maxFrameHeightPixels","channel","dominantSpeakerEndpoint","previousSpeakers","endpoint","jsonObject","_setEffectInProgress","effect","_startStreamEffect","maxEnabledResolution","_constraints","_prevSetMuted","_facingMode","_trackEnded","_hasSentData","_testDataSent","_realDeviceId","_trackMutedTS","_onDeviceListWillChange","oldRealDeviceId","_setRealDeviceIdFromDeviceList","_onAudioOutputDeviceChanged","_initNoDataFromSourceHandlers","isEnded","_isNoDataFromSourceEventsEnabled","_fireNoDataFromSourceEvent","isReceivingData","storedMSID","_streamEffect","_originalStream","startEffect","_stopStreamEffect","stopEffect","_switchStreamEffect","setEffect","cont","_queueSetMuted","setMuted","_setMuted","logMuteInfo","_removeStreamFromConferenceAsMute","streamOptions","getCameraFacingMode","streamsInfo","streamInfo","_addStreamToConferenceAsUnmute","_sendMuteStatus","successCallback","trackSettings","_stopStreamInProgress","_switchCamera","_effectEnabled","audioTransferActive","_dtmfSender","_dtmfTonesQueue","videoTransferActive","localUfrag","remoteUfrag","_peerVideoTypeChanged","_peerMutedChanged","safeConstraints","rtcStatsSFUP2P","standardVideoBitrates","maxBitratesVideo","tpcUtils","statsinterval","_capScreenshareBitrate","_usesUnifiedPlan","_usesTransceiverCodecPreferences","interop","Interop","Simulcast","numOfLayers","explodeRemoteSimulcast","sdpConsistency","SdpConsistency","localSdpMunger","LocalSdpMunger","rtxModifier","RtxModifier","senderVideoMaxHeight","onTrack","_remoteTrackAdded","_remoteTrackRemoved","onaddstream","_remoteStreamAdded","onremovestream","_remoteStreamRemoved","ondatachannel","_processStat","stat","statValue","endTime","dumpSDP","isAddOperation","hasLocalSource","hasAnyTracksOfType","_getReceiversByEndpointIds","endpoints","receivers","remoteTrackIds","getReceivers","_setVideoType","setMute","getSynchronizationSources","endpointTrackMap","mediaTrack","primarySsrcs","fidLines","getTargetVideoBitrates","findTrackById","onaddtrack","onremovetrack","streamAudioTracks","streamVideoTracks","remoteSDP","mediaLines","mls","trackSsrc","ownerEndpointId","_createRemoteTrack","remoteTracksMap","existingTrack","JitsiRemoteTrack","isUserStream","_removeRemoteTrackById","_getRemoteTrackById","removedAudioTrack","removedVideoTrack","_removeRemoteTrack","toBeRemoved","_extractSSRCMap","groupsMap","groupSSRCs","normalizePlanB","firstSsrcs","newSsrcLines","filteredLines","ssrcId","cnameLine","replaceDefaultUnifiedPlanMsid","resStr","_getSSRC","_injectSsrcGroupForUnifiedSimulcast","fidGroups","getters","toPlanB","maybeAddMutedLocalVideoTracksToSDP","transformer","audioMedia","videoMedia","enforceSendRecv","transformStreamIdentifiers","_adjustRemoteMediaDirection","_isSharingLowFpsScreen","_isSharingScreen","_mungeCodecOrder","codecPreference","bitrates","hdBitrate","containsTrack","webrtcStream","_addStream","generateNewStreamSSRCInfo","setPrimarySsrc","setSsrcCache","rtxSsrcMapping","rtxSsrc","promiseChain","_assertTrackBelongs","webRtcStream","addStream","_removeStream","removeStream","doesBelong","defaultCodec","lowFps","isMediaStreamInPc","findSenderByKind","getSenders","_ensureSimulcastGroupIsLast","localSdp","sdpStr","videoStartIndex","simStartIndex","otherStartIndex","simEndIndex","simStr","otherEndIndex","sdpHead","simStrTrimmed","sdpTail","_adjustLocalMediaDirection","modifiedDirection","desiredAudioDirection","desiredVideoDirection","hasRemoteSource","_mungeOpus","opusMaxAverageBitrate","mLines","fmtpOpus","fmtpConfig","sdpChanged","maxaveragebitrate","mungedConfig","toUnifiedPlan","localVideoTrack","videoSender","preference","degradationPreference","presenterEnabled","scaleFactor","layer","currentDescription","mungeRemoteDescription","newHeight","encodingsEnabledState","ldStreamIndex","highResolutionEncoding","interToneGap","rtpSender","dtmf","localAudioTrack","createDTMFSender","ontonechange","_onToneChange","toneBuffer","insertDTMF","tone","clearVideoSsrcCache","peerTracks","_createOfferOrAnswer","isOffer","handleSuccess","resultSdp","resolveFn","rejectFn","hasPrimarySsrcCached","makeVideoPrimarySsrcsConsistent","mungeLocalDescription","modifyRtxSsrcs","_processLocalSSRCsMap","handleFailure","capabilities","setCodecPreferences","oaPromise","_extractPrimarySSRC","sourceIdentifier","newSSRCNum","oldSSRCNum","activeStreams","currNumSsrcs","localEndpointId","_addMutedLocalVideoTracksToSDP","localVideos","isInPeerConnection","requiredSSRCs","ssrcCache","cachedPrimarySsrc","primaryCname","modifyRtxSsrcs2","_generateMsidAttribute","pcId","_transformMediaIdentifiers","streamAndTrackIDs","mediaDirection","msidLine","generatedMsid","sessionDesc","audioMLine","updateAssociatedRtxStream","primarySsrcInfo","primarySsrcMsid","primarySsrcCname","previousRtxSSRC","correspondingRtxSsrcs","clearSsrcCache","ssrcMapping","sdpTransformer","primaryVideoSsrcs","correspondingRtxSsrc","previousAssociatedRtxStream","stripRtx","injectRecvOnly","newPrimarySsrc","ttfmTrackerAudioAttached","ttfmTrackerVideoAttached","containerEvents","hasBeenMuted","_bindTrackHandlers","_containerHandlers","_containerEventHandler","_onTrackMute","_onTrackUnmute","_playCallback","gumStart","gumEnd","gumDuration","ttfm","_getStatus","kSimulcastFormats","layers","targetRN","getTarget","millisSinceStart","videoQualitySettings","simulcastFormat","targetHeight","rampUp","_localStats","jvbRTT","_lastConnectionQualityUpdate","_remoteStats","_timeIceConnected","_timeVideoUnmuted","ConferenceEvents","_updateLocalConnectionQuality","ConnectionQualityEvents","_broadcastLocalStats","_updateRemoteStats","_updateLocalStats","_maybeUpdateUnmuteTime","bridgeCount","_calculateConnectionQuality","resolutionName","quality","activeTPC","maxIncreasePerSecond","prevConnectionQuality","diffSeconds","updateLocalConnectionQuality","_actOnIceFailed","explicitlyDisabled","useTerminateForRestart","reloadClient","jvbConnection","jvbConnIceState","_canceled","_iceFailedTimeout","_timeoutTrigger","_hasAudioInput","_audioLevel","_clearTriggerTimeout","_handleAudioInputStateChange","_handleNoAudioInputDetection","_eventFired","_audioTrack","myUserID","_processing","_scoreArray","_audioLvlArray","_active","_calculateNoisyScore","scoreAvg","audioLevelAvg","_setActiveState","_recordValues","avgAudioLvl","_processTimeout","posAudioLevels","_calculateVADScore","ParticipantWrapper","requests","lastRequestId","clearIntervals","sendRequest","handleResponse","maybeSendAnalytics","isDataChannelOpen","pingIntervalMs","analyticsInterval","analyticsIntervalMs","requestId","requestMessage","timeSent","E2ePingEvents","Infinity","participantJoined","participantLeft","messageReceived","dataChannelOpened","participantWrapper","handleRequest","_jvb121","evaluateStatus","oldStatus","ReceiverVideoConstraints","_defaultConstraints","defaultConstraints","onStageEndpoints","updateLastN","updateReceiveResolution","updateReceiverVideoConstraints","updateSelectedEndpoints","_rtc","startLastN","useNewBandwidthAllocationStrategy","remoteEndpointIds","oldConstraints","newConstraints","p2pSession","layerSuspensionEnabled","enableLayerSuspension","_propagateSendMaxFrameHeight","_senderVideoConstraints","idealHeight","sendMaxFrameHeight","selectSendMaxFrameHeight","activeMediaSession","preferredSendMaxFrameHeight","_sessions","_chatRoom","getSession","_handleFocusPresence","_handleJibriPresence","_addSession","_emitSessionUpdate","_createSession","_localAudioLevelCache","_reportedParticipants","_audioProblemCandidates","_numberOfRemoteAudioLevelsReceived","_onLocalAudioLevelsReport","_onRemoteAudioLevelReceived","_clearUserData","numberOfReports","localAudioLevelsString","AverageStatReport","calculate","appendReport","ConnectionAvgStats","_n","_sampleIdx","_avgRTT","_avgRemoteRTTMap","_avgRtpStatsReporter","_avgEnd2EndRTT","_onConnectionStats","_calculateAvgStats","_onRemoteStatsUpdated","_processRemoteStats","batchReport","jvbEnd2EndRTT","jvbStatsMonitor","avgRemoteRTT","_calculateAvgRemoteRTT","avgLocalRTT","_resetAvgStats","remoteAvg","avg","validData","rttAvg","_avgAudioBitrateUp","_avgAudioBitrateDown","_avgVideoBitrateUp","_avgVideoBitrateDown","_avgBandwidthUp","_avgBandwidthDown","_avgPacketLossTotal","_avgPacketLossUp","_avgPacketLossDown","_avgRemoteFPS","_avgRemoteScreenFPS","_avgLocalFPS","_avgLocalScreenFPS","_avgRemoteCameraPixels","_avgRemoteScreenPixels","_avgLocalCameraPixels","_avgLocalScreenPixels","_avgCQ","_cachedTransportStats","_onLocalStatsUpdated","_maybeSendTransportAnalyticsEvent","_onP2PStatusChanged","p2pStatsMonitor","_onJvb121StatusChanged","_resetAvgJvbStats","confSize","_calculateAvgVideoFps","_calculateAvgVideoPixels","peerResolutions","peerPixelsSum","myID","peerID","videosResolution","peerAvgPixels","_calculatePeerAvgVideoPixels","videos","peerSsrcCount","peerSsrcPixels","peerFpsSum","videosFps","peerAvgFPS","_calculatePeerAvgVideoFps","peerSsrcFps","transportStats","dominantSpeakerId","SpeakerStats","_onDominantSpeaker","_onUserJoin","_onUserLeave","_onDisplayNameChange","_updateStats","oldDominantSpeaker","newDominantSpeaker","savedUser","newStats","speakerStatsToUpdate","newParticipant","SphinxService","audioRecorder","transcriptionService","transcription","lineLength","blobCallBack","wordArray","getUTCMilliseconds","wordObject","begin","word","maybeMerge","hasPopulatedArrays","twoDimensionalArray","callBack","recordingResult","arrays","potentialWords","pushWordToSortedArray","lowestWordArray","wordToAdd","updateTranscription","foundSmaller","wordToCompare","getTranscription","processVersions","mucResource","getComponentVersion","componentName","sessionStateChangeListener","sessionStateChanged","handleJibriSIPState","Constants","sipaddress","setState","failure_reason","JitsiVideoSIPGWSession","addStateListener","removeStateListener","_sendJibriIQ","failureReason","oldState","displayname","getActiveAudioDevice","audioDevices","devicePromiseArray","micDevice","devicePromise","outcomeArray","successfulPromises","rejectedPromises","rejectReasons","stopActiveDevices","deviceLabel","ProxyConnectionService","jitsiConnection","_peerConnection","_onFatalError","_onSendMessage","_onRemoteStream","processMessage","getPeerJid","_convertStringToXML","$jingle","_createPeerConnection","receiveVideo","_selfCloseConnection","xmlDom","onRemoteStream","onSendMessage","ProxyConnectionPC","jitsiRemoteTrack","isVideo","convertVideoToDesktop","jitsiLocalTracks","createLocalTracks","stringifiedIq","XMLSerializer","serializeToString","onConnectionClosed","receiveAudio","_onSessionAccept","_onSessionInitiate","_onSessionTerminate","_onTransportInfo","connectionStub","iceConfigStub","roomStub","BUSY","RESOURCE_CONSTRAINT","SERVICE_UNAVAILABLE","FILE","_initialized","api","_loadScript","appId","appSecret","disablePrecalltest","_initialize","execute","makePrecallTest","AuthUtil","getTokenAuthUrl","urlPattern","roleUpgrade","AudioMixer","_started","_streamsToMix","_streamMSSArray","addMediaStream","_mixedMSD","createMediaStreamDestination","streamMSS","found","PLAN_B_MIDS","findSimGroup","grp","findFidGroup","addSimGroupSources","sourceGroups","sourceList","findSourcebyId","relatedFidGroup","relatedSsrc","addSourcesToMline","otherSsrc","simGroup2","checkIfMlineForSsrcExists","mlines","sessionMedia","bLine","bundle","mids","msidSemantic","semantic","currentDesc","newMline","mLineForData","ssrc2group","createSourceGroupMap","bundleOnly","getAnalyticsAttributesFromOptions","video_requested","_mergeNamespaceAndModule","JitsiMeetJS","constants","recording","recordingConstants","sipVideoGW","detection","errorTypes","logLevels","JitsiMediaDevices","enableAnalyticsLogging","enableWindowOnErrorHandler","getGlobalOnErrorHandler","aprops","isWebRtcSupported","addGlobalLogTransport","globalTransport","removeGlobalLogTransport","setGlobalLogOptions","oldfirePermissionPromptIsShownEvent","promiseFulfilled","firePermissionPromptIsShownEvent","fireSlowPromiseEvent","restOptions","mStream","currentlyAvailableMediaDevices","setVideoTrackContentHints","createTrackVADEmitter","localAudioDeviceId","createAudioMixer","isCollectingLocalStats","lineno","colno","setNetworkInfo","hint","contentHint","precallTest","util","logStorage","stringifyObjects","storeInterval","maxEntryLength","logLevel","_log","storeLogsIntervalID","totalLen","outputCache","someObject","formatLogMessage","prevMessage","prevMessageText","_flush","_reschedulePublishInterval","force","reschedule","cachedQueue","storeLogs","__webpack_amd_options__","scriptReadyRegex","fullPageUrl","pageUrl","supportsScriptReadyState","isNotOpera","hasNativeCurrentScriptAccessor","stackTraceLimit","hasStackBeforeThrowing","hasStackAfterThrowing","_nearestExecutingScript","eligibleScripts","skipStackDepth","getScriptFromUrl","getScriptUrlFromStack","ignoreMessage","getSoleInlineScript","currentScript","thrownErr","near","far","strophe_js","_items","conn","_onDiscoInfo","_onDiscoItems","addIdentity","var_name","addItem","call_back","items","_buildIQResult","query_attrs","iqresult","logging","autoSendCountOnEveryIncomingStanza","requestResponseInterval","_c","_NS","_isStreamManagementEnabled","_serverProcesssedStanzasCounter","_clientProcessedStanzasCounter","_clientSentStanzasCounter","_originalXMLOutput","_requestHandler","_incomingHandler","_requestResponseIntervalCount","_isSupported","_unacknowledgedStanzas","_acknowledgedStanzaListeners","addAcknowledgedStanzaListener","_resumeToken","_resuming","_originalConnect","_connectArgs","requestAcknowledgement","getOutgoingCounter","getIncomingCounter","_interceptConnectArgs","_originalOnStreamFeaturesAfterSASL","_originalDoDisconnect","_interceptDoDisconnect","_originalDisconnect","_interceptDisconnect","_resumeState","_storedJid","previd","_handleServerRequestHandler","_ackHandler","_handleServerAck","_incomingStanzaHandler","_enabledHandler","_handleEnabled","_resumeFailedHandler","_handleResumeFailed","_resumedHandler","_handleResumed","_increaseSentStanzasCounter","handledCount","_handleAcknowledgedStanzas","_increaseReceivedStanzasCounter","_answerProcessedStanzas","reportedHandledCount","lastKnownHandledCount","_throwError","Timeout","clearFn","_clearFn","unref","ref","enroll","msecs","_idleTimeoutId","unenroll","_unrefActive","_onTimeout","clearImmediate","registerImmediate","messagePrefix","onGlobalMessage","nextHandle","tasksByHandle","currentlyRunningATask","attachTo","runIfPresent","importScripts","postMessageIsAsynchronous","oldOnMessage","canUsePostMessage","MessageChannel","port1","port2","toIntIfInt","parseReg","needsBlank","keyLocation","rawName","attachProperties","validLine","paramReducer","acc","scid","formatRegExp","formatStr","makeLine","defaultOuterOrder","defaultInnerOrder","outerOrder","innerOrder","transformUtils","parseSsrcs","writeSsrcs","processVideo","validateDescription","_parseSimLayers","_buildNewToOldSsrcMap","newSsrcList","oldSsrcList","newSsrc","oldSsrc","_fillInSourceDataFromCache","newSimSsrcs","newMsid","newCname","ssrcsToReplace","ssrcsToAdd","_generateSourceData","addAssociatedStream","simSsrcs","simSsrc","_restoreSimulcast","enableConferenceFlag","order","simulcastSsrcs","relatedGroup","relatedSsrcs","relatedSSRC","simulcastGroup","nuke","implodeRemoteSimulcast","invalid","assertGoogConference","xGoogleFlag","removeGoogConference","Word","TranscriptionService","sphinxURL","toReturn","getURL","audioFileBlob","DONE","formatResponse","objects","filler","verify","getWord","getBeginTime","getEndTime","audioBlob","logDisabled_","deprecationWarnings_","extractVersion","uastring","wrapPeerConnectionEvent","eventNameToWrap","nativeAddEventListener","nativeEventName","modifiedEvent","handleEvent","_eventMap","nativeRemoveEventListener","unwrappedCb","disableLog","disableWarnings","deprecated","oldMethod","newMethod","compactObject","filterStats","outbound","streamStatsType","filteredResult","trackStats","trackStat","walkStats","resultSet","shimGetUserMedia","browserDetails","constraintsToChrome_","cc","exact","oldname_","oc","mix","advanced","shimConstraints_","remap","face","getSupportedFacingModeLies","getSupportedConstraints","dev","shimError_","PermissionDeniedError","PermissionDismissedError","InvalidStateError","DevicesNotFoundError","ConstraintNotSatisfiedError","TrackStartError","MediaDeviceFailedDueToShutdown","MediaDeviceKillSwitchOn","TabCaptureError","ScreenCaptureError","DeviceCaptureError","webkitGetUserMedia","origGetUserMedia","DOMException","shimGetDisplayMedia","getSourceId","widthSpecified","heightSpecified","frameRateSpecified","shimMediaStream","webkitMediaStream","shimOnTrack","_ontrack","origSetRemoteDescription","_ontrackpoly","te","dispatchEvent","shimGetSendersWithDtmf","shimSenderWithDtmf","_dtmf","_pc","_senders","origAddTrack","origRemoveTrack","origAddStream","origRemoveStream","origGetSenders","shimGetStats","origGetStats","onSucc","onErr","fixChromeStats_","standardReport","standardStats","localcandidate","remotecandidate","makeMapStats","successCallbackWrapper_","shimSenderReceiverGetStats","origGetReceivers","srcElement","MediaStreamTrack","shimAddTrackRemoveTrackWithNative","getLocalStreams","_shimmedLocalStreams","existingSenders","newSenders","newSender","shimAddTrackRemoveTrack","origGetLocalStreams","nativeStreams","_reverseStreams","_streams","newStream","replaceInternalStreamId","internalId","externalStream","internalStream","replaceExternalStreamId","alreadyExists","oldStream","nativeMethod","methodObj","origSetLocalDescription","origLocalDescription","getOwnPropertyDescriptor","streamid","shimPeerConnection","webkitRTCPeerConnection","fixNegotiationNeeded","getConfiguration","nativeGetUserMedia","nativeGetSettings","applyConstraints","nativeApplyConstraints","preferredMediaSource","mediaSource","RTCTrackEvent","mozRTCPeerConnection","modernStatsTypes","inboundrtp","outboundrtp","candidatepair","nativeGetStats","shimSenderGetStats","shimReceiverGetStats","shimRemoveStream","shimRTCDataChannel","DataChannel","RTCDataChannel","shimAddTransceiver","origAddTransceiver","setParametersPromises","initParameters","shouldPerformCheck","encodingParam","maxFramerate","shimGetParameters","origGetParameters","shimCreateOffer","origCreateOffer","finally","shimCreateAnswer","origCreateAnswer","shimLocalStreamsAPI","_localStreams","_addTrack","shimRemoteStreamsAPI","getRemoteStreams","_remoteStreams","_onaddstream","_onaddstreampoly","shimCallbacksAPI","withCallback","shimConstraints","errcb","shimRTCIceServerUrls","OrigPeerConnection","pcConfig","newIceServers","generateCertificate","shimTrackEventTransceiver","shimCreateOfferLegacy","offerOptions","audioTransceiver","setDirection","videoTransceiver","shimAudioContext","shimRTCIceCandidate","NativeRTCIceCandidate","nativeCandidate","parsedCandidate","augmentedCandidate","toJSON","shimMaxMessageSize","_sctp","sctpInDescription","getRemoteFirefoxVersion","getCanSendMaxMessageSize","remoteIsFirefox","canSendMaxMessageSize","getMaxMessageSize","canSendMMS","remoteMMS","POSITIVE_INFINITY","shimSendThrowTypeError","wrapDcSend","dc","origDataChannelSend","origCreateDataChannel","dataChannel","shimConnectionState","checking","_onconnectionstatechange","origMethod","_connectionstatechangepoly","_lastConnectionState","newEvent","removeExtmapAllowMixed","nativeSRD","shimAddIceCandidateNullOrEmpty","nativeAddIceCandidate","shimChrome","shimFirefox","shimSafari","mozGetUserMedia","isSecureContext","RTCIceGatherer","adapter","commonShim","browserShim","adapterFactory"],"mappings":"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","file":"lib-jitsi-meet.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 151);\n","const XMPPEvents = {\n    /**\n     * Indicates error while adding ice candidate.\n     */\n    ADD_ICE_CANDIDATE_FAILED: 'xmpp.add_ice_candidate_failed',\n\n    // Designates an event indicating that the focus has asked us to mute our\n    // audio.\n    AUDIO_MUTED_BY_FOCUS: 'xmpp.audio_muted_by_focus',\n\n    // Designates an event indicating that the focus has asked us to disable our\n    // camera.\n    VIDEO_MUTED_BY_FOCUS: 'xmpp.video_muted_by_focus',\n    AUTHENTICATION_REQUIRED: 'xmpp.authentication_required',\n    BRIDGE_DOWN: 'xmpp.bridge_down',\n\n    /**\n     * Triggered when 'session-accept' is received from the responder.\n     */\n    CALL_ACCEPTED: 'xmpp.callaccepted.jingle',\n\n    // Designates an event indicating that an offer (e.g. Jingle\n    // session-initiate) was received.\n    CALL_INCOMING: 'xmpp.callincoming.jingle',\n\n    // Triggered when Jicofo kills our media session, this can happen while\n    // we're still in the MUC, when it decides to terminate the media session.\n    // For example when the session is idle for too long, because we're the only\n    // person in the conference room.\n    CALL_ENDED: 'xmpp.callended.jingle',\n    CHAT_ERROR_RECEIVED: 'xmpp.chat_error_received',\n\n    // The conference properties (as advertised by jicofo) have changed\n    CONFERENCE_PROPERTIES_CHANGED: 'xmpp.conference_properties_changed',\n\n    /**\n     * This event is triggered when the ICE connects for the first time.\n     */\n    CONNECTION_ESTABLISHED: 'xmpp.connection.connected',\n\n    // Designates an event indicating that the connection to the XMPP server\n    // failed.\n    CONNECTION_FAILED: 'xmpp.connection.failed',\n\n    // Designates an event indicating that the media (ICE) connection was\n    // interrupted. This should go to the RTC module.\n    CONNECTION_INTERRUPTED: 'xmpp.connection.interrupted',\n\n    // Designates an event indicating that the media (ICE) connection was\n    // restored. This should go to the RTC module.\n    CONNECTION_RESTORED: 'xmpp.connection.restored',\n\n    // Designates an event indicating that the media (ICE) connection failed.\n    // This should go to the RTC module.\n    CONNECTION_ICE_FAILED: 'xmpp.connection.ice.failed',\n\n    // Designates an event indicating that the call has been migrated to a different\n    // bridge and that the client needs to be restarted for a successful transition.\n    CONNECTION_RESTARTED: 'xmpp.connection.restart',\n\n    /**\n     * Designates an event indicating connection status changes.\n     */\n    CONNECTION_STATUS_CHANGED: 'xmpp.connection.status.changed',\n\n    // Designates an event indicating that the display name of a participant\n    // has changed.\n    DISPLAY_NAME_CHANGED: 'xmpp.display_name_changed',\n\n    /**\n     * Chat room instance have been added to Strophe.emuc plugin.\n     */\n    EMUC_ROOM_ADDED: 'xmpp.emuc_room_added',\n\n    /**\n     * Chat room instance have been removed from Strophe.emuc plugin.\n     */\n    EMUC_ROOM_REMOVED: 'xmpp.emuc_room_removed',\n    ETHERPAD: 'xmpp.etherpad',\n    FOCUS_DISCONNECTED: 'xmpp.focus_disconnected',\n    FOCUS_LEFT: 'xmpp.focus_left',\n    GRACEFUL_SHUTDOWN: 'xmpp.graceful_shutdown',\n\n    /**\n     * Event fired when 'transport-replace' Jingle message has been received,\n     * before the new offer is set on the PeerConnection.\n     */\n    ICE_RESTARTING: 'rtc.ice_restarting',\n\n    /**\n     * Event fired after the 'transport-replace' message has been processed\n     * and the new offer has been set successfully.\n     */\n    ICE_RESTART_SUCCESS: 'rtc.ice_restart_success',\n\n    /**\n     * Designates an event indicating that we were kicked from the XMPP MUC.\n     * @param {boolean} isSelfPresence - whether it is for local participant\n     * or another participant.\n     * @param {string} actorJid - the jid of the participant who was initator\n     * of the kick.\n     * @param {?string} participantJid - when it is not a kick for local participant,\n     * this is the jid of the participant which was kicked.\n     */\n    KICKED: 'xmpp.kicked',\n\n    // Designates an event indicating that our role in the XMPP MUC has changed.\n    LOCAL_ROLE_CHANGED: 'xmpp.localrole_changed',\n\n    /**\n     * Event fired when the unique meeting id is set.\n     */\n    MEETING_ID_SET: 'xmpp.meeting_id_set',\n\n    // Designates an event indicating that an XMPP message in the MUC was\n    // received.\n    MESSAGE_RECEIVED: 'xmpp.message_received',\n\n    // Designates an event indicating that an invite XMPP message in the MUC was\n    // received.\n    INVITE_MESSAGE_RECEIVED: 'xmpp.invite_message_received',\n\n    // Designates an event indicating that a private XMPP message in the MUC was\n    // received.\n    PRIVATE_MESSAGE_RECEIVED: 'xmpp.private_message_received',\n\n    // Designates an event indicating that a bot participant type had changed\n    MUC_MEMBER_BOT_TYPE_CHANGED: 'xmpp.muc_member_bot_type_changed',\n\n    // Designates an event indicating that the XMPP MUC was destroyed.\n    MUC_DESTROYED: 'xmpp.muc_destroyed',\n\n    // Designates an event indicating that we have joined the XMPP MUC.\n    MUC_JOINED: 'xmpp.muc_joined',\n\n    // Designates an event indicating that a participant joined the XMPP MUC.\n    MUC_MEMBER_JOINED: 'xmpp.muc_member_joined',\n\n    // Designates an event indicating that a participant left the XMPP MUC.\n    MUC_MEMBER_LEFT: 'xmpp.muc_member_left',\n\n    // Designates an event indicating that a participant joined the lobby XMPP MUC.\n    MUC_LOBBY_MEMBER_JOINED: 'xmpp.muc_lobby_member_joined',\n\n    // Designates an event indicating that a participant in the lobby XMPP MUC has been updated\n    MUC_LOBBY_MEMBER_UPDATED: 'xmpp.muc_lobby_member_updated',\n\n    // Designates an event indicating that a participant left the XMPP MUC.\n    MUC_LOBBY_MEMBER_LEFT: 'xmpp.muc_lobby_member_left',\n\n    // Designates an event indicating that a participant was denied access to a conference from the lobby XMPP MUC.\n    MUC_DENIED_ACCESS: 'xmpp.muc_denied access',\n\n    // Designates an event indicating that local participant left the muc\n    MUC_LEFT: 'xmpp.muc_left',\n\n    // Designates an event indicating that the MUC role of a participant has\n    // changed.\n    MUC_ROLE_CHANGED: 'xmpp.muc_role_changed',\n\n    // Designates an event indicating that the MUC has been locked or unlocked.\n    MUC_LOCK_CHANGED: 'xmpp.muc_lock_changed',\n\n    // Designates an event indicating that the MUC members only config has changed.\n    MUC_MEMBERS_ONLY_CHANGED: 'xmpp.muc_members_only_changed',\n\n    // Designates an event indicating that a participant in the XMPP MUC has\n    // advertised that they have audio muted (or unmuted).\n    PARTICIPANT_AUDIO_MUTED: 'xmpp.audio_muted',\n\n    // Designates an event indicating that a participant in the XMPP MUC has\n    // advertised that they have video muted (or unmuted).\n    PARTICIPANT_VIDEO_MUTED: 'xmpp.video_muted',\n\n    // Designates an event indicating that the video type (e.g. 'camera' or\n    // 'screen') for a participant has changed.\n    // Note: currently this event fires every time we receive presence from\n    // someone (regardless of whether or not the \"video type\" changed).\n    PARTICIPANT_VIDEO_TYPE_CHANGED: 'xmpp.video_type',\n\n    /**\n     * Indicates that the features of the participant has been changed.\n     */\n    PARTICIPANT_FEATURES_CHANGED: 'xmpp.participant_features_changed',\n    PASSWORD_REQUIRED: 'xmpp.password_required',\n\n    /**\n     * Indicates that phone number changed.\n     */\n    PHONE_NUMBER_CHANGED: 'conference.phoneNumberChanged',\n    PRESENCE_RECEIVED: 'xmpp.presence_received',\n    PRESENCE_STATUS: 'xmpp.presence_status',\n    PROMPT_FOR_LOGIN: 'xmpp.prompt_for_login',\n\n    // xmpp is connected and obtained user media\n    READY_TO_JOIN: 'xmpp.ready_to_join',\n\n    /**\n     * Indicates that recording state changed.\n     */\n    RECORDER_STATE_CHANGED: 'xmpp.recorderStateChanged',\n\n    // Designates an event indicating that we received statistics from a\n    // participant in the MUC.\n    REMOTE_STATS: 'xmpp.remote_stats',\n\n    /**\n     * Indicates that the offer / answer renegotiation has failed.\n     */\n    RENEGOTIATION_FAILED: 'xmpp.renegotiation_failed',\n    RESERVATION_ERROR: 'xmpp.room_reservation_error',\n    ROOM_CONNECT_ERROR: 'xmpp.room_connect_error',\n    ROOM_CONNECT_NOT_ALLOWED_ERROR: 'xmpp.room_connect_error.not_allowed',\n    ROOM_JOIN_ERROR: 'xmpp.room_join_error',\n    ROOM_CONNECT_MEMBERS_ONLY_ERROR: 'xmpp.room_connect_error.members_only',\n\n    /**\n     * Indicates that max users limit has been reached.\n     */\n    ROOM_MAX_USERS_ERROR: 'xmpp.room_max_users_error',\n\n    // Designates an event indicating that we sent an XMPP message to the MUC.\n    SENDING_CHAT_MESSAGE: 'xmpp.sending_chat_message',\n\n    // Designates an event indicating that we sent a private XMPP message to\n    // a specific user of the muc.\n    SENDING_PRIVATE_CHAT_MESSAGE: 'xmpp.sending_private_chat_message',\n\n    /**\n     * Event fired when we do not get our 'session-accept' acknowledged by\n     * Jicofo. It most likely means that there is serious problem with our\n     * connection or XMPP server and we should reload the conference.\n     *\n     * We have seen that to happen in BOSH requests race condition when the BOSH\n     * request table containing the 'session-accept' was discarded by Prosody.\n     * Jicofo does send the RESULT immediately without any condition, so missing\n     * packets means that most likely it has never seen our IQ.\n     */\n    SESSION_ACCEPT_TIMEOUT: 'xmpp.session_accept_timeout',\n\n    /**\n     * Event fired when speaker stats update message is received.\n     */\n    SPEAKER_STATS_RECEIVED: 'xmpp.speaker_stats_received',\n\n    /**\n     * Event fired when conference creation timestamp is received.\n     */\n    CONFERENCE_TIMESTAMP_RECEIVED: 'xmpp.conference_timestamp_received',\n\n    /**\n     * Event fired when we receive a message for AV moderation approved for the local participant.\n     */\n    AV_MODERATION_APPROVED: 'xmpp.av_moderation.approved',\n\n    /**\n     * Event fired when we receive a message for AV moderation.\n     */\n    AV_MODERATION_RECEIVED: 'xmpp.av_moderation.received',\n\n    /**\n     * Event fired when the moderation enable/disable changes.\n     */\n    AV_MODERATION_CHANGED: 'xmpp.av_moderation.changed',\n\n    /**\n     * Event fired when we receive message that a new jid was approved.\n     */\n    AV_MODERATION_PARTICIPANT_APPROVED: 'xmpp.av_moderation.participant.approved',\n\n    // Designates an event indicating that we should join the conference with\n    // audio and/or video muted.\n    START_MUTED_FROM_FOCUS: 'xmpp.start_muted_from_focus',\n\n    // Designates an event indicating that the subject of the XMPP MUC has\n    // changed.\n    SUBJECT_CHANGED: 'xmpp.subject_changed',\n\n    // FIXME: how does it belong to XMPP ? - it's detected by the PeerConnection\n    // suspending detected\n    SUSPEND_DETECTED: 'xmpp.suspend_detected',\n\n    /**\n     * Notifies for transcription status changes. The event provides the\n     * following parameters to its listeners:\n     *\n     * @param {String} status - The new status.\n     */\n    TRANSCRIPTION_STATUS_CHANGED: 'xmpp.transcription_status_changed',\n\n    /**\n     * Event fired when 'transport-info' with new ICE candidates is received.\n     */\n    TRANSPORT_INFO: 'xmpp.transportinfo.jingle',\n\n    /**\n     * Indicates that video SIP GW state changed.\n     *\n     * @param {VideoSIPGWConstants} status - Any of the following statuses:\n     * STATUS_BUSY, STATUS_AVAILABLE or STATUS_UNDEFINED.\n     */\n    VIDEO_SIP_GW_AVAILABILITY_CHANGED: 'xmpp.videoSIPGWAvailabilityChanged',\n\n    /**\n     * Indicates that video SIP GW Session state changed.\n     * The statuses are any of the following statuses:\n     * STATE_ON, STATE_OFF, STATE_PENDING, STATE_RETRYING, STATE_FAILED.\n     * {@see VideoSIPGWConstants}\n     *\n     * @param {options} event - {address, oldState, newState, displayName}.\n     */\n    VIDEO_SIP_GW_SESSION_STATE_CHANGED:\n        'xmpp.videoSIPGWSessionStateChanged',\n\n    // Designates an event indicating that the local ICE connection state has\n    // changed.\n    ICE_CONNECTION_STATE_CHANGED: 'xmpp.ice_connection_state_changed',\n\n    /**\n     * Event which is emitted when the body in an XMPP message in the MUC\n     * contains JSON\n     */\n    JSON_MESSAGE_RECEIVED: 'xmmp.json_message_received'\n};\n\nmodule.exports = XMPPEvents;\n","/**\n * The events for the conference.\n */\n\n/**\n * Event indicates that the current conference audio input switched between audio\n * input states,i.e. with or without audio input.\n */\nexport const AUDIO_INPUT_STATE_CHANGE = 'conference.audio_input_state_changed';\n\n/**\n * Indicates that authentication status changed.\n */\nexport const AUTH_STATUS_CHANGED = 'conference.auth_status_changed';\n\n/**\n * Fired just before the statistics module is disposed and it's the last chance\n * to submit some logs to the statistics service (ex. CallStats if enabled),\n * before it's disconnected.\n */\nexport const BEFORE_STATISTICS_DISPOSED = 'conference.beforeStatisticsDisposed';\n\n/**\n * Indicates that an error occured.\n */\nexport const CONFERENCE_ERROR = 'conference.error';\n\n/**\n * Indicates that conference failed.\n */\nexport const CONFERENCE_FAILED = 'conference.failed';\n\n/**\n * Indicates that conference has been joined. The event does NOT provide any\n * parameters to its listeners.\n */\nexport const CONFERENCE_JOINED = 'conference.joined';\n\n/**\n * Indicates that conference has been left.\n */\nexport const CONFERENCE_LEFT = 'conference.left';\n\n/**\n * Indicates that the conference unique identifier has been set.\n */\nexport const CONFERENCE_UNIQUE_ID_SET = 'conference.unique_id_set';\n\n/**\n * Indicates that the connection to the conference has been established\n * XXX This is currently fired whenVthe *ICE* connection enters 'connected'\n * state for the first time.\n */\nexport const CONNECTION_ESTABLISHED = 'conference.connectionEstablished';\n\n/**\n * Indicates that the connection to the conference has been interrupted for some\n * reason.\n * XXX This is currently fired when the *ICE* connection is interrupted.\n */\nexport const CONNECTION_INTERRUPTED = 'conference.connectionInterrupted';\n\n/**\n * Indicates that the connection to the conference has been restored.\n * XXX This is currently fired when the *ICE* connection is restored.\n */\nexport const CONNECTION_RESTORED = 'conference.connectionRestored';\n\n/**\n * A connection to the video bridge's data channel has been established.\n */\nexport const DATA_CHANNEL_OPENED = 'conference.dataChannelOpened';\n\n/**\n * A user has changed it display name\n */\nexport const DISPLAY_NAME_CHANGED = 'conference.displayNameChanged';\n\n/**\n * The dominant speaker was changed.\n */\nexport const DOMINANT_SPEAKER_CHANGED = 'conference.dominantSpeaker';\n\n/**\n * UTC conference timestamp when first participant joined.\n */\nexport const CONFERENCE_CREATED_TIMESTAMP = 'conference.createdTimestamp';\n\n/**\n * Indicates that DTMF support changed.\n */\nexport const DTMF_SUPPORT_CHANGED = 'conference.dtmfSupportChanged';\n\n/**\n * Indicates that a message from another participant is received on data\n * channel.\n */\nexport const ENDPOINT_MESSAGE_RECEIVED = 'conference.endpoint_message_received';\n\n/**\n * Indicates that a message for the remote endpoint statistics has been received on the bridge channel.\n */\nexport const ENDPOINT_STATS_RECEIVED = 'conference.endpoint_stats_received';\n\n/**\n * NOTE This is lib-jitsi-meet internal event and can be removed at any time !\n *\n * Event emitted when conference transits, between one to one and multiparty JVB\n * conference. If the conference switches to P2P it's neither one to one nor\n * a multiparty JVB conference, but P2P (the status argument of this event will\n * be <tt>false</tt>).\n *\n * The first argument is a boolean which carries the previous value and\n * the seconds argument is a boolean with the new status. The event is emitted\n * only if the previous and the new values are different.\n *\n * @type {string}\n */\nexport const JVB121_STATUS = 'conference.jvb121Status';\n\n/**\n * You are kicked from the conference.\n * @param {JitsiParticipant} the participant that initiated the kick.\n */\nexport const KICKED = 'conference.kicked';\n\n/**\n * Participant was kicked from the conference.\n * @param {JitsiParticipant} the participant that initiated the kick.\n * @param {JitsiParticipant} the participant that was kicked.\n */\nexport const PARTICIPANT_KICKED = 'conference.participant_kicked';\n\n/**\n * The Last N set is changed.\n *\n * @param {Array<string>|null} leavingEndpointIds the ids of all the endpoints\n * which are leaving Last N\n * @param {Array<string>|null} enteringEndpointIds the ids of all the endpoints\n * which are entering Last N\n */\nexport const LAST_N_ENDPOINTS_CHANGED = 'conference.lastNEndpointsChanged';\n\n/**\n * Indicates that the room has been locked or unlocked.\n */\nexport const LOCK_STATE_CHANGED = 'conference.lock_state_changed';\n\n/**\n * Indicates that the region of the media server (jitsi-videobridge) that we\n * are connected to changed (or was initially set).\n * @type {string} the region.\n */\nexport const SERVER_REGION_CHANGED = 'conference.server_region_changed';\n\n/**\n * An event(library-private) fired when a new media session is added to the conference.\n * @type {string}\n * @private\n */\nexport const _MEDIA_SESSION_STARTED = 'conference.media_session.started';\n\n/**\n * An event(library-private) fired when the conference switches the currently active media session.\n * @type {string}\n * @private\n */\nexport const _MEDIA_SESSION_ACTIVE_CHANGED = 'conference.media_session.active_changed';\n\n/**\n * Indicates that the conference had changed to members only enabled/disabled.\n * The first argument of this event is a <tt>boolean</tt> which when set to\n * <tt>true</tt> means that the conference is running in members only mode.\n * You may need to use Lobby if supported to ask for permissions to enter the conference.\n */\nexport const MEMBERS_ONLY_CHANGED = 'conference.membersOnlyChanged';\n\n/**\n * New text message was received.\n */\nexport const MESSAGE_RECEIVED = 'conference.messageReceived';\n\n/**\n * Event indicates that the current selected input device has no signal\n */\nexport const NO_AUDIO_INPUT = 'conference.no_audio_input';\n\n/**\n * Event indicates that the current microphone used by the conference is noisy.\n */\nexport const NOISY_MIC = 'conference.noisy_mic';\n\n/**\n * New private text message was received.\n */\nexport const PRIVATE_MESSAGE_RECEIVED = 'conference.privateMessageReceived';\n\n/**\n * Event fired when JVB sends notification about interrupted/restored user's\n * ICE connection status or we detect local problem with the video track.\n * First argument is the ID of the participant and\n * the seconds is a string indicating if the connection is currently\n * - active - the connection is active\n * - inactive - the connection is inactive, was intentionally interrupted by\n * the bridge\n * - interrupted - a network problem occurred\n * - restoring - the connection was inactive and is restoring now\n *\n * The current status value can be obtained by calling\n * JitsiParticipant.getConnectionStatus().\n */\nexport const PARTICIPANT_CONN_STATUS_CHANGED\n    = 'conference.participant_conn_status_changed';\n\n/**\n * Indicates that the features of the participant has been changed.\n */\nexport const PARTCIPANT_FEATURES_CHANGED\n    = 'conference.partcipant_features_changed';\n\n/**\n * Indicates that a the value of a specific property of a specific participant\n * has changed.\n */\nexport const PARTICIPANT_PROPERTY_CHANGED\n    = 'conference.participant_property_changed';\n\n/**\n * Indicates that the conference has switched between JVB and P2P connections.\n * The first argument of this event is a <tt>boolean</tt> which when set to\n * <tt>true</tt> means that the conference is running on the P2P connection.\n */\nexport const P2P_STATUS = 'conference.p2pStatus';\n\n/**\n * Indicates that phone number changed.\n */\nexport const PHONE_NUMBER_CHANGED = 'conference.phoneNumberChanged';\n\n/**\n * The conference properties changed.\n * @type {string}\n */\nexport const PROPERTIES_CHANGED = 'conference.propertiesChanged';\n\n/**\n * Indicates that recording state changed.\n */\nexport const RECORDER_STATE_CHANGED = 'conference.recorderStateChanged';\n\n/**\n * Indicates that video SIP GW state changed.\n * @param {VideoSIPGWConstants} status.\n */\nexport const VIDEO_SIP_GW_AVAILABILITY_CHANGED\n    = 'conference.videoSIPGWAvailabilityChanged';\n\n/**\n * Indicates that video SIP GW Session state changed.\n * @param {options} event - {\n *     {string} address,\n *     {VideoSIPGWConstants} oldState,\n *     {VideoSIPGWConstants} newState,\n *     {string} displayName}\n * }.\n */\nexport const VIDEO_SIP_GW_SESSION_STATE_CHANGED\n    = 'conference.videoSIPGWSessionStateChanged';\n\n/**\n * Indicates that start muted settings changed.\n */\nexport const START_MUTED_POLICY_CHANGED\n    = 'conference.start_muted_policy_changed';\n\n/**\n * Indicates that the local user has started muted.\n */\nexport const STARTED_MUTED = 'conference.started_muted';\n\n/**\n * Indicates that subject of the conference has changed.\n */\nexport const SUBJECT_CHANGED = 'conference.subjectChanged';\n\n/**\n * Indicates that DTMF support changed.\n */\nexport const SUSPEND_DETECTED = 'conference.suspendDetected';\n\n/**\n * Event indicates that local user is talking while he muted himself\n */\nexport const TALK_WHILE_MUTED = 'conference.talk_while_muted';\n\n/**\n * A new media track was added to the conference. The event provides the\n * following parameters to its listeners:\n *\n * @param {JitsiTrack} track the added JitsiTrack\n */\nexport const TRACK_ADDED = 'conference.trackAdded';\n\n/**\n * Audio levels of a media track ( attached to the conference) was changed.\n */\nexport const TRACK_AUDIO_LEVEL_CHANGED = 'conference.audioLevelsChanged';\n\n/**\n * A media track ( attached to the conference) mute status was changed.\n * @param {JitsiParticipant|null} the participant that initiated the mute\n * if it is a remote mute.\n */\nexport const TRACK_MUTE_CHANGED = 'conference.trackMuteChanged';\n\n/**\n * The media track was removed from the conference. The event provides the\n * following parameters to its listeners:\n *\n * @param {JitsiTrack} track the removed JitsiTrack\n */\nexport const TRACK_REMOVED = 'conference.trackRemoved';\n\n/**\n * Notifies for transcription status changes. The event provides the\n * following parameters to its listeners:\n *\n * @param {String} status - The new status.\n */\nexport const TRANSCRIPTION_STATUS_CHANGED\n    = 'conference.transcriptionStatusChanged';\n\n\n/**\n * A new user joined the conference.\n */\nexport const USER_JOINED = 'conference.userJoined';\n\n/**\n * A user has left the conference.\n */\nexport const USER_LEFT = 'conference.userLeft';\n\n/**\n * User role changed.\n */\nexport const USER_ROLE_CHANGED = 'conference.roleChanged';\n\n/**\n * User status changed.\n */\nexport const USER_STATUS_CHANGED = 'conference.statusChanged';\n\n/**\n * Event indicates that the bot participant type changed.\n */\nexport const BOT_TYPE_CHANGED = 'conference.bot_type_changed';\n\n/**\n * A new user joined the lobby room.\n */\nexport const LOBBY_USER_JOINED = 'conference.lobby.userJoined';\n\n/**\n * A user from the lobby room has been update.\n */\nexport const LOBBY_USER_UPDATED = 'conference.lobby.userUpdated';\n\n/**\n * A user left the lobby room.\n */\nexport const LOBBY_USER_LEFT = 'conference.lobby.userLeft';\n\n/**\n * The local participant was approved to be able to unmute.\n * @param {options} event - {\n *     {MediaType} mediaType\n * }.\n */\nexport const AV_MODERATION_APPROVED = 'conference.av_moderation.approved';\n\n/**\n * AV Moderation was enabled/disabled. The actor is the participant that is currently in the meeting,\n * or undefined if that participant has left the meeting.\n *\n * @param {options} event - {\n *     {boolean} enabled,\n *     {MediaType} mediaType,\n *     {JitsiParticipant} actor\n * }.\n */\nexport const AV_MODERATION_CHANGED = 'conference.av_moderation.changed';\n\n/**\n * AV Moderation, report for user being approved to unmute.\n * @param {options} event - {\n *     {JitsiParticipant} participant,\n *     {MediaType} mediaType\n * }.\n */\nexport const AV_MODERATION_PARTICIPANT_APPROVED = 'conference.av_moderation.participant.approved';\n","(function (global, factory) {\n            typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n            typeof define === 'function' && define.amd ? define(factory) :\n            (global = global || self, global.strophe = factory());\n}(this, function () { 'use strict';\n\n            var global$1 = (typeof global !== \"undefined\" ? global :\n                        typeof self !== \"undefined\" ? self :\n                        typeof window !== \"undefined\" ? window : {});\n\n            function _typeof(obj) {\n              if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n                _typeof = function (obj) {\n                  return typeof obj;\n                };\n              } else {\n                _typeof = function (obj) {\n                  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n                };\n              }\n\n              return _typeof(obj);\n            }\n\n            function _toConsumableArray(arr) {\n              return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n            }\n\n            function _arrayWithoutHoles(arr) {\n              if (Array.isArray(arr)) {\n                for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n                return arr2;\n              }\n            }\n\n            function _iterableToArray(iter) {\n              if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n            }\n\n            function _nonIterableSpread() {\n              throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n            }\n\n            /*\n             * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n             * Digest Algorithm, as defined in RFC 1321.\n             * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.\n             * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n             * Distributed under the BSD License\n             * See http://pajhome.org.uk/crypt/md5 for more info.\n             */\n\n            /*\n             * Everything that isn't used by Strophe has been stripped here!\n             */\n\n            /*\n             * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n             * to work around bugs in some JS interpreters.\n             */\n            var safe_add = function safe_add(x, y) {\n              var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n              var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n              return msw << 16 | lsw & 0xFFFF;\n            };\n            /*\n             * Bitwise rotate a 32-bit number to the left.\n             */\n\n\n            var bit_rol = function bit_rol(num, cnt) {\n              return num << cnt | num >>> 32 - cnt;\n            };\n            /*\n             * Convert a string to an array of little-endian words\n             */\n\n\n            var str2binl = function str2binl(str) {\n              if (typeof str !== \"string\") {\n                throw new Error(\"str2binl was passed a non-string\");\n              }\n\n              var bin = [];\n\n              for (var i = 0; i < str.length * 8; i += 8) {\n                bin[i >> 5] |= (str.charCodeAt(i / 8) & 255) << i % 32;\n              }\n\n              return bin;\n            };\n            /*\n             * Convert an array of little-endian words to a string\n             */\n\n\n            var binl2str = function binl2str(bin) {\n              var str = \"\";\n\n              for (var i = 0; i < bin.length * 32; i += 8) {\n                str += String.fromCharCode(bin[i >> 5] >>> i % 32 & 255);\n              }\n\n              return str;\n            };\n            /*\n             * Convert an array of little-endian words to a hex string.\n             */\n\n\n            var binl2hex = function binl2hex(binarray) {\n              var hex_tab = \"0123456789abcdef\";\n              var str = \"\";\n\n              for (var i = 0; i < binarray.length * 4; i++) {\n                str += hex_tab.charAt(binarray[i >> 2] >> i % 4 * 8 + 4 & 0xF) + hex_tab.charAt(binarray[i >> 2] >> i % 4 * 8 & 0xF);\n              }\n\n              return str;\n            };\n            /*\n             * These functions implement the four basic operations the algorithm uses.\n             */\n\n\n            var md5_cmn = function md5_cmn(q, a, b, x, s, t) {\n              return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b);\n            };\n\n            var md5_ff = function md5_ff(a, b, c, d, x, s, t) {\n              return md5_cmn(b & c | ~b & d, a, b, x, s, t);\n            };\n\n            var md5_gg = function md5_gg(a, b, c, d, x, s, t) {\n              return md5_cmn(b & d | c & ~d, a, b, x, s, t);\n            };\n\n            var md5_hh = function md5_hh(a, b, c, d, x, s, t) {\n              return md5_cmn(b ^ c ^ d, a, b, x, s, t);\n            };\n\n            var md5_ii = function md5_ii(a, b, c, d, x, s, t) {\n              return md5_cmn(c ^ (b | ~d), a, b, x, s, t);\n            };\n            /*\n             * Calculate the MD5 of an array of little-endian words, and a bit length\n             */\n\n\n            var core_md5 = function core_md5(x, len) {\n              /* append padding */\n              x[len >> 5] |= 0x80 << len % 32;\n              x[(len + 64 >>> 9 << 4) + 14] = len;\n              var a = 1732584193;\n              var b = -271733879;\n              var c = -1732584194;\n              var d = 271733878;\n              var olda, oldb, oldc, oldd;\n\n              for (var i = 0; i < x.length; i += 16) {\n                olda = a;\n                oldb = b;\n                oldc = c;\n                oldd = d;\n                a = md5_ff(a, b, c, d, x[i + 0], 7, -680876936);\n                d = md5_ff(d, a, b, c, x[i + 1], 12, -389564586);\n                c = md5_ff(c, d, a, b, x[i + 2], 17, 606105819);\n                b = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330);\n                a = md5_ff(a, b, c, d, x[i + 4], 7, -176418897);\n                d = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426);\n                c = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341);\n                b = md5_ff(b, c, d, a, x[i + 7], 22, -45705983);\n                a = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416);\n                d = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417);\n                c = md5_ff(c, d, a, b, x[i + 10], 17, -42063);\n                b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);\n                a = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682);\n                d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101);\n                c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);\n                b = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329);\n                a = md5_gg(a, b, c, d, x[i + 1], 5, -165796510);\n                d = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632);\n                c = md5_gg(c, d, a, b, x[i + 11], 14, 643717713);\n                b = md5_gg(b, c, d, a, x[i + 0], 20, -373897302);\n                a = md5_gg(a, b, c, d, x[i + 5], 5, -701558691);\n                d = md5_gg(d, a, b, c, x[i + 10], 9, 38016083);\n                c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335);\n                b = md5_gg(b, c, d, a, x[i + 4], 20, -405537848);\n                a = md5_gg(a, b, c, d, x[i + 9], 5, 568446438);\n                d = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690);\n                c = md5_gg(c, d, a, b, x[i + 3], 14, -187363961);\n                b = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501);\n                a = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467);\n                d = md5_gg(d, a, b, c, x[i + 2], 9, -51403784);\n                c = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473);\n                b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);\n                a = md5_hh(a, b, c, d, x[i + 5], 4, -378558);\n                d = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463);\n                c = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562);\n                b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556);\n                a = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060);\n                d = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353);\n                c = md5_hh(c, d, a, b, x[i + 7], 16, -155497632);\n                b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);\n                a = md5_hh(a, b, c, d, x[i + 13], 4, 681279174);\n                d = md5_hh(d, a, b, c, x[i + 0], 11, -358537222);\n                c = md5_hh(c, d, a, b, x[i + 3], 16, -722521979);\n                b = md5_hh(b, c, d, a, x[i + 6], 23, 76029189);\n                a = md5_hh(a, b, c, d, x[i + 9], 4, -640364487);\n                d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835);\n                c = md5_hh(c, d, a, b, x[i + 15], 16, 530742520);\n                b = md5_hh(b, c, d, a, x[i + 2], 23, -995338651);\n                a = md5_ii(a, b, c, d, x[i + 0], 6, -198630844);\n                d = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415);\n                c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);\n                b = md5_ii(b, c, d, a, x[i + 5], 21, -57434055);\n                a = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571);\n                d = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606);\n                c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523);\n                b = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799);\n                a = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359);\n                d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744);\n                c = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380);\n                b = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649);\n                a = md5_ii(a, b, c, d, x[i + 4], 6, -145523070);\n                d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);\n                c = md5_ii(c, d, a, b, x[i + 2], 15, 718787259);\n                b = md5_ii(b, c, d, a, x[i + 9], 21, -343485551);\n                a = safe_add(a, olda);\n                b = safe_add(b, oldb);\n                c = safe_add(c, oldc);\n                d = safe_add(d, oldd);\n              }\n\n              return [a, b, c, d];\n            };\n            /*\n             * These are the functions you'll usually want to call.\n             * They take string arguments and return either hex or base-64 encoded\n             * strings.\n             */\n\n\n            var MD5 = {\n              hexdigest: function hexdigest(s) {\n                return binl2hex(core_md5(str2binl(s), s.length * 8));\n              },\n              hash: function hash(s) {\n                return binl2str(core_md5(str2binl(s), s.length * 8));\n              }\n            };\n\n            /*\n             * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n             * in FIPS PUB 180-1\n             * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n             * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n             * Distributed under the BSD License\n             * See http://pajhome.org.uk/crypt/md5 for details.\n             */\n\n            /* global define */\n\n            /* Some functions and variables have been stripped for use with Strophe */\n\n            /*\n             * Calculate the SHA-1 of an array of big-endian words, and a bit length\n             */\n            function core_sha1(x, len) {\n              /* append padding */\n              x[len >> 5] |= 0x80 << 24 - len % 32;\n              x[(len + 64 >> 9 << 4) + 15] = len;\n              var w = new Array(80);\n              var a = 1732584193;\n              var b = -271733879;\n              var c = -1732584194;\n              var d = 271733878;\n              var e = -1009589776;\n              var i, j, t, olda, oldb, oldc, oldd, olde;\n\n              for (i = 0; i < x.length; i += 16) {\n                olda = a;\n                oldb = b;\n                oldc = c;\n                oldd = d;\n                olde = e;\n\n                for (j = 0; j < 80; j++) {\n                  if (j < 16) {\n                    w[j] = x[i + j];\n                  } else {\n                    w[j] = rol(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n                  }\n\n                  t = safe_add$1(safe_add$1(rol(a, 5), sha1_ft(j, b, c, d)), safe_add$1(safe_add$1(e, w[j]), sha1_kt(j)));\n                  e = d;\n                  d = c;\n                  c = rol(b, 30);\n                  b = a;\n                  a = t;\n                }\n\n                a = safe_add$1(a, olda);\n                b = safe_add$1(b, oldb);\n                c = safe_add$1(c, oldc);\n                d = safe_add$1(d, oldd);\n                e = safe_add$1(e, olde);\n              }\n\n              return [a, b, c, d, e];\n            }\n            /*\n             * Perform the appropriate triplet combination function for the current\n             * iteration\n             */\n\n\n            function sha1_ft(t, b, c, d) {\n              if (t < 20) {\n                return b & c | ~b & d;\n              }\n\n              if (t < 40) {\n                return b ^ c ^ d;\n              }\n\n              if (t < 60) {\n                return b & c | b & d | c & d;\n              }\n\n              return b ^ c ^ d;\n            }\n            /*\n             * Determine the appropriate additive constant for the current iteration\n             */\n\n\n            function sha1_kt(t) {\n              return t < 20 ? 1518500249 : t < 40 ? 1859775393 : t < 60 ? -1894007588 : -899497514;\n            }\n            /*\n             * Calculate the HMAC-SHA1 of a key and some data\n             */\n\n\n            function core_hmac_sha1(key, data) {\n              var bkey = str2binb(key);\n\n              if (bkey.length > 16) {\n                bkey = core_sha1(bkey, key.length * 8);\n              }\n\n              var ipad = new Array(16),\n                  opad = new Array(16);\n\n              for (var i = 0; i < 16; i++) {\n                ipad[i] = bkey[i] ^ 0x36363636;\n                opad[i] = bkey[i] ^ 0x5C5C5C5C;\n              }\n\n              var hash = core_sha1(ipad.concat(str2binb(data)), 512 + data.length * 8);\n              return core_sha1(opad.concat(hash), 512 + 160);\n            }\n            /*\n             * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n             * to work around bugs in some JS interpreters.\n             */\n\n\n            function safe_add$1(x, y) {\n              var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n              var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n              return msw << 16 | lsw & 0xFFFF;\n            }\n            /*\n             * Bitwise rotate a 32-bit number to the left.\n             */\n\n\n            function rol(num, cnt) {\n              return num << cnt | num >>> 32 - cnt;\n            }\n            /*\n             * Convert an 8-bit or 16-bit string to an array of big-endian words\n             * In 8-bit function, characters >255 have their hi-byte silently ignored.\n             */\n\n\n            function str2binb(str) {\n              var bin = [];\n              var mask = 255;\n\n              for (var i = 0; i < str.length * 8; i += 8) {\n                bin[i >> 5] |= (str.charCodeAt(i / 8) & mask) << 24 - i % 32;\n              }\n\n              return bin;\n            }\n            /*\n             * Convert an array of big-endian words to a base-64 string\n             */\n\n\n            function binb2b64(binarray) {\n              var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n              var str = \"\";\n              var triplet, j;\n\n              for (var i = 0; i < binarray.length * 4; i += 3) {\n                triplet = (binarray[i >> 2] >> 8 * (3 - i % 4) & 0xFF) << 16 | (binarray[i + 1 >> 2] >> 8 * (3 - (i + 1) % 4) & 0xFF) << 8 | binarray[i + 2 >> 2] >> 8 * (3 - (i + 2) % 4) & 0xFF;\n\n                for (j = 0; j < 4; j++) {\n                  if (i * 8 + j * 6 > binarray.length * 32) {\n                    str += \"=\";\n                  } else {\n                    str += tab.charAt(triplet >> 6 * (3 - j) & 0x3F);\n                  }\n                }\n              }\n\n              return str;\n            }\n            /*\n             * Convert an array of big-endian words to a string\n             */\n\n\n            function binb2str(bin) {\n              var str = \"\";\n              var mask = 255;\n\n              for (var i = 0; i < bin.length * 32; i += 8) {\n                str += String.fromCharCode(bin[i >> 5] >>> 24 - i % 32 & mask);\n              }\n\n              return str;\n            }\n            /*\n             * These are the functions you'll usually want to call\n             * They take string arguments and return either hex or base-64 encoded strings\n             */\n\n\n            var SHA1 = {\n              b64_hmac_sha1: function b64_hmac_sha1(key, data) {\n                return binb2b64(core_hmac_sha1(key, data));\n              },\n              b64_sha1: function b64_sha1(s) {\n                return binb2b64(core_sha1(str2binb(s), s.length * 8));\n              },\n              binb2str: binb2str,\n              core_hmac_sha1: core_hmac_sha1,\n              str_hmac_sha1: function str_hmac_sha1(key, data) {\n                return binb2str(core_hmac_sha1(key, data));\n              },\n              str_sha1: function str_sha1(s) {\n                return binb2str(core_sha1(str2binb(s), s.length * 8));\n              }\n            };\n\n            var utils = {\n              utf16to8: function utf16to8(str) {\n                var i, c;\n                var out = \"\";\n                var len = str.length;\n\n                for (i = 0; i < len; i++) {\n                  c = str.charCodeAt(i);\n\n                  if (c >= 0x0000 && c <= 0x007F) {\n                    out += str.charAt(i);\n                  } else if (c > 0x07FF) {\n                    out += String.fromCharCode(0xE0 | c >> 12 & 0x0F);\n                    out += String.fromCharCode(0x80 | c >> 6 & 0x3F);\n                    out += String.fromCharCode(0x80 | c >> 0 & 0x3F);\n                  } else {\n                    out += String.fromCharCode(0xC0 | c >> 6 & 0x1F);\n                    out += String.fromCharCode(0x80 | c >> 0 & 0x3F);\n                  }\n                }\n\n                return out;\n              },\n              addCookies: function addCookies(cookies) {\n                /* Parameters:\n                 *  (Object) cookies - either a map of cookie names\n                 *    to string values or to maps of cookie values.\n                 *\n                 * For example:\n                 * { \"myCookie\": \"1234\" }\n                 *\n                 * or:\n                 * { \"myCookie\": {\n                 *      \"value\": \"1234\",\n                 *      \"domain\": \".example.org\",\n                 *      \"path\": \"/\",\n                 *      \"expires\": expirationDate\n                 *      }\n                 *  }\n                 *\n                 *  These values get passed to Strophe.Connection via\n                 *   options.cookies\n                 */\n                cookies = cookies || {};\n\n                for (var cookieName in cookies) {\n                  if (Object.prototype.hasOwnProperty.call(cookies, cookieName)) {\n                    var expires = '';\n                    var domain = '';\n                    var path = '';\n                    var cookieObj = cookies[cookieName];\n                    var isObj = _typeof(cookieObj) === \"object\";\n                    var cookieValue = escape(unescape(isObj ? cookieObj.value : cookieObj));\n\n                    if (isObj) {\n                      expires = cookieObj.expires ? \";expires=\" + cookieObj.expires : '';\n                      domain = cookieObj.domain ? \";domain=\" + cookieObj.domain : '';\n                      path = cookieObj.path ? \";path=\" + cookieObj.path : '';\n                    }\n\n                    document.cookie = cookieName + '=' + cookieValue + expires + domain + path;\n                  }\n                }\n              }\n            };\n\n            /** Function: $build\n             *  Create a Strophe.Builder.\n             *  This is an alias for 'new Strophe.Builder(name, attrs)'.\n             *\n             *  Parameters:\n             *    (String) name - The root element name.\n             *    (Object) attrs - The attributes for the root element in object notation.\n             *\n             *  Returns:\n             *    A new Strophe.Builder object.\n             */\n\n            function $build(name, attrs) {\n              return new Strophe.Builder(name, attrs);\n            }\n            /** Function: $msg\n             *  Create a Strophe.Builder with a <message/> element as the root.\n             *\n             *  Parameters:\n             *    (Object) attrs - The <message/> element attributes in object notation.\n             *\n             *  Returns:\n             *    A new Strophe.Builder object.\n             */\n\n\n            function $msg(attrs) {\n              return new Strophe.Builder(\"message\", attrs);\n            }\n            /** Function: $iq\n             *  Create a Strophe.Builder with an <iq/> element as the root.\n             *\n             *  Parameters:\n             *    (Object) attrs - The <iq/> element attributes in object notation.\n             *\n             *  Returns:\n             *    A new Strophe.Builder object.\n             */\n\n\n            function $iq(attrs) {\n              return new Strophe.Builder(\"iq\", attrs);\n            }\n            /** Function: $pres\n             *  Create a Strophe.Builder with a <presence/> element as the root.\n             *\n             *  Parameters:\n             *    (Object) attrs - The <presence/> element attributes in object notation.\n             *\n             *  Returns:\n             *    A new Strophe.Builder object.\n             */\n\n\n            function $pres(attrs) {\n              return new Strophe.Builder(\"presence\", attrs);\n            }\n            /** Class: Strophe\n             *  An object container for all Strophe library functions.\n             *\n             *  This class is just a container for all the objects and constants\n             *  used in the library.  It is not meant to be instantiated, but to\n             *  provide a namespace for library objects, constants, and functions.\n             */\n\n\n            var Strophe = {\n              /** Constant: VERSION */\n              VERSION: \"@VERSION@\",\n\n              /** Constants: XMPP Namespace Constants\n               *  Common namespace constants from the XMPP RFCs and XEPs.\n               *\n               *  NS.HTTPBIND - HTTP BIND namespace from XEP 124.\n               *  NS.BOSH - BOSH namespace from XEP 206.\n               *  NS.CLIENT - Main XMPP client namespace.\n               *  NS.AUTH - Legacy authentication namespace.\n               *  NS.ROSTER - Roster operations namespace.\n               *  NS.PROFILE - Profile namespace.\n               *  NS.DISCO_INFO - Service discovery info namespace from XEP 30.\n               *  NS.DISCO_ITEMS - Service discovery items namespace from XEP 30.\n               *  NS.MUC - Multi-User Chat namespace from XEP 45.\n               *  NS.SASL - XMPP SASL namespace from RFC 3920.\n               *  NS.STREAM - XMPP Streams namespace from RFC 3920.\n               *  NS.BIND - XMPP Binding namespace from RFC 3920 and RFC 6120.\n               *  NS.SESSION - XMPP Session namespace from RFC 3920.\n               *  NS.XHTML_IM - XHTML-IM namespace from XEP 71.\n               *  NS.XHTML - XHTML body namespace from XEP 71.\n               */\n              NS: {\n                HTTPBIND: \"http://jabber.org/protocol/httpbind\",\n                BOSH: \"urn:xmpp:xbosh\",\n                CLIENT: \"jabber:client\",\n                AUTH: \"jabber:iq:auth\",\n                ROSTER: \"jabber:iq:roster\",\n                PROFILE: \"jabber:iq:profile\",\n                DISCO_INFO: \"http://jabber.org/protocol/disco#info\",\n                DISCO_ITEMS: \"http://jabber.org/protocol/disco#items\",\n                MUC: \"http://jabber.org/protocol/muc\",\n                SASL: \"urn:ietf:params:xml:ns:xmpp-sasl\",\n                STREAM: \"http://etherx.jabber.org/streams\",\n                FRAMING: \"urn:ietf:params:xml:ns:xmpp-framing\",\n                BIND: \"urn:ietf:params:xml:ns:xmpp-bind\",\n                SESSION: \"urn:ietf:params:xml:ns:xmpp-session\",\n                VERSION: \"jabber:iq:version\",\n                STANZAS: \"urn:ietf:params:xml:ns:xmpp-stanzas\",\n                XHTML_IM: \"http://jabber.org/protocol/xhtml-im\",\n                XHTML: \"http://www.w3.org/1999/xhtml\"\n              },\n\n              /** Constants: XHTML_IM Namespace\n               *  contains allowed tags, tag attributes, and css properties.\n               *  Used in the createHtml function to filter incoming html into the allowed XHTML-IM subset.\n               *  See http://xmpp.org/extensions/xep-0071.html#profile-summary for the list of recommended\n               *  allowed tags and their attributes.\n               */\n              XHTML: {\n                tags: ['a', 'blockquote', 'br', 'cite', 'em', 'img', 'li', 'ol', 'p', 'span', 'strong', 'ul', 'body'],\n                attributes: {\n                  'a': ['href'],\n                  'blockquote': ['style'],\n                  'br': [],\n                  'cite': ['style'],\n                  'em': [],\n                  'img': ['src', 'alt', 'style', 'height', 'width'],\n                  'li': ['style'],\n                  'ol': ['style'],\n                  'p': ['style'],\n                  'span': ['style'],\n                  'strong': [],\n                  'ul': ['style'],\n                  'body': []\n                },\n                css: ['background-color', 'color', 'font-family', 'font-size', 'font-style', 'font-weight', 'margin-left', 'margin-right', 'text-align', 'text-decoration'],\n\n                /** Function: XHTML.validTag\n                 *\n                 * Utility method to determine whether a tag is allowed\n                 * in the XHTML_IM namespace.\n                 *\n                 * XHTML tag names are case sensitive and must be lower case.\n                 */\n                validTag: function validTag(tag) {\n                  for (var i = 0; i < Strophe.XHTML.tags.length; i++) {\n                    if (tag === Strophe.XHTML.tags[i]) {\n                      return true;\n                    }\n                  }\n\n                  return false;\n                },\n\n                /** Function: XHTML.validAttribute\n                 *\n                 * Utility method to determine whether an attribute is allowed\n                 * as recommended per XEP-0071\n                 *\n                 * XHTML attribute names are case sensitive and must be lower case.\n                 */\n                validAttribute: function validAttribute(tag, attribute) {\n                  if (typeof Strophe.XHTML.attributes[tag] !== 'undefined' && Strophe.XHTML.attributes[tag].length > 0) {\n                    for (var i = 0; i < Strophe.XHTML.attributes[tag].length; i++) {\n                      if (attribute === Strophe.XHTML.attributes[tag][i]) {\n                        return true;\n                      }\n                    }\n                  }\n\n                  return false;\n                },\n                validCSS: function validCSS(style) {\n                  for (var i = 0; i < Strophe.XHTML.css.length; i++) {\n                    if (style === Strophe.XHTML.css[i]) {\n                      return true;\n                    }\n                  }\n\n                  return false;\n                }\n              },\n\n              /** Constants: Connection Status Constants\n               *  Connection status constants for use by the connection handler\n               *  callback.\n               *\n               *  Status.ERROR - An error has occurred\n               *  Status.CONNECTING - The connection is currently being made\n               *  Status.CONNFAIL - The connection attempt failed\n               *  Status.AUTHENTICATING - The connection is authenticating\n               *  Status.AUTHFAIL - The authentication attempt failed\n               *  Status.CONNECTED - The connection has succeeded\n               *  Status.DISCONNECTED - The connection has been terminated\n               *  Status.DISCONNECTING - The connection is currently being terminated\n               *  Status.ATTACHED - The connection has been attached\n               *  Status.REDIRECT - The connection has been redirected\n               *  Status.CONNTIMEOUT - The connection has timed out\n               */\n              Status: {\n                ERROR: 0,\n                CONNECTING: 1,\n                CONNFAIL: 2,\n                AUTHENTICATING: 3,\n                AUTHFAIL: 4,\n                CONNECTED: 5,\n                DISCONNECTED: 6,\n                DISCONNECTING: 7,\n                ATTACHED: 8,\n                REDIRECT: 9,\n                CONNTIMEOUT: 10,\n                BINDREQUIRED: 11\n              },\n              ErrorCondition: {\n                BAD_FORMAT: \"bad-format\",\n                CONFLICT: \"conflict\",\n                MISSING_JID_NODE: \"x-strophe-bad-non-anon-jid\",\n                NO_AUTH_MECH: \"no-auth-mech\",\n                UNKNOWN_REASON: \"unknown\"\n              },\n\n              /** Constants: Log Level Constants\n               *  Logging level indicators.\n               *\n               *  LogLevel.DEBUG - Debug output\n               *  LogLevel.INFO - Informational output\n               *  LogLevel.WARN - Warnings\n               *  LogLevel.ERROR - Errors\n               *  LogLevel.FATAL - Fatal errors\n               */\n              LogLevel: {\n                DEBUG: 0,\n                INFO: 1,\n                WARN: 2,\n                ERROR: 3,\n                FATAL: 4\n              },\n\n              /** PrivateConstants: DOM Element Type Constants\n               *  DOM element types.\n               *\n               *  ElementType.NORMAL - Normal element.\n               *  ElementType.TEXT - Text data element.\n               *  ElementType.FRAGMENT - XHTML fragment element.\n               */\n              ElementType: {\n                NORMAL: 1,\n                TEXT: 3,\n                CDATA: 4,\n                FRAGMENT: 11\n              },\n\n              /** PrivateConstants: Timeout Values\n               *  Timeout values for error states.  These values are in seconds.\n               *  These should not be changed unless you know exactly what you are\n               *  doing.\n               *\n               *  TIMEOUT - Timeout multiplier. A waiting request will be considered\n               *      failed after Math.floor(TIMEOUT * wait) seconds have elapsed.\n               *      This defaults to 1.1, and with default wait, 66 seconds.\n               *  SECONDARY_TIMEOUT - Secondary timeout multiplier. In cases where\n               *      Strophe can detect early failure, it will consider the request\n               *      failed if it doesn't return after\n               *      Math.floor(SECONDARY_TIMEOUT * wait) seconds have elapsed.\n               *      This defaults to 0.1, and with default wait, 6 seconds.\n               */\n              TIMEOUT: 1.1,\n              SECONDARY_TIMEOUT: 0.1,\n\n              /** Function: addNamespace\n               *  This function is used to extend the current namespaces in\n               *  Strophe.NS.  It takes a key and a value with the key being the\n               *  name of the new namespace, with its actual value.\n               *  For example:\n               *  Strophe.addNamespace('PUBSUB', \"http://jabber.org/protocol/pubsub\");\n               *\n               *  Parameters:\n               *    (String) name - The name under which the namespace will be\n               *      referenced under Strophe.NS\n               *    (String) value - The actual namespace.\n               */\n              addNamespace: function addNamespace(name, value) {\n                Strophe.NS[name] = value;\n              },\n\n              /** Function: forEachChild\n               *  Map a function over some or all child elements of a given element.\n               *\n               *  This is a small convenience function for mapping a function over\n               *  some or all of the children of an element.  If elemName is null, all\n               *  children will be passed to the function, otherwise only children\n               *  whose tag names match elemName will be passed.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The element to operate on.\n               *    (String) elemName - The child element tag name filter.\n               *    (Function) func - The function to apply to each child.  This\n               *      function should take a single argument, a DOM element.\n               */\n              forEachChild: function forEachChild(elem, elemName, func) {\n                for (var i = 0; i < elem.childNodes.length; i++) {\n                  var childNode = elem.childNodes[i];\n\n                  if (childNode.nodeType === Strophe.ElementType.NORMAL && (!elemName || this.isTagEqual(childNode, elemName))) {\n                    func(childNode);\n                  }\n                }\n              },\n\n              /** Function: isTagEqual\n               *  Compare an element's tag name with a string.\n               *\n               *  This function is case sensitive.\n               *\n               *  Parameters:\n               *    (XMLElement) el - A DOM element.\n               *    (String) name - The element name.\n               *\n               *  Returns:\n               *    true if the element's tag name matches _el_, and false\n               *    otherwise.\n               */\n              isTagEqual: function isTagEqual(el, name) {\n                return el.tagName === name;\n              },\n\n              /** PrivateVariable: _xmlGenerator\n               *  _Private_ variable that caches a DOM document to\n               *  generate elements.\n               */\n              _xmlGenerator: null,\n\n              /** PrivateFunction: _makeGenerator\n               *  _Private_ function that creates a dummy XML DOM document to serve as\n               *  an element and text node generator.\n               */\n              _makeGenerator: function _makeGenerator() {\n                var doc; // IE9 does implement createDocument(); however, using it will cause the browser to leak memory on page unload.\n                // Here, we test for presence of createDocument() plus IE's proprietary documentMode attribute, which would be\n                // less than 10 in the case of IE9 and below.\n\n                if (document.implementation.createDocument === undefined || document.implementation.createDocument && document.documentMode && document.documentMode < 10) {\n                  doc = this._getIEXmlDom();\n                  doc.appendChild(doc.createElement('strophe'));\n                } else {\n                  doc = document.implementation.createDocument('jabber:client', 'strophe', null);\n                }\n\n                return doc;\n              },\n\n              /** Function: xmlGenerator\n               *  Get the DOM document to generate elements.\n               *\n               *  Returns:\n               *    The currently used DOM document.\n               */\n              xmlGenerator: function xmlGenerator() {\n                if (!Strophe._xmlGenerator) {\n                  Strophe._xmlGenerator = Strophe._makeGenerator();\n                }\n\n                return Strophe._xmlGenerator;\n              },\n\n              /** PrivateFunction: _getIEXmlDom\n               *  Gets IE xml doc object\n               *\n               *  Returns:\n               *    A Microsoft XML DOM Object\n               *  See Also:\n               *    http://msdn.microsoft.com/en-us/library/ms757837%28VS.85%29.aspx\n               */\n              _getIEXmlDom: function _getIEXmlDom() {\n                var doc = null;\n                var docStrings = [\"Msxml2.DOMDocument.6.0\", \"Msxml2.DOMDocument.5.0\", \"Msxml2.DOMDocument.4.0\", \"MSXML2.DOMDocument.3.0\", \"MSXML2.DOMDocument\", \"MSXML.DOMDocument\", \"Microsoft.XMLDOM\"];\n\n                for (var d = 0; d < docStrings.length; d++) {\n                  if (doc === null) {\n                    try {\n                      doc = new ActiveXObject(docStrings[d]);\n                    } catch (e) {\n                      doc = null;\n                    }\n                  } else {\n                    break;\n                  }\n                }\n\n                return doc;\n              },\n\n              /** Function: xmlElement\n               *  Create an XML DOM element.\n               *\n               *  This function creates an XML DOM element correctly across all\n               *  implementations. Note that these are not HTML DOM elements, which\n               *  aren't appropriate for XMPP stanzas.\n               *\n               *  Parameters:\n               *    (String) name - The name for the element.\n               *    (Array|Object) attrs - An optional array or object containing\n               *      key/value pairs to use as element attributes. The object should\n               *      be in the format {'key': 'value'} or {key: 'value'}. The array\n               *      should have the format [['key1', 'value1'], ['key2', 'value2']].\n               *    (String) text - The text child data for the element.\n               *\n               *  Returns:\n               *    A new XML DOM element.\n               */\n              xmlElement: function xmlElement(name) {\n                if (!name) {\n                  return null;\n                }\n\n                var node = Strophe.xmlGenerator().createElement(name); // FIXME: this should throw errors if args are the wrong type or\n                // there are more than two optional args\n\n                for (var a = 1; a < arguments.length; a++) {\n                  var arg = arguments[a];\n\n                  if (!arg) {\n                    continue;\n                  }\n\n                  if (typeof arg === \"string\" || typeof arg === \"number\") {\n                    node.appendChild(Strophe.xmlTextNode(arg));\n                  } else if (_typeof(arg) === \"object\" && typeof arg.sort === \"function\") {\n                    for (var i = 0; i < arg.length; i++) {\n                      var attr = arg[i];\n\n                      if (_typeof(attr) === \"object\" && typeof attr.sort === \"function\" && attr[1] !== undefined && attr[1] !== null) {\n                        node.setAttribute(attr[0], attr[1]);\n                      }\n                    }\n                  } else if (_typeof(arg) === \"object\") {\n                    for (var k in arg) {\n                      if (Object.prototype.hasOwnProperty.call(arg, k) && arg[k] !== undefined && arg[k] !== null) {\n                        node.setAttribute(k, arg[k]);\n                      }\n                    }\n                  }\n                }\n\n                return node;\n              },\n\n              /*  Function: xmlescape\n               *  Excapes invalid xml characters.\n               *\n               *  Parameters:\n               *     (String) text - text to escape.\n               *\n               *  Returns:\n               *      Escaped text.\n               */\n              xmlescape: function xmlescape(text) {\n                text = text.replace(/\\&/g, \"&amp;\");\n                text = text.replace(/</g, \"&lt;\");\n                text = text.replace(/>/g, \"&gt;\");\n                text = text.replace(/'/g, \"&apos;\");\n                text = text.replace(/\"/g, \"&quot;\");\n                return text;\n              },\n\n              /*  Function: xmlunescape\n              *  Unexcapes invalid xml characters.\n              *\n              *  Parameters:\n              *     (String) text - text to unescape.\n              *\n              *  Returns:\n              *      Unescaped text.\n              */\n              xmlunescape: function xmlunescape(text) {\n                text = text.replace(/\\&amp;/g, \"&\");\n                text = text.replace(/&lt;/g, \"<\");\n                text = text.replace(/&gt;/g, \">\");\n                text = text.replace(/&apos;/g, \"'\");\n                text = text.replace(/&quot;/g, \"\\\"\");\n                return text;\n              },\n\n              /** Function: xmlTextNode\n               *  Creates an XML DOM text node.\n               *\n               *  Provides a cross implementation version of document.createTextNode.\n               *\n               *  Parameters:\n               *    (String) text - The content of the text node.\n               *\n               *  Returns:\n               *    A new XML DOM text node.\n               */\n              xmlTextNode: function xmlTextNode(text) {\n                return Strophe.xmlGenerator().createTextNode(text);\n              },\n\n              /** Function: xmlHtmlNode\n               *  Creates an XML DOM html node.\n               *\n               *  Parameters:\n               *    (String) html - The content of the html node.\n               *\n               *  Returns:\n               *    A new XML DOM text node.\n               */\n              xmlHtmlNode: function xmlHtmlNode(html) {\n                var node; //ensure text is escaped\n\n                if (DOMParser) {\n                  var parser = new DOMParser();\n                  node = parser.parseFromString(html, \"text/xml\");\n                } else {\n                  node = new ActiveXObject(\"Microsoft.XMLDOM\");\n                  node.async = \"false\";\n                  node.loadXML(html);\n                }\n\n                return node;\n              },\n\n              /** Function: getText\n               *  Get the concatenation of all text children of an element.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - A DOM element.\n               *\n               *  Returns:\n               *    A String with the concatenated text of all text element children.\n               */\n              getText: function getText(elem) {\n                if (!elem) {\n                  return null;\n                }\n\n                var str = \"\";\n\n                if (elem.childNodes.length === 0 && elem.nodeType === Strophe.ElementType.TEXT) {\n                  str += elem.nodeValue;\n                }\n\n                for (var i = 0; i < elem.childNodes.length; i++) {\n                  if (elem.childNodes[i].nodeType === Strophe.ElementType.TEXT) {\n                    str += elem.childNodes[i].nodeValue;\n                  }\n                }\n\n                return Strophe.xmlescape(str);\n              },\n\n              /** Function: copyElement\n               *  Copy an XML DOM element.\n               *\n               *  This function copies a DOM element and all its descendants and returns\n               *  the new copy.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - A DOM element.\n               *\n               *  Returns:\n               *    A new, copied DOM element tree.\n               */\n              copyElement: function copyElement(elem) {\n                var el;\n\n                if (elem.nodeType === Strophe.ElementType.NORMAL) {\n                  el = Strophe.xmlElement(elem.tagName);\n\n                  for (var i = 0; i < elem.attributes.length; i++) {\n                    el.setAttribute(elem.attributes[i].nodeName, elem.attributes[i].value);\n                  }\n\n                  for (var _i = 0; _i < elem.childNodes.length; _i++) {\n                    el.appendChild(Strophe.copyElement(elem.childNodes[_i]));\n                  }\n                } else if (elem.nodeType === Strophe.ElementType.TEXT) {\n                  el = Strophe.xmlGenerator().createTextNode(elem.nodeValue);\n                }\n\n                return el;\n              },\n\n              /** Function: createHtml\n               *  Copy an HTML DOM element into an XML DOM.\n               *\n               *  This function copies a DOM element and all its descendants and returns\n               *  the new copy.\n               *\n               *  Parameters:\n               *    (HTMLElement) elem - A DOM element.\n               *\n               *  Returns:\n               *    A new, copied DOM element tree.\n               */\n              createHtml: function createHtml(elem) {\n                var el;\n\n                if (elem.nodeType === Strophe.ElementType.NORMAL) {\n                  var tag = elem.nodeName.toLowerCase(); // XHTML tags must be lower case.\n\n                  if (Strophe.XHTML.validTag(tag)) {\n                    try {\n                      el = Strophe.xmlElement(tag);\n\n                      for (var i = 0; i < Strophe.XHTML.attributes[tag].length; i++) {\n                        var attribute = Strophe.XHTML.attributes[tag][i];\n                        var value = elem.getAttribute(attribute);\n\n                        if (typeof value === 'undefined' || value === null || value === '' || value === false || value === 0) {\n                          continue;\n                        }\n\n                        if (attribute === 'style' && _typeof(value) === 'object' && typeof value.cssText !== 'undefined') {\n                          value = value.cssText; // we're dealing with IE, need to get CSS out\n                        } // filter out invalid css styles\n\n\n                        if (attribute === 'style') {\n                          var css = [];\n                          var cssAttrs = value.split(';');\n\n                          for (var j = 0; j < cssAttrs.length; j++) {\n                            var attr = cssAttrs[j].split(':');\n                            var cssName = attr[0].replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").toLowerCase();\n\n                            if (Strophe.XHTML.validCSS(cssName)) {\n                              var cssValue = attr[1].replace(/^\\s*/, \"\").replace(/\\s*$/, \"\");\n                              css.push(cssName + ': ' + cssValue);\n                            }\n                          }\n\n                          if (css.length > 0) {\n                            value = css.join('; ');\n                            el.setAttribute(attribute, value);\n                          }\n                        } else {\n                          el.setAttribute(attribute, value);\n                        }\n                      }\n\n                      for (var _i2 = 0; _i2 < elem.childNodes.length; _i2++) {\n                        el.appendChild(Strophe.createHtml(elem.childNodes[_i2]));\n                      }\n                    } catch (e) {\n                      // invalid elements\n                      el = Strophe.xmlTextNode('');\n                    }\n                  } else {\n                    el = Strophe.xmlGenerator().createDocumentFragment();\n\n                    for (var _i3 = 0; _i3 < elem.childNodes.length; _i3++) {\n                      el.appendChild(Strophe.createHtml(elem.childNodes[_i3]));\n                    }\n                  }\n                } else if (elem.nodeType === Strophe.ElementType.FRAGMENT) {\n                  el = Strophe.xmlGenerator().createDocumentFragment();\n\n                  for (var _i4 = 0; _i4 < elem.childNodes.length; _i4++) {\n                    el.appendChild(Strophe.createHtml(elem.childNodes[_i4]));\n                  }\n                } else if (elem.nodeType === Strophe.ElementType.TEXT) {\n                  el = Strophe.xmlTextNode(elem.nodeValue);\n                }\n\n                return el;\n              },\n\n              /** Function: escapeNode\n               *  Escape the node part (also called local part) of a JID.\n               *\n               *  Parameters:\n               *    (String) node - A node (or local part).\n               *\n               *  Returns:\n               *    An escaped node (or local part).\n               */\n              escapeNode: function escapeNode(node) {\n                if (typeof node !== \"string\") {\n                  return node;\n                }\n\n                return node.replace(/^\\s+|\\s+$/g, '').replace(/\\\\/g, \"\\\\5c\").replace(/ /g, \"\\\\20\").replace(/\\\"/g, \"\\\\22\").replace(/\\&/g, \"\\\\26\").replace(/\\'/g, \"\\\\27\").replace(/\\//g, \"\\\\2f\").replace(/:/g, \"\\\\3a\").replace(/</g, \"\\\\3c\").replace(/>/g, \"\\\\3e\").replace(/@/g, \"\\\\40\");\n              },\n\n              /** Function: unescapeNode\n               *  Unescape a node part (also called local part) of a JID.\n               *\n               *  Parameters:\n               *    (String) node - A node (or local part).\n               *\n               *  Returns:\n               *    An unescaped node (or local part).\n               */\n              unescapeNode: function unescapeNode(node) {\n                if (typeof node !== \"string\") {\n                  return node;\n                }\n\n                return node.replace(/\\\\20/g, \" \").replace(/\\\\22/g, '\"').replace(/\\\\26/g, \"&\").replace(/\\\\27/g, \"'\").replace(/\\\\2f/g, \"/\").replace(/\\\\3a/g, \":\").replace(/\\\\3c/g, \"<\").replace(/\\\\3e/g, \">\").replace(/\\\\40/g, \"@\").replace(/\\\\5c/g, \"\\\\\");\n              },\n\n              /** Function: getNodeFromJid\n               *  Get the node portion of a JID String.\n               *\n               *  Parameters:\n               *    (String) jid - A JID.\n               *\n               *  Returns:\n               *    A String containing the node.\n               */\n              getNodeFromJid: function getNodeFromJid(jid) {\n                if (jid.indexOf(\"@\") < 0) {\n                  return null;\n                }\n\n                return jid.split(\"@\")[0];\n              },\n\n              /** Function: getDomainFromJid\n               *  Get the domain portion of a JID String.\n               *\n               *  Parameters:\n               *    (String) jid - A JID.\n               *\n               *  Returns:\n               *    A String containing the domain.\n               */\n              getDomainFromJid: function getDomainFromJid(jid) {\n                var bare = Strophe.getBareJidFromJid(jid);\n\n                if (bare.indexOf(\"@\") < 0) {\n                  return bare;\n                } else {\n                  var parts = bare.split(\"@\");\n                  parts.splice(0, 1);\n                  return parts.join('@');\n                }\n              },\n\n              /** Function: getResourceFromJid\n               *  Get the resource portion of a JID String.\n               *\n               *  Parameters:\n               *    (String) jid - A JID.\n               *\n               *  Returns:\n               *    A String containing the resource.\n               */\n              getResourceFromJid: function getResourceFromJid(jid) {\n                if (!jid) {\n                  return null;\n                }\n\n                var s = jid.split(\"/\");\n\n                if (s.length < 2) {\n                  return null;\n                }\n\n                s.splice(0, 1);\n                return s.join('/');\n              },\n\n              /** Function: getBareJidFromJid\n               *  Get the bare JID from a JID String.\n               *\n               *  Parameters:\n               *    (String) jid - A JID.\n               *\n               *  Returns:\n               *    A String containing the bare JID.\n               */\n              getBareJidFromJid: function getBareJidFromJid(jid) {\n                return jid ? jid.split(\"/\")[0] : null;\n              },\n\n              /** PrivateFunction: _handleError\n               *  _Private_ function that properly logs an error to the console\n               */\n              _handleError: function _handleError(e) {\n                if (typeof e.stack !== \"undefined\") {\n                  Strophe.fatal(e.stack);\n                }\n\n                if (e.sourceURL) {\n                  Strophe.fatal(\"error: \" + this.handler + \" \" + e.sourceURL + \":\" + e.line + \" - \" + e.name + \": \" + e.message);\n                } else if (e.fileName) {\n                  Strophe.fatal(\"error: \" + this.handler + \" \" + e.fileName + \":\" + e.lineNumber + \" - \" + e.name + \": \" + e.message);\n                } else {\n                  Strophe.fatal(\"error: \" + e.message);\n                }\n              },\n\n              /** Function: log\n               *  User overrideable logging function.\n               *\n               *  This function is called whenever the Strophe library calls any\n               *  of the logging functions.  The default implementation of this\n               *  function logs only fatal errors.  If client code wishes to handle the logging\n               *  messages, it should override this with\n               *  > Strophe.log = function (level, msg) {\n               *  >   (user code here)\n               *  > };\n               *\n               *  Please note that data sent and received over the wire is logged\n               *  via Strophe.Connection.rawInput() and Strophe.Connection.rawOutput().\n               *\n               *  The different levels and their meanings are\n               *\n               *    DEBUG - Messages useful for debugging purposes.\n               *    INFO - Informational messages.  This is mostly information like\n               *      'disconnect was called' or 'SASL auth succeeded'.\n               *    WARN - Warnings about potential problems.  This is mostly used\n               *      to report transient connection errors like request timeouts.\n               *    ERROR - Some error occurred.\n               *    FATAL - A non-recoverable fatal error occurred.\n               *\n               *  Parameters:\n               *    (Integer) level - The log level of the log message.  This will\n               *      be one of the values in Strophe.LogLevel.\n               *    (String) msg - The log message.\n               */\n              log: function log(level, msg) {\n                if (level === this.LogLevel.FATAL && _typeof(window.console) === 'object' && typeof window.console.error === 'function') {\n                  window.console.error(msg);\n                }\n              },\n\n              /** Function: debug\n               *  Log a message at the Strophe.LogLevel.DEBUG level.\n               *\n               *  Parameters:\n               *    (String) msg - The log message.\n               */\n              debug: function debug(msg) {\n                this.log(this.LogLevel.DEBUG, msg);\n              },\n\n              /** Function: info\n               *  Log a message at the Strophe.LogLevel.INFO level.\n               *\n               *  Parameters:\n               *    (String) msg - The log message.\n               */\n              info: function info(msg) {\n                this.log(this.LogLevel.INFO, msg);\n              },\n\n              /** Function: warn\n               *  Log a message at the Strophe.LogLevel.WARN level.\n               *\n               *  Parameters:\n               *    (String) msg - The log message.\n               */\n              warn: function warn(msg) {\n                this.log(this.LogLevel.WARN, msg);\n              },\n\n              /** Function: error\n               *  Log a message at the Strophe.LogLevel.ERROR level.\n               *\n               *  Parameters:\n               *    (String) msg - The log message.\n               */\n              error: function error(msg) {\n                this.log(this.LogLevel.ERROR, msg);\n              },\n\n              /** Function: fatal\n               *  Log a message at the Strophe.LogLevel.FATAL level.\n               *\n               *  Parameters:\n               *    (String) msg - The log message.\n               */\n              fatal: function fatal(msg) {\n                this.log(this.LogLevel.FATAL, msg);\n              },\n\n              /** Function: serialize\n               *  Render a DOM element and all descendants to a String.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - A DOM element.\n               *\n               *  Returns:\n               *    The serialized element tree as a String.\n               */\n              serialize: function serialize(elem) {\n                if (!elem) {\n                  return null;\n                }\n\n                if (typeof elem.tree === \"function\") {\n                  elem = elem.tree();\n                }\n\n                var names = _toConsumableArray(Array(elem.attributes.length).keys()).map(function (i) {\n                  return elem.attributes[i].nodeName;\n                });\n\n                names.sort();\n                var result = names.reduce(function (a, n) {\n                  return \"\".concat(a, \" \").concat(n, \"=\\\"\").concat(Strophe.xmlescape(elem.attributes.getNamedItem(n).value), \"\\\"\");\n                }, \"<\".concat(elem.nodeName));\n\n                if (elem.childNodes.length > 0) {\n                  result += \">\";\n\n                  for (var i = 0; i < elem.childNodes.length; i++) {\n                    var child = elem.childNodes[i];\n\n                    switch (child.nodeType) {\n                      case Strophe.ElementType.NORMAL:\n                        // normal element, so recurse\n                        result += Strophe.serialize(child);\n                        break;\n\n                      case Strophe.ElementType.TEXT:\n                        // text element to escape values\n                        result += Strophe.xmlescape(child.nodeValue);\n                        break;\n\n                      case Strophe.ElementType.CDATA:\n                        // cdata section so don't escape values\n                        result += \"<![CDATA[\" + child.nodeValue + \"]]>\";\n                    }\n                  }\n\n                  result += \"</\" + elem.nodeName + \">\";\n                } else {\n                  result += \"/>\";\n                }\n\n                return result;\n              },\n\n              /** PrivateVariable: _requestId\n               *  _Private_ variable that keeps track of the request ids for\n               *  connections.\n               */\n              _requestId: 0,\n\n              /** PrivateVariable: Strophe.connectionPlugins\n               *  _Private_ variable Used to store plugin names that need\n               *  initialization on Strophe.Connection construction.\n               */\n              _connectionPlugins: {},\n\n              /** Function: addConnectionPlugin\n               *  Extends the Strophe.Connection object with the given plugin.\n               *\n               *  Parameters:\n               *    (String) name - The name of the extension.\n               *    (Object) ptype - The plugin's prototype.\n               */\n              addConnectionPlugin: function addConnectionPlugin(name, ptype) {\n                Strophe._connectionPlugins[name] = ptype;\n              }\n            };\n            /** Class: Strophe.Builder\n             *  XML DOM builder.\n             *\n             *  This object provides an interface similar to JQuery but for building\n             *  DOM elements easily and rapidly.  All the functions except for toString()\n             *  and tree() return the object, so calls can be chained.  Here's an\n             *  example using the $iq() builder helper.\n             *  > $iq({to: 'you', from: 'me', type: 'get', id: '1'})\n             *  >     .c('query', {xmlns: 'strophe:example'})\n             *  >     .c('example')\n             *  >     .toString()\n             *\n             *  The above generates this XML fragment\n             *  > <iq to='you' from='me' type='get' id='1'>\n             *  >   <query xmlns='strophe:example'>\n             *  >     <example/>\n             *  >   </query>\n             *  > </iq>\n             *  The corresponding DOM manipulations to get a similar fragment would be\n             *  a lot more tedious and probably involve several helper variables.\n             *\n             *  Since adding children makes new operations operate on the child, up()\n             *  is provided to traverse up the tree.  To add two children, do\n             *  > builder.c('child1', ...).up().c('child2', ...)\n             *  The next operation on the Builder will be relative to the second child.\n             */\n\n            /** Constructor: Strophe.Builder\n             *  Create a Strophe.Builder object.\n             *\n             *  The attributes should be passed in object notation.  For example\n             *  > let b = new Builder('message', {to: 'you', from: 'me'});\n             *  or\n             *  > let b = new Builder('messsage', {'xml:lang': 'en'});\n             *\n             *  Parameters:\n             *    (String) name - The name of the root element.\n             *    (Object) attrs - The attributes for the root element in object notation.\n             *\n             *  Returns:\n             *    A new Strophe.Builder.\n             */\n\n            Strophe.Builder = function (name, attrs) {\n              // Set correct namespace for jabber:client elements\n              if (name === \"presence\" || name === \"message\" || name === \"iq\") {\n                if (attrs && !attrs.xmlns) {\n                  attrs.xmlns = Strophe.NS.CLIENT;\n                } else if (!attrs) {\n                  attrs = {\n                    xmlns: Strophe.NS.CLIENT\n                  };\n                }\n              } // Holds the tree being built.\n\n\n              this.nodeTree = Strophe.xmlElement(name, attrs); // Points to the current operation node.\n\n              this.node = this.nodeTree;\n            };\n\n            Strophe.Builder.prototype = {\n              /** Function: tree\n               *  Return the DOM tree.\n               *\n               *  This function returns the current DOM tree as an element object.  This\n               *  is suitable for passing to functions like Strophe.Connection.send().\n               *\n               *  Returns:\n               *    The DOM tree as a element object.\n               */\n              tree: function tree() {\n                return this.nodeTree;\n              },\n\n              /** Function: toString\n               *  Serialize the DOM tree to a String.\n               *\n               *  This function returns a string serialization of the current DOM\n               *  tree.  It is often used internally to pass data to a\n               *  Strophe.Request object.\n               *\n               *  Returns:\n               *    The serialized DOM tree in a String.\n               */\n              toString: function toString() {\n                return Strophe.serialize(this.nodeTree);\n              },\n\n              /** Function: up\n               *  Make the current parent element the new current element.\n               *\n               *  This function is often used after c() to traverse back up the tree.\n               *  For example, to add two children to the same element\n               *  > builder.c('child1', {}).up().c('child2', {});\n               *\n               *  Returns:\n               *    The Stophe.Builder object.\n               */\n              up: function up() {\n                this.node = this.node.parentNode;\n                return this;\n              },\n\n              /** Function: root\n               *  Make the root element the new current element.\n               *\n               *  When at a deeply nested element in the tree, this function can be used\n               *  to jump back to the root of the tree, instead of having to repeatedly\n               *  call up().\n               *\n               *  Returns:\n               *    The Stophe.Builder object.\n               */\n              root: function root() {\n                this.node = this.nodeTree;\n                return this;\n              },\n\n              /** Function: attrs\n               *  Add or modify attributes of the current element.\n               *\n               *  The attributes should be passed in object notation.  This function\n               *  does not move the current element pointer.\n               *\n               *  Parameters:\n               *    (Object) moreattrs - The attributes to add/modify in object notation.\n               *\n               *  Returns:\n               *    The Strophe.Builder object.\n               */\n              attrs: function attrs(moreattrs) {\n                for (var k in moreattrs) {\n                  if (Object.prototype.hasOwnProperty.call(moreattrs, k)) {\n                    if (moreattrs[k] === undefined) {\n                      this.node.removeAttribute(k);\n                    } else {\n                      this.node.setAttribute(k, moreattrs[k]);\n                    }\n                  }\n                }\n\n                return this;\n              },\n\n              /** Function: c\n               *  Add a child to the current element and make it the new current\n               *  element.\n               *\n               *  This function moves the current element pointer to the child,\n               *  unless text is provided.  If you need to add another child, it\n               *  is necessary to use up() to go back to the parent in the tree.\n               *\n               *  Parameters:\n               *    (String) name - The name of the child.\n               *    (Object) attrs - The attributes of the child in object notation.\n               *    (String) text - The text to add to the child.\n               *\n               *  Returns:\n               *    The Strophe.Builder object.\n               */\n              c: function c(name, attrs, text) {\n                var child = Strophe.xmlElement(name, attrs, text);\n                this.node.appendChild(child);\n\n                if (typeof text !== \"string\" && typeof text !== \"number\") {\n                  this.node = child;\n                }\n\n                return this;\n              },\n\n              /** Function: cnode\n               *  Add a child to the current element and make it the new current\n               *  element.\n               *\n               *  This function is the same as c() except that instead of using a\n               *  name and an attributes object to create the child it uses an\n               *  existing DOM element object.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - A DOM element.\n               *\n               *  Returns:\n               *    The Strophe.Builder object.\n               */\n              cnode: function cnode(elem) {\n                var impNode;\n                var xmlGen = Strophe.xmlGenerator();\n\n                try {\n                  impNode = xmlGen.importNode !== undefined;\n                } catch (e) {\n                  impNode = false;\n                }\n\n                var newElem = impNode ? xmlGen.importNode(elem, true) : Strophe.copyElement(elem);\n                this.node.appendChild(newElem);\n                this.node = newElem;\n                return this;\n              },\n\n              /** Function: t\n               *  Add a child text element.\n               *\n               *  This *does not* make the child the new current element since there\n               *  are no children of text elements.\n               *\n               *  Parameters:\n               *    (String) text - The text data to append to the current element.\n               *\n               *  Returns:\n               *    The Strophe.Builder object.\n               */\n              t: function t(text) {\n                var child = Strophe.xmlTextNode(text);\n                this.node.appendChild(child);\n                return this;\n              },\n\n              /** Function: h\n               *  Replace current element contents with the HTML passed in.\n               *\n               *  This *does not* make the child the new current element\n               *\n               *  Parameters:\n               *    (String) html - The html to insert as contents of current element.\n               *\n               *  Returns:\n               *    The Strophe.Builder object.\n               */\n              h: function h(html) {\n                var fragment = document.createElement('body'); // force the browser to try and fix any invalid HTML tags\n\n                fragment.innerHTML = html; // copy cleaned html into an xml dom\n\n                var xhtml = Strophe.createHtml(fragment);\n\n                while (xhtml.childNodes.length > 0) {\n                  this.node.appendChild(xhtml.childNodes[0]);\n                }\n\n                return this;\n              }\n            };\n            /** PrivateClass: Strophe.Handler\n             *  _Private_ helper class for managing stanza handlers.\n             *\n             *  A Strophe.Handler encapsulates a user provided callback function to be\n             *  executed when matching stanzas are received by the connection.\n             *  Handlers can be either one-off or persistant depending on their\n             *  return value. Returning true will cause a Handler to remain active, and\n             *  returning false will remove the Handler.\n             *\n             *  Users will not use Strophe.Handler objects directly, but instead they\n             *  will use Strophe.Connection.addHandler() and\n             *  Strophe.Connection.deleteHandler().\n             */\n\n            /** PrivateConstructor: Strophe.Handler\n             *  Create and initialize a new Strophe.Handler.\n             *\n             *  Parameters:\n             *    (Function) handler - A function to be executed when the handler is run.\n             *    (String) ns - The namespace to match.\n             *    (String) name - The element name to match.\n             *    (String) type - The element type to match.\n             *    (String) id - The element id attribute to match.\n             *    (String) from - The element from attribute to match.\n             *    (Object) options - Handler options\n             *\n             *  Returns:\n             *    A new Strophe.Handler object.\n             */\n\n            Strophe.Handler = function (handler, ns, name, type, id, from, options) {\n              this.handler = handler;\n              this.ns = ns;\n              this.name = name;\n              this.type = type;\n              this.id = id;\n              this.options = options || {\n                'matchBareFromJid': false,\n                'ignoreNamespaceFragment': false\n              }; // BBB: Maintain backward compatibility with old `matchBare` option\n\n              if (this.options.matchBare) {\n                Strophe.warn('The \"matchBare\" option is deprecated, use \"matchBareFromJid\" instead.');\n                this.options.matchBareFromJid = this.options.matchBare;\n                delete this.options.matchBare;\n              }\n\n              if (this.options.matchBareFromJid) {\n                this.from = from ? Strophe.getBareJidFromJid(from) : null;\n              } else {\n                this.from = from;\n              } // whether the handler is a user handler or a system handler\n\n\n              this.user = true;\n            };\n\n            Strophe.Handler.prototype = {\n              /** PrivateFunction: getNamespace\n               *  Returns the XML namespace attribute on an element.\n               *  If `ignoreNamespaceFragment` was passed in for this handler, then the\n               *  URL fragment will be stripped.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The XML element with the namespace.\n               *\n               *  Returns:\n               *    The namespace, with optionally the fragment stripped.\n               */\n              getNamespace: function getNamespace(elem) {\n                var elNamespace = elem.getAttribute(\"xmlns\");\n\n                if (elNamespace && this.options.ignoreNamespaceFragment) {\n                  elNamespace = elNamespace.split('#')[0];\n                }\n\n                return elNamespace;\n              },\n\n              /** PrivateFunction: namespaceMatch\n               *  Tests if a stanza matches the namespace set for this Strophe.Handler.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The XML element to test.\n               *\n               *  Returns:\n               *    true if the stanza matches and false otherwise.\n               */\n              namespaceMatch: function namespaceMatch(elem) {\n                var _this = this;\n\n                var nsMatch = false;\n\n                if (!this.ns) {\n                  return true;\n                } else {\n                  Strophe.forEachChild(elem, null, function (elem) {\n                    if (_this.getNamespace(elem) === _this.ns) {\n                      nsMatch = true;\n                    }\n                  });\n                  return nsMatch || this.getNamespace(elem) === this.ns;\n                }\n              },\n\n              /** PrivateFunction: isMatch\n               *  Tests if a stanza matches the Strophe.Handler.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The XML element to test.\n               *\n               *  Returns:\n               *    true if the stanza matches and false otherwise.\n               */\n              isMatch: function isMatch(elem) {\n                var from = elem.getAttribute('from');\n\n                if (this.options.matchBareFromJid) {\n                  from = Strophe.getBareJidFromJid(from);\n                }\n\n                var elem_type = elem.getAttribute(\"type\");\n\n                if (this.namespaceMatch(elem) && (!this.name || Strophe.isTagEqual(elem, this.name)) && (!this.type || (Array.isArray(this.type) ? this.type.indexOf(elem_type) !== -1 : elem_type === this.type)) && (!this.id || elem.getAttribute(\"id\") === this.id) && (!this.from || from === this.from)) {\n                  return true;\n                }\n\n                return false;\n              },\n\n              /** PrivateFunction: run\n               *  Run the callback on a matching stanza.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The DOM element that triggered the\n               *      Strophe.Handler.\n               *\n               *  Returns:\n               *    A boolean indicating if the handler should remain active.\n               */\n              run: function run(elem) {\n                var result = null;\n\n                try {\n                  result = this.handler(elem);\n                } catch (e) {\n                  Strophe._handleError(e);\n\n                  throw e;\n                }\n\n                return result;\n              },\n\n              /** PrivateFunction: toString\n               *  Get a String representation of the Strophe.Handler object.\n               *\n               *  Returns:\n               *    A String.\n               */\n              toString: function toString() {\n                return \"{Handler: \" + this.handler + \"(\" + this.name + \",\" + this.id + \",\" + this.ns + \")}\";\n              }\n            };\n            /** PrivateClass: Strophe.TimedHandler\n             *  _Private_ helper class for managing timed handlers.\n             *\n             *  A Strophe.TimedHandler encapsulates a user provided callback that\n             *  should be called after a certain period of time or at regular\n             *  intervals.  The return value of the callback determines whether the\n             *  Strophe.TimedHandler will continue to fire.\n             *\n             *  Users will not use Strophe.TimedHandler objects directly, but instead\n             *  they will use Strophe.Connection.addTimedHandler() and\n             *  Strophe.Connection.deleteTimedHandler().\n             */\n\n            /** PrivateConstructor: Strophe.TimedHandler\n             *  Create and initialize a new Strophe.TimedHandler object.\n             *\n             *  Parameters:\n             *    (Integer) period - The number of milliseconds to wait before the\n             *      handler is called.\n             *    (Function) handler - The callback to run when the handler fires.  This\n             *      function should take no arguments.\n             *\n             *  Returns:\n             *    A new Strophe.TimedHandler object.\n             */\n\n            Strophe.TimedHandler = function (period, handler) {\n              this.period = period;\n              this.handler = handler;\n              this.lastCalled = new Date().getTime();\n              this.user = true;\n            };\n\n            Strophe.TimedHandler.prototype = {\n              /** PrivateFunction: run\n               *  Run the callback for the Strophe.TimedHandler.\n               *\n               *  Returns:\n               *    true if the Strophe.TimedHandler should be called again, and false\n               *      otherwise.\n               */\n              run: function run() {\n                this.lastCalled = new Date().getTime();\n                return this.handler();\n              },\n\n              /** PrivateFunction: reset\n               *  Reset the last called time for the Strophe.TimedHandler.\n               */\n              reset: function reset() {\n                this.lastCalled = new Date().getTime();\n              },\n\n              /** PrivateFunction: toString\n               *  Get a string representation of the Strophe.TimedHandler object.\n               *\n               *  Returns:\n               *    The string representation.\n               */\n              toString: function toString() {\n                return \"{TimedHandler: \" + this.handler + \"(\" + this.period + \")}\";\n              }\n            };\n            /** Class: Strophe.Connection\n             *  XMPP Connection manager.\n             *\n             *  This class is the main part of Strophe.  It manages a BOSH or websocket\n             *  connection to an XMPP server and dispatches events to the user callbacks\n             *  as data arrives. It supports SASL PLAIN, SASL DIGEST-MD5, SASL SCRAM-SHA1\n             *  and legacy authentication.\n             *\n             *  After creating a Strophe.Connection object, the user will typically\n             *  call connect() with a user supplied callback to handle connection level\n             *  events like authentication failure, disconnection, or connection\n             *  complete.\n             *\n             *  The user will also have several event handlers defined by using\n             *  addHandler() and addTimedHandler().  These will allow the user code to\n             *  respond to interesting stanzas or do something periodically with the\n             *  connection. These handlers will be active once authentication is\n             *  finished.\n             *\n             *  To send data to the connection, use send().\n             */\n\n            /** Constructor: Strophe.Connection\n             *  Create and initialize a Strophe.Connection object.\n             *\n             *  The transport-protocol for this connection will be chosen automatically\n             *  based on the given service parameter. URLs starting with \"ws://\" or\n             *  \"wss://\" will use WebSockets, URLs starting with \"http://\", \"https://\"\n             *  or without a protocol will use BOSH.\n             *\n             *  To make Strophe connect to the current host you can leave out the protocol\n             *  and host part and just pass the path, e.g.\n             *\n             *  > let conn = new Strophe.Connection(\"/http-bind/\");\n             *\n             *  Options common to both Websocket and BOSH:\n             *  ------------------------------------------\n             *\n             *  cookies:\n             *\n             *  The *cookies* option allows you to pass in cookies to be added to the\n             *  document. These cookies will then be included in the BOSH XMLHttpRequest\n             *  or in the websocket connection.\n             *\n             *  The passed in value must be a map of cookie names and string values.\n             *\n             *  > { \"myCookie\": {\n             *  >     \"value\": \"1234\",\n             *  >     \"domain\": \".example.org\",\n             *  >     \"path\": \"/\",\n             *  >     \"expires\": expirationDate\n             *  >     }\n             *  > }\n             *\n             *  Note that cookies can't be set in this way for other domains (i.e. cross-domain).\n             *  Those cookies need to be set under those domains, for example they can be\n             *  set server-side by making a XHR call to that domain to ask it to set any\n             *  necessary cookies.\n             *\n             *  mechanisms:\n             *\n             *  The *mechanisms* option allows you to specify the SASL mechanisms that this\n             *  instance of Strophe.Connection (and therefore your XMPP client) will\n             *  support.\n             *\n             *  The value must be an array of objects with Strophe.SASLMechanism\n             *  prototypes.\n             *\n             *  If nothing is specified, then the following mechanisms (and their\n             *  priorities) are registered:\n             *\n             *      SCRAM-SHA1 - 70\n             *      DIGEST-MD5 - 60\n             *      PLAIN - 50\n             *      OAUTH-BEARER - 40\n             *      OAUTH-2 - 30\n             *      ANONYMOUS - 20\n             *      EXTERNAL - 10\n             *\n             *  explicitResourceBinding:\n             *\n             *  If `explicitResourceBinding` is set to a truthy value, then the XMPP client\n             *  needs to explicitly call `Strophe.Connection.prototype.bind` once the XMPP\n             *  server has advertised the \"urn:ietf:params:xml:ns:xmpp-bind\" feature.\n             *\n             *  Making this step explicit allows client authors to first finish other\n             *  stream related tasks, such as setting up an XEP-0198 Stream Management\n             *  session, before binding the JID resource for this session.\n             *\n             *  WebSocket options:\n             *  ------------------\n             *\n             *  If you want to connect to the current host with a WebSocket connection you\n             *  can tell Strophe to use WebSockets through a \"protocol\" attribute in the\n             *  optional options parameter. Valid values are \"ws\" for WebSocket and \"wss\"\n             *  for Secure WebSocket.\n             *  So to connect to \"wss://CURRENT_HOSTNAME/xmpp-websocket\" you would call\n             *\n             *  > let conn = new Strophe.Connection(\"/xmpp-websocket/\", {protocol: \"wss\"});\n             *\n             *  Note that relative URLs _NOT_ starting with a \"/\" will also include the path\n             *  of the current site.\n             *\n             *  Also because downgrading security is not permitted by browsers, when using\n             *  relative URLs both BOSH and WebSocket connections will use their secure\n             *  variants if the current connection to the site is also secure (https).\n             *\n             *  BOSH options:\n             *  -------------\n             *\n             *  By adding \"sync\" to the options, you can control if requests will\n             *  be made synchronously or not. The default behaviour is asynchronous.\n             *  If you want to make requests synchronous, make \"sync\" evaluate to true.\n             *  > let conn = new Strophe.Connection(\"/http-bind/\", {sync: true});\n             *\n             *  You can also toggle this on an already established connection.\n             *  > conn.options.sync = true;\n             *\n             *  The *customHeaders* option can be used to provide custom HTTP headers to be\n             *  included in the XMLHttpRequests made.\n             *\n             *  The *keepalive* option can be used to instruct Strophe to maintain the\n             *  current BOSH session across interruptions such as webpage reloads.\n             *\n             *  It will do this by caching the sessions tokens in sessionStorage, and when\n             *  \"restore\" is called it will check whether there are cached tokens with\n             *  which it can resume an existing session.\n             *\n             *  The *withCredentials* option should receive a Boolean value and is used to\n             *  indicate wether cookies should be included in ajax requests (by default\n             *  they're not).\n             *  Set this value to true if you are connecting to a BOSH service\n             *  and for some reason need to send cookies to it.\n             *  In order for this to work cross-domain, the server must also enable\n             *  credentials by setting the Access-Control-Allow-Credentials response header\n             *  to \"true\". For most usecases however this setting should be false (which\n             *  is the default).\n             *  Additionally, when using Access-Control-Allow-Credentials, the\n             *  Access-Control-Allow-Origin header can't be set to the wildcard \"*\", but\n             *  instead must be restricted to actual domains.\n             *\n             *  The *contentType* option can be set to change the default Content-Type\n             *  of \"text/xml; charset=utf-8\", which can be useful to reduce the amount of\n             *  CORS preflight requests that are sent to the server.\n             *\n             *  Parameters:\n             *    (String) service - The BOSH or WebSocket service URL.\n             *    (Object) options - A hash of configuration options\n             *\n             *  Returns:\n             *    A new Strophe.Connection object.\n             */\n\n            Strophe.Connection = function (service, options) {\n              var _this2 = this;\n\n              // The service URL\n              this.service = service; // Configuration options\n\n              this.options = options || {};\n              var proto = this.options.protocol || \"\"; // Select protocal based on service or options\n\n              if (service.indexOf(\"ws:\") === 0 || service.indexOf(\"wss:\") === 0 || proto.indexOf(\"ws\") === 0) {\n                this._proto = new Strophe.Websocket(this);\n              } else {\n                this._proto = new Strophe.Bosh(this);\n              }\n              /* The connected JID. */\n\n\n              this.jid = \"\";\n              /* the JIDs domain */\n\n              this.domain = null;\n              /* stream:features */\n\n              this.features = null; // SASL\n\n              this._sasl_data = {};\n              this.do_session = false;\n              this.do_bind = false; // handler lists\n\n              this.timedHandlers = [];\n              this.handlers = [];\n              this.removeTimeds = [];\n              this.removeHandlers = [];\n              this.addTimeds = [];\n              this.addHandlers = [];\n              this.protocolErrorHandlers = {\n                'HTTP': {},\n                'websocket': {}\n              };\n              this._idleTimeout = null;\n              this._disconnectTimeout = null;\n              this.authenticated = false;\n              this.connected = false;\n              this.disconnecting = false;\n              this.do_authentication = true;\n              this.paused = false;\n              this.restored = false;\n              this._data = [];\n              this._uniqueId = 0;\n              this._sasl_success_handler = null;\n              this._sasl_failure_handler = null;\n              this._sasl_challenge_handler = null; // Max retries before disconnecting\n\n              this.maxRetries = 5; // Call onIdle callback every 1/10th of a second\n\n              this._idleTimeout = setTimeout(function () {\n                return _this2._onIdle();\n              }, 100);\n              utils.addCookies(this.options.cookies);\n              this.registerSASLMechanisms(this.options.mechanisms); // initialize plugins\n\n              for (var k in Strophe._connectionPlugins) {\n                if (Object.prototype.hasOwnProperty.call(Strophe._connectionPlugins, k)) {\n                  var F = function F() {};\n\n                  F.prototype = Strophe._connectionPlugins[k];\n                  this[k] = new F();\n                  this[k].init(this);\n                }\n              }\n            };\n\n            Strophe.Connection.prototype = {\n              /** Function: reset\n               *  Reset the connection.\n               *\n               *  This function should be called after a connection is disconnected\n               *  before that connection is reused.\n               */\n              reset: function reset() {\n                this._proto._reset(); // SASL\n\n\n                this.do_session = false;\n                this.do_bind = false; // handler lists\n\n                this.timedHandlers = [];\n                this.handlers = [];\n                this.removeTimeds = [];\n                this.removeHandlers = [];\n                this.addTimeds = [];\n                this.addHandlers = [];\n                this.authenticated = false;\n                this.connected = false;\n                this.disconnecting = false;\n                this.restored = false;\n                this._data = [];\n                this._requests = [];\n                this._uniqueId = 0;\n              },\n\n              /** Function: pause\n               *  Pause the request manager.\n               *\n               *  This will prevent Strophe from sending any more requests to the\n               *  server.  This is very useful for temporarily pausing\n               *  BOSH-Connections while a lot of send() calls are happening quickly.\n               *  This causes Strophe to send the data in a single request, saving\n               *  many request trips.\n               */\n              pause: function pause() {\n                this.paused = true;\n              },\n\n              /** Function: resume\n               *  Resume the request manager.\n               *\n               *  This resumes after pause() has been called.\n               */\n              resume: function resume() {\n                this.paused = false;\n              },\n\n              /** Function: getUniqueId\n               *  Generate a unique ID for use in <iq/> elements.\n               *\n               *  All <iq/> stanzas are required to have unique id attributes.  This\n               *  function makes creating these easy.  Each connection instance has\n               *  a counter which starts from zero, and the value of this counter\n               *  plus a colon followed by the suffix becomes the unique id. If no\n               *  suffix is supplied, the counter is used as the unique id.\n               *\n               *  Suffixes are used to make debugging easier when reading the stream\n               *  data, and their use is recommended.  The counter resets to 0 for\n               *  every new connection for the same reason.  For connections to the\n               *  same server that authenticate the same way, all the ids should be\n               *  the same, which makes it easy to see changes.  This is useful for\n               *  automated testing as well.\n               *\n               *  Parameters:\n               *    (String) suffix - A optional suffix to append to the id.\n               *\n               *  Returns:\n               *    A unique string to be used for the id attribute.\n               */\n              getUniqueId: function getUniqueId(suffix) {\n                var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n                  var r = Math.random() * 16 | 0,\n                      v = c === 'x' ? r : r & 0x3 | 0x8;\n                  return v.toString(16);\n                });\n\n                if (typeof suffix === \"string\" || typeof suffix === \"number\") {\n                  return uuid + \":\" + suffix;\n                } else {\n                  return uuid + \"\";\n                }\n              },\n\n              /** Function: addProtocolErrorHandler\n               *  Register a handler function for when a protocol (websocker or HTTP)\n               *  error occurs.\n               *\n               *  NOTE: Currently only HTTP errors for BOSH requests are handled.\n               *  Patches that handle websocket errors would be very welcome.\n               *\n               *  Parameters:\n               *    (String) protocol - 'HTTP' or 'websocket'\n               *    (Integer) status_code - Error status code (e.g 500, 400 or 404)\n               *    (Function) callback - Function that will fire on Http error\n               *\n               *  Example:\n               *  function onError(err_code){\n               *    //do stuff\n               *  }\n               *\n               *  let conn = Strophe.connect('http://example.com/http-bind');\n               *  conn.addProtocolErrorHandler('HTTP', 500, onError);\n               *  // Triggers HTTP 500 error and onError handler will be called\n               *  conn.connect('user_jid@incorrect_jabber_host', 'secret', onConnect);\n               */\n              addProtocolErrorHandler: function addProtocolErrorHandler(protocol, status_code, callback) {\n                this.protocolErrorHandlers[protocol][status_code] = callback;\n              },\n\n              /** Function: connect\n               *  Starts the connection process.\n               *\n               *  As the connection process proceeds, the user supplied callback will\n               *  be triggered multiple times with status updates.  The callback\n               *  should take two arguments - the status code and the error condition.\n               *\n               *  The status code will be one of the values in the Strophe.Status\n               *  constants.  The error condition will be one of the conditions\n               *  defined in RFC 3920 or the condition 'strophe-parsererror'.\n               *\n               *  The Parameters _wait_, _hold_ and _route_ are optional and only relevant\n               *  for BOSH connections. Please see XEP 124 for a more detailed explanation\n               *  of the optional parameters.\n               *\n               *  Parameters:\n               *    (String) jid - The user's JID.  This may be a bare JID,\n               *      or a full JID.  If a node is not supplied, SASL OAUTHBEARER or\n               *      SASL ANONYMOUS authentication will be attempted (OAUTHBEARER will\n               *      process the provided password value as an access token).\n               *    (String) pass - The user's password.\n               *    (Function) callback - The connect callback function.\n               *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n               *      time the server will wait before returning an empty result for\n               *      a request.  The default setting of 60 seconds is recommended.\n               *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n               *      number of connections the server will hold at one time.  This\n               *      should almost always be set to 1 (the default).\n               *    (String) route - The optional route value.\n               *    (String) authcid - The optional alternative authentication identity\n               *      (username) if intending to impersonate another user.\n               *      When using the SASL-EXTERNAL authentication mechanism, for example\n               *      with client certificates, then the authcid value is used to\n               *      determine whether an authorization JID (authzid) should be sent to\n               *      the server. The authzid should not be sent to the server if the\n               *      authzid and authcid are the same. So to prevent it from being sent\n               *      (for example when the JID is already contained in the client\n               *      certificate), set authcid to that same JID. See XEP-178 for more\n               *      details.\n               */\n              connect: function connect(jid, pass, callback, wait, hold, route, authcid) {\n                this.jid = jid;\n                /** Variable: authzid\n                 *  Authorization identity.\n                 */\n\n                this.authzid = Strophe.getBareJidFromJid(this.jid);\n                /** Variable: authcid\n                 *  Authentication identity (User name).\n                 */\n\n                this.authcid = authcid || Strophe.getNodeFromJid(this.jid);\n                /** Variable: pass\n                 *  Authentication identity (User password).\n                 */\n\n                this.pass = pass;\n                /** Variable: servtype\n                 *  Digest MD5 compatibility.\n                 */\n\n                this.servtype = \"xmpp\";\n                this.connect_callback = callback;\n                this.disconnecting = false;\n                this.connected = false;\n                this.authenticated = false;\n                this.restored = false; // parse jid for domain\n\n                this.domain = Strophe.getDomainFromJid(this.jid);\n\n                this._changeConnectStatus(Strophe.Status.CONNECTING, null);\n\n                this._proto._connect(wait, hold, route);\n              },\n\n              /** Function: attach\n               *  Attach to an already created and authenticated BOSH session.\n               *\n               *  This function is provided to allow Strophe to attach to BOSH\n               *  sessions which have been created externally, perhaps by a Web\n               *  application.  This is often used to support auto-login type features\n               *  without putting user credentials into the page.\n               *\n               *  Parameters:\n               *    (String) jid - The full JID that is bound by the session.\n               *    (String) sid - The SID of the BOSH session.\n               *    (String) rid - The current RID of the BOSH session.  This RID\n               *      will be used by the next request.\n               *    (Function) callback The connect callback function.\n               *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n               *      time the server will wait before returning an empty result for\n               *      a request.  The default setting of 60 seconds is recommended.\n               *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n               *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n               *      number of connections the server will hold at one time.  This\n               *      should almost always be set to 1 (the default).\n               *    (Integer) wind - The optional HTTBIND window value.  This is the\n               *      allowed range of request ids that are valid.  The default is 5.\n               */\n              attach: function attach(jid, sid, rid, callback, wait, hold, wind) {\n                if (this._proto instanceof Strophe.Bosh) {\n                  this._proto._attach(jid, sid, rid, callback, wait, hold, wind);\n                } else {\n                  var error = new Error('The \"attach\" method can only be used with a BOSH connection.');\n                  error.name = 'StropheSessionError';\n                  throw error;\n                }\n              },\n\n              /** Function: restore\n               *  Attempt to restore a cached BOSH session.\n               *\n               *  This function is only useful in conjunction with providing the\n               *  \"keepalive\":true option when instantiating a new Strophe.Connection.\n               *\n               *  When \"keepalive\" is set to true, Strophe will cache the BOSH tokens\n               *  RID (Request ID) and SID (Session ID) and then when this function is\n               *  called, it will attempt to restore the session from those cached\n               *  tokens.\n               *\n               *  This function must therefore be called instead of connect or attach.\n               *\n               *  For an example on how to use it, please see examples/restore.js\n               *\n               *  Parameters:\n               *    (String) jid - The user's JID.  This may be a bare JID or a full JID.\n               *    (Function) callback - The connect callback function.\n               *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n               *      time the server will wait before returning an empty result for\n               *      a request.  The default setting of 60 seconds is recommended.\n               *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n               *      number of connections the server will hold at one time.  This\n               *      should almost always be set to 1 (the default).\n               *    (Integer) wind - The optional HTTBIND window value.  This is the\n               *      allowed range of request ids that are valid.  The default is 5.\n               */\n              restore: function restore(jid, callback, wait, hold, wind) {\n                if (this._sessionCachingSupported()) {\n                  this._proto._restore(jid, callback, wait, hold, wind);\n                } else {\n                  var error = new Error('The \"restore\" method can only be used with a BOSH connection.');\n                  error.name = 'StropheSessionError';\n                  throw error;\n                }\n              },\n\n              /** PrivateFunction: _sessionCachingSupported\n               * Checks whether sessionStorage and JSON are supported and whether we're\n               * using BOSH.\n               */\n              _sessionCachingSupported: function _sessionCachingSupported() {\n                if (this._proto instanceof Strophe.Bosh) {\n                  if (!JSON) {\n                    return false;\n                  }\n\n                  try {\n                    sessionStorage.setItem('_strophe_', '_strophe_');\n                    sessionStorage.removeItem('_strophe_');\n                  } catch (e) {\n                    return false;\n                  }\n\n                  return true;\n                }\n\n                return false;\n              },\n\n              /** Function: xmlInput\n               *  User overrideable function that receives XML data coming into the\n               *  connection.\n               *\n               *  The default function does nothing.  User code can override this with\n               *  > Strophe.Connection.xmlInput = function (elem) {\n               *  >   (user code)\n               *  > };\n               *\n               *  Due to limitations of current Browsers' XML-Parsers the opening and closing\n               *  <stream> tag for WebSocket-Connoctions will be passed as selfclosing here.\n               *\n               *  BOSH-Connections will have all stanzas wrapped in a <body> tag. See\n               *  <Strophe.Bosh.strip> if you want to strip this tag.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The XML data received by the connection.\n               */\n              xmlInput: function xmlInput(elem) {\n                return;\n              },\n\n              /** Function: xmlOutput\n               *  User overrideable function that receives XML data sent to the\n               *  connection.\n               *\n               *  The default function does nothing.  User code can override this with\n               *  > Strophe.Connection.xmlOutput = function (elem) {\n               *  >   (user code)\n               *  > };\n               *\n               *  Due to limitations of current Browsers' XML-Parsers the opening and closing\n               *  <stream> tag for WebSocket-Connoctions will be passed as selfclosing here.\n               *\n               *  BOSH-Connections will have all stanzas wrapped in a <body> tag. See\n               *  <Strophe.Bosh.strip> if you want to strip this tag.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The XMLdata sent by the connection.\n               */\n              xmlOutput: function xmlOutput(elem) {\n                return;\n              },\n\n              /** Function: rawInput\n               *  User overrideable function that receives raw data coming into the\n               *  connection.\n               *\n               *  The default function does nothing.  User code can override this with\n               *  > Strophe.Connection.rawInput = function (data) {\n               *  >   (user code)\n               *  > };\n               *\n               *  Parameters:\n               *    (String) data - The data received by the connection.\n               */\n              rawInput: function rawInput(data) {\n                return;\n              },\n\n              /** Function: rawOutput\n               *  User overrideable function that receives raw data sent to the\n               *  connection.\n               *\n               *  The default function does nothing.  User code can override this with\n               *  > Strophe.Connection.rawOutput = function (data) {\n               *  >   (user code)\n               *  > };\n               *\n               *  Parameters:\n               *    (String) data - The data sent by the connection.\n               */\n              rawOutput: function rawOutput(data) {\n                return;\n              },\n\n              /** Function: nextValidRid\n               *  User overrideable function that receives the new valid rid.\n               *\n               *  The default function does nothing. User code can override this with\n               *  > Strophe.Connection.nextValidRid = function (rid) {\n               *  >    (user code)\n               *  > };\n               *\n               *  Parameters:\n               *    (Number) rid - The next valid rid\n               */\n              nextValidRid: function nextValidRid(rid) {\n                return;\n              },\n\n              /** Function: send\n               *  Send a stanza.\n               *\n               *  This function is called to push data onto the send queue to\n               *  go out over the wire.  Whenever a request is sent to the BOSH\n               *  server, all pending data is sent and the queue is flushed.\n               *\n               *  Parameters:\n               *    (XMLElement |\n               *     [XMLElement] |\n               *     Strophe.Builder) elem - The stanza to send.\n               */\n              send: function send(elem) {\n                if (elem === null) {\n                  return;\n                }\n\n                if (typeof elem.sort === \"function\") {\n                  for (var i = 0; i < elem.length; i++) {\n                    this._queueData(elem[i]);\n                  }\n                } else if (typeof elem.tree === \"function\") {\n                  this._queueData(elem.tree());\n                } else {\n                  this._queueData(elem);\n                }\n\n                this._proto._send();\n              },\n\n              /** Function: flush\n               *  Immediately send any pending outgoing data.\n               *\n               *  Normally send() queues outgoing data until the next idle period\n               *  (100ms), which optimizes network use in the common cases when\n               *  several send()s are called in succession. flush() can be used to\n               *  immediately send all pending data.\n               */\n              flush: function flush() {\n                // cancel the pending idle period and run the idle function\n                // immediately\n                clearTimeout(this._idleTimeout);\n\n                this._onIdle();\n              },\n\n              /** Function: sendPresence\n               *  Helper function to send presence stanzas. The main benefit is for\n               *  sending presence stanzas for which you expect a responding presence\n               *  stanza with the same id (for example when leaving a chat room).\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The stanza to send.\n               *    (Function) callback - The callback function for a successful request.\n               *    (Function) errback - The callback function for a failed or timed\n               *      out request.  On timeout, the stanza will be null.\n               *    (Integer) timeout - The time specified in milliseconds for a\n               *      timeout to occur.\n               *\n               *  Returns:\n               *    The id used to send the presence.\n               */\n              sendPresence: function sendPresence(elem, callback, errback, timeout) {\n                var _this3 = this;\n\n                var timeoutHandler = null;\n\n                if (typeof elem.tree === \"function\") {\n                  elem = elem.tree();\n                }\n\n                var id = elem.getAttribute('id');\n\n                if (!id) {\n                  // inject id if not found\n                  id = this.getUniqueId(\"sendPresence\");\n                  elem.setAttribute(\"id\", id);\n                }\n\n                if (typeof callback === \"function\" || typeof errback === \"function\") {\n                  var handler = this.addHandler(function (stanza) {\n                    // remove timeout handler if there is one\n                    if (timeoutHandler) {\n                      _this3.deleteTimedHandler(timeoutHandler);\n                    }\n\n                    if (stanza.getAttribute('type') === 'error') {\n                      if (errback) {\n                        errback(stanza);\n                      }\n                    } else if (callback) {\n                      callback(stanza);\n                    }\n                  }, null, 'presence', null, id); // if timeout specified, set up a timeout handler.\n\n                  if (timeout) {\n                    timeoutHandler = this.addTimedHandler(timeout, function () {\n                      // get rid of normal handler\n                      _this3.deleteHandler(handler); // call errback on timeout with null stanza\n\n\n                      if (errback) {\n                        errback(null);\n                      }\n\n                      return false;\n                    });\n                  }\n                }\n\n                this.send(elem);\n                return id;\n              },\n\n              /** Function: sendIQ\n               *  Helper function to send IQ stanzas.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The stanza to send.\n               *    (Function) callback - The callback function for a successful request.\n               *    (Function) errback - The callback function for a failed or timed\n               *      out request.  On timeout, the stanza will be null.\n               *    (Integer) timeout - The time specified in milliseconds for a\n               *      timeout to occur.\n               *\n               *  Returns:\n               *    The id used to send the IQ.\n              */\n              sendIQ: function sendIQ(elem, callback, errback, timeout) {\n                var _this4 = this;\n\n                var timeoutHandler = null;\n\n                if (typeof elem.tree === \"function\") {\n                  elem = elem.tree();\n                }\n\n                var id = elem.getAttribute('id');\n\n                if (!id) {\n                  // inject id if not found\n                  id = this.getUniqueId(\"sendIQ\");\n                  elem.setAttribute(\"id\", id);\n                }\n\n                if (typeof callback === \"function\" || typeof errback === \"function\") {\n                  var handler = this.addHandler(function (stanza) {\n                    // remove timeout handler if there is one\n                    if (timeoutHandler) {\n                      _this4.deleteTimedHandler(timeoutHandler);\n                    }\n\n                    var iqtype = stanza.getAttribute('type');\n\n                    if (iqtype === 'result') {\n                      if (callback) {\n                        callback(stanza);\n                      }\n                    } else if (iqtype === 'error') {\n                      if (errback) {\n                        errback(stanza);\n                      }\n                    } else {\n                      var error = new Error(\"Got bad IQ type of \".concat(iqtype));\n                      error.name = \"StropheError\";\n                      throw error;\n                    }\n                  }, null, 'iq', ['error', 'result'], id); // if timeout specified, set up a timeout handler.\n\n                  if (timeout) {\n                    timeoutHandler = this.addTimedHandler(timeout, function () {\n                      // get rid of normal handler\n                      _this4.deleteHandler(handler); // call errback on timeout with null stanza\n\n\n                      if (errback) {\n                        errback(null);\n                      }\n\n                      return false;\n                    });\n                  }\n                }\n\n                this.send(elem);\n                return id;\n              },\n\n              /** PrivateFunction: _queueData\n               *  Queue outgoing data for later sending.  Also ensures that the data\n               *  is a DOMElement.\n               */\n              _queueData: function _queueData(element) {\n                if (element === null || !element.tagName || !element.childNodes) {\n                  var error = new Error(\"Cannot queue non-DOMElement.\");\n                  error.name = \"StropheError\";\n                  throw error;\n                }\n\n                this._data.push(element);\n              },\n\n              /** PrivateFunction: _sendRestart\n               *  Send an xmpp:restart stanza.\n               */\n              _sendRestart: function _sendRestart() {\n                var _this5 = this;\n\n                this._data.push(\"restart\");\n\n                this._proto._sendRestart();\n\n                this._idleTimeout = setTimeout(function () {\n                  return _this5._onIdle();\n                }, 100);\n              },\n\n              /** Function: addTimedHandler\n               *  Add a timed handler to the connection.\n               *\n               *  This function adds a timed handler.  The provided handler will\n               *  be called every period milliseconds until it returns false,\n               *  the connection is terminated, or the handler is removed.  Handlers\n               *  that wish to continue being invoked should return true.\n               *\n               *  Because of method binding it is necessary to save the result of\n               *  this function if you wish to remove a handler with\n               *  deleteTimedHandler().\n               *\n               *  Note that user handlers are not active until authentication is\n               *  successful.\n               *\n               *  Parameters:\n               *    (Integer) period - The period of the handler.\n               *    (Function) handler - The callback function.\n               *\n               *  Returns:\n               *    A reference to the handler that can be used to remove it.\n               */\n              addTimedHandler: function addTimedHandler(period, handler) {\n                var thand = new Strophe.TimedHandler(period, handler);\n                this.addTimeds.push(thand);\n                return thand;\n              },\n\n              /** Function: deleteTimedHandler\n               *  Delete a timed handler for a connection.\n               *\n               *  This function removes a timed handler from the connection.  The\n               *  handRef parameter is *not* the function passed to addTimedHandler(),\n               *  but is the reference returned from addTimedHandler().\n               *\n               *  Parameters:\n               *    (Strophe.TimedHandler) handRef - The handler reference.\n               */\n              deleteTimedHandler: function deleteTimedHandler(handRef) {\n                // this must be done in the Idle loop so that we don't change\n                // the handlers during iteration\n                this.removeTimeds.push(handRef);\n              },\n\n              /** Function: addHandler\n               *  Add a stanza handler for the connection.\n               *\n               *  This function adds a stanza handler to the connection.  The\n               *  handler callback will be called for any stanza that matches\n               *  the parameters.  Note that if multiple parameters are supplied,\n               *  they must all match for the handler to be invoked.\n               *\n               *  The handler will receive the stanza that triggered it as its argument.\n               *  *The handler should return true if it is to be invoked again;\n               *  returning false will remove the handler after it returns.*\n               *\n               *  As a convenience, the ns parameters applies to the top level element\n               *  and also any of its immediate children.  This is primarily to make\n               *  matching /iq/query elements easy.\n               *\n               *  Options\n               *  ~~~~~~~\n               *  With the options argument, you can specify boolean flags that affect how\n               *  matches are being done.\n               *\n               *  Currently two flags exist:\n               *\n               *  - matchBareFromJid:\n               *      When set to true, the from parameter and the\n               *      from attribute on the stanza will be matched as bare JIDs instead\n               *      of full JIDs. To use this, pass {matchBareFromJid: true} as the\n               *      value of options. The default value for matchBareFromJid is false.\n               *\n               *  - ignoreNamespaceFragment:\n               *      When set to true, a fragment specified on the stanza's namespace\n               *      URL will be ignored when it's matched with the one configured for\n               *      the handler.\n               *\n               *      This means that if you register like this:\n               *      >   connection.addHandler(\n               *      >       handler,\n               *      >       'http://jabber.org/protocol/muc',\n               *      >       null, null, null, null,\n               *      >       {'ignoreNamespaceFragment': true}\n               *      >   );\n               *\n               *      Then a stanza with XML namespace of\n               *      'http://jabber.org/protocol/muc#user' will also be matched. If\n               *      'ignoreNamespaceFragment' is false, then only stanzas with\n               *      'http://jabber.org/protocol/muc' will be matched.\n               *\n               *  Deleting the handler\n               *  ~~~~~~~~~~~~~~~~~~~~\n               *  The return value should be saved if you wish to remove the handler\n               *  with deleteHandler().\n               *\n               *  Parameters:\n               *    (Function) handler - The user callback.\n               *    (String) ns - The namespace to match.\n               *    (String) name - The stanza name to match.\n               *    (String|Array) type - The stanza type (or types if an array) to match.\n               *    (String) id - The stanza id attribute to match.\n               *    (String) from - The stanza from attribute to match.\n               *    (String) options - The handler options\n               *\n               *  Returns:\n               *    A reference to the handler that can be used to remove it.\n               */\n              addHandler: function addHandler(handler, ns, name, type, id, from, options) {\n                var hand = new Strophe.Handler(handler, ns, name, type, id, from, options);\n                this.addHandlers.push(hand);\n                return hand;\n              },\n\n              /** Function: deleteHandler\n               *  Delete a stanza handler for a connection.\n               *\n               *  This function removes a stanza handler from the connection.  The\n               *  handRef parameter is *not* the function passed to addHandler(),\n               *  but is the reference returned from addHandler().\n               *\n               *  Parameters:\n               *    (Strophe.Handler) handRef - The handler reference.\n               */\n              deleteHandler: function deleteHandler(handRef) {\n                // this must be done in the Idle loop so that we don't change\n                // the handlers during iteration\n                this.removeHandlers.push(handRef); // If a handler is being deleted while it is being added,\n                // prevent it from getting added\n\n                var i = this.addHandlers.indexOf(handRef);\n\n                if (i >= 0) {\n                  this.addHandlers.splice(i, 1);\n                }\n              },\n\n              /** Function: registerSASLMechanisms\n               *\n               * Register the SASL mechanisms which will be supported by this instance of\n               * Strophe.Connection (i.e. which this XMPP client will support).\n               *\n               *  Parameters:\n               *    (Array) mechanisms - Array of objects with Strophe.SASLMechanism prototypes\n               *\n               */\n              registerSASLMechanisms: function registerSASLMechanisms(mechanisms) {\n                this.mechanisms = {};\n                mechanisms = mechanisms || [Strophe.SASLAnonymous, Strophe.SASLExternal, Strophe.SASLMD5, Strophe.SASLOAuthBearer, Strophe.SASLXOAuth2, Strophe.SASLPlain, Strophe.SASLSHA1];\n                mechanisms.forEach(this.registerSASLMechanism.bind(this));\n              },\n\n              /** Function: registerSASLMechanism\n               *\n               * Register a single SASL mechanism, to be supported by this client.\n               *\n               *  Parameters:\n               *    (Object) mechanism - Object with a Strophe.SASLMechanism prototype\n               *\n               */\n              registerSASLMechanism: function registerSASLMechanism(mechanism) {\n                this.mechanisms[mechanism.prototype.name] = mechanism;\n              },\n\n              /** Function: disconnect\n               *  Start the graceful disconnection process.\n               *\n               *  This function starts the disconnection process.  This process starts\n               *  by sending unavailable presence and sending BOSH body of type\n               *  terminate.  A timeout handler makes sure that disconnection happens\n               *  even if the BOSH server does not respond.\n               *  If the Connection object isn't connected, at least tries to abort all pending requests\n               *  so the connection object won't generate successful requests (which were already opened).\n               *\n               *  The user supplied connection callback will be notified of the\n               *  progress as this process happens.\n               *\n               *  Parameters:\n               *    (String) reason - The reason the disconnect is occuring.\n               */\n              disconnect: function disconnect(reason) {\n                this._changeConnectStatus(Strophe.Status.DISCONNECTING, reason);\n\n                Strophe.warn(\"Disconnect was called because: \" + reason);\n\n                if (this.connected) {\n                  var pres = false;\n                  this.disconnecting = true;\n\n                  if (this.authenticated) {\n                    pres = $pres({\n                      'xmlns': Strophe.NS.CLIENT,\n                      'type': 'unavailable'\n                    });\n                  } // setup timeout handler\n\n\n                  this._disconnectTimeout = this._addSysTimedHandler(3000, this._onDisconnectTimeout.bind(this));\n\n                  this._proto._disconnect(pres);\n                } else {\n                  Strophe.warn(\"Disconnect was called before Strophe connected to the server\");\n\n                  this._proto._abortAllRequests();\n\n                  this._doDisconnect();\n                }\n              },\n\n              /** PrivateFunction: _changeConnectStatus\n               *  _Private_ helper function that makes sure plugins and the user's\n               *  callback are notified of connection status changes.\n               *\n               *  Parameters:\n               *    (Integer) status - the new connection status, one of the values\n               *      in Strophe.Status\n               *    (String) condition - the error condition or null\n               *    (XMLElement) elem - The triggering stanza.\n               */\n              _changeConnectStatus: function _changeConnectStatus(status, condition, elem) {\n                // notify all plugins listening for status changes\n                for (var k in Strophe._connectionPlugins) {\n                  if (Object.prototype.hasOwnProperty.call(Strophe._connectionPlugins, k)) {\n                    var plugin = this[k];\n\n                    if (plugin.statusChanged) {\n                      try {\n                        plugin.statusChanged(status, condition);\n                      } catch (err) {\n                        Strophe.error(\"\".concat(k, \" plugin caused an exception changing status: \").concat(err));\n                      }\n                    }\n                  }\n                } // notify the user's callback\n\n\n                if (this.connect_callback) {\n                  try {\n                    this.connect_callback(status, condition, elem);\n                  } catch (e) {\n                    Strophe._handleError(e);\n\n                    Strophe.error(\"User connection callback caused an exception: \".concat(e));\n                  }\n                }\n              },\n\n              /** PrivateFunction: _doDisconnect\n               *  _Private_ function to disconnect.\n               *\n               *  This is the last piece of the disconnection logic.  This resets the\n               *  connection and alerts the user's connection callback.\n               */\n              _doDisconnect: function _doDisconnect(condition) {\n                if (typeof this._idleTimeout === \"number\") {\n                  clearTimeout(this._idleTimeout);\n                } // Cancel Disconnect Timeout\n\n\n                if (this._disconnectTimeout !== null) {\n                  this.deleteTimedHandler(this._disconnectTimeout);\n                  this._disconnectTimeout = null;\n                }\n\n                Strophe.debug(\"_doDisconnect was called\");\n\n                this._proto._doDisconnect();\n\n                this.authenticated = false;\n                this.disconnecting = false;\n                this.restored = false; // delete handlers\n\n                this.handlers = [];\n                this.timedHandlers = [];\n                this.removeTimeds = [];\n                this.removeHandlers = [];\n                this.addTimeds = [];\n                this.addHandlers = []; // tell the parent we disconnected\n\n                this._changeConnectStatus(Strophe.Status.DISCONNECTED, condition);\n\n                this.connected = false;\n              },\n\n              /** PrivateFunction: _dataRecv\n               *  _Private_ handler to processes incoming data from the the connection.\n               *\n               *  Except for _connect_cb handling the initial connection request,\n               *  this function handles the incoming data for all requests.  This\n               *  function also fires stanza handlers that match each incoming\n               *  stanza.\n               *\n               *  Parameters:\n               *    (Strophe.Request) req - The request that has data ready.\n               *    (string) req - The stanza a raw string (optiona).\n               */\n              _dataRecv: function _dataRecv(req, raw) {\n                var _this6 = this;\n\n                Strophe.debug(\"_dataRecv called\");\n\n                var elem = this._proto._reqToData(req);\n\n                if (elem === null) {\n                  return;\n                }\n\n                if (this.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n                  if (elem.nodeName === this._proto.strip && elem.childNodes.length) {\n                    this.xmlInput(elem.childNodes[0]);\n                  } else {\n                    this.xmlInput(elem);\n                  }\n                }\n\n                if (this.rawInput !== Strophe.Connection.prototype.rawInput) {\n                  if (raw) {\n                    this.rawInput(raw);\n                  } else {\n                    this.rawInput(Strophe.serialize(elem));\n                  }\n                } // remove handlers scheduled for deletion\n\n\n                while (this.removeHandlers.length > 0) {\n                  var hand = this.removeHandlers.pop();\n                  var i = this.handlers.indexOf(hand);\n\n                  if (i >= 0) {\n                    this.handlers.splice(i, 1);\n                  }\n                } // add handlers scheduled for addition\n\n\n                while (this.addHandlers.length > 0) {\n                  this.handlers.push(this.addHandlers.pop());\n                } // handle graceful disconnect\n\n\n                if (this.disconnecting && this._proto._emptyQueue()) {\n                  this._doDisconnect();\n\n                  return;\n                }\n\n                var type = elem.getAttribute(\"type\");\n\n                if (type !== null && type === \"terminate\") {\n                  // Don't process stanzas that come in after disconnect\n                  if (this.disconnecting) {\n                    return;\n                  } // an error occurred\n\n\n                  var cond = elem.getAttribute(\"condition\");\n                  var conflict = elem.getElementsByTagName(\"conflict\");\n\n                  if (cond !== null) {\n                    if (cond === \"remote-stream-error\" && conflict.length > 0) {\n                      cond = \"conflict\";\n                    }\n\n                    this._changeConnectStatus(Strophe.Status.CONNFAIL, cond);\n                  } else {\n                    this._changeConnectStatus(Strophe.Status.CONNFAIL, Strophe.ErrorCondition.UNKOWN_REASON);\n                  }\n\n                  this._doDisconnect(cond);\n\n                  return;\n                } // send each incoming stanza through the handler chain\n\n\n                Strophe.forEachChild(elem, null, function (child) {\n                  // process handlers\n                  var newList = _this6.handlers;\n                  _this6.handlers = [];\n\n                  for (var _i5 = 0; _i5 < newList.length; _i5++) {\n                    var _hand = newList[_i5]; // encapsulate 'handler.run' not to lose the whole handler list if\n                    // one of the handlers throws an exception\n\n                    try {\n                      if (_hand.isMatch(child) && (_this6.authenticated || !_hand.user)) {\n                        if (_hand.run(child)) {\n                          _this6.handlers.push(_hand);\n                        }\n                      } else {\n                        _this6.handlers.push(_hand);\n                      }\n                    } catch (e) {\n                      // if the handler throws an exception, we consider it as false\n                      Strophe.warn('Removing Strophe handlers due to uncaught exception: ' + e.message);\n                    }\n                  }\n                });\n              },\n\n              /** Attribute: mechanisms\n               *  SASL Mechanisms available for Connection.\n               */\n              mechanisms: {},\n\n              /** PrivateFunction: _connect_cb\n               *  _Private_ handler for initial connection request.\n               *\n               *  This handler is used to process the initial connection request\n               *  response from the BOSH server. It is used to set up authentication\n               *  handlers and start the authentication process.\n               *\n               *  SASL authentication will be attempted if available, otherwise\n               *  the code will fall back to legacy authentication.\n               *\n               *  Parameters:\n               *    (Strophe.Request) req - The current request.\n               *    (Function) _callback - low level (xmpp) connect callback function.\n               *      Useful for plugins with their own xmpp connect callback (when they\n               *      want to do something special).\n               */\n              _connect_cb: function _connect_cb(req, _callback, raw) {\n                Strophe.debug(\"_connect_cb was called\");\n                this.connected = true;\n                var bodyWrap;\n\n                try {\n                  bodyWrap = this._proto._reqToData(req);\n                } catch (e) {\n                  if (e.name !== Strophe.ErrorCondition.BAD_FORMAT) {\n                    throw e;\n                  }\n\n                  this._changeConnectStatus(Strophe.Status.CONNFAIL, Strophe.ErrorCondition.BAD_FORMAT);\n\n                  this._doDisconnect(Strophe.ErrorCondition.BAD_FORMAT);\n                }\n\n                if (!bodyWrap) {\n                  return;\n                }\n\n                if (this.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n                  if (bodyWrap.nodeName === this._proto.strip && bodyWrap.childNodes.length) {\n                    this.xmlInput(bodyWrap.childNodes[0]);\n                  } else {\n                    this.xmlInput(bodyWrap);\n                  }\n                }\n\n                if (this.rawInput !== Strophe.Connection.prototype.rawInput) {\n                  if (raw) {\n                    this.rawInput(raw);\n                  } else {\n                    this.rawInput(Strophe.serialize(bodyWrap));\n                  }\n                }\n\n                var conncheck = this._proto._connect_cb(bodyWrap);\n\n                if (conncheck === Strophe.Status.CONNFAIL) {\n                  return;\n                } // Check for the stream:features tag\n\n\n                var hasFeatures;\n\n                if (bodyWrap.getElementsByTagNameNS) {\n                  hasFeatures = bodyWrap.getElementsByTagNameNS(Strophe.NS.STREAM, \"features\").length > 0;\n                } else {\n                  hasFeatures = bodyWrap.getElementsByTagName(\"stream:features\").length > 0 || bodyWrap.getElementsByTagName(\"features\").length > 0;\n                }\n\n                if (!hasFeatures) {\n                  this._proto._no_auth_received(_callback);\n\n                  return;\n                }\n\n                var matched = [];\n                var mechanisms = bodyWrap.getElementsByTagName(\"mechanism\");\n\n                if (mechanisms.length > 0) {\n                  for (var i = 0; i < mechanisms.length; i++) {\n                    var mech = Strophe.getText(mechanisms[i]);\n                    if (this.mechanisms[mech]) matched.push(this.mechanisms[mech]);\n                  }\n                }\n\n                if (matched.length === 0) {\n                  if (bodyWrap.getElementsByTagName(\"auth\").length === 0) {\n                    // There are no matching SASL mechanisms and also no legacy\n                    // auth available.\n                    this._proto._no_auth_received(_callback);\n\n                    return;\n                  }\n                }\n\n                if (this.do_authentication !== false) {\n                  this.authenticate(matched);\n                }\n              },\n\n              /** Function: sortMechanismsByPriority\n               *\n               *  Sorts an array of objects with prototype SASLMechanism according to\n               *  their priorities.\n               *\n               *  Parameters:\n               *    (Array) mechanisms - Array of SASL mechanisms.\n               *\n               */\n              sortMechanismsByPriority: function sortMechanismsByPriority(mechanisms) {\n                // Sorting mechanisms according to priority.\n                for (var i = 0; i < mechanisms.length - 1; ++i) {\n                  var higher = i;\n\n                  for (var j = i + 1; j < mechanisms.length; ++j) {\n                    if (mechanisms[j].prototype.priority > mechanisms[higher].prototype.priority) {\n                      higher = j;\n                    }\n                  }\n\n                  if (higher !== i) {\n                    var swap = mechanisms[i];\n                    mechanisms[i] = mechanisms[higher];\n                    mechanisms[higher] = swap;\n                  }\n                }\n\n                return mechanisms;\n              },\n\n              /** Function: authenticate\n               * Set up authentication\n               *\n               *  Continues the initial connection request by setting up authentication\n               *  handlers and starting the authentication process.\n               *\n               *  SASL authentication will be attempted if available, otherwise\n               *  the code will fall back to legacy authentication.\n               *\n               *  Parameters:\n               *    (Array) matched - Array of SASL mechanisms supported.\n               *\n               */\n              authenticate: function authenticate(matched) {\n                if (!this._attemptSASLAuth(matched)) {\n                  this._attemptLegacyAuth();\n                }\n              },\n\n              /** PrivateFunction: _attemptSASLAuth\n               *\n               *  Iterate through an array of SASL mechanisms and attempt authentication\n               *  with the highest priority (enabled) mechanism.\n               *\n               *  Parameters:\n               *    (Array) mechanisms - Array of SASL mechanisms.\n               *\n               *  Returns:\n               *    (Boolean) mechanism_found - true or false, depending on whether a\n               *          valid SASL mechanism was found with which authentication could be\n               *          started.\n               */\n              _attemptSASLAuth: function _attemptSASLAuth(mechanisms) {\n                mechanisms = this.sortMechanismsByPriority(mechanisms || []);\n                var mechanism_found = false;\n\n                for (var i = 0; i < mechanisms.length; ++i) {\n                  if (!mechanisms[i].prototype.test(this)) {\n                    continue;\n                  }\n\n                  this._sasl_success_handler = this._addSysHandler(this._sasl_success_cb.bind(this), null, \"success\", null, null);\n                  this._sasl_failure_handler = this._addSysHandler(this._sasl_failure_cb.bind(this), null, \"failure\", null, null);\n                  this._sasl_challenge_handler = this._addSysHandler(this._sasl_challenge_cb.bind(this), null, \"challenge\", null, null);\n                  this._sasl_mechanism = new mechanisms[i]();\n\n                  this._sasl_mechanism.onStart(this);\n\n                  var request_auth_exchange = $build(\"auth\", {\n                    'xmlns': Strophe.NS.SASL,\n                    'mechanism': this._sasl_mechanism.name\n                  });\n\n                  if (this._sasl_mechanism.isClientFirst) {\n                    var response = this._sasl_mechanism.onChallenge(this, null);\n\n                    request_auth_exchange.t(btoa(response));\n                  }\n\n                  this.send(request_auth_exchange.tree());\n                  mechanism_found = true;\n                  break;\n                }\n\n                return mechanism_found;\n              },\n\n              /** PrivateFunction: _sasl_challenge_cb\n               *  _Private_ handler for the SASL challenge\n               *\n               */\n              _sasl_challenge_cb: function _sasl_challenge_cb(elem) {\n                var challenge = atob(Strophe.getText(elem));\n\n                var response = this._sasl_mechanism.onChallenge(this, challenge);\n\n                var stanza = $build('response', {\n                  'xmlns': Strophe.NS.SASL\n                });\n\n                if (response !== \"\") {\n                  stanza.t(btoa(response));\n                }\n\n                this.send(stanza.tree());\n                return true;\n              },\n\n              /** PrivateFunction: _attemptLegacyAuth\n               *\n               *  Attempt legacy (i.e. non-SASL) authentication.\n               */\n              _attemptLegacyAuth: function _attemptLegacyAuth() {\n                if (Strophe.getNodeFromJid(this.jid) === null) {\n                  // we don't have a node, which is required for non-anonymous\n                  // client connections\n                  this._changeConnectStatus(Strophe.Status.CONNFAIL, Strophe.ErrorCondition.MISSING_JID_NODE);\n\n                  this.disconnect(Strophe.ErrorCondition.MISSING_JID_NODE);\n                } else {\n                  // Fall back to legacy authentication\n                  this._changeConnectStatus(Strophe.Status.AUTHENTICATING, null);\n\n                  this._addSysHandler(this._onLegacyAuthIQResult.bind(this), null, null, null, \"_auth_1\");\n\n                  this.send($iq({\n                    'type': \"get\",\n                    'to': this.domain,\n                    'id': \"_auth_1\"\n                  }).c(\"query\", {\n                    xmlns: Strophe.NS.AUTH\n                  }).c(\"username\", {}).t(Strophe.getNodeFromJid(this.jid)).tree());\n                }\n              },\n\n              /** PrivateFunction: _onLegacyAuthIQResult\n               *  _Private_ handler for legacy authentication.\n               *\n               *  This handler is called in response to the initial <iq type='get'/>\n               *  for legacy authentication.  It builds an authentication <iq/> and\n               *  sends it, creating a handler (calling back to _auth2_cb()) to\n               *  handle the result\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The stanza that triggered the callback.\n               *\n               *  Returns:\n               *    false to remove the handler.\n               */\n              _onLegacyAuthIQResult: function _onLegacyAuthIQResult(elem) {\n                // build plaintext auth iq\n                var iq = $iq({\n                  type: \"set\",\n                  id: \"_auth_2\"\n                }).c('query', {\n                  xmlns: Strophe.NS.AUTH\n                }).c('username', {}).t(Strophe.getNodeFromJid(this.jid)).up().c('password').t(this.pass);\n\n                if (!Strophe.getResourceFromJid(this.jid)) {\n                  // since the user has not supplied a resource, we pick\n                  // a default one here.  unlike other auth methods, the server\n                  // cannot do this for us.\n                  this.jid = Strophe.getBareJidFromJid(this.jid) + '/strophe';\n                }\n\n                iq.up().c('resource', {}).t(Strophe.getResourceFromJid(this.jid));\n\n                this._addSysHandler(this._auth2_cb.bind(this), null, null, null, \"_auth_2\");\n\n                this.send(iq.tree());\n                return false;\n              },\n\n              /** PrivateFunction: _sasl_success_cb\n               *  _Private_ handler for succesful SASL authentication.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The matching stanza.\n               *\n               *  Returns:\n               *    false to remove the handler.\n               */\n              _sasl_success_cb: function _sasl_success_cb(elem) {\n                var _this7 = this;\n\n                if (this._sasl_data[\"server-signature\"]) {\n                  var serverSignature;\n                  var success = atob(Strophe.getText(elem));\n                  var attribMatch = /([a-z]+)=([^,]+)(,|$)/;\n                  var matches = success.match(attribMatch);\n\n                  if (matches[1] === \"v\") {\n                    serverSignature = matches[2];\n                  }\n\n                  if (serverSignature !== this._sasl_data[\"server-signature\"]) {\n                    // remove old handlers\n                    this.deleteHandler(this._sasl_failure_handler);\n                    this._sasl_failure_handler = null;\n\n                    if (this._sasl_challenge_handler) {\n                      this.deleteHandler(this._sasl_challenge_handler);\n                      this._sasl_challenge_handler = null;\n                    }\n\n                    this._sasl_data = {};\n                    return this._sasl_failure_cb(null);\n                  }\n                }\n\n                Strophe.info(\"SASL authentication succeeded.\");\n\n                if (this._sasl_mechanism) {\n                  this._sasl_mechanism.onSuccess();\n                } // remove old handlers\n\n\n                this.deleteHandler(this._sasl_failure_handler);\n                this._sasl_failure_handler = null;\n\n                if (this._sasl_challenge_handler) {\n                  this.deleteHandler(this._sasl_challenge_handler);\n                  this._sasl_challenge_handler = null;\n                }\n\n                var streamfeature_handlers = [];\n\n                var wrapper = function wrapper(handlers, elem) {\n                  while (handlers.length) {\n                    _this7.deleteHandler(handlers.pop());\n                  }\n\n                  _this7._onStreamFeaturesAfterSASL(elem);\n\n                  return false;\n                };\n\n                streamfeature_handlers.push(this._addSysHandler(function (elem) {\n                  return wrapper(streamfeature_handlers, elem);\n                }, null, \"stream:features\", null, null));\n                streamfeature_handlers.push(this._addSysHandler(function (elem) {\n                  return wrapper(streamfeature_handlers, elem);\n                }, Strophe.NS.STREAM, \"features\", null, null)); // we must send an xmpp:restart now\n\n                this._sendRestart();\n\n                return false;\n              },\n\n              /** PrivateFunction: _onStreamFeaturesAfterSASL\n               *  Parameters:\n               *    (XMLElement) elem - The matching stanza.\n               *\n               *  Returns:\n               *    false to remove the handler.\n               */\n              _onStreamFeaturesAfterSASL: function _onStreamFeaturesAfterSASL(elem) {\n                // save stream:features for future usage\n                this.features = elem;\n\n                for (var i = 0; i < elem.childNodes.length; i++) {\n                  var child = elem.childNodes[i];\n\n                  if (child.nodeName === 'bind') {\n                    this.do_bind = true;\n                  }\n\n                  if (child.nodeName === 'session') {\n                    this.do_session = true;\n                  }\n                }\n\n                if (!this.do_bind) {\n                  this._changeConnectStatus(Strophe.Status.AUTHFAIL, null);\n\n                  return false;\n                } else if (!this.options.explicitResourceBinding) {\n                  this.bind();\n                } else {\n                  this._changeConnectStatus(Strophe.Status.BINDREQUIRED, null);\n                }\n\n                return false;\n              },\n\n              /** Function: bind\n               *\n               *  Sends an IQ to the XMPP server to bind a JID resource for this session.\n               *\n               *  https://tools.ietf.org/html/rfc6120#section-7.5\n               *\n               *  If `explicitResourceBinding` was set to a truthy value in the options\n               *  passed to the Strophe.Connection constructor, then this function needs\n               *  to be called explicitly by the client author.\n               *\n               *  Otherwise it'll be called automatically as soon as the XMPP server\n               *  advertises the \"urn:ietf:params:xml:ns:xmpp-bind\" stream feature.\n               */\n              bind: function bind() {\n                if (!this.do_bind) {\n                  Strophe.log(Strophe.LogLevel.INFO, \"Strophe.Connection.prototype.bind called but \\\"do_bind\\\" is false\");\n                  return;\n                }\n\n                this._addSysHandler(this._onResourceBindResultIQ.bind(this), null, null, null, \"_bind_auth_2\");\n\n                var resource = Strophe.getResourceFromJid(this.jid);\n\n                if (resource) {\n                  this.send($iq({\n                    type: \"set\",\n                    id: \"_bind_auth_2\"\n                  }).c('bind', {\n                    xmlns: Strophe.NS.BIND\n                  }).c('resource', {}).t(resource).tree());\n                } else {\n                  this.send($iq({\n                    type: \"set\",\n                    id: \"_bind_auth_2\"\n                  }).c('bind', {\n                    xmlns: Strophe.NS.BIND\n                  }).tree());\n                }\n              },\n\n              /** PrivateFunction: _onResourceBindIQ\n               *  _Private_ handler for binding result and session start.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The matching stanza.\n               *\n               *  Returns:\n               *    false to remove the handler.\n               */\n              _onResourceBindResultIQ: function _onResourceBindResultIQ(elem) {\n                if (elem.getAttribute(\"type\") === \"error\") {\n                  Strophe.warn(\"Resource binding failed.\");\n                  var conflict = elem.getElementsByTagName(\"conflict\");\n                  var condition;\n\n                  if (conflict.length > 0) {\n                    condition = Strophe.ErrorCondition.CONFLICT;\n                  }\n\n                  this._changeConnectStatus(Strophe.Status.AUTHFAIL, condition, elem);\n\n                  return false;\n                } // TODO - need to grab errors\n\n\n                var bind = elem.getElementsByTagName(\"bind\");\n\n                if (bind.length > 0) {\n                  var jidNode = bind[0].getElementsByTagName(\"jid\");\n\n                  if (jidNode.length > 0) {\n                    this.jid = Strophe.getText(jidNode[0]);\n\n                    if (this.do_session) {\n                      this._establishSession();\n                    } else {\n                      this.authenticated = true;\n\n                      this._changeConnectStatus(Strophe.Status.CONNECTED, null);\n                    }\n                  }\n                } else {\n                  Strophe.warn(\"Resource binding failed.\");\n\n                  this._changeConnectStatus(Strophe.Status.AUTHFAIL, null, elem);\n\n                  return false;\n                }\n              },\n\n              /** PrivateFunction: _establishSession\n               *  Send IQ request to establish a session with the XMPP server.\n               *\n               *  See https://xmpp.org/rfcs/rfc3921.html#session\n               *\n               *  Note: The protocol for session establishment has been determined as\n               *  unnecessary and removed in RFC-6121.\n               */\n              _establishSession: function _establishSession() {\n                if (!this.do_session) {\n                  throw new Error(\"Strophe.Connection.prototype._establishSession \" + \"called but apparently \".concat(Strophe.NS.SESSION, \" wasn't advertised by the server\"));\n                }\n\n                this._addSysHandler(this._onSessionResultIQ.bind(this), null, null, null, \"_session_auth_2\");\n\n                this.send($iq({\n                  type: \"set\",\n                  id: \"_session_auth_2\"\n                }).c('session', {\n                  xmlns: Strophe.NS.SESSION\n                }).tree());\n              },\n\n              /** PrivateFunction: _onSessionResultIQ\n               *  _Private_ handler for the server's IQ response to a client's session\n               *  request.\n               *\n               *  This sets Connection.authenticated to true on success, which\n               *  starts the processing of user handlers.\n               *\n               *  See https://xmpp.org/rfcs/rfc3921.html#session\n               *\n               *  Note: The protocol for session establishment has been determined as\n               *  unnecessary and removed in RFC-6121.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The matching stanza.\n               *\n               *  Returns:\n               *    false to remove the handler.\n               */\n              _onSessionResultIQ: function _onSessionResultIQ(elem) {\n                if (elem.getAttribute(\"type\") === \"result\") {\n                  this.authenticated = true;\n\n                  this._changeConnectStatus(Strophe.Status.CONNECTED, null);\n                } else if (elem.getAttribute(\"type\") === \"error\") {\n                  Strophe.warn(\"Session creation failed.\");\n\n                  this._changeConnectStatus(Strophe.Status.AUTHFAIL, null, elem);\n\n                  return false;\n                }\n\n                return false;\n              },\n\n              /** PrivateFunction: _sasl_failure_cb\n               *  _Private_ handler for SASL authentication failure.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The matching stanza.\n               *\n               *  Returns:\n               *    false to remove the handler.\n               */\n              _sasl_failure_cb: function _sasl_failure_cb(elem) {\n                // delete unneeded handlers\n                if (this._sasl_success_handler) {\n                  this.deleteHandler(this._sasl_success_handler);\n                  this._sasl_success_handler = null;\n                }\n\n                if (this._sasl_challenge_handler) {\n                  this.deleteHandler(this._sasl_challenge_handler);\n                  this._sasl_challenge_handler = null;\n                }\n\n                if (this._sasl_mechanism) this._sasl_mechanism.onFailure();\n\n                this._changeConnectStatus(Strophe.Status.AUTHFAIL, null, elem);\n\n                return false;\n              },\n\n              /** PrivateFunction: _auth2_cb\n               *  _Private_ handler to finish legacy authentication.\n               *\n               *  This handler is called when the result from the jabber:iq:auth\n               *  <iq/> stanza is returned.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The stanza that triggered the callback.\n               *\n               *  Returns:\n               *    false to remove the handler.\n               */\n              _auth2_cb: function _auth2_cb(elem) {\n                if (elem.getAttribute(\"type\") === \"result\") {\n                  this.authenticated = true;\n\n                  this._changeConnectStatus(Strophe.Status.CONNECTED, null);\n                } else if (elem.getAttribute(\"type\") === \"error\") {\n                  this._changeConnectStatus(Strophe.Status.AUTHFAIL, null, elem);\n\n                  this.disconnect('authentication failed');\n                }\n\n                return false;\n              },\n\n              /** PrivateFunction: _addSysTimedHandler\n               *  _Private_ function to add a system level timed handler.\n               *\n               *  This function is used to add a Strophe.TimedHandler for the\n               *  library code.  System timed handlers are allowed to run before\n               *  authentication is complete.\n               *\n               *  Parameters:\n               *    (Integer) period - The period of the handler.\n               *    (Function) handler - The callback function.\n               */\n              _addSysTimedHandler: function _addSysTimedHandler(period, handler) {\n                var thand = new Strophe.TimedHandler(period, handler);\n                thand.user = false;\n                this.addTimeds.push(thand);\n                return thand;\n              },\n\n              /** PrivateFunction: _addSysHandler\n               *  _Private_ function to add a system level stanza handler.\n               *\n               *  This function is used to add a Strophe.Handler for the\n               *  library code.  System stanza handlers are allowed to run before\n               *  authentication is complete.\n               *\n               *  Parameters:\n               *    (Function) handler - The callback function.\n               *    (String) ns - The namespace to match.\n               *    (String) name - The stanza name to match.\n               *    (String) type - The stanza type attribute to match.\n               *    (String) id - The stanza id attribute to match.\n               */\n              _addSysHandler: function _addSysHandler(handler, ns, name, type, id) {\n                var hand = new Strophe.Handler(handler, ns, name, type, id);\n                hand.user = false;\n                this.addHandlers.push(hand);\n                return hand;\n              },\n\n              /** PrivateFunction: _onDisconnectTimeout\n               *  _Private_ timeout handler for handling non-graceful disconnection.\n               *\n               *  If the graceful disconnect process does not complete within the\n               *  time allotted, this handler finishes the disconnect anyway.\n               *\n               *  Returns:\n               *    false to remove the handler.\n               */\n              _onDisconnectTimeout: function _onDisconnectTimeout() {\n                Strophe.debug(\"_onDisconnectTimeout was called\");\n\n                this._changeConnectStatus(Strophe.Status.CONNTIMEOUT, null);\n\n                this._proto._onDisconnectTimeout(); // actually disconnect\n\n\n                this._doDisconnect();\n\n                return false;\n              },\n\n              /** PrivateFunction: _onIdle\n               *  _Private_ handler to process events during idle cycle.\n               *\n               *  This handler is called every 100ms to fire timed handlers that\n               *  are ready and keep poll requests going.\n               */\n              _onIdle: function _onIdle() {\n                var _this8 = this;\n\n                // add timed handlers scheduled for addition\n                // NOTE: we add before remove in the case a timed handler is\n                // added and then deleted before the next _onIdle() call.\n                while (this.addTimeds.length > 0) {\n                  this.timedHandlers.push(this.addTimeds.pop());\n                } // remove timed handlers that have been scheduled for deletion\n\n\n                while (this.removeTimeds.length > 0) {\n                  var thand = this.removeTimeds.pop();\n                  var i = this.timedHandlers.indexOf(thand);\n\n                  if (i >= 0) {\n                    this.timedHandlers.splice(i, 1);\n                  }\n                } // call ready timed handlers\n\n\n                var now = new Date().getTime();\n                var newList = [];\n\n                for (var _i6 = 0; _i6 < this.timedHandlers.length; _i6++) {\n                  var _thand = this.timedHandlers[_i6];\n\n                  if (this.authenticated || !_thand.user) {\n                    var since = _thand.lastCalled + _thand.period;\n\n                    if (since - now <= 0) {\n                      if (_thand.run()) {\n                        newList.push(_thand);\n                      }\n                    } else {\n                      newList.push(_thand);\n                    }\n                  }\n                }\n\n                this.timedHandlers = newList;\n                clearTimeout(this._idleTimeout);\n\n                this._proto._onIdle(); // reactivate the timer only if connected\n\n\n                if (this.connected) {\n                  this._idleTimeout = setTimeout(function () {\n                    return _this8._onIdle();\n                  }, 100);\n                }\n              }\n            };\n            /** Class: Strophe.SASLMechanism\n             *\n             *  encapsulates SASL authentication mechanisms.\n             *\n             *  User code may override the priority for each mechanism or disable it completely.\n             *  See <priority> for information about changing priority and <test> for informatian on\n             *  how to disable a mechanism.\n             *\n             *  By default, all mechanisms are enabled and the priorities are\n             *\n             *      OAUTHBEARER - 60\n             *      SCRAM-SHA1 - 50\n             *      DIGEST-MD5 - 40\n             *      PLAIN - 30\n             *      ANONYMOUS - 20\n             *      EXTERNAL - 10\n             *\n             *  See: Strophe.Connection.addSupportedSASLMechanisms\n             */\n\n            /**\n             * PrivateConstructor: Strophe.SASLMechanism\n             * SASL auth mechanism abstraction.\n             *\n             *  Parameters:\n             *    (String) name - SASL Mechanism name.\n             *    (Boolean) isClientFirst - If client should send response first without challenge.\n             *    (Number) priority - Priority.\n             *\n             *  Returns:\n             *    A new Strophe.SASLMechanism object.\n             */\n\n            Strophe.SASLMechanism = function (name, isClientFirst, priority) {\n              /** PrivateVariable: name\n               *  Mechanism name.\n               */\n              this.name = name;\n              /** PrivateVariable: isClientFirst\n               *  If client sends response without initial server challenge.\n               */\n\n              this.isClientFirst = isClientFirst;\n              /** Variable: priority\n               *  Determines which <SASLMechanism> is chosen for authentication (Higher is better).\n               *  Users may override this to prioritize mechanisms differently.\n               *\n               *  In the default configuration the priorities are\n               *\n               *  SCRAM-SHA1 - 40\n               *  DIGEST-MD5 - 30\n               *  Plain - 20\n               *\n               *  Example: (This will cause Strophe to choose the mechanism that the server sent first)\n               *\n               *  > Strophe.SASLMD5.priority = Strophe.SASLSHA1.priority;\n               *\n               *  See <SASL mechanisms> for a list of available mechanisms.\n               *\n               */\n\n              this.priority = priority;\n            };\n\n            Strophe.SASLMechanism.prototype = {\n              /**\n               *  Function: test\n               *  Checks if mechanism able to run.\n               *  To disable a mechanism, make this return false;\n               *\n               *  To disable plain authentication run\n               *  > Strophe.SASLPlain.test = function() {\n               *  >   return false;\n               *  > }\n               *\n               *  See <SASL mechanisms> for a list of available mechanisms.\n               *\n               *  Parameters:\n               *    (Strophe.Connection) connection - Target Connection.\n               *\n               *  Returns:\n               *    (Boolean) If mechanism was able to run.\n               */\n              test: function test(connection) {\n                return true;\n              },\n\n              /** PrivateFunction: onStart\n               *  Called before starting mechanism on some connection.\n               *\n               *  Parameters:\n               *    (Strophe.Connection) connection - Target Connection.\n               */\n              onStart: function onStart(connection) {\n                this._connection = connection;\n              },\n\n              /** PrivateFunction: onChallenge\n               *  Called by protocol implementation on incoming challenge. If client is\n               *  first (isClientFirst === true) challenge will be null on the first call.\n               *\n               *  Parameters:\n               *    (Strophe.Connection) connection - Target Connection.\n               *    (String) challenge - current challenge to handle.\n               *\n               *  Returns:\n               *    (String) Mechanism response.\n               */\n              onChallenge: function onChallenge(connection, challenge) {\n                throw new Error(\"You should implement challenge handling!\");\n              },\n\n              /** PrivateFunction: onFailure\n               *  Protocol informs mechanism implementation about SASL failure.\n               */\n              onFailure: function onFailure() {\n                this._connection = null;\n              },\n\n              /** PrivateFunction: onSuccess\n               *  Protocol informs mechanism implementation about SASL success.\n               */\n              onSuccess: function onSuccess() {\n                this._connection = null;\n              }\n            };\n            /** Constants: SASL mechanisms\n             *  Available authentication mechanisms\n             *\n             *  Strophe.SASLAnonymous - SASL ANONYMOUS authentication.\n             *  Strophe.SASLPlain - SASL PLAIN authentication.\n             *  Strophe.SASLMD5 - SASL DIGEST-MD5 authentication\n             *  Strophe.SASLSHA1 - SASL SCRAM-SHA1 authentication\n             *  Strophe.SASLOAuthBearer - SASL OAuth Bearer authentication\n             *  Strophe.SASLExternal - SASL EXTERNAL authentication\n             *  Strophe.SASLXOAuth2 - SASL X-OAuth2 authentication\n             */\n            // Building SASL callbacks\n\n            /** PrivateConstructor: SASLAnonymous\n             *  SASL ANONYMOUS authentication.\n             */\n\n            Strophe.SASLAnonymous = function () {};\n\n            Strophe.SASLAnonymous.prototype = new Strophe.SASLMechanism(\"ANONYMOUS\", false, 20);\n\n            Strophe.SASLAnonymous.prototype.test = function (connection) {\n              return connection.authcid === null;\n            };\n            /** PrivateConstructor: SASLPlain\n             *  SASL PLAIN authentication.\n             */\n\n\n            Strophe.SASLPlain = function () {};\n\n            Strophe.SASLPlain.prototype = new Strophe.SASLMechanism(\"PLAIN\", true, 50);\n\n            Strophe.SASLPlain.prototype.test = function (connection) {\n              return connection.authcid !== null;\n            };\n\n            Strophe.SASLPlain.prototype.onChallenge = function (connection) {\n              var auth_str = connection.authzid;\n              auth_str = auth_str + \"\\0\";\n              auth_str = auth_str + connection.authcid;\n              auth_str = auth_str + \"\\0\";\n              auth_str = auth_str + connection.pass;\n              return utils.utf16to8(auth_str);\n            };\n            /** PrivateConstructor: SASLSHA1\n             *  SASL SCRAM SHA 1 authentication.\n             */\n\n\n            Strophe.SASLSHA1 = function () {};\n\n            Strophe.SASLSHA1.prototype = new Strophe.SASLMechanism(\"SCRAM-SHA-1\", true, 70);\n\n            Strophe.SASLSHA1.prototype.test = function (connection) {\n              return connection.authcid !== null;\n            };\n\n            Strophe.SASLSHA1.prototype.onChallenge = function (connection, challenge, test_cnonce) {\n              var cnonce = test_cnonce || MD5.hexdigest(\"\" + Math.random() * 1234567890);\n              var auth_str = \"n=\" + utils.utf16to8(connection.authcid);\n              auth_str += \",r=\";\n              auth_str += cnonce;\n              connection._sasl_data.cnonce = cnonce;\n              connection._sasl_data[\"client-first-message-bare\"] = auth_str;\n              auth_str = \"n,,\" + auth_str;\n\n              this.onChallenge = function (connection, challenge) {\n                var nonce, salt, iter, Hi, U, U_old, i, k;\n                var responseText = \"c=biws,\";\n                var authMessage = \"\".concat(connection._sasl_data[\"client-first-message-bare\"], \",\").concat(challenge, \",\");\n                var cnonce = connection._sasl_data.cnonce;\n                var attribMatch = /([a-z]+)=([^,]+)(,|$)/;\n\n                while (challenge.match(attribMatch)) {\n                  var matches = challenge.match(attribMatch);\n                  challenge = challenge.replace(matches[0], \"\");\n\n                  switch (matches[1]) {\n                    case \"r\":\n                      nonce = matches[2];\n                      break;\n\n                    case \"s\":\n                      salt = matches[2];\n                      break;\n\n                    case \"i\":\n                      iter = matches[2];\n                      break;\n                  }\n                }\n\n                if (nonce.substr(0, cnonce.length) !== cnonce) {\n                  connection._sasl_data = {};\n                  return connection._sasl_failure_cb();\n                }\n\n                responseText += \"r=\" + nonce;\n                authMessage += responseText;\n                salt = atob(salt);\n                salt += \"\\x00\\x00\\x00\\x01\";\n                var pass = utils.utf16to8(connection.pass);\n                Hi = U_old = SHA1.core_hmac_sha1(pass, salt);\n\n                for (i = 1; i < iter; i++) {\n                  U = SHA1.core_hmac_sha1(pass, SHA1.binb2str(U_old));\n\n                  for (k = 0; k < 5; k++) {\n                    Hi[k] ^= U[k];\n                  }\n\n                  U_old = U;\n                }\n\n                Hi = SHA1.binb2str(Hi);\n                var clientKey = SHA1.core_hmac_sha1(Hi, \"Client Key\");\n                var serverKey = SHA1.str_hmac_sha1(Hi, \"Server Key\");\n                var clientSignature = SHA1.core_hmac_sha1(SHA1.str_sha1(SHA1.binb2str(clientKey)), authMessage);\n                connection._sasl_data[\"server-signature\"] = SHA1.b64_hmac_sha1(serverKey, authMessage);\n\n                for (k = 0; k < 5; k++) {\n                  clientKey[k] ^= clientSignature[k];\n                }\n\n                responseText += \",p=\" + btoa(SHA1.binb2str(clientKey));\n                return responseText;\n              };\n\n              return auth_str;\n            };\n            /** PrivateConstructor: SASLMD5\n             *  SASL DIGEST MD5 authentication.\n             */\n\n\n            Strophe.SASLMD5 = function () {};\n\n            Strophe.SASLMD5.prototype = new Strophe.SASLMechanism(\"DIGEST-MD5\", false, 60);\n\n            Strophe.SASLMD5.prototype.test = function (connection) {\n              return connection.authcid !== null;\n            };\n            /** PrivateFunction: _quote\n             *  _Private_ utility function to backslash escape and quote strings.\n             *\n             *  Parameters:\n             *    (String) str - The string to be quoted.\n             *\n             *  Returns:\n             *    quoted string\n             */\n\n\n            Strophe.SASLMD5.prototype._quote = function (str) {\n              return '\"' + str.replace(/\\\\/g, \"\\\\\\\\\").replace(/\"/g, '\\\\\"') + '\"'; //\" end string workaround for emacs\n            };\n\n            Strophe.SASLMD5.prototype.onChallenge = function (connection, challenge, test_cnonce) {\n              var attribMatch = /([a-z]+)=(\"[^\"]+\"|[^,\"]+)(?:,|$)/;\n              var cnonce = test_cnonce || MD5.hexdigest(\"\" + Math.random() * 1234567890);\n              var realm = \"\";\n              var host = null;\n              var nonce = \"\";\n              var qop = \"\";\n\n              while (challenge.match(attribMatch)) {\n                var matches = challenge.match(attribMatch);\n                challenge = challenge.replace(matches[0], \"\");\n                matches[2] = matches[2].replace(/^\"(.+)\"$/, \"$1\");\n\n                switch (matches[1]) {\n                  case \"realm\":\n                    realm = matches[2];\n                    break;\n\n                  case \"nonce\":\n                    nonce = matches[2];\n                    break;\n\n                  case \"qop\":\n                    qop = matches[2];\n                    break;\n\n                  case \"host\":\n                    host = matches[2];\n                    break;\n                }\n              }\n\n              var digest_uri = connection.servtype + \"/\" + connection.domain;\n\n              if (host !== null) {\n                digest_uri = digest_uri + \"/\" + host;\n              }\n\n              var cred = utils.utf16to8(connection.authcid + \":\" + realm + \":\" + this._connection.pass);\n              var A1 = MD5.hash(cred) + \":\" + nonce + \":\" + cnonce;\n              var A2 = 'AUTHENTICATE:' + digest_uri;\n              var responseText = \"\";\n              responseText += 'charset=utf-8,';\n              responseText += 'username=' + this._quote(utils.utf16to8(connection.authcid)) + ',';\n              responseText += 'realm=' + this._quote(realm) + ',';\n              responseText += 'nonce=' + this._quote(nonce) + ',';\n              responseText += 'nc=00000001,';\n              responseText += 'cnonce=' + this._quote(cnonce) + ',';\n              responseText += 'digest-uri=' + this._quote(digest_uri) + ',';\n              responseText += 'response=' + MD5.hexdigest(MD5.hexdigest(A1) + \":\" + nonce + \":00000001:\" + cnonce + \":auth:\" + MD5.hexdigest(A2)) + \",\";\n              responseText += 'qop=auth';\n\n              this.onChallenge = function () {\n                return \"\";\n              };\n\n              return responseText;\n            };\n            /** PrivateConstructor: SASLOAuthBearer\n             *  SASL OAuth Bearer authentication.\n             */\n\n\n            Strophe.SASLOAuthBearer = function () {};\n\n            Strophe.SASLOAuthBearer.prototype = new Strophe.SASLMechanism(\"OAUTHBEARER\", true, 40);\n\n            Strophe.SASLOAuthBearer.prototype.test = function (connection) {\n              return connection.pass !== null;\n            };\n\n            Strophe.SASLOAuthBearer.prototype.onChallenge = function (connection) {\n              var auth_str = 'n,';\n\n              if (connection.authcid !== null) {\n                auth_str = auth_str + 'a=' + connection.authzid;\n              }\n\n              auth_str = auth_str + ',';\n              auth_str = auth_str + \"\\x01\";\n              auth_str = auth_str + 'auth=Bearer ';\n              auth_str = auth_str + connection.pass;\n              auth_str = auth_str + \"\\x01\";\n              auth_str = auth_str + \"\\x01\";\n              return utils.utf16to8(auth_str);\n            };\n            /** PrivateConstructor: SASLExternal\n             *  SASL EXTERNAL authentication.\n             *\n             *  The EXTERNAL mechanism allows a client to request the server to use\n             *  credentials established by means external to the mechanism to\n             *  authenticate the client. The external means may be, for instance,\n             *  TLS services.\n             */\n\n\n            Strophe.SASLExternal = function () {};\n\n            Strophe.SASLExternal.prototype = new Strophe.SASLMechanism(\"EXTERNAL\", true, 10);\n\n            Strophe.SASLExternal.prototype.onChallenge = function (connection) {\n              /** According to XEP-178, an authzid SHOULD NOT be presented when the\n               * authcid contained or implied in the client certificate is the JID (i.e.\n               * authzid) with which the user wants to log in as.\n               *\n               * To NOT send the authzid, the user should therefore set the authcid equal\n               * to the JID when instantiating a new Strophe.Connection object.\n               */\n              return connection.authcid === connection.authzid ? '' : connection.authzid;\n            };\n            /** PrivateConstructor: SASLXOAuth2\n             *  SASL X-OAuth2 authentication.\n             */\n\n\n            Strophe.SASLXOAuth2 = function () {};\n\n            Strophe.SASLXOAuth2.prototype = new Strophe.SASLMechanism(\"X-OAUTH2\", true, 30);\n\n            Strophe.SASLXOAuth2.prototype.test = function (connection) {\n              return connection.pass !== null;\n            };\n\n            Strophe.SASLXOAuth2.prototype.onChallenge = function (connection) {\n              var auth_str = \"\\0\";\n\n              if (connection.authcid !== null) {\n                auth_str = auth_str + connection.authzid;\n              }\n\n              auth_str = auth_str + \"\\0\";\n              auth_str = auth_str + connection.pass;\n              return utils.utf16to8(auth_str);\n            };\n            var core = {\n              'Strophe': Strophe,\n              '$build': $build,\n              '$iq': $iq,\n              '$msg': $msg,\n              '$pres': $pres,\n              'SHA1': SHA1,\n              'MD5': MD5,\n              'b64_hmac_sha1': SHA1.b64_hmac_sha1,\n              'b64_sha1': SHA1.b64_sha1,\n              'str_hmac_sha1': SHA1.str_hmac_sha1,\n              'str_sha1': SHA1.str_sha1\n            };\n\n            /*\n                This program is distributed under the terms of the MIT license.\n                Please see the LICENSE file for details.\n\n                Copyright 2006-2008, OGG, LLC\n            */\n            var Strophe$1 = core.Strophe;\n            var $build$1 = core.$build;\n            /** PrivateClass: Strophe.Request\n             *  _Private_ helper class that provides a cross implementation abstraction\n             *  for a BOSH related XMLHttpRequest.\n             *\n             *  The Strophe.Request class is used internally to encapsulate BOSH request\n             *  information.  It is not meant to be used from user's code.\n             */\n\n            /** PrivateConstructor: Strophe.Request\n             *  Create and initialize a new Strophe.Request object.\n             *\n             *  Parameters:\n             *    (XMLElement) elem - The XML data to be sent in the request.\n             *    (Function) func - The function that will be called when the\n             *      XMLHttpRequest readyState changes.\n             *    (Integer) rid - The BOSH rid attribute associated with this request.\n             *    (Integer) sends - The number of times this same request has been sent.\n             */\n\n            Strophe$1.Request = function (elem, func, rid, sends) {\n              this.id = ++Strophe$1._requestId;\n              this.xmlData = elem;\n              this.data = Strophe$1.serialize(elem); // save original function in case we need to make a new request\n              // from this one.\n\n              this.origFunc = func;\n              this.func = func;\n              this.rid = rid;\n              this.date = NaN;\n              this.sends = sends || 0;\n              this.abort = false;\n              this.dead = null;\n\n              this.age = function () {\n                if (!this.date) {\n                  return 0;\n                }\n\n                var now = new Date();\n                return (now - this.date) / 1000;\n              };\n\n              this.timeDead = function () {\n                if (!this.dead) {\n                  return 0;\n                }\n\n                var now = new Date();\n                return (now - this.dead) / 1000;\n              };\n\n              this.xhr = this._newXHR();\n            };\n\n            Strophe$1.Request.prototype = {\n              /** PrivateFunction: getResponse\n               *  Get a response from the underlying XMLHttpRequest.\n               *\n               *  This function attempts to get a response from the request and checks\n               *  for errors.\n               *\n               *  Throws:\n               *    \"parsererror\" - A parser error occured.\n               *    \"bad-format\" - The entity has sent XML that cannot be processed.\n               *\n               *  Returns:\n               *    The DOM element tree of the response.\n               */\n              getResponse: function getResponse() {\n                var node = null;\n\n                if (this.xhr.responseXML && this.xhr.responseXML.documentElement) {\n                  node = this.xhr.responseXML.documentElement;\n\n                  if (node.tagName === \"parsererror\") {\n                    Strophe$1.error(\"invalid response received\");\n                    Strophe$1.error(\"responseText: \" + this.xhr.responseText);\n                    Strophe$1.error(\"responseXML: \" + Strophe$1.serialize(this.xhr.responseXML));\n                    throw new Error(\"parsererror\");\n                  }\n                } else if (this.xhr.responseText) {\n                  // In React Native, we may get responseText but no responseXML.  We can try to parse it manually.\n                  Strophe$1.debug(\"Got responseText but no responseXML; attempting to parse it with DOMParser...\");\n                  node = new DOMParser().parseFromString(this.xhr.responseText, 'application/xml').documentElement;\n\n                  if (!node) {\n                    throw new Error('Parsing produced null node');\n                  } else if (node.querySelector('parsererror')) {\n                    Strophe$1.error(\"invalid response received: \" + node.querySelector('parsererror').textContent);\n                    Strophe$1.error(\"responseText: \" + this.xhr.responseText);\n                    var error = new Error();\n                    error.name = Strophe$1.ErrorCondition.BAD_FORMAT;\n                    throw error;\n                  }\n                }\n\n                return node;\n              },\n\n              /** PrivateFunction: _newXHR\n               *  _Private_ helper function to create XMLHttpRequests.\n               *\n               *  This function creates XMLHttpRequests across all implementations.\n               *\n               *  Returns:\n               *    A new XMLHttpRequest.\n               */\n              _newXHR: function _newXHR() {\n                var xhr = null;\n\n                if (window.XMLHttpRequest) {\n                  xhr = new XMLHttpRequest();\n\n                  if (xhr.overrideMimeType) {\n                    xhr.overrideMimeType(\"text/xml; charset=utf-8\");\n                  }\n                } else if (window.ActiveXObject) {\n                  xhr = new ActiveXObject(\"Microsoft.XMLHTTP\");\n                } // use Function.bind() to prepend ourselves as an argument\n\n\n                xhr.onreadystatechange = this.func.bind(null, this);\n                return xhr;\n              }\n            };\n            /** Class: Strophe.Bosh\n             *  _Private_ helper class that handles BOSH Connections\n             *\n             *  The Strophe.Bosh class is used internally by Strophe.Connection\n             *  to encapsulate BOSH sessions. It is not meant to be used from user's code.\n             */\n\n            /** File: bosh.js\n             *  A JavaScript library to enable BOSH in Strophejs.\n             *\n             *  this library uses Bidirectional-streams Over Synchronous HTTP (BOSH)\n             *  to emulate a persistent, stateful, two-way connection to an XMPP server.\n             *  More information on BOSH can be found in XEP 124.\n             */\n\n            /** PrivateConstructor: Strophe.Bosh\n             *  Create and initialize a Strophe.Bosh object.\n             *\n             *  Parameters:\n             *    (Strophe.Connection) connection - The Strophe.Connection that will use BOSH.\n             *\n             *  Returns:\n             *    A new Strophe.Bosh object.\n             */\n\n            Strophe$1.Bosh = function (connection) {\n              this._conn = connection;\n              /* request id for body tags */\n\n              this.rid = Math.floor(Math.random() * 4294967295);\n              /* The current session ID. */\n\n              this.sid = null; // default BOSH values\n\n              this.hold = 1;\n              this.wait = 60;\n              this.window = 5;\n              this.errors = 0;\n              this.inactivity = null;\n              this.lastResponseHeaders = null;\n              this._requests = [];\n            };\n\n            Strophe$1.Bosh.prototype = {\n              /** Variable: strip\n               *\n               *  BOSH-Connections will have all stanzas wrapped in a <body> tag when\n               *  passed to <Strophe.Connection.xmlInput> or <Strophe.Connection.xmlOutput>.\n               *  To strip this tag, User code can set <Strophe.Bosh.strip> to \"body\":\n               *\n               *  > Strophe.Bosh.prototype.strip = \"body\";\n               *\n               *  This will enable stripping of the body tag in both\n               *  <Strophe.Connection.xmlInput> and <Strophe.Connection.xmlOutput>.\n               */\n              strip: null,\n\n              /** PrivateFunction: _buildBody\n               *  _Private_ helper function to generate the <body/> wrapper for BOSH.\n               *\n               *  Returns:\n               *    A Strophe.Builder with a <body/> element.\n               */\n              _buildBody: function _buildBody() {\n                var bodyWrap = $build$1('body', {\n                  'rid': this.rid++,\n                  'xmlns': Strophe$1.NS.HTTPBIND\n                });\n\n                if (this.sid !== null) {\n                  bodyWrap.attrs({\n                    'sid': this.sid\n                  });\n                }\n\n                if (this._conn.options.keepalive && this._conn._sessionCachingSupported()) {\n                  this._cacheSession();\n                }\n\n                return bodyWrap;\n              },\n\n              /** PrivateFunction: _reset\n               *  Reset the connection.\n               *\n               *  This function is called by the reset function of the Strophe Connection\n               */\n              _reset: function _reset() {\n                this.rid = Math.floor(Math.random() * 4294967295);\n                this.sid = null;\n                this.errors = 0;\n\n                if (this._conn._sessionCachingSupported()) {\n                  window.sessionStorage.removeItem('strophe-bosh-session');\n                }\n\n                this._conn.nextValidRid(this.rid);\n              },\n\n              /** PrivateFunction: _connect\n               *  _Private_ function that initializes the BOSH connection.\n               *\n               *  Creates and sends the Request that initializes the BOSH connection.\n               */\n              _connect: function _connect(wait, hold, route) {\n                this.wait = wait || this.wait;\n                this.hold = hold || this.hold;\n                this.errors = 0;\n\n                var body = this._buildBody().attrs({\n                  \"to\": this._conn.domain,\n                  \"xml:lang\": \"en\",\n                  \"wait\": this.wait,\n                  \"hold\": this.hold,\n                  \"content\": \"text/xml; charset=utf-8\",\n                  \"ver\": \"1.6\",\n                  \"xmpp:version\": \"1.0\",\n                  \"xmlns:xmpp\": Strophe$1.NS.BOSH\n                });\n\n                if (route) {\n                  body.attrs({\n                    'route': route\n                  });\n                }\n\n                var _connect_cb = this._conn._connect_cb;\n\n                this._requests.push(new Strophe$1.Request(body.tree(), this._onRequestStateChange.bind(this, _connect_cb.bind(this._conn)), body.tree().getAttribute(\"rid\")));\n\n                this._throttledRequestHandler();\n              },\n\n              /** PrivateFunction: _attach\n               *  Attach to an already created and authenticated BOSH session.\n               *\n               *  This function is provided to allow Strophe to attach to BOSH\n               *  sessions which have been created externally, perhaps by a Web\n               *  application.  This is often used to support auto-login type features\n               *  without putting user credentials into the page.\n               *\n               *  Parameters:\n               *    (String) jid - The full JID that is bound by the session.\n               *    (String) sid - The SID of the BOSH session.\n               *    (String) rid - The current RID of the BOSH session.  This RID\n               *      will be used by the next request.\n               *    (Function) callback The connect callback function.\n               *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n               *      time the server will wait before returning an empty result for\n               *      a request.  The default setting of 60 seconds is recommended.\n               *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n               *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n               *      number of connections the server will hold at one time.  This\n               *      should almost always be set to 1 (the default).\n               *    (Integer) wind - The optional HTTBIND window value.  This is the\n               *      allowed range of request ids that are valid.  The default is 5.\n               */\n              _attach: function _attach(jid, sid, rid, callback, wait, hold, wind) {\n                this._conn.jid = jid;\n                this.sid = sid;\n                this.rid = rid;\n                this._conn.connect_callback = callback;\n                this._conn.domain = Strophe$1.getDomainFromJid(this._conn.jid);\n                this._conn.authenticated = true;\n                this._conn.connected = true;\n                this.wait = wait || this.wait;\n                this.hold = hold || this.hold;\n                this.window = wind || this.window;\n\n                this._conn._changeConnectStatus(Strophe$1.Status.ATTACHED, null);\n              },\n\n              /** PrivateFunction: _restore\n               *  Attempt to restore a cached BOSH session\n               *\n               *  Parameters:\n               *    (String) jid - The full JID that is bound by the session.\n               *      This parameter is optional but recommended, specifically in cases\n               *      where prebinded BOSH sessions are used where it's important to know\n               *      that the right session is being restored.\n               *    (Function) callback The connect callback function.\n               *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n               *      time the server will wait before returning an empty result for\n               *      a request.  The default setting of 60 seconds is recommended.\n               *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n               *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n               *      number of connections the server will hold at one time.  This\n               *      should almost always be set to 1 (the default).\n               *    (Integer) wind - The optional HTTBIND window value.  This is the\n               *      allowed range of request ids that are valid.  The default is 5.\n               */\n              _restore: function _restore(jid, callback, wait, hold, wind) {\n                var session = JSON.parse(window.sessionStorage.getItem('strophe-bosh-session'));\n\n                if (typeof session !== \"undefined\" && session !== null && session.rid && session.sid && session.jid && (typeof jid === \"undefined\" || jid === null || Strophe$1.getBareJidFromJid(session.jid) === Strophe$1.getBareJidFromJid(jid) || // If authcid is null, then it's an anonymous login, so\n                // we compare only the domains:\n                Strophe$1.getNodeFromJid(jid) === null && Strophe$1.getDomainFromJid(session.jid) === jid)) {\n                  this._conn.restored = true;\n\n                  this._attach(session.jid, session.sid, session.rid, callback, wait, hold, wind);\n                } else {\n                  var error = new Error(\"_restore: no restoreable session.\");\n                  error.name = \"StropheSessionError\";\n                  throw error;\n                }\n              },\n\n              /** PrivateFunction: _cacheSession\n               *  _Private_ handler for the beforeunload event.\n               *\n               *  This handler is used to process the Bosh-part of the initial request.\n               *  Parameters:\n               *    (Strophe.Request) bodyWrap - The received stanza.\n               */\n              _cacheSession: function _cacheSession() {\n                if (this._conn.authenticated) {\n                  if (this._conn.jid && this.rid && this.sid) {\n                    window.sessionStorage.setItem('strophe-bosh-session', JSON.stringify({\n                      'jid': this._conn.jid,\n                      'rid': this.rid,\n                      'sid': this.sid\n                    }));\n                  }\n                } else {\n                  window.sessionStorage.removeItem('strophe-bosh-session');\n                }\n              },\n\n              /** PrivateFunction: _connect_cb\n               *  _Private_ handler for initial connection request.\n               *\n               *  This handler is used to process the Bosh-part of the initial request.\n               *  Parameters:\n               *    (Strophe.Request) bodyWrap - The received stanza.\n               */\n              _connect_cb: function _connect_cb(bodyWrap) {\n                var typ = bodyWrap.getAttribute(\"type\");\n\n                if (typ !== null && typ === \"terminate\") {\n                  // an error occurred\n                  var cond = bodyWrap.getAttribute(\"condition\");\n                  Strophe$1.error(\"BOSH-Connection failed: \" + cond);\n                  var conflict = bodyWrap.getElementsByTagName(\"conflict\");\n\n                  if (cond !== null) {\n                    if (cond === \"remote-stream-error\" && conflict.length > 0) {\n                      cond = \"conflict\";\n                    }\n\n                    this._conn._changeConnectStatus(Strophe$1.Status.CONNFAIL, cond);\n                  } else {\n                    this._conn._changeConnectStatus(Strophe$1.Status.CONNFAIL, \"unknown\");\n                  }\n\n                  this._conn._doDisconnect(cond);\n\n                  return Strophe$1.Status.CONNFAIL;\n                } // check to make sure we don't overwrite these if _connect_cb is\n                // called multiple times in the case of missing stream:features\n\n\n                if (!this.sid) {\n                  this.sid = bodyWrap.getAttribute(\"sid\");\n                }\n\n                var wind = bodyWrap.getAttribute('requests');\n\n                if (wind) {\n                  this.window = parseInt(wind, 10);\n                }\n\n                var hold = bodyWrap.getAttribute('hold');\n\n                if (hold) {\n                  this.hold = parseInt(hold, 10);\n                }\n\n                var wait = bodyWrap.getAttribute('wait');\n\n                if (wait) {\n                  this.wait = parseInt(wait, 10);\n                }\n\n                var inactivity = bodyWrap.getAttribute('inactivity');\n\n                if (inactivity) {\n                  this.inactivity = parseInt(inactivity, 10);\n                }\n              },\n\n              /** PrivateFunction: _disconnect\n               *  _Private_ part of Connection.disconnect for Bosh\n               *\n               *  Parameters:\n               *    (Request) pres - This stanza will be sent before disconnecting.\n               */\n              _disconnect: function _disconnect(pres) {\n                this._sendTerminate(pres);\n              },\n\n              /** PrivateFunction: _doDisconnect\n               *  _Private_ function to disconnect.\n               *\n               *  Resets the SID and RID.\n               */\n              _doDisconnect: function _doDisconnect() {\n                this.sid = null;\n                this.rid = Math.floor(Math.random() * 4294967295);\n\n                if (this._conn._sessionCachingSupported()) {\n                  window.sessionStorage.removeItem('strophe-bosh-session');\n                }\n\n                this._conn.nextValidRid(this.rid);\n              },\n\n              /** PrivateFunction: _emptyQueue\n               * _Private_ function to check if the Request queue is empty.\n               *\n               *  Returns:\n               *    True, if there are no Requests queued, False otherwise.\n               */\n              _emptyQueue: function _emptyQueue() {\n                return this._requests.length === 0;\n              },\n\n              /** PrivateFunction: _callProtocolErrorHandlers\n               *  _Private_ function to call error handlers registered for HTTP errors.\n               *\n               *  Parameters:\n               *    (Strophe.Request) req - The request that is changing readyState.\n               */\n              _callProtocolErrorHandlers: function _callProtocolErrorHandlers(req) {\n                var reqStatus = this._getRequestStatus(req);\n\n                var err_callback = this._conn.protocolErrorHandlers.HTTP[reqStatus];\n\n                if (err_callback) {\n                  err_callback.call(this, reqStatus);\n                }\n              },\n\n              /** PrivateFunction: _hitError\n               *  _Private_ function to handle the error count.\n               *\n               *  Requests are resent automatically until their error count reaches\n               *  5.  Each time an error is encountered, this function is called to\n               *  increment the count and disconnect if the count is too high.\n               *\n               *  Parameters:\n               *    (Integer) reqStatus - The request status.\n               */\n              _hitError: function _hitError(reqStatus) {\n                this.errors++;\n                Strophe$1.warn(\"request errored, status: \" + reqStatus + \", number of errors: \" + this.errors);\n\n                if (this.errors > 4) {\n                  this._conn._onDisconnectTimeout();\n                }\n              },\n\n              /** PrivateFunction: _no_auth_received\n               *\n               * Called on stream start/restart when no stream:features\n               * has been received and sends a blank poll request.\n               */\n              _no_auth_received: function _no_auth_received(callback) {\n                Strophe$1.warn(\"Server did not yet offer a supported authentication \" + \"mechanism. Sending a blank poll request.\");\n\n                if (callback) {\n                  callback = callback.bind(this._conn);\n                } else {\n                  callback = this._conn._connect_cb.bind(this._conn);\n                }\n\n                var body = this._buildBody();\n\n                this._requests.push(new Strophe$1.Request(body.tree(), this._onRequestStateChange.bind(this, callback), body.tree().getAttribute(\"rid\")));\n\n                this._throttledRequestHandler();\n              },\n\n              /** PrivateFunction: _onDisconnectTimeout\n               *  _Private_ timeout handler for handling non-graceful disconnection.\n               *\n               *  Cancels all remaining Requests and clears the queue.\n               */\n              _onDisconnectTimeout: function _onDisconnectTimeout() {\n                this._abortAllRequests();\n              },\n\n              /** PrivateFunction: _abortAllRequests\n               *  _Private_ helper function that makes sure all pending requests are aborted.\n               */\n              _abortAllRequests: function _abortAllRequests() {\n                while (this._requests.length > 0) {\n                  var req = this._requests.pop();\n\n                  req.abort = true;\n                  req.xhr.abort();\n\n                  req.xhr.onreadystatechange = function () {};\n                }\n              },\n\n              /** PrivateFunction: _onIdle\n               *  _Private_ handler called by Strophe.Connection._onIdle\n               *\n               *  Sends all queued Requests or polls with empty Request if there are none.\n               */\n              _onIdle: function _onIdle() {\n                var data = this._conn._data; // if no requests are in progress, poll\n\n                if (this._conn.authenticated && this._requests.length === 0 && data.length === 0 && !this._conn.disconnecting) {\n                  Strophe$1.debug(\"no requests during idle cycle, sending blank request\");\n                  data.push(null);\n                }\n\n                if (this._conn.paused) {\n                  return;\n                }\n\n                if (this._requests.length < 2 && data.length > 0) {\n                  var body = this._buildBody();\n\n                  for (var i = 0; i < data.length; i++) {\n                    if (data[i] !== null) {\n                      if (data[i] === \"restart\") {\n                        body.attrs({\n                          \"to\": this._conn.domain,\n                          \"xml:lang\": \"en\",\n                          \"xmpp:restart\": \"true\",\n                          \"xmlns:xmpp\": Strophe$1.NS.BOSH\n                        });\n                      } else {\n                        body.cnode(data[i]).up();\n                      }\n                    }\n                  }\n\n                  delete this._conn._data;\n                  this._conn._data = [];\n\n                  this._requests.push(new Strophe$1.Request(body.tree(), this._onRequestStateChange.bind(this, this._conn._dataRecv.bind(this._conn)), body.tree().getAttribute(\"rid\")));\n\n                  this._throttledRequestHandler();\n                }\n\n                if (this._requests.length > 0) {\n                  var time_elapsed = this._requests[0].age();\n\n                  if (this._requests[0].dead !== null) {\n                    if (this._requests[0].timeDead() > Math.floor(Strophe$1.SECONDARY_TIMEOUT * this.wait)) {\n                      this._throttledRequestHandler();\n                    }\n                  }\n\n                  if (time_elapsed > Math.floor(Strophe$1.TIMEOUT * this.wait)) {\n                    Strophe$1.warn(\"Request \" + this._requests[0].id + \" timed out, over \" + Math.floor(Strophe$1.TIMEOUT * this.wait) + \" seconds since last activity\");\n\n                    this._throttledRequestHandler();\n                  }\n                }\n              },\n\n              /** PrivateFunction: _getRequestStatus\n               *\n               *  Returns the HTTP status code from a Strophe.Request\n               *\n               *  Parameters:\n               *    (Strophe.Request) req - The Strophe.Request instance.\n               *    (Integer) def - The default value that should be returned if no\n               *          status value was found.\n               */\n              _getRequestStatus: function _getRequestStatus(req, def) {\n                var reqStatus;\n\n                if (req.xhr.readyState === 4) {\n                  try {\n                    reqStatus = req.xhr.status;\n                  } catch (e) {\n                    // ignore errors from undefined status attribute. Works\n                    // around a browser bug\n                    Strophe$1.error(\"Caught an error while retrieving a request's status, \" + \"reqStatus: \" + reqStatus);\n                  }\n                }\n\n                if (typeof reqStatus === \"undefined\") {\n                  reqStatus = typeof def === 'number' ? def : 0;\n                }\n\n                return reqStatus;\n              },\n\n              /** PrivateFunction: _onRequestStateChange\n               *  _Private_ handler for Strophe.Request state changes.\n               *\n               *  This function is called when the XMLHttpRequest readyState changes.\n               *  It contains a lot of error handling logic for the many ways that\n               *  requests can fail, and calls the request callback when requests\n               *  succeed.\n               *\n               *  Parameters:\n               *    (Function) func - The handler for the request.\n               *    (Strophe.Request) req - The request that is changing readyState.\n               */\n              _onRequestStateChange: function _onRequestStateChange(func, req) {\n                Strophe$1.debug(\"request id \" + req.id + \".\" + req.sends + \" state changed to \" + req.xhr.readyState);\n\n                if (req.abort) {\n                  req.abort = false;\n                  return;\n                }\n\n                if (req.xhr.readyState !== 4) {\n                  // The request is not yet complete\n                  return;\n                }\n\n                var reqStatus = this._getRequestStatus(req);\n\n                this.lastResponseHeaders = req.xhr.getAllResponseHeaders();\n\n                if (this.disconnecting && reqStatus >= 400) {\n                  this._hitError(reqStatus);\n\n                  this._callProtocolErrorHandlers(req);\n\n                  return;\n                }\n\n                var valid_request = reqStatus > 0 && reqStatus < 500;\n                var too_many_retries = req.sends > this._conn.maxRetries;\n\n                if (valid_request || too_many_retries) {\n                  // remove from internal queue\n                  this._removeRequest(req);\n\n                  Strophe$1.debug(\"request id \" + req.id + \" should now be removed\");\n                }\n\n                if (reqStatus === 200) {\n                  // request succeeded\n                  var reqIs0 = this._requests[0] === req;\n                  var reqIs1 = this._requests[1] === req; // if request 1 finished, or request 0 finished and request\n                  // 1 is over Strophe.SECONDARY_TIMEOUT seconds old, we need to\n                  // restart the other - both will be in the first spot, as the\n                  // completed request has been removed from the queue already\n\n                  if (reqIs1 || reqIs0 && this._requests.length > 0 && this._requests[0].age() > Math.floor(Strophe$1.SECONDARY_TIMEOUT * this.wait)) {\n                    this._restartRequest(0);\n                  }\n\n                  this._conn.nextValidRid(Number(req.rid) + 1);\n\n                  Strophe$1.debug(\"request id \" + req.id + \".\" + req.sends + \" got 200\");\n                  func(req); // call handler\n\n                  this.errors = 0;\n                } else if (reqStatus === 0 || reqStatus >= 400 && reqStatus < 600 || reqStatus >= 12000) {\n                  // request failed\n                  Strophe$1.error(\"request id \" + req.id + \".\" + req.sends + \" error \" + reqStatus + \" happened\");\n\n                  this._hitError(reqStatus);\n\n                  this._callProtocolErrorHandlers(req);\n\n                  if (reqStatus >= 400 && reqStatus < 500) {\n                    this._conn._changeConnectStatus(Strophe$1.Status.DISCONNECTING, null);\n\n                    this._conn._doDisconnect();\n                  }\n                } else {\n                  Strophe$1.error(\"request id \" + req.id + \".\" + req.sends + \" error \" + reqStatus + \" happened\");\n                }\n\n                if (!valid_request && !too_many_retries) {\n                  this._throttledRequestHandler();\n                } else if (too_many_retries && !this._conn.connected) {\n                  this._conn._changeConnectStatus(Strophe$1.Status.CONNFAIL, \"giving-up\");\n                }\n              },\n\n              /** PrivateFunction: _processRequest\n               *  _Private_ function to process a request in the queue.\n               *\n               *  This function takes requests off the queue and sends them and\n               *  restarts dead requests.\n               *\n               *  Parameters:\n               *    (Integer) i - The index of the request in the queue.\n               */\n              _processRequest: function _processRequest(i) {\n                var _this = this;\n\n                var req = this._requests[i];\n\n                var reqStatus = this._getRequestStatus(req, -1); // make sure we limit the number of retries\n\n\n                if (req.sends > this._conn.maxRetries) {\n                  this._conn._onDisconnectTimeout();\n\n                  return;\n                }\n\n                var time_elapsed = req.age();\n                var primary_timeout = !isNaN(time_elapsed) && time_elapsed > Math.floor(Strophe$1.TIMEOUT * this.wait);\n                var secondary_timeout = req.dead !== null && req.timeDead() > Math.floor(Strophe$1.SECONDARY_TIMEOUT * this.wait);\n                var server_error = req.xhr.readyState === 4 && (reqStatus < 1 || reqStatus >= 500);\n\n                if (primary_timeout || secondary_timeout || server_error) {\n                  if (secondary_timeout) {\n                    Strophe$1.error(\"Request \".concat(this._requests[i].id, \" timed out (secondary), restarting\"));\n                  }\n\n                  req.abort = true;\n                  req.xhr.abort(); // setting to null fails on IE6, so set to empty function\n\n                  req.xhr.onreadystatechange = function () {};\n\n                  this._requests[i] = new Strophe$1.Request(req.xmlData, req.origFunc, req.rid, req.sends);\n                  req = this._requests[i];\n                }\n\n                if (req.xhr.readyState === 0) {\n                  Strophe$1.debug(\"request id \" + req.id + \".\" + req.sends + \" posting\");\n\n                  try {\n                    var content_type = this._conn.options.contentType || \"text/xml; charset=utf-8\";\n                    req.xhr.open(\"POST\", this._conn.service, this._conn.options.sync ? false : true);\n\n                    if (typeof req.xhr.setRequestHeader !== 'undefined') {\n                      // IE9 doesn't have setRequestHeader\n                      req.xhr.setRequestHeader(\"Content-Type\", content_type);\n                    }\n\n                    if (this._conn.options.withCredentials) {\n                      req.xhr.withCredentials = true;\n                    }\n                  } catch (e2) {\n                    Strophe$1.error(\"XHR open failed: \" + e2.toString());\n\n                    if (!this._conn.connected) {\n                      this._conn._changeConnectStatus(Strophe$1.Status.CONNFAIL, \"bad-service\");\n                    }\n\n                    this._conn.disconnect();\n\n                    return;\n                  } // Fires the XHR request -- may be invoked immediately\n                  // or on a gradually expanding retry window for reconnects\n\n\n                  var sendFunc = function sendFunc() {\n                    req.date = new Date();\n\n                    if (_this._conn.options.customHeaders) {\n                      var headers = _this._conn.options.customHeaders;\n\n                      for (var header in headers) {\n                        if (Object.prototype.hasOwnProperty.call(headers, header)) {\n                          req.xhr.setRequestHeader(header, headers[header]);\n                        }\n                      }\n                    }\n\n                    req.xhr.send(req.data);\n                  }; // Implement progressive backoff for reconnects --\n                  // First retry (send === 1) should also be instantaneous\n\n\n                  if (req.sends > 1) {\n                    // Using a cube of the retry number creates a nicely\n                    // expanding retry window\n                    var backoff = Math.min(Math.floor(Strophe$1.TIMEOUT * this.wait), Math.pow(req.sends, 3)) * 1000;\n                    setTimeout(function () {\n                      // XXX: setTimeout should be called only with function expressions (23974bc1)\n                      sendFunc();\n                    }, backoff);\n                  } else {\n                    sendFunc();\n                  }\n\n                  req.sends++;\n\n                  if (this._conn.xmlOutput !== Strophe$1.Connection.prototype.xmlOutput) {\n                    if (req.xmlData.nodeName === this.strip && req.xmlData.childNodes.length) {\n                      this._conn.xmlOutput(req.xmlData.childNodes[0]);\n                    } else {\n                      this._conn.xmlOutput(req.xmlData);\n                    }\n                  }\n\n                  if (this._conn.rawOutput !== Strophe$1.Connection.prototype.rawOutput) {\n                    this._conn.rawOutput(req.data);\n                  }\n                } else {\n                  Strophe$1.debug(\"_processRequest: \" + (i === 0 ? \"first\" : \"second\") + \" request has readyState of \" + req.xhr.readyState);\n                }\n              },\n\n              /** PrivateFunction: _removeRequest\n               *  _Private_ function to remove a request from the queue.\n               *\n               *  Parameters:\n               *    (Strophe.Request) req - The request to remove.\n               */\n              _removeRequest: function _removeRequest(req) {\n                Strophe$1.debug(\"removing request\");\n\n                for (var i = this._requests.length - 1; i >= 0; i--) {\n                  if (req === this._requests[i]) {\n                    this._requests.splice(i, 1);\n                  }\n                } // IE6 fails on setting to null, so set to empty function\n\n\n                req.xhr.onreadystatechange = function () {};\n\n                this._throttledRequestHandler();\n              },\n\n              /** PrivateFunction: _restartRequest\n               *  _Private_ function to restart a request that is presumed dead.\n               *\n               *  Parameters:\n               *    (Integer) i - The index of the request in the queue.\n               */\n              _restartRequest: function _restartRequest(i) {\n                var req = this._requests[i];\n\n                if (req.dead === null) {\n                  req.dead = new Date();\n                }\n\n                this._processRequest(i);\n              },\n\n              /** PrivateFunction: _reqToData\n               * _Private_ function to get a stanza out of a request.\n               *\n               * Tries to extract a stanza out of a Request Object.\n               * When this fails the current connection will be disconnected.\n               *\n               *  Parameters:\n               *    (Object) req - The Request.\n               *\n               *  Returns:\n               *    The stanza that was passed.\n               */\n              _reqToData: function _reqToData(req) {\n                try {\n                  return req.getResponse();\n                } catch (e) {\n                  if (e.message !== \"parsererror\") {\n                    throw e;\n                  }\n\n                  this._conn.disconnect(\"strophe-parsererror\");\n                }\n              },\n\n              /** PrivateFunction: _sendTerminate\n               *  _Private_ function to send initial disconnect sequence.\n               *\n               *  This is the first step in a graceful disconnect.  It sends\n               *  the BOSH server a terminate body and includes an unavailable\n               *  presence if authentication has completed.\n               */\n              _sendTerminate: function _sendTerminate(pres) {\n                Strophe$1.debug(\"_sendTerminate was called\");\n\n                var body = this._buildBody().attrs({\n                  type: \"terminate\"\n                });\n\n                if (pres) {\n                  body.cnode(pres.tree());\n                }\n\n                var req = new Strophe$1.Request(body.tree(), this._onRequestStateChange.bind(this, this._conn._dataRecv.bind(this._conn)), body.tree().getAttribute(\"rid\"));\n\n                this._requests.push(req);\n\n                this._throttledRequestHandler();\n              },\n\n              /** PrivateFunction: _send\n               *  _Private_ part of the Connection.send function for BOSH\n               *\n               * Just triggers the RequestHandler to send the messages that are in the queue\n               */\n              _send: function _send() {\n                var _this2 = this;\n\n                clearTimeout(this._conn._idleTimeout);\n\n                this._throttledRequestHandler();\n\n                this._conn._idleTimeout = setTimeout(function () {\n                  return _this2._conn._onIdle();\n                }, 100);\n              },\n\n              /** PrivateFunction: _sendRestart\n               *\n               *  Send an xmpp:restart stanza.\n               */\n              _sendRestart: function _sendRestart() {\n                this._throttledRequestHandler();\n\n                clearTimeout(this._conn._idleTimeout);\n              },\n\n              /** PrivateFunction: _throttledRequestHandler\n               *  _Private_ function to throttle requests to the connection window.\n               *\n               *  This function makes sure we don't send requests so fast that the\n               *  request ids overflow the connection window in the case that one\n               *  request died.\n               */\n              _throttledRequestHandler: function _throttledRequestHandler() {\n                if (!this._requests) {\n                  Strophe$1.debug(\"_throttledRequestHandler called with \" + \"undefined requests\");\n                } else {\n                  Strophe$1.debug(\"_throttledRequestHandler called with \" + this._requests.length + \" requests\");\n                }\n\n                if (!this._requests || this._requests.length === 0) {\n                  return;\n                }\n\n                if (this._requests.length > 0) {\n                  this._processRequest(0);\n                }\n\n                if (this._requests.length > 1 && Math.abs(this._requests[0].rid - this._requests[1].rid) < this.window) {\n                  this._processRequest(1);\n                }\n              }\n            };\n\n            /*\n                This program is distributed under the terms of the MIT license.\n                Please see the LICENSE file for details.\n\n                Copyright 2006-2008, OGG, LLC\n            */\n            var Strophe$2 = core.Strophe;\n            var $build$2 = core.$build;\n            /** Class: Strophe.WebSocket\n             *  _Private_ helper class that handles WebSocket Connections\n             *\n             *  The Strophe.WebSocket class is used internally by Strophe.Connection\n             *  to encapsulate WebSocket sessions. It is not meant to be used from user's code.\n             */\n\n            /** File: websocket.js\n             *  A JavaScript library to enable XMPP over Websocket in Strophejs.\n             *\n             *  This file implements XMPP over WebSockets for Strophejs.\n             *  If a Connection is established with a Websocket url (ws://...)\n             *  Strophe will use WebSockets.\n             *  For more information on XMPP-over-WebSocket see RFC 7395:\n             *  http://tools.ietf.org/html/rfc7395\n             *\n             *  WebSocket support implemented by Andreas Guth (andreas.guth@rwth-aachen.de)\n             */\n\n            /** PrivateConstructor: Strophe.Websocket\n             *  Create and initialize a Strophe.WebSocket object.\n             *  Currently only sets the connection Object.\n             *\n             *  Parameters:\n             *    (Strophe.Connection) connection - The Strophe.Connection that will use WebSockets.\n             *\n             *  Returns:\n             *    A new Strophe.WebSocket object.\n             */\n\n            Strophe$2.Websocket = function (connection) {\n              this._conn = connection;\n              this.strip = \"wrapper\";\n              var service = connection.service;\n\n              if (service.indexOf(\"ws:\") !== 0 && service.indexOf(\"wss:\") !== 0) {\n                // If the service is not an absolute URL, assume it is a path and put the absolute\n                // URL together from options, current URL and the path.\n                var new_service = \"\";\n\n                if (connection.options.protocol === \"ws\" && window.location.protocol !== \"https:\") {\n                  new_service += \"ws\";\n                } else {\n                  new_service += \"wss\";\n                }\n\n                new_service += \"://\" + window.location.host;\n\n                if (service.indexOf(\"/\") !== 0) {\n                  new_service += window.location.pathname + service;\n                } else {\n                  new_service += service;\n                }\n\n                connection.service = new_service;\n              }\n            };\n\n            Strophe$2.Websocket.prototype = {\n              /** PrivateFunction: _buildStream\n               *  _Private_ helper function to generate the <stream> start tag for WebSockets\n               *\n               *  Returns:\n               *    A Strophe.Builder with a <stream> element.\n               */\n              _buildStream: function _buildStream() {\n                return $build$2(\"open\", {\n                  \"xmlns\": Strophe$2.NS.FRAMING,\n                  \"to\": this._conn.domain,\n                  \"version\": '1.0'\n                });\n              },\n\n              /** PrivateFunction: _check_streamerror\n               * _Private_ checks a message for stream:error\n               *\n               *  Parameters:\n               *    (Strophe.Request) bodyWrap - The received stanza.\n               *    connectstatus - The ConnectStatus that will be set on error.\n               *  Returns:\n               *     true if there was a streamerror, false otherwise.\n               */\n              _check_streamerror: function _check_streamerror(bodyWrap, connectstatus) {\n                var errors;\n\n                if (bodyWrap.getElementsByTagNameNS) {\n                  errors = bodyWrap.getElementsByTagNameNS(Strophe$2.NS.STREAM, \"error\");\n                } else {\n                  errors = bodyWrap.getElementsByTagName(\"stream:error\");\n                }\n\n                if (errors.length === 0) {\n                  return false;\n                }\n\n                var error = errors[0];\n                var condition = \"\";\n                var text = \"\";\n                var ns = \"urn:ietf:params:xml:ns:xmpp-streams\";\n\n                for (var i = 0; i < error.childNodes.length; i++) {\n                  var e = error.childNodes[i];\n\n                  if (e.getAttribute(\"xmlns\") !== ns) {\n                    break;\n                  }\n\n                  if (e.nodeName === \"text\") {\n                    text = e.textContent;\n                  } else {\n                    condition = e.nodeName;\n                  }\n                }\n\n                var errorString = \"WebSocket stream error: \";\n\n                if (condition) {\n                  errorString += condition;\n                } else {\n                  errorString += \"unknown\";\n                }\n\n                if (text) {\n                  errorString += \" - \" + text;\n                }\n\n                Strophe$2.error(errorString); // close the connection on stream_error\n\n                this._conn._changeConnectStatus(connectstatus, condition);\n\n                this._conn._doDisconnect();\n\n                return true;\n              },\n\n              /** PrivateFunction: _reset\n               *  Reset the connection.\n               *\n               *  This function is called by the reset function of the Strophe Connection.\n               *  Is not needed by WebSockets.\n               */\n              _reset: function _reset() {\n                return;\n              },\n\n              /** PrivateFunction: _connect\n               *  _Private_ function called by Strophe.Connection.connect\n               *\n               *  Creates a WebSocket for a connection and assigns Callbacks to it.\n               *  Does nothing if there already is a WebSocket.\n               */\n              _connect: function _connect() {\n                // Ensure that there is no open WebSocket from a previous Connection.\n                this._closeSocket(); // Create the new WobSocket\n\n\n                this.socket = new WebSocket(this._conn.service, \"xmpp\");\n                this.socket.onopen = this._onOpen.bind(this);\n                this.socket.onerror = this._onError.bind(this);\n                this.socket.onclose = this._onClose.bind(this);\n                this.socket.onmessage = this._connect_cb_wrapper.bind(this);\n              },\n\n              /** PrivateFunction: _connect_cb\n               *  _Private_ function called by Strophe.Connection._connect_cb\n               *\n               * checks for stream:error\n               *\n               *  Parameters:\n               *    (Strophe.Request) bodyWrap - The received stanza.\n               */\n              _connect_cb: function _connect_cb(bodyWrap) {\n                var error = this._check_streamerror(bodyWrap, Strophe$2.Status.CONNFAIL);\n\n                if (error) {\n                  return Strophe$2.Status.CONNFAIL;\n                }\n              },\n\n              /** PrivateFunction: _handleStreamStart\n               * _Private_ function that checks the opening <open /> tag for errors.\n               *\n               * Disconnects if there is an error and returns false, true otherwise.\n               *\n               *  Parameters:\n               *    (Node) message - Stanza containing the <open /> tag.\n               */\n              _handleStreamStart: function _handleStreamStart(message) {\n                var error = false; // Check for errors in the <open /> tag\n\n                var ns = message.getAttribute(\"xmlns\");\n\n                if (typeof ns !== \"string\") {\n                  error = \"Missing xmlns in <open />\";\n                } else if (ns !== Strophe$2.NS.FRAMING) {\n                  error = \"Wrong xmlns in <open />: \" + ns;\n                }\n\n                var ver = message.getAttribute(\"version\");\n\n                if (typeof ver !== \"string\") {\n                  error = \"Missing version in <open />\";\n                } else if (ver !== \"1.0\") {\n                  error = \"Wrong version in <open />: \" + ver;\n                }\n\n                if (error) {\n                  this._conn._changeConnectStatus(Strophe$2.Status.CONNFAIL, error);\n\n                  this._conn._doDisconnect();\n\n                  return false;\n                }\n\n                return true;\n              },\n\n              /** PrivateFunction: _connect_cb_wrapper\n               * _Private_ function that handles the first connection messages.\n               *\n               * On receiving an opening stream tag this callback replaces itself with the real\n               * message handler. On receiving a stream error the connection is terminated.\n               */\n              _connect_cb_wrapper: function _connect_cb_wrapper(message) {\n                if (message.data.indexOf(\"<open \") === 0 || message.data.indexOf(\"<?xml\") === 0) {\n                  // Strip the XML Declaration, if there is one\n                  var data = message.data.replace(/^(<\\?.*?\\?>\\s*)*/, \"\");\n                  if (data === '') return;\n                  var streamStart = new DOMParser().parseFromString(data, \"text/xml\").documentElement;\n\n                  this._conn.xmlInput(streamStart);\n\n                  this._conn.rawInput(message.data); //_handleStreamSteart will check for XML errors and disconnect on error\n\n\n                  if (this._handleStreamStart(streamStart)) {\n                    //_connect_cb will check for stream:error and disconnect on error\n                    this._connect_cb(streamStart);\n                  }\n                } else if (message.data.indexOf(\"<close \") === 0) {\n                  // <close xmlns=\"urn:ietf:params:xml:ns:xmpp-framing />\n                  // Parse the raw string to an XML element\n                  var parsedMessage = new DOMParser().parseFromString(message.data, \"text/xml\").documentElement; // Report this input to the raw and xml handlers\n\n                  this._conn.xmlInput(parsedMessage);\n\n                  this._conn.rawInput(message.data);\n\n                  var see_uri = parsedMessage.getAttribute(\"see-other-uri\");\n\n                  if (see_uri) {\n                    var service = this._conn.service; // Valid scenarios: WSS->WSS, WS->ANY\n\n                    var isSecureRedirect = service.indexOf(\"wss:\") >= 0 && see_uri.indexOf(\"wss:\") >= 0 || service.indexOf(\"ws:\") >= 0;\n\n                    if (isSecureRedirect) {\n                      this._conn._changeConnectStatus(Strophe$2.Status.REDIRECT, \"Received see-other-uri, resetting connection\");\n\n                      this._conn.reset();\n\n                      this._conn.service = see_uri;\n\n                      this._connect();\n                    }\n                  } else {\n                    this._conn._changeConnectStatus(Strophe$2.Status.CONNFAIL, \"Received closing stream\");\n\n                    this._conn._doDisconnect();\n                  }\n                } else {\n                  var string = this._streamWrap(message.data);\n\n                  var elem = new DOMParser().parseFromString(string, \"text/xml\").documentElement;\n                  this.socket.onmessage = this._onMessage.bind(this);\n\n                  this._conn._connect_cb(elem, null, message.data);\n                }\n              },\n\n              /** PrivateFunction: _disconnect\n               *  _Private_ function called by Strophe.Connection.disconnect\n               *\n               *  Disconnects and sends a last stanza if one is given\n               *\n               *  Parameters:\n               *    (Request) pres - This stanza will be sent before disconnecting.\n               */\n              _disconnect: function _disconnect(pres) {\n                if (this.socket && this.socket.readyState !== WebSocket.CLOSED) {\n                  if (pres) {\n                    this._conn.send(pres);\n                  }\n\n                  var close = $build$2(\"close\", {\n                    \"xmlns\": Strophe$2.NS.FRAMING\n                  });\n\n                  this._conn.xmlOutput(close.tree());\n\n                  var closeString = Strophe$2.serialize(close);\n\n                  this._conn.rawOutput(closeString);\n\n                  try {\n                    this.socket.send(closeString);\n                  } catch (e) {\n                    Strophe$2.warn(\"Couldn't send <close /> tag.\");\n                  }\n                }\n\n                this._conn._doDisconnect();\n              },\n\n              /** PrivateFunction: _doDisconnect\n               *  _Private_ function to disconnect.\n               *\n               *  Just closes the Socket for WebSockets\n               */\n              _doDisconnect: function _doDisconnect() {\n                Strophe$2.debug(\"WebSockets _doDisconnect was called\");\n\n                this._closeSocket();\n              },\n\n              /** PrivateFunction _streamWrap\n               *  _Private_ helper function to wrap a stanza in a <stream> tag.\n               *  This is used so Strophe can process stanzas from WebSockets like BOSH\n               */\n              _streamWrap: function _streamWrap(stanza) {\n                return \"<wrapper>\" + stanza + '</wrapper>';\n              },\n\n              /** PrivateFunction: _closeSocket\n               *  _Private_ function to close the WebSocket.\n               *\n               *  Closes the socket if it is still open and deletes it\n               */\n              _closeSocket: function _closeSocket() {\n                if (this.socket) {\n                  try {\n                    this.socket.onclose = null;\n                    this.socket.onerror = null;\n                    this.socket.onmessage = null;\n                    this.socket.close();\n                  } catch (e) {\n                    Strophe$2.debug(e.message);\n                  }\n                }\n\n                this.socket = null;\n              },\n\n              /** PrivateFunction: _emptyQueue\n               * _Private_ function to check if the message queue is empty.\n               *\n               *  Returns:\n               *    True, because WebSocket messages are send immediately after queueing.\n               */\n              _emptyQueue: function _emptyQueue() {\n                return true;\n              },\n\n              /** PrivateFunction: _onClose\n               * _Private_ function to handle websockets closing.\n               *\n               * Nothing to do here for WebSockets\n               */\n              _onClose: function _onClose(e) {\n                if (this._conn.connected && !this._conn.disconnecting) {\n                  Strophe$2.error(\"Websocket closed unexpectedly\");\n\n                  this._conn._doDisconnect();\n                } else if (e && e.code === 1006 && !this._conn.connected && this.socket) {\n                  // in case the onError callback was not called (Safari 10 does not\n                  // call onerror when the initial connection fails) we need to\n                  // dispatch a CONNFAIL status update to be consistent with the\n                  // behavior on other browsers.\n                  Strophe$2.error(\"Websocket closed unexcectedly\");\n\n                  this._conn._changeConnectStatus(Strophe$2.Status.CONNFAIL, \"The WebSocket connection could not be established or was disconnected.\");\n\n                  this._conn._doDisconnect();\n                } else {\n                  Strophe$2.debug(\"Websocket closed\");\n                }\n              },\n\n              /** PrivateFunction: _no_auth_received\n               *\n               * Called on stream start/restart when no stream:features\n               * has been received.\n               */\n              _no_auth_received: function _no_auth_received(callback) {\n                Strophe$2.error(\"Server did not offer a supported authentication mechanism\");\n\n                this._conn._changeConnectStatus(Strophe$2.Status.CONNFAIL, Strophe$2.ErrorCondition.NO_AUTH_MECH);\n\n                if (callback) {\n                  callback.call(this._conn);\n                }\n\n                this._conn._doDisconnect();\n              },\n\n              /** PrivateFunction: _onDisconnectTimeout\n               *  _Private_ timeout handler for handling non-graceful disconnection.\n               *\n               *  This does nothing for WebSockets\n               */\n              _onDisconnectTimeout: function _onDisconnectTimeout() {},\n\n              /** PrivateFunction: _abortAllRequests\n               *  _Private_ helper function that makes sure all pending requests are aborted.\n               */\n              _abortAllRequests: function _abortAllRequests() {},\n\n              /** PrivateFunction: _onError\n               * _Private_ function to handle websockets errors.\n               *\n               * Parameters:\n               * (Object) error - The websocket error.\n               */\n              _onError: function _onError(error) {\n                Strophe$2.error(\"Websocket error \" + error);\n\n                this._conn._changeConnectStatus(Strophe$2.Status.CONNFAIL, \"The WebSocket connection could not be established or was disconnected.\");\n\n                this._disconnect();\n              },\n\n              /** PrivateFunction: _onIdle\n               *  _Private_ function called by Strophe.Connection._onIdle\n               *\n               *  sends all queued stanzas\n               */\n              _onIdle: function _onIdle() {\n                var data = this._conn._data;\n\n                if (data.length > 0 && !this._conn.paused) {\n                  for (var i = 0; i < data.length; i++) {\n                    if (data[i] !== null) {\n                      var stanza = void 0;\n\n                      if (data[i] === \"restart\") {\n                        stanza = this._buildStream().tree();\n                      } else {\n                        stanza = data[i];\n                      }\n\n                      var rawStanza = Strophe$2.serialize(stanza);\n\n                      this._conn.xmlOutput(stanza);\n\n                      this._conn.rawOutput(rawStanza);\n\n                      this.socket.send(rawStanza);\n                    }\n                  }\n\n                  this._conn._data = [];\n                }\n              },\n\n              /** PrivateFunction: _onMessage\n               * _Private_ function to handle websockets messages.\n               *\n               * This function parses each of the messages as if they are full documents.\n               * [TODO : We may actually want to use a SAX Push parser].\n               *\n               * Since all XMPP traffic starts with\n               *  <stream:stream version='1.0'\n               *                 xml:lang='en'\n               *                 xmlns='jabber:client'\n               *                 xmlns:stream='http://etherx.jabber.org/streams'\n               *                 id='3697395463'\n               *                 from='SERVER'>\n               *\n               * The first stanza will always fail to be parsed.\n               *\n               * Additionally, the seconds stanza will always be <stream:features> with\n               * the stream NS defined in the previous stanza, so we need to 'force'\n               * the inclusion of the NS in this stanza.\n               *\n               * Parameters:\n               * (string) message - The websocket message.\n               */\n              _onMessage: function _onMessage(message) {\n                var elem; // check for closing stream\n\n                var close = '<close xmlns=\"urn:ietf:params:xml:ns:xmpp-framing\" />';\n\n                if (message.data === close) {\n                  this._conn.rawInput(close);\n\n                  this._conn.xmlInput(message);\n\n                  if (!this._conn.disconnecting) {\n                    this._conn._doDisconnect();\n                  }\n\n                  return;\n                } else if (message.data.search(\"<open \") === 0) {\n                  // This handles stream restarts\n                  elem = new DOMParser().parseFromString(message.data, \"text/xml\").documentElement;\n\n                  if (!this._handleStreamStart(elem)) {\n                    return;\n                  }\n                } else {\n                  var data = this._streamWrap(message.data);\n\n                  elem = new DOMParser().parseFromString(data, \"text/xml\").documentElement;\n                }\n\n                if (this._check_streamerror(elem, Strophe$2.Status.ERROR)) {\n                  return;\n                } //handle unavailable presence stanza before disconnecting\n\n\n                if (this._conn.disconnecting && elem.firstChild.nodeName === \"presence\" && elem.firstChild.getAttribute(\"type\") === \"unavailable\") {\n                  this._conn.xmlInput(elem);\n\n                  this._conn.rawInput(Strophe$2.serialize(elem)); // if we are already disconnecting we will ignore the unavailable stanza and\n                  // wait for the </stream:stream> tag before we close the connection\n\n\n                  return;\n                }\n\n                this._conn._dataRecv(elem, message.data);\n              },\n\n              /** PrivateFunction: _onOpen\n               * _Private_ function to handle websockets connection setup.\n               *\n               * The opening stream tag is sent here.\n               */\n              _onOpen: function _onOpen() {\n                Strophe$2.debug(\"Websocket open\");\n\n                var start = this._buildStream();\n\n                this._conn.xmlOutput(start.tree());\n\n                var startString = Strophe$2.serialize(start);\n\n                this._conn.rawOutput(startString);\n\n                this.socket.send(startString);\n              },\n\n              /** PrivateFunction: _reqToData\n               * _Private_ function to get a stanza out of a request.\n               *\n               * WebSockets don't use requests, so the passed argument is just returned.\n               *\n               *  Parameters:\n               *    (Object) stanza - The stanza.\n               *\n               *  Returns:\n               *    The stanza that was passed.\n               */\n              _reqToData: function _reqToData(stanza) {\n                return stanza;\n              },\n\n              /** PrivateFunction: _send\n               *  _Private_ part of the Connection.send function for WebSocket\n               *\n               * Just flushes the messages that are in the queue\n               */\n              _send: function _send() {\n                this._conn.flush();\n              },\n\n              /** PrivateFunction: _sendRestart\n               *\n               *  Send an xmpp:restart stanza.\n               */\n              _sendRestart: function _sendRestart() {\n                clearTimeout(this._conn._idleTimeout);\n\n                this._conn._onIdle.bind(this._conn)();\n              }\n            };\n\n            global$1.Strophe = core.Strophe;\n            global$1.$build = core.$build;\n            global$1.$iq = core.$iq;\n            global$1.$msg = core.$msg;\n            global$1.$pres = core.$pres;\n\n            return core;\n\n}));\n","import BrowserCapabilities from './BrowserCapabilities';\n\nexport default new BrowserCapabilities();\n","/**\n * The audio type.\n */\nexport const AUDIO = 'audio';\n\n/**\n * The presenter type.\n */\nexport const PRESENTER = 'presenter';\n\n/**\n * The video type.\n */\nexport const VIDEO = 'video';\n","/* Copyright @ 2015-present 8x8, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar Logger = require(\"./Logger\");\nvar LogCollector = require(\"./LogCollector\");\n\n/**\n * Definition of the log method\n * @name log_method\n * @function\n * @param {...*} log_args the arguments to be logged\n */\n/**\n * The logger's transport type definition.\n *\n * @typedef {object} LoggerTransport\n *\n * @property {log_method} trace method called to log on {@link Logger.levels.TRACE} logging level\n * @property {log_method} debug method called to log on {@link Logger.levels.DEBUG} logging level\n * @property {log_method} info method called to log on {@link Logger.levels.INFO} logging level\n * @property {log_method} log method called to log on {@link Logger.levels.LOG} logging level\n * @property {log_method} warn method called to log on {@link Logger.levels.WARN} logging level\n * @property {log_method} error method called to log on {@link Logger.levels.ERROR} logging level\n */\n\n/**\n * Map with the created loggers with ID.\n */\nvar idLoggers = {};\n\n/**\n * Array with the loggers without id.\n */\nvar loggers = [];\n\n/**\n * Log level for the lbrary.\n */\nvar curLevel = Logger.levels.TRACE;\n\n\nmodule.exports = {\n    /**\n     * Adds given {@link LoggerTransport} instance to the list of global\n     * transports which means that it'll be used by all {@link Logger}s\n     * @param {LoggerTransport} transport\n     */\n    addGlobalTransport: function(transport) {\n        Logger.addGlobalTransport(transport);\n    },\n    /**\n     * Removes given {@link LoggerTransport} instance from the list of global\n     * transports\n     * @param {LoggerTransport} transport\n     */\n    removeGlobalTransport: function(transport) {\n        Logger.removeGlobalTransport(transport);\n    },\n    /**\n    * Sets global options which will be used by all loggers. Changing these\n    * works even after other loggers are created.\n    */\n    setGlobalOptions: function(options) {\n        Logger.setGlobalOptions(options);\n    },\n    /**\n     * Creates new logger.\n     * @arguments the same as Logger constructor\n     */\n    getLogger: function(id, transports, options) {\n        var logger = new Logger(curLevel, id, transports, options);\n        if(id) {\n            idLoggers[id] = idLoggers[id] || [];\n            idLoggers[id].push(logger);\n        } else {\n            loggers.push(logger);\n        }\n        return logger;\n    },\n    /**\n     * Changes the log level for the existing loggers by id.\n     * @param level the new log level.\n     * @param id if specified the level will be changed only for loggers with the\n     * same id. Otherwise the operation will affect all loggers that don't\n     * have id.\n     */\n    setLogLevelById: function(level, id) {\n        var l = id? (idLoggers[id] || []) : loggers;\n        for(var i = 0; i < l.length; i++) {\n            l[i].setLevel(level);\n        }\n    },\n    /**\n     * Changes the log level for all existing loggers.\n     * @param level the new log level.\n     */\n    setLogLevel: function (level) {\n        curLevel = level;\n        var i = 0;\n        for(; i < loggers.length; i++) {\n            loggers[i].setLevel(level);\n        }\n\n        for(var id in idLoggers) {\n            var l = idLoggers[id] || [];\n            for(i = 0; i < l.length; i++) {\n                l[i].setLevel(level);\n            }\n        }\n    },\n    /**\n     * The supported log levels.\n     */\n    levels: Logger.levels,\n    /**\n     * Exports the <tt>LogCollector</tt>.\n     */\n    LogCollector: LogCollector\n};\n","import EventEmitter from 'events';\n\nimport * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\nimport JitsiTrackError from '../../JitsiTrackError';\nimport { FEEDBACK } from '../../service/statistics/AnalyticsEvents';\nimport * as StatisticsEvents from '../../service/statistics/Events';\nimport browser from '../browser';\nimport ScriptUtil from '../util/ScriptUtil';\n\nimport analytics from './AnalyticsAdapter';\nimport CallStats from './CallStats';\nimport LocalStats from './LocalStatsCollector';\nimport { PerformanceObserverStats } from './PerformanceObserverStats';\nimport RTPStats from './RTPStatsCollector';\nimport { CALLSTATS_SCRIPT_URL } from './constants';\n\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\n\n/**\n * Stores all active {@link Statistics} instances.\n * @type {Set<Statistics>}\n */\nlet _instances;\n\n/**\n * True if callstats API is loaded\n */\nlet isCallstatsLoaded = false;\n\n/**\n * Since callstats.io is a third party, we cannot guarantee the quality of their\n * service. More specifically, their server may take noticeably long time to\n * respond. Consequently, it is in our best interest (in the sense that the\n * intergration of callstats.io is pretty important to us but not enough to\n * allow it to prevent people from joining a conference) to (1) start\n * downloading their API as soon as possible and (2) do the downloading\n * asynchronously.\n *\n * @param {StatisticsOptions} options - Options to use for downloading and\n * initializing callstats backend.\n */\nfunction loadCallStatsAPI(options) {\n    if (!isCallstatsLoaded) {\n        ScriptUtil.loadScript(\n            options.customScriptUrl || CALLSTATS_SCRIPT_URL,\n            /* async */ true,\n            /* prepend */ true,\n            /* relativeURL */ undefined,\n            /* loadCallback */ () => _initCallStatsBackend(options)\n        );\n        isCallstatsLoaded = true;\n    }\n}\n\n/**\n * Initializes Callstats backend.\n *\n * @param {StatisticsOptions} options - The options to use for initializing\n * callstats backend.\n * @private\n */\nfunction _initCallStatsBackend(options) {\n    if (CallStats.isBackendInitialized()) {\n        return;\n    }\n\n    if (!CallStats.initBackend({\n        callStatsID: options.callStatsID,\n        callStatsSecret: options.callStatsSecret,\n        userName: options.userName,\n        aliasName: options.aliasName,\n        applicationName: options.applicationName,\n        getWiFiStatsMethod: options.getWiFiStatsMethod,\n        confID: options.confID,\n        siteID: options.siteID\n    })) {\n        logger.error('CallStats Backend initialization failed bad');\n    }\n}\n\n/**\n * callstats strips any additional fields from Error except for \"name\", \"stack\",\n * \"message\" and \"constraintName\". So we need to bundle additional information\n * from JitsiTrackError into error passed to callstats to preserve valuable\n * information about error.\n * @param {JitsiTrackError} error\n */\nfunction formatJitsiTrackErrorForCallStats(error) {\n    const err = new Error();\n\n    // Just copy original stack from error\n    err.stack = error.stack;\n\n    // Combine name from error's name plus (possibly) name of original GUM error\n    err.name = (error.name || 'Unknown error') + (error.gum && error.gum.error\n        && error.gum.error.name ? ` - ${error.gum.error.name}` : '');\n\n    // Put all constraints into this field. For constraint failed errors we will\n    // still know which exactly constraint failed as it will be a part of\n    // message.\n    err.constraintName = error.gum && error.gum.constraints\n        ? JSON.stringify(error.gum.constraints) : '';\n\n    // Just copy error's message.\n    err.message = error.message;\n\n    return err;\n}\n\n/**\n * Init statistic options\n * @param options\n */\nStatistics.init = function(options) {\n    Statistics.audioLevelsEnabled = !options.disableAudioLevels;\n    if (typeof options.pcStatsInterval === 'number') {\n        Statistics.pcStatsInterval = options.pcStatsInterval;\n    }\n\n    if (typeof options.audioLevelsInterval === 'number') {\n        Statistics.audioLevelsInterval = options.audioLevelsInterval;\n    }\n\n    if (typeof options.longTasksStatsInterval === 'number') {\n        Statistics.longTasksStatsInterval = options.longTasksStatsInterval;\n    }\n\n    Statistics.disableThirdPartyRequests = options.disableThirdPartyRequests;\n};\n\n/**\n * The options to configure Statistics.\n * @typedef {Object} StatisticsOptions\n * @property {string} applicationName - The application name to pass to\n * callstats.\n * @property {string} aliasName - The alias name to use when initializing callstats.\n * @property {string} userName - The user name to use when initializing callstats.\n * @property {string} confID - The callstats conference ID to use.\n * @property {string} callStatsID - Callstats credentials - the id.\n * @property {string} callStatsSecret - Callstats credentials - the secret.\n * @property {string} customScriptUrl - A custom lib url to use when downloading\n * callstats library.\n * @property {string} roomName - The room name we are currently in.\n */\n/**\n *\n * @param xmpp\n * @param {StatisticsOptions} options - The options to use creating the\n * Statistics.\n */\nexport default function Statistics(xmpp, options) {\n    /**\n     * {@link RTPStats} mapped by {@link TraceablePeerConnection.id} which\n     * collect RTP statistics for each peerconnection.\n     * @type {Map<string, RTPStats}\n     */\n    this.rtpStatsMap = new Map();\n    this.eventEmitter = new EventEmitter();\n    this.xmpp = xmpp;\n    this.options = options || {};\n\n    this.callStatsIntegrationEnabled\n        = this.options.callStatsID && this.options.callStatsSecret && this.options.enableCallStats\n\n            // Even though AppID and AppSecret may be specified, the integration\n            // of callstats.io may be disabled because of globally-disallowed\n            // requests to any third parties.\n            && (Statistics.disableThirdPartyRequests !== true);\n    if (this.callStatsIntegrationEnabled) {\n        this.callStatsApplicationLogsDisabled\n            = this.options.callStatsApplicationLogsDisabled;\n        if (browser.isReactNative()) {\n            _initCallStatsBackend(this.options);\n        } else {\n            loadCallStatsAPI(this.options);\n        }\n\n        if (!this.options.confID) {\n            logger.warn('\"confID\" is not defined');\n        }\n    }\n\n    /**\n     * Stores {@link CallStats} instances for each\n     * {@link TraceablePeerConnection} (one {@link CallStats} instance serves\n     * one TPC). The instances are mapped by {@link TraceablePeerConnection.id}.\n     * @type {Map<number, CallStats>}\n     */\n    this.callsStatsInstances = new Map();\n\n    Statistics.instances.add(this);\n}\nStatistics.audioLevelsEnabled = false;\nStatistics.audioLevelsInterval = 200;\nStatistics.pcStatsInterval = 10000;\nStatistics.disableThirdPartyRequests = false;\nStatistics.analytics = analytics;\n\nObject.defineProperty(Statistics, 'instances', {\n    /**\n     * Returns the Set holding all active {@link Statistics} instances. Lazily\n     * initializes the Set to allow any Set polyfills to be applied.\n     * @type {Set<Statistics>}\n     */\n    get() {\n        if (!_instances) {\n            _instances = new Set();\n        }\n\n        return _instances;\n    }\n});\n\n/**\n * Starts collecting RTP stats for given peerconnection.\n * @param {TraceablePeerConnection} peerconnection\n */\nStatistics.prototype.startRemoteStats = function(peerconnection) {\n    this.stopRemoteStats(peerconnection);\n\n    try {\n        const rtpStats\n            = new RTPStats(\n                peerconnection,\n                Statistics.audioLevelsInterval,\n                Statistics.pcStatsInterval,\n                this.eventEmitter);\n\n        rtpStats.start(Statistics.audioLevelsEnabled);\n        this.rtpStatsMap.set(peerconnection.id, rtpStats);\n    } catch (e) {\n        logger.error(`Failed to start collecting remote statistics: ${e}`);\n    }\n};\n\nStatistics.localStats = [];\n\nStatistics.startLocalStats = function(stream, callback) {\n    if (!Statistics.audioLevelsEnabled) {\n        return;\n    }\n    const localStats = new LocalStats(stream, Statistics.audioLevelsInterval,\n        callback);\n\n    this.localStats.push(localStats);\n    localStats.start();\n};\n\nStatistics.prototype.addAudioLevelListener = function(listener) {\n    if (!Statistics.audioLevelsEnabled) {\n        return;\n    }\n    this.eventEmitter.on(StatisticsEvents.AUDIO_LEVEL, listener);\n};\n\nStatistics.prototype.removeAudioLevelListener = function(listener) {\n    if (!Statistics.audioLevelsEnabled) {\n        return;\n    }\n    this.eventEmitter.removeListener(StatisticsEvents.AUDIO_LEVEL, listener);\n};\n\nStatistics.prototype.addBeforeDisposedListener = function(listener) {\n    this.eventEmitter.on(StatisticsEvents.BEFORE_DISPOSED, listener);\n};\n\nStatistics.prototype.removeBeforeDisposedListener = function(listener) {\n    this.eventEmitter.removeListener(\n        StatisticsEvents.BEFORE_DISPOSED, listener);\n};\n\nStatistics.prototype.addConnectionStatsListener = function(listener) {\n    this.eventEmitter.on(StatisticsEvents.CONNECTION_STATS, listener);\n};\n\nStatistics.prototype.removeConnectionStatsListener = function(listener) {\n    this.eventEmitter.removeListener(\n        StatisticsEvents.CONNECTION_STATS,\n        listener);\n};\n\nStatistics.prototype.addByteSentStatsListener = function(listener) {\n    this.eventEmitter.on(StatisticsEvents.BYTE_SENT_STATS, listener);\n};\n\nStatistics.prototype.removeByteSentStatsListener = function(listener) {\n    this.eventEmitter.removeListener(StatisticsEvents.BYTE_SENT_STATS,\n        listener);\n};\n\n/**\n * Add a listener that would be notified on a LONG_TASKS_STATS event.\n *\n * @param {Function} listener a function that would be called when notified.\n * @returns {void}\n */\nStatistics.prototype.addLongTasksStatsListener = function(listener) {\n    this.eventEmitter.on(StatisticsEvents.LONG_TASKS_STATS, listener);\n};\n\n/**\n * Creates an instance of {@link PerformanceObserverStats} and starts the\n * observer that records the stats periodically.\n *\n * @returns {void}\n */\nStatistics.prototype.attachLongTasksStats = function(conference) {\n    if (!browser.supportsPerformanceObserver()) {\n        logger.warn('Performance observer for long tasks not supported by browser!');\n\n        return;\n    }\n\n    this.performanceObserverStats = new PerformanceObserverStats(\n        this.eventEmitter,\n        Statistics.longTasksStatsInterval);\n\n    conference.on(\n        JitsiConferenceEvents.CONFERENCE_JOINED,\n        () => this.performanceObserverStats.startObserver());\n    conference.on(\n        JitsiConferenceEvents.CONFERENCE_LEFT,\n        () => this.performanceObserverStats.stopObserver());\n};\n\n/**\n * Obtains the current value of the LongTasks event statistics.\n *\n * @returns {Object|null} stats object if the observer has been\n * created, null otherwise.\n */\nStatistics.prototype.getLongTasksStats = function() {\n    return this.performanceObserverStats\n        ? this.performanceObserverStats.getLongTasksStats()\n        : null;\n};\n\n/**\n * Removes the given listener for the LONG_TASKS_STATS event.\n *\n * @param {Function} listener the listener we want to remove.\n * @returns {void}\n */\nStatistics.prototype.removeLongTasksStatsListener = function(listener) {\n    this.eventEmitter.removeListener(StatisticsEvents.LONG_TASKS_STATS, listener);\n};\n\n/**\n * Updates the list of speakers for which the audio levels are to be calculated. This is needed for the jvb pc only.\n *\n * @param {Array<string>} speakerList The list of remote endpoint ids.\n * @returns {void}\n */\nStatistics.prototype.setSpeakerList = function(speakerList) {\n    for (const rtpStats of Array.from(this.rtpStatsMap.values())) {\n        if (!rtpStats.peerconnection.isP2P) {\n            rtpStats.setSpeakerList(speakerList);\n        }\n    }\n};\n\nStatistics.prototype.dispose = function() {\n    try {\n        // NOTE Before reading this please see the comment in stopCallStats...\n        //\n        // Here we prevent from emitting the event twice in case it will be\n        // triggered from stopCallStats.\n        // If the event is triggered from here it means that the logs will not\n        // be submitted anyway (because there is no CallStats instance), but\n        // we're doing that for the sake of some kind of consistency.\n        if (!this.callsStatsInstances.size) {\n            this.eventEmitter.emit(StatisticsEvents.BEFORE_DISPOSED);\n        }\n        for (const callStats of this.callsStatsInstances.values()) {\n            this.stopCallStats(callStats.tpc);\n        }\n        for (const tpcId of this.rtpStatsMap.keys()) {\n            this._stopRemoteStats(tpcId);\n        }\n        if (this.eventEmitter) {\n            this.eventEmitter.removeAllListeners();\n        }\n    } finally {\n        Statistics.instances.delete(this);\n    }\n};\n\nStatistics.stopLocalStats = function(stream) {\n    if (!Statistics.audioLevelsEnabled) {\n        return;\n    }\n\n    for (let i = 0; i < Statistics.localStats.length; i++) {\n        if (Statistics.localStats[i].stream === stream) {\n            const localStats = Statistics.localStats.splice(i, 1);\n\n            localStats[0].stop();\n            break;\n        }\n    }\n};\n\n/**\n * Stops remote RTP stats for given peerconnection ID.\n * @param {string} tpcId {@link TraceablePeerConnection.id}\n * @private\n */\nStatistics.prototype._stopRemoteStats = function(tpcId) {\n    const rtpStats = this.rtpStatsMap.get(tpcId);\n\n    if (rtpStats) {\n        rtpStats.stop();\n        this.rtpStatsMap.delete(tpcId);\n    }\n};\n\n/**\n * Stops collecting RTP stats for given peerconnection\n * @param {TraceablePeerConnection} tpc\n */\nStatistics.prototype.stopRemoteStats = function(tpc) {\n    this._stopRemoteStats(tpc.id);\n};\n\n// CALSTATS METHODS\n\n/**\n * Initializes the callstats.io API.\n * @param {TraceablePeerConnection} tpc the {@link TraceablePeerConnection}\n * instance for which CalStats will be started.\n * @param {string} remoteUserID\n */\nStatistics.prototype.startCallStats = function(tpc, remoteUserID) {\n    if (!this.callStatsIntegrationEnabled) {\n        return;\n    } else if (this.callsStatsInstances.has(tpc.id)) {\n        logger.error('CallStats instance for ${tpc} exists already');\n\n        return;\n    }\n\n    logger.info(`Starting CallStats for ${tpc}...`);\n\n    const newInstance\n        = new CallStats(\n            tpc,\n            {\n                confID: this.options.confID,\n                remoteUserID\n            });\n\n    this.callsStatsInstances.set(tpc.id, newInstance);\n};\n\n/**\n * Obtains the list of *all* {@link CallStats} instances collected from every\n * valid {@link Statistics} instance.\n * @return {Set<CallStats>}\n * @private\n */\nStatistics._getAllCallStatsInstances = function() {\n    const csInstances = new Set();\n\n    for (const statistics of Statistics.instances) {\n        for (const cs of statistics.callsStatsInstances.values()) {\n            csInstances.add(cs);\n        }\n    }\n\n    return csInstances;\n};\n\n/**\n * Removes the callstats.io instances.\n */\nStatistics.prototype.stopCallStats = function(tpc) {\n    const callStatsInstance = this.callsStatsInstances.get(tpc.id);\n\n    if (callStatsInstance) {\n        // FIXME the original purpose of adding BEFORE_DISPOSED event was to be\n        // able to submit the last log batch from jitsi-meet to CallStats. After\n        // recent changes we dispose the CallStats earlier\n        // (before Statistics.dispose), so we need to emit this event here to\n        // give this last chance for final log batch submission.\n        //\n        // Eventually there should be a separate module called \"log storage\"\n        // which should emit proper events when it's underlying\n        // CallStats instance is going away.\n        if (this.callsStatsInstances.size === 1) {\n            this.eventEmitter.emit(StatisticsEvents.BEFORE_DISPOSED);\n        }\n        this.callsStatsInstances.delete(tpc.id);\n\n        // The fabric needs to be terminated when being stopped\n        callStatsInstance.sendTerminateEvent();\n    }\n};\n\n/**\n * Returns true if the callstats integration is enabled, otherwise returns\n * false.\n *\n * @returns true if the callstats integration is enabled, otherwise returns\n * false.\n */\nStatistics.prototype.isCallstatsEnabled = function() {\n    return this.callStatsIntegrationEnabled;\n};\n\n/**\n * Logs either resume or hold event for the given peer connection.\n * @param {TraceablePeerConnection} tpc the connection for which event will be\n * reported\n * @param {boolean} isResume true for resume or false for hold\n */\nStatistics.prototype.sendConnectionResumeOrHoldEvent = function(tpc, isResume) {\n    const instance = this.callsStatsInstances.get(tpc.id);\n\n    if (instance) {\n        instance.sendResumeOrHoldEvent(isResume);\n    }\n};\n\n/**\n * Notifies CallStats and analytics (if present) for ice connection failed\n * @param {TraceablePeerConnection} tpc connection on which failure occurred.\n */\nStatistics.prototype.sendIceConnectionFailedEvent = function(tpc) {\n    const instance = this.callsStatsInstances.get(tpc.id);\n\n    if (instance) {\n        instance.sendIceConnectionFailedEvent();\n    }\n};\n\n/**\n * Notifies CallStats for mute events\n * @param {TraceablePeerConnection} tpc connection on which failure occurred.\n * @param {boolean} muted true for muted and false for not muted\n * @param {String} type \"audio\"/\"video\"\n */\nStatistics.prototype.sendMuteEvent = function(tpc, muted, type) {\n    const instance = tpc && this.callsStatsInstances.get(tpc.id);\n\n    CallStats.sendMuteEvent(muted, type, instance);\n};\n\n/**\n * Notifies CallStats for screen sharing events\n * @param start {boolean} true for starting screen sharing and\n * false for not stopping\n * @param {string|null} ssrc - optional ssrc value, used only when\n * starting screen sharing.\n */\nStatistics.prototype.sendScreenSharingEvent\n    = function(start, ssrc) {\n        for (const cs of this.callsStatsInstances.values()) {\n            cs.sendScreenSharingEvent(start, ssrc);\n        }\n    };\n\n/**\n * Notifies the statistics module that we are now the dominant speaker of the\n * conference.\n * @param {String} roomJid - The room jid where the speaker event occurred.\n */\nStatistics.prototype.sendDominantSpeakerEvent = function(roomJid) {\n    for (const cs of this.callsStatsInstances.values()) {\n        cs.sendDominantSpeakerEvent();\n    }\n\n    // xmpp send dominant speaker event\n    this.xmpp.sendDominantSpeakerEvent(roomJid);\n};\n\n/**\n * Notifies about active device.\n * @param {{deviceList: {String:String}}} devicesData - list of devices with\n *      their data\n */\nStatistics.sendActiveDeviceListEvent = function(devicesData) {\n    const globalSet = Statistics._getAllCallStatsInstances();\n\n    if (globalSet.size) {\n        for (const cs of globalSet) {\n            CallStats.sendActiveDeviceListEvent(devicesData, cs);\n        }\n    } else {\n        CallStats.sendActiveDeviceListEvent(devicesData, null);\n    }\n};\n\n/* eslint-disable max-params */\n\n/**\n * Lets the underlying statistics module know where is given SSRC rendered by\n * providing renderer tag ID.\n * @param {TraceablePeerConnection} tpc the connection to which the stream\n * belongs to\n * @param {number} ssrc the SSRC of the stream\n * @param {boolean} isLocal\n * @param {string} userId\n * @param {string} usageLabel  meaningful usage label of this stream like\n *        'microphone', 'camera' or 'screen'.\n * @param {string} containerId the id of media 'audio' or 'video' tag which\n *        renders the stream.\n */\nStatistics.prototype.associateStreamWithVideoTag = function(\n        tpc,\n        ssrc,\n        isLocal,\n        userId,\n        usageLabel,\n        containerId) {\n    const instance = this.callsStatsInstances.get(tpc.id);\n\n    if (instance) {\n        instance.associateStreamWithVideoTag(\n            ssrc,\n            isLocal,\n            userId,\n            usageLabel,\n            containerId);\n    }\n};\n\n/* eslint-enable max-params */\n\n/**\n * Notifies CallStats that getUserMedia failed.\n *\n * @param {Error} e error to send\n */\nStatistics.sendGetUserMediaFailed = function(e) {\n    const error\n        = e instanceof JitsiTrackError\n            ? formatJitsiTrackErrorForCallStats(e) : e;\n    const globalSet = Statistics._getAllCallStatsInstances();\n\n    if (globalSet.size) {\n        for (const cs of globalSet) {\n            CallStats.sendGetUserMediaFailed(error, cs);\n        }\n    } else {\n        CallStats.sendGetUserMediaFailed(error, null);\n    }\n};\n\n/**\n * Notifies CallStats that peer connection failed to create offer.\n *\n * @param {Error} e error to send\n * @param {TraceablePeerConnection} tpc connection on which failure occurred.\n */\nStatistics.prototype.sendCreateOfferFailed = function(e, tpc) {\n    const instance = this.callsStatsInstances.get(tpc.id);\n\n    if (instance) {\n        instance.sendCreateOfferFailed(e);\n    }\n};\n\n/**\n * Notifies CallStats that peer connection failed to create answer.\n *\n * @param {Error} e error to send\n * @param {TraceablePeerConnection} tpc connection on which failure occured.\n */\nStatistics.prototype.sendCreateAnswerFailed = function(e, tpc) {\n    const instance = this.callsStatsInstances.get(tpc.id);\n\n    if (instance) {\n        instance.sendCreateAnswerFailed(e);\n    }\n};\n\n/**\n * Notifies CallStats that peer connection failed to set local description.\n *\n * @param {Error} e error to send\n * @param {TraceablePeerConnection} tpc connection on which failure occurred.\n */\nStatistics.prototype.sendSetLocalDescFailed = function(e, tpc) {\n    const instance = this.callsStatsInstances.get(tpc.id);\n\n    if (instance) {\n        instance.sendSetLocalDescFailed(e);\n    }\n};\n\n/**\n * Notifies CallStats that peer connection failed to set remote description.\n *\n * @param {Error} e error to send\n * @param {TraceablePeerConnection} tpc connection on which failure occurred.\n */\nStatistics.prototype.sendSetRemoteDescFailed = function(e, tpc) {\n    const instance = this.callsStatsInstances.get(tpc.id);\n\n    if (instance) {\n        instance.sendSetRemoteDescFailed(e);\n    }\n};\n\n/**\n * Notifies CallStats that peer connection failed to add ICE candidate.\n *\n * @param {Error} e error to send\n * @param {TraceablePeerConnection} tpc connection on which failure occurred.\n */\nStatistics.prototype.sendAddIceCandidateFailed = function(e, tpc) {\n    const instance = this.callsStatsInstances.get(tpc.id);\n\n    if (instance) {\n        instance.sendAddIceCandidateFailed(e);\n    }\n};\n\n/**\n * Adds to CallStats an application log.\n *\n * @param {String} m a log message to send or an {Error} object to be reported\n */\nStatistics.sendLog = function(m) {\n    const globalSubSet = new Set();\n\n    // FIXME we don't want to duplicate logs over P2P instance, but\n    // here we should go over instances and call this method for each\n    // unique conference ID rather than selecting the first one.\n    // We don't have such use case though, so leaving as is for now.\n    for (const stats of Statistics.instances) {\n        if (stats.callStatsApplicationLogsDisabled) {\n            return;\n        }\n\n        if (stats.callsStatsInstances.size) {\n            globalSubSet.add(stats.callsStatsInstances.values().next().value);\n        }\n    }\n\n    if (globalSubSet.size) {\n        for (const csPerStats of globalSubSet) {\n            CallStats.sendApplicationLog(m, csPerStats);\n        }\n    } else {\n        CallStats.sendApplicationLog(m, null);\n    }\n};\n\n/**\n * Sends the given feedback through CallStats.\n *\n * @param overall an integer between 1 and 5 indicating the user's rating.\n * @param comment the comment from the user.\n * @returns {Promise} Resolves when callstats feedback has been submitted\n * successfully.\n */\nStatistics.prototype.sendFeedback = function(overall, comment) {\n    // Statistics.analytics.sendEvent is currently fire and forget, without\n    // confirmation of successful send.\n    Statistics.analytics.sendEvent(\n        FEEDBACK,\n        {\n            rating: overall,\n            comment\n        });\n\n    return CallStats.sendFeedback(this.options.confID, overall, comment);\n};\n\nStatistics.LOCAL_JID = require('../../service/statistics/constants').LOCAL_JID;\n\n/**\n * Reports global error to CallStats.\n *\n * @param {Error} error\n */\nStatistics.reportGlobalError = function(error) {\n    if (error instanceof JitsiTrackError && error.gum) {\n        Statistics.sendGetUserMediaFailed(error);\n    } else {\n        Statistics.sendLog(error);\n    }\n};\n\n/**\n * Sends event to analytics and logs a message to the logger/console. Console\n * messages might also be logged to callstats automatically.\n *\n * @param {string | Object} event the event name, or an object which\n * represents the entire event.\n * @param {Object} properties properties to attach to the event (if an event\n * name as opposed to an event object is provided).\n */\nStatistics.sendAnalyticsAndLog = function(event, properties = {}) {\n    if (!event) {\n        logger.warn('No event or event name given.');\n\n        return;\n    }\n\n    let eventToLog;\n\n    // Also support an API with a single object as an event.\n    if (typeof event === 'object') {\n        eventToLog = event;\n    } else {\n        eventToLog = {\n            name: event,\n            properties\n        };\n    }\n\n    logger.log(JSON.stringify(eventToLog));\n\n    // We do this last, because it may modify the object which is passed.\n    this.analytics.sendEvent(event, properties);\n};\n\n/**\n * Sends event to analytics.\n *\n * @param {string | Object} eventName the event name, or an object which\n * represents the entire event.\n * @param {Object} properties properties to attach to the event\n */\nStatistics.sendAnalytics = function(eventName, properties = {}) {\n    this.analytics.sendEvent(eventName, properties);\n};\n","const RTCEvents = {\n    /**\n     * Indicates error while create answer call.\n     */\n    CREATE_ANSWER_FAILED: 'rtc.create_answer_failed',\n\n    /**\n     * Indicates error while create offer call.\n     */\n    CREATE_OFFER_FAILED: 'rtc.create_offer_failed',\n    DATA_CHANNEL_OPEN: 'rtc.data_channel_open',\n    ENDPOINT_CONN_STATUS_CHANGED: 'rtc.endpoint_conn_status_changed',\n    DOMINANT_SPEAKER_CHANGED: 'rtc.dominant_speaker_changed',\n    LASTN_ENDPOINT_CHANGED: 'rtc.lastn_endpoint_changed',\n\n    /**\n     * Event emitted when the user granted/blocked a permission for the camera / mic.\n     * Used to keep track of the granted permissions on browsers which don't\n     * support the Permissions API.\n     */\n    PERMISSIONS_CHANGED: 'rtc.permissions_changed',\n\n    SENDER_VIDEO_CONSTRAINTS_CHANGED: 'rtc.sender_video_constraints_changed',\n\n    /**\n     * Event emitted when {@link RTC.setLastN} method is called to update with\n     * the new value set.\n     * The first argument is the value passed to {@link RTC.setLastN}.\n     */\n    LASTN_VALUE_CHANGED: 'rtc.lastn_value_changed',\n\n    /**\n     * Event emitted when ssrc for a local track is extracted and stored\n     * in {@link TraceablePeerConnection}.\n     * @param {JitsiLocalTrack} track which ssrc was updated\n     * @param {string} ssrc that was stored\n     */\n    LOCAL_TRACK_SSRC_UPDATED: 'rtc.local_track_ssrc_updated',\n\n    /**\n     * The max enabled resolution of a local video track was changed.\n     */\n    LOCAL_TRACK_MAX_ENABLED_RESOLUTION_CHANGED: 'rtc.local_track_max_enabled_resolution_changed',\n\n    TRACK_ATTACHED: 'rtc.track_attached',\n\n    /**\n     * Event fired when we remote track is added to the conference.\n     * 1st event argument is the added <tt>JitsiRemoteTrack</tt> instance.\n     **/\n    REMOTE_TRACK_ADDED: 'rtc.remote_track_added',\n\n    // FIXME get rid of this event in favour of NO_DATA_FROM_SOURCE event\n    // (currently implemented for local tracks only)\n    REMOTE_TRACK_MUTE: 'rtc.remote_track_mute',\n\n    /**\n     * Indicates that the remote track has been removed from the conference.\n     * 1st event argument is the removed {@link JitsiRemoteTrack} instance.\n     */\n    REMOTE_TRACK_REMOVED: 'rtc.remote_track_removed',\n\n    // FIXME get rid of this event in favour of NO_DATA_FROM_SOURCE event\n    // (currently implemented for local tracks only)\n    REMOTE_TRACK_UNMUTE: 'rtc.remote_track_unmute',\n\n    /**\n     * Indicates error while set local description.\n     */\n    SET_LOCAL_DESCRIPTION_FAILED: 'rtc.set_local_description_failed',\n\n    /**\n     * Indicates error while set remote description.\n     */\n    SET_REMOTE_DESCRIPTION_FAILED: 'rtc.set_remote_description_failed',\n    AUDIO_OUTPUT_DEVICE_CHANGED: 'rtc.audio_output_device_changed',\n    DEVICE_LIST_CHANGED: 'rtc.device_list_changed',\n\n    /**\n     * Indicates that the list with available devices will change.\n     */\n    DEVICE_LIST_WILL_CHANGE: 'rtc.device_list_will_change',\n    DEVICE_LIST_AVAILABLE: 'rtc.device_list_available',\n\n    /**\n     * Indicates that a message from another participant is received on\n     * data channel.\n     */\n    ENDPOINT_MESSAGE_RECEIVED: 'rtc.endpoint_message_received',\n\n    /**\n     * Indicates that the remote endpoint stats have been received on data channnel.\n     */\n    ENDPOINT_STATS_RECEIVED: 'rtc.endpoint_stats_received',\n\n    /**\n     * Designates an event indicating that the local ICE username fragment of\n     * the jingle session has changed.\n     * The first argument of the vent is <tt>TraceablePeerConnection</tt> which\n     * is the source of the event.\n     * The second argument is the actual \"ufrag\" string.\n     */\n    LOCAL_UFRAG_CHANGED: 'rtc.local_ufrag_changed',\n\n    /**\n     * Designates an event indicating that the local ICE username fragment of\n     * the jingle session has changed.\n     * The first argument of the vent is <tt>TraceablePeerConnection</tt> which\n     * is the source of the event.\n     * The second argument is the actual \"ufrag\" string.\n     */\n    REMOTE_UFRAG_CHANGED: 'rtc.remote_ufrag_changed'\n};\n\nmodule.exports = RTCEvents;\n","/**\n * This class exports constants and factory methods related to the analytics\n * API provided by AnalyticsAdapter. In order for entries in a database to be\n * somewhat easily traceable back to the code which produced them, events sent\n * through analytics should be defined here.\n *\n * Since the AnalyticsAdapter API can be used in different ways, for some events\n * it is more convenient to just define the event name as a constant. For other\n * events a factory function is easier.\n *\n * A general approach for adding a new event:\n * 1. Determine the event type: track, UI, page, or operational. If in doubt use\n * operational.\n * 2. Determine whether the event is related to other existing events, and\n * which fields are desired to be set: name, action, actionSubject, source.\n * 3. If the name is sufficient (the other fields are not important), use a\n * constant. Otherwise use a factory function.\n *\n * Note that the AnalyticsAdapter uses the events passed to its functions for\n * its own purposes, and might modify them. Because of this, factory functions\n * should create new objects.\n *\n */\n\n/**\n * The constant which identifies an event of type \"operational\".\n * @type {string}\n */\nexport const TYPE_OPERATIONAL = 'operational';\n\n/**\n * The constant which identifies an event of type \"page\".\n * @type {string}\n */\nexport const TYPE_PAGE = 'page';\n\n/**\n * The constant which identifies an event of type \"track\".\n * @type {string}\n */\nexport const TYPE_TRACK = 'track';\n\n/**\n * The constant which identifies an event of type \"ui\".\n * @type {string}\n */\nexport const TYPE_UI = 'ui';\n\n/**\n * The \"action\" value for Jingle events which indicates that the Jingle session\n * was restarted (TODO: verify/fix the documentation)\n * @type {string}\n */\nexport const ACTION_JINGLE_RESTART = 'restart';\n\n/**\n * The \"action\" value for Jingle events which indicates that a session-accept\n * timed out (TODO: verify/fix the documentation)\n * @type {string}\n */\nexport const ACTION_JINGLE_SA_TIMEOUT = 'session-accept.timeout';\n\n/**\n * The \"action\" value for Jingle events which indicates that a session-initiate\n * was received.\n * @type {string}\n */\nexport const ACTION_JINGLE_SI_RECEIVED = 'session-initiate.received';\n\n/**\n * The \"action\" value for Jingle events which indicates that a session-initiate\n * not arrived within a timeout (the value is specified in\n * the {@link JingleSessionPC}.\n * @type {string}\n */\nexport const ACTION_JINGLE_SI_TIMEOUT = 'session-initiate.timeout';\n\n/**\n * A constant for the \"terminate\" action for Jingle events. TODO: verify/fix\n * the documentation)\n * @type {string}\n */\nexport const ACTION_JINGLE_TERMINATE = 'terminate';\n\n/**\n * The \"action\" value for Jingle events which indicates that a transport-replace\n * was received.\n * @type {string}\n */\nexport const ACTION_JINGLE_TR_RECEIVED\n    = 'transport-replace.received';\n\n/**\n * The \"action\" value for Jingle events which indicates that a transport-replace\n * succeeded (TODO: verify/fix the documentation)\n * @type {string}\n */\nexport const ACTION_JINGLE_TR_SUCCESS\n    = 'transport-replace.success';\n\n/**\n * The \"action\" value for P2P events which indicates that P2P session initiate message has been rejected by the client\n * because the mandatory requirements were not met.\n * @type {string}\n */\nexport const ACTION_P2P_DECLINED = 'decline';\n\n/**\n * The \"action\" value for P2P events which indicates that a connection was\n * established (TODO: verify/fix the documentation)\n * @type {string}\n */\nexport const ACTION_P2P_ESTABLISHED = 'established';\n\n/**\n * The \"action\" value for P2P events which indicates that something failed.\n * @type {string}\n */\nexport const ACTION_P2P_FAILED = 'failed';\n\n/**\n * The \"action\" value for P2P events which indicates that a switch to\n * jitsi-videobridge happened.\n * @type {string}\n */\nexport const ACTION_P2P_SWITCH_TO_JVB = 'switch.to.jvb';\n\n/**\n * The name of an event which indicates an available device. We send one such\n * event per available device once when the available devices are first known,\n * and every time that they change\n * @type {string}\n *\n * Properties:\n *      audio_input_device_count: the number of audio input devices available at\n *          the time the event was sent.\n *      audio_output_device_count: the number of audio output devices available\n *          at the time the event was sent.\n *      video_input_device_count: the number of video input devices available at\n *          the time the event was sent.\n *      video_output_device_count: the number of video output devices available\n *          at the time the event was sent.\n *      device_id: an identifier of the device described in this event.\n *      device_group_id:\n *      device_kind: one of 'audioinput', 'audiooutput', 'videoinput' or\n *          'videooutput'.\n *      device_label: a string which describes the device.\n */\nexport const AVAILABLE_DEVICE = 'available.device';\n\n/**\n * This appears to be fired only in certain cases when the XMPP connection\n * disconnects (and it was intentional?). It is currently never observed to\n * fire in production.\n *\n * TODO: document\n *\n * Properties:\n *      message: an error message\n */\nexport const CONNECTION_DISCONNECTED = 'connection.disconnected';\n\n/**\n * Indicates that the user of the application provided feedback in terms of a\n * rating (an integer from 1 to 5) and an optional comment.\n * Properties:\n *      value: the user's rating (an integer from 1 to 5)\n *      comment: the user's comment\n */\nexport const FEEDBACK = 'feedback';\n\n/**\n * Indicates the duration of a particular phase of the ICE connectivity\n * establishment.\n *\n * Properties:\n *      phase: the ICE phase (e.g. 'gathering', 'checking', 'establishment')\n *      value: the duration in milliseconds.\n *      p2p: whether the associated ICE connection is p2p or towards a\n *          jitsi-videobridge\n *      initiator: whether the local Jingle peer is the initiator or responder\n *          in the Jingle session. XXX we probably actually care about the ICE\n *          role (controlling vs controlled), and we assume that this correlates\n *          with the Jingle initiator.\n */\nexport const ICE_DURATION = 'ice.duration';\n\n/**\n * Indicates the difference in milliseconds between the ICE establishment time\n * for the P2P and JVB connections (e.g. a value of 10 would indicate that the\n * P2P connection took 10ms more than JVB connection to establish).\n *\n * Properties:\n *      value: the difference in establishment durations in milliseconds.\n *\n */\nexport const ICE_ESTABLISHMENT_DURATION_DIFF\n    = 'ice.establishment.duration.diff';\n\n/**\n * Indicates that the ICE state has changed.\n *\n * Properties:\n *      state: the ICE state which was entered (e.g. 'checking', 'connected',\n *          'completed', etc).\n *      value: the time in milliseconds (as reported by\n *          window.performance.now()) that the state change occurred.\n *      p2p: whether the associated ICE connection is p2p or towards a\n *          jitsi-videobridge\n *      signalingState: The signaling state of the associated PeerConnection\n *      reconnect: whether the associated Jingle session is in the process of\n *          reconnecting (or is it ICE? TODO: verify/fix the documentation)\n */\nexport const ICE_STATE_CHANGED = 'ice.state.changed';\n\n/**\n * Indicates that no bytes have been sent for the track.\n *\n * Properties:\n *      mediaType: the media type of the local track ('audio' or 'video').\n */\nexport const NO_BYTES_SENT = 'track.no-bytes-sent';\n\n/**\n * Indicates that a track was unmuted (?).\n *\n * Properties:\n *      mediaType: the media type of the local track ('audio' or 'video').\n *      trackType: the type of the track ('local' or 'remote').\n *      value: TODO: document\n */\nexport const TRACK_UNMUTED = 'track.unmuted';\n\n/**\n * Creates an operational event which indicates that we have received a\n * \"bridge down\" event from jicofo.\n */\nexport const createBridgeDownEvent = function() {\n    const bridgeDown = 'bridge.down';\n\n    return {\n        action: bridgeDown,\n        actionSubject: bridgeDown,\n        type: TYPE_OPERATIONAL\n    };\n};\n\n/**\n * Creates an event which indicates that the XMPP connection failed\n * @param errorType TODO\n * @param errorMessage TODO\n * @param detail connection failed details.\n */\nexport const createConnectionFailedEvent\n    = function(errorType, errorMessage, details) {\n        return {\n            type: TYPE_OPERATIONAL,\n            action: 'connection.failed',\n            attributes: {\n                'error_type': errorType,\n                'error_message': errorMessage,\n                ...details\n            }\n        };\n    };\n\n/**\n * Creates a conference event.\n *\n * @param {string} action - The action of the event.\n * @param {Object} attributes - The attributes to be added to the event.\n * @returns {{type: string, source: string, action: string, attributes: object}}\n */\nexport function createConferenceEvent(action, attributes) {\n    return {\n        action,\n        attributes,\n        source: 'conference',\n        type: TYPE_OPERATIONAL\n    };\n}\n\n/**\n * Creates an operational event which indicates that a particular connection\n * stage was reached (i.e. the XMPP connection transitioned to the \"connected\"\n * state).\n *\n * @param stage the stage which was reached\n * @param attributes additional attributes for the event. This should be an\n * object with a \"value\" property indicating a timestamp in milliseconds\n * relative to the beginning of the document's lifetime.\n *\n */\nexport const createConnectionStageReachedEvent = function(stage, attributes) {\n    const action = 'connection.stage.reached';\n\n    return {\n        action,\n        actionSubject: stage,\n        attributes,\n        source: action,\n        type: TYPE_OPERATIONAL\n    };\n};\n\n/**\n * Creates an operational event for the end-to-end round trip time to a\n * specific remote participant.\n * @param participantId the ID of the remote participant.\n * @param region the region of the remote participant\n * @param rtt the rtt\n */\nexport const createE2eRttEvent = function(participantId, region, rtt) {\n    const attributes = {\n        'participant_id': participantId,\n        region,\n        rtt\n    };\n\n    return {\n        attributes,\n        name: 'e2e_rtt',\n        type: TYPE_OPERATIONAL\n    };\n};\n\n/**\n * Creates an event which indicates that the focus has left the MUC.\n */\nexport const createFocusLeftEvent = function() {\n    const action = 'focus.left';\n\n    return {\n        action,\n        actionSubject: action,\n        type: TYPE_OPERATIONAL\n    };\n};\n\n/**\n * Creates an event related to a getUserMedia call.\n *\n * @param action the type of the result that the event represents: 'error',\n * 'success', 'warning', etc.\n * @param attributes the attributes to attach to the event.\n * @returns {{type: string, source: string, name: string}}\n */\nexport const createGetUserMediaEvent = function(action, attributes = {}) {\n    return {\n        type: TYPE_OPERATIONAL,\n        source: 'get.user.media',\n        action,\n        attributes\n    };\n};\n\n/**\n * Creates an event related to remote participant connection status changes.\n *\n * @param attributes the attributes to attach to the event.\n * @returns {{type: string, source: string, name: string}}\n */\nexport const createParticipantConnectionStatusEvent = function(attributes = {}) {\n    const action = 'duration';\n\n    return {\n        type: TYPE_OPERATIONAL,\n        source: 'peer.conn.status',\n        action,\n        attributes\n    };\n};\n\n/**\n * Creates an event for a Jingle-related event.\n * @param action the action of the event\n * @param attributes attributes to add to the event.\n */\nexport const createJingleEvent = function(action, attributes = {}) {\n    return {\n        type: TYPE_OPERATIONAL,\n        action,\n        source: 'jingle',\n        attributes\n    };\n};\n\n/**\n * Creates an event which indicates that a local track was not able to read\n * data from its source (a camera or a microphone).\n *\n * @param mediaType {String} the media type of the local track ('audio' or\n * 'video').\n */\nexport const createNoDataFromSourceEvent = function(mediaType, value) {\n    return {\n        attributes: {\n            'media_type': mediaType,\n            value\n        },\n        action: 'track.no.data.from.source',\n        type: TYPE_OPERATIONAL\n    };\n};\n\n/**\n * Creates an event for a p2p-related event.\n * @param action the action of the event\n * @param attributes attributes to add to the event.\n */\nexport const createP2PEvent = function(action, attributes = {}) {\n    return {\n        type: TYPE_OPERATIONAL,\n        action,\n        source: 'p2p',\n        attributes\n    };\n};\n\n/**\n * Indicates that we received a remote command to mute.\n */\nexport const createRemotelyMutedEvent = function(mediaType) {\n    return {\n        type: TYPE_OPERATIONAL,\n        action: 'remotely.muted',\n        mediaType\n    };\n};\n\n/**\n * Creates an event which contains RTP statistics such as RTT and packet loss.\n *\n * All average RTP stats are currently reported under 1 event name, but with\n * different properties that allows to distinguish between a P2P call, a\n * call relayed through TURN or the JVB, and multiparty vs 1:1.\n *\n * The structure of the event is:\n *\n * {\n *      p2p: true,\n *      conferenceSize: 2,\n *      localCandidateType: \"relay\",\n *      remoteCandidateType: \"relay\",\n *      transportType: \"udp\",\n *\n *      // Average RTT of 200ms\n *      \"rtt.avg\": 200,\n *      \"rtt.samples\": \"[100, 200, 300]\",\n *\n *      // Average packet loss of 10%\n *      \"packet.loss.avg\": 10,\n *      \"packet.loss.samples\": '[5, 10, 15]'\n *\n *      // Difference in milliseconds in the end-to-end RTT between p2p and jvb.\n *      // The e2e RTT through jvb is 15ms shorter:\n *      \"rtt.diff\": 15,\n *\n *      // End-to-end RTT through JVB is ms.\n *      \"end2end.rtt.avg\" = 100\n * }\n *\n * Note that the value of the \"samples\" properties are (JSON encoded) strings,\n * and not JSON arrays, as events' attributes can not be nested. The samples are\n * currently included for debug purposes only and can be removed anytime soon\n * from the structure.\n *\n * Also note that not all of values are present in each event, as values are\n * obtained and calculated as part of different process/event pipe. For example\n * {@link ConnectionAvgStats} instances are doing the reports for each\n * {@link TraceablePeerConnection} and work independently from the main stats\n * pipe.\n */\nexport const createRtpStatsEvent = function(attributes) {\n    return {\n        type: TYPE_OPERATIONAL,\n        action: 'rtp.stats',\n        attributes\n    };\n};\n\n/**\n * Creates an event which contains the round trip time (RTT) to a set of\n * regions.\n *\n * @param attributes\n * @returns {{type: string, action: string, attributes: *}}\n */\nexport const createRttByRegionEvent = function(attributes) {\n    return {\n        type: TYPE_OPERATIONAL,\n        action: 'rtt.by.region',\n        attributes\n    };\n};\n\n/**\n * Creates an event which contains the local and remote ICE candidate types\n * for the transport that is currently selected.\n *\n * @param attributes\n * @returns {{type: string, action: string, attributes: *}}\n */\nexport const createTransportStatsEvent = function(attributes) {\n    return {\n        type: TYPE_OPERATIONAL,\n        action: 'transport.stats',\n        attributes\n    };\n};\n\n/**\n * Creates an event which contains information about the audio output problem (the user id of the affected participant,\n * the local audio levels and the remote audio levels that triggered the event).\n *\n * @param {string} userID - The user id of the affected participant.\n * @param {*} localAudioLevels - The local audio levels.\n * @param {*} remoteAudioLevels - The audio levels received from the participant.\n */\nexport function createAudioOutputProblemEvent(userID, localAudioLevels, remoteAudioLevels) {\n    return {\n        type: TYPE_OPERATIONAL,\n        action: 'audio.output.problem',\n        attributes: {\n            userID,\n            localAudioLevels,\n            remoteAudioLevels\n        }\n    };\n}\n\n/**\n * Creates an event which contains an information related to the bridge channel close event.\n *\n * @param {string} code - A code from {@link https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent}\n * @param {string} reason - A string which describes the reason for closing the bridge channel.\n * @returns {{type: string, action: string, attributes: { code: string, reason: string }}}\n */\nexport const createBridgeChannelClosedEvent = function(code, reason) {\n    return {\n        type: TYPE_OPERATIONAL,\n        action: 'bridge-channel.error',\n        attributes: {\n            code,\n            reason\n        }\n    };\n};\n\n/**\n * Creates an event which indicates the Time To First Media (TTFM).\n * It is measured in milliseconds relative to the beginning of the document's\n * lifetime (i.e. the origin used by window.performance.now()), and it excludes\n * the following:\n * 1. The delay due to getUserMedia()\n * 2. The period between the MUC being joined and the reception of the Jingle\n * session-initiate from jicofo. This is because jicofo will not start a Jingle\n * session until there are at least 2 participants in the room.\n *\n * @param attributes the attributes to add to the event. Currently used fields:\n *      mediaType: the media type of the local track ('audio' or 'video').\n *      muted: whether the track has ever been muted (?)\n *      value: the TTMF in milliseconds.\n */\nexport const createTtfmEvent = function(attributes) {\n    return createConnectionStageReachedEvent('ttfm', attributes);\n};\n","import { getLogger } from 'jitsi-meet-logger';\nconst logger = getLogger(__filename);\n\nimport CodecMimeType from '../../service/RTC/CodecMimeType';\nimport MediaDirection from '../../service/RTC/MediaDirection';\nimport browser from '../browser';\nimport RandomUtil from '../util/RandomUtil';\n\nconst SDPUtil = {\n    filterSpecialChars(text) {\n        // XXX Neither one of the falsy values (e.g. null, undefined, false,\n        // \"\", etc.) \"contain\" special chars.\n        // eslint-disable-next-line no-useless-escape\n        return text ? text.replace(/[\\\\\\/\\{,\\}\\+]/g, '') : text;\n    },\n    iceparams(mediadesc, sessiondesc) {\n        let data = null;\n        let pwd, ufrag;\n\n        if ((ufrag = SDPUtil.findLine(mediadesc, 'a=ice-ufrag:', sessiondesc))\n                && (pwd\n                    = SDPUtil.findLine(\n                        mediadesc,\n                        'a=ice-pwd:',\n                        sessiondesc))) {\n            data = {\n                ufrag: SDPUtil.parseICEUfrag(ufrag),\n                pwd: SDPUtil.parseICEPwd(pwd)\n            };\n        }\n\n        return data;\n    },\n    parseICEUfrag(line) {\n        return line.substring(12);\n    },\n    buildICEUfrag(frag) {\n        return `a=ice-ufrag:${frag}`;\n    },\n    parseICEPwd(line) {\n        return line.substring(10);\n    },\n    buildICEPwd(pwd) {\n        return `a=ice-pwd:${pwd}`;\n    },\n    parseMID(line) {\n        return line.substring(6);\n    },\n    parseMLine(line) {\n        const data = {};\n        const parts = line.substring(2).split(' ');\n\n        data.media = parts.shift();\n        data.port = parts.shift();\n        data.proto = parts.shift();\n        if (parts[parts.length - 1] === '') { // trailing whitespace\n            parts.pop();\n        }\n        data.fmt = parts;\n\n        return data;\n    },\n    buildMLine(mline) {\n        return (\n            `m=${mline.media} ${mline.port} ${mline.proto} ${\n                mline.fmt.join(' ')}`);\n    },\n    parseRTPMap(line) {\n        const data = {};\n        let parts = line.substring(9).split(' ');\n\n        data.id = parts.shift();\n        parts = parts[0].split('/');\n        data.name = parts.shift();\n        data.clockrate = parts.shift();\n        data.channels = parts.length ? parts.shift() : '1';\n\n        return data;\n    },\n\n    /**\n     * Parses SDP line \"a=sctpmap:...\" and extracts SCTP port from it.\n     * @param line eg. \"a=sctpmap:5000 webrtc-datachannel\"\n     * @returns [SCTP port number, protocol, streams]\n     */\n    parseSCTPMap(line) {\n        const parts = line.substring(10).split(' ');\n        const sctpPort = parts[0];\n        const protocol = parts[1];\n\n        // Stream count is optional\n        const streamCount = parts.length > 2 ? parts[2] : null;\n\n\n        return [ sctpPort, protocol, streamCount ];// SCTP port\n    },\n    buildRTPMap(el) {\n        let line\n            = `a=rtpmap:${el.getAttribute('id')} ${el.getAttribute('name')}/${\n                el.getAttribute('clockrate')}`;\n\n        if (el.getAttribute('channels')\n            && el.getAttribute('channels') !== '1') {\n            line += `/${el.getAttribute('channels')}`;\n        }\n\n        return line;\n    },\n    parseCrypto(line) {\n        const data = {};\n        const parts = line.substring(9).split(' ');\n\n        data.tag = parts.shift();\n        data['crypto-suite'] = parts.shift();\n        data['key-params'] = parts.shift();\n        if (parts.length) {\n            data['session-params'] = parts.join(' ');\n        }\n\n        return data;\n    },\n    parseFingerprint(line) { // RFC 4572\n        const data = {};\n        const parts = line.substring(14).split(' ');\n\n        data.hash = parts.shift();\n        data.fingerprint = parts.shift();\n\n        // TODO assert that fingerprint satisfies 2UHEX *(\":\" 2UHEX) ?\n        return data;\n    },\n    parseFmtp(line) {\n        const data = [];\n        let parts = line.split(' ');\n\n        parts.shift();\n        parts = parts.join(' ').split(';');\n        for (let i = 0; i < parts.length; i++) {\n            let key = parts[i].split('=')[0];\n\n            while (key.length && key[0] === ' ') {\n                key = key.substring(1);\n            }\n            const value = parts[i].split('=')[1];\n\n            if (key && value) {\n                data.push({ name: key,\n                    value });\n            } else if (key) {\n                // rfc 4733 (DTMF) style stuff\n                data.push({ name: '',\n                    value: key });\n            }\n        }\n\n        return data;\n    },\n    parseICECandidate(line) {\n        const candidate = {};\n        const elems = line.split(' ');\n\n        candidate.foundation = elems[0].substring(12);\n        candidate.component = elems[1];\n        candidate.protocol = elems[2].toLowerCase();\n        candidate.priority = elems[3];\n        candidate.ip = elems[4];\n        candidate.port = elems[5];\n\n        // elems[6] => \"typ\"\n        candidate.type = elems[7];\n        candidate.generation = 0; // default value, may be overwritten below\n        for (let i = 8; i < elems.length; i += 2) {\n            switch (elems[i]) {\n            case 'raddr':\n                candidate['rel-addr'] = elems[i + 1];\n                break;\n            case 'rport':\n                candidate['rel-port'] = elems[i + 1];\n                break;\n            case 'generation':\n                candidate.generation = elems[i + 1];\n                break;\n            case 'tcptype':\n                candidate.tcptype = elems[i + 1];\n                break;\n            default: // TODO\n                logger.debug(\n                    `parseICECandidate not translating \"${\n                        elems[i]}\" = \"${elems[i + 1]}\"`);\n            }\n        }\n        candidate.network = '1';\n\n        // not applicable to SDP -- FIXME: should be unique, not just random\n        // eslint-disable-next-line newline-per-chained-call\n        candidate.id = Math.random().toString(36).substr(2, 10);\n\n        return candidate;\n    },\n    buildICECandidate(cand) {\n        let line = [\n            `a=candidate:${cand.foundation}`,\n            cand.component,\n            cand.protocol,\n            cand.priority,\n            cand.ip,\n            cand.port,\n            'typ',\n            cand.type\n        ].join(' ');\n\n        line += ' ';\n        switch (cand.type) {\n        case 'srflx':\n        case 'prflx':\n        case 'relay':\n            if (cand.hasOwnAttribute('rel-addr')\n                    && cand.hasOwnAttribute('rel-port')) {\n                line += 'raddr';\n                line += ' ';\n                line += cand['rel-addr'];\n                line += ' ';\n                line += 'rport';\n                line += ' ';\n                line += cand['rel-port'];\n                line += ' ';\n            }\n            break;\n        }\n        if (cand.hasOwnAttribute('tcptype')) {\n            line += 'tcptype';\n            line += ' ';\n            line += cand.tcptype;\n            line += ' ';\n        }\n        line += 'generation';\n        line += ' ';\n        line += cand.hasOwnAttribute('generation') ? cand.generation : '0';\n\n        return line;\n    },\n    parseSSRC(desc) {\n        // proprietary mapping of a=ssrc lines\n        // TODO: see \"Jingle RTP Source Description\" by Juberti and P. Thatcher\n        // on google docs and parse according to that\n        const data = new Map();\n        const lines = desc.split('\\r\\n');\n\n        for (let i = 0; i < lines.length; i++) {\n            if (lines[i].substring(0, 7) === 'a=ssrc:') {\n                // FIXME: Use regex to smartly find the ssrc.\n                const ssrc = lines[i].split('a=ssrc:')[1].split(' ')[0];\n\n                if (!data.get(ssrc)) {\n                    data.set(ssrc, []);\n                }\n\n                data.get(ssrc).push(lines[i]);\n            }\n        }\n\n        return data;\n    },\n    parseRTCPFB(line) {\n        const parts = line.substr(10).split(' ');\n        const data = {};\n\n        data.pt = parts.shift();\n        data.type = parts.shift();\n        data.params = parts;\n\n        return data;\n    },\n    parseExtmap(line) {\n        const parts = line.substr(9).split(' ');\n        const data = {};\n\n        data.value = parts.shift();\n        if (data.value.indexOf('/') === -1) {\n            data.direction = 'both';\n        } else {\n            data.direction = data.value.substr(data.value.indexOf('/') + 1);\n            data.value = data.value.substr(0, data.value.indexOf('/'));\n        }\n        data.uri = parts.shift();\n        data.params = parts;\n\n        return data;\n    },\n    findLine(haystack, needle, sessionpart) {\n        let lines = haystack.split('\\r\\n');\n\n        for (let i = 0; i < lines.length; i++) {\n            if (lines[i].substring(0, needle.length) === needle) {\n                return lines[i];\n            }\n        }\n        if (!sessionpart) {\n            return false;\n        }\n\n        // search session part\n        lines = sessionpart.split('\\r\\n');\n        for (let j = 0; j < lines.length; j++) {\n            if (lines[j].substring(0, needle.length) === needle) {\n                return lines[j];\n            }\n        }\n\n        return false;\n    },\n    findLines(haystack, needle, sessionpart) {\n        let lines = haystack.split('\\r\\n');\n        const needles = [];\n\n        for (let i = 0; i < lines.length; i++) {\n            if (lines[i].substring(0, needle.length) === needle) {\n                needles.push(lines[i]);\n            }\n        }\n        if (needles.length || !sessionpart) {\n            return needles;\n        }\n\n        // search session part\n        lines = sessionpart.split('\\r\\n');\n        for (let j = 0; j < lines.length; j++) {\n            if (lines[j].substring(0, needle.length) === needle) {\n                needles.push(lines[j]);\n            }\n        }\n\n        return needles;\n    },\n    candidateToJingle(line) {\n        // a=candidate:2979166662 1 udp 2113937151 192.168.2.100 57698 typ host\n        // generation 0\n        //      <candidate component=... foundation=... generation=... id=...\n        // ip=... network=... port=... priority=... protocol=... type=.../>\n        if (line.indexOf('candidate:') === 0) {\n            // eslint-disable-next-line no-param-reassign\n            line = `a=${line}`;\n        } else if (line.substring(0, 12) !== 'a=candidate:') {\n            logger.warn(\n                'parseCandidate called with a line that is not a candidate'\n                    + ' line');\n            logger.warn(line);\n\n            return null;\n        }\n        if (line.substring(line.length - 2) === '\\r\\n') { // chomp it\n            // eslint-disable-next-line no-param-reassign\n            line = line.substring(0, line.length - 2);\n        }\n        const candidate = {};\n        const elems = line.split(' ');\n\n        if (elems[6] !== 'typ') {\n            logger.warn('did not find typ in the right place');\n            logger.warn(line);\n\n            return null;\n        }\n        candidate.foundation = elems[0].substring(12);\n        candidate.component = elems[1];\n        candidate.protocol = elems[2].toLowerCase();\n        candidate.priority = elems[3];\n        candidate.ip = elems[4];\n        candidate.port = elems[5];\n\n        // elems[6] => \"typ\"\n        candidate.type = elems[7];\n\n        candidate.generation = '0'; // default, may be overwritten below\n        for (let i = 8; i < elems.length; i += 2) {\n            switch (elems[i]) {\n            case 'raddr':\n                candidate['rel-addr'] = elems[i + 1];\n                break;\n            case 'rport':\n                candidate['rel-port'] = elems[i + 1];\n                break;\n            case 'generation':\n                candidate.generation = elems[i + 1];\n                break;\n            case 'tcptype':\n                candidate.tcptype = elems[i + 1];\n                break;\n            default: // TODO\n                logger.debug(`not translating \"${elems[i]}\" = \"${elems[i + 1]}\"`);\n            }\n        }\n        candidate.network = '1';\n\n        // not applicable to SDP -- FIXME: should be unique, not just random\n        // eslint-disable-next-line newline-per-chained-call\n        candidate.id = Math.random().toString(36).substr(2, 10);\n\n        return candidate;\n    },\n    candidateFromJingle(cand) {\n        let line = 'a=candidate:';\n\n        line += cand.getAttribute('foundation');\n        line += ' ';\n        line += cand.getAttribute('component');\n        line += ' ';\n\n        let protocol = cand.getAttribute('protocol');\n\n        // use tcp candidates for FF\n\n        if (browser.isFirefox() && protocol.toLowerCase() === 'ssltcp') {\n            protocol = 'tcp';\n        }\n\n        line += protocol; // .toUpperCase(); // chrome M23 doesn't like this\n        line += ' ';\n        line += cand.getAttribute('priority');\n        line += ' ';\n        line += cand.getAttribute('ip');\n        line += ' ';\n        line += cand.getAttribute('port');\n        line += ' ';\n        line += 'typ';\n        line += ` ${cand.getAttribute('type')}`;\n        line += ' ';\n        switch (cand.getAttribute('type')) {\n        case 'srflx':\n        case 'prflx':\n        case 'relay':\n            if (cand.getAttribute('rel-addr')\n                    && cand.getAttribute('rel-port')) {\n                line += 'raddr';\n                line += ' ';\n                line += cand.getAttribute('rel-addr');\n                line += ' ';\n                line += 'rport';\n                line += ' ';\n                line += cand.getAttribute('rel-port');\n                line += ' ';\n            }\n            break;\n        }\n        if (protocol.toLowerCase() === 'tcp') {\n            line += 'tcptype';\n            line += ' ';\n            line += cand.getAttribute('tcptype');\n            line += ' ';\n        }\n        line += 'generation';\n        line += ' ';\n        line += cand.getAttribute('generation') || '0';\n\n        return `${line}\\r\\n`;\n    },\n\n    /**\n     * Parse the 'most' primary video ssrc from the given m line\n     * @param {object} mLine object as parsed from transform.parse\n     * @return {number} the primary video ssrc from the given m line\n     */\n    parsePrimaryVideoSsrc(videoMLine) {\n        const numSsrcs = videoMLine.ssrcs\n            .map(ssrcInfo => ssrcInfo.id)\n            .filter((ssrc, index, array) => array.indexOf(ssrc) === index)\n            .length;\n        const numGroups\n            = (videoMLine.ssrcGroups && videoMLine.ssrcGroups.length) || 0;\n\n        if (numSsrcs > 1 && numGroups === 0) {\n            // Ambiguous, can't figure out the primary\n            return;\n        }\n        let primarySsrc = null;\n\n        if (numSsrcs === 1) {\n            primarySsrc = videoMLine.ssrcs[0].id;\n        } else if (numSsrcs === 2) {\n            // Can figure it out if there's an FID group\n            const fidGroup\n                = videoMLine.ssrcGroups.find(\n                    group => group.semantics === 'FID');\n\n            if (fidGroup) {\n                primarySsrc = fidGroup.ssrcs.split(' ')[0];\n            }\n        } else if (numSsrcs >= 3) {\n            // Can figure it out if there's a sim group\n            const simGroup\n                = videoMLine.ssrcGroups.find(\n                    group => group.semantics === 'SIM');\n\n            if (simGroup) {\n                primarySsrc = simGroup.ssrcs.split(' ')[0];\n            }\n        }\n\n        return primarySsrc;\n    },\n\n    /**\n     * Generate an ssrc\n     * @returns {number} an ssrc\n     */\n    generateSsrc() {\n        return RandomUtil.randomInt(1, 0xffffffff);\n    },\n\n    /**\n     * Get an attribute for the given ssrc with the given attributeName\n     *  from the given mline\n     * @param {object} mLine an mLine object as parsed from transform.parse\n     * @param {number} ssrc the ssrc for which an attribute is desired\n     * @param {string} attributeName the name of the desired attribute\n     * @returns {string} the value corresponding to the given ssrc\n     *  and attributeName\n     */\n    getSsrcAttribute(mLine, ssrc, attributeName) {\n        for (let i = 0; i < mLine.ssrcs.length; ++i) {\n            const ssrcLine = mLine.ssrcs[i];\n\n            if (ssrcLine.id === ssrc\n                && ssrcLine.attribute === attributeName) {\n                return ssrcLine.value;\n            }\n        }\n    },\n\n    /**\n     * Parses the ssrcs from the group sdp line and\n     *  returns them as a list of numbers\n     * @param {object} the ssrcGroup object as parsed from\n     *  sdp-transform\n     * @returns {list<number>} a list of the ssrcs in the group\n     *  parsed as numbers\n     */\n    parseGroupSsrcs(ssrcGroup) {\n        return ssrcGroup\n            .ssrcs\n            .split(' ')\n            .map(ssrcStr => parseInt(ssrcStr, 10));\n    },\n\n    /**\n     * Get the mline of the given type from the given sdp\n     * @param {object} sdp sdp as parsed from transform.parse\n     * @param {string} type the type of the desired mline (e.g. \"video\")\n     * @returns {object} a media object\n     */\n    getMedia(sdp, type) {\n        return sdp.media.find(m => m.type === type);\n    },\n\n    /**\n     * Extracts the ICE username fragment from an SDP string.\n     * @param {string} sdp the SDP in raw text format\n     */\n    getUfrag(sdp) {\n        const ufragLines\n            = sdp.split('\\n').filter(line => line.startsWith('a=ice-ufrag:'));\n\n        if (ufragLines.length > 0) {\n            return ufragLines[0].substr('a=ice-ufrag:'.length);\n        }\n    },\n\n    /**\n     * Sets the given codecName as the preferred codec by moving it to the beginning\n     * of the payload types list (modifies the given mline in place). All instances\n     * of the codec are moved up.\n     * @param {object} mLine the mline object from an sdp as parsed by transform.parse\n     * @param {string} codecName the name of the preferred codec\n     */\n    preferCodec(mline, codecName) {\n        if (!mline || !codecName) {\n            return;\n        }\n\n        const matchingPayloadTypes = mline.rtp\n            .filter(rtp => rtp.codec && rtp.codec.toLowerCase() === codecName.toLowerCase())\n            .map(rtp => rtp.payload);\n\n        if (matchingPayloadTypes) {\n            // Call toString() on payloads to get around an issue within SDPTransform that sets\n            // payloads as a number, instead of a string, when there is only one payload.\n            const payloadTypes\n                = mline.payloads\n                .toString()\n                .split(' ')\n                .map(p => parseInt(p, 10));\n\n            for (const pt of matchingPayloadTypes.reverse()) {\n                const payloadIndex = payloadTypes.indexOf(pt);\n\n                payloadTypes.splice(payloadIndex, 1);\n                payloadTypes.unshift(pt);\n            }\n            mline.payloads = payloadTypes.join(' ');\n        }\n    },\n\n    /**\n     * Strips the given codec from the given mline. All related RTX payload\n     * types are also stripped. If the resulting mline would have no codecs,\n     * it's disabled.\n     *\n     * @param {object} mLine the mline object from an sdp as parsed by transform.parse.\n     * @param {string} codecName the name of the codec which will be stripped.\n     * @param {boolean} highProfile determines if only the high profile H264 codec needs to be\n     * stripped from the sdp when the passed codecName is H264.\n     */\n    stripCodec(mLine, codecName, highProfile = false) {\n        if (!mLine || !codecName) {\n            return;\n        }\n\n        const h264Pts = [];\n        let removePts = [];\n        const stripH264HighCodec = codecName.toLowerCase() === CodecMimeType.H264 && highProfile;\n\n        for (const rtp of mLine.rtp) {\n            if (rtp.codec\n                && rtp.codec.toLowerCase() === codecName.toLowerCase()) {\n                if (stripH264HighCodec) {\n                    h264Pts.push(rtp.payload);\n                } else {\n                    removePts.push(rtp.payload);\n                }\n            }\n        }\n\n        // high profile H264 codecs have 64 as the first two bytes of the profile-level-id.\n        if (stripH264HighCodec) {\n            removePts = mLine.fmtp\n                .filter(item => h264Pts.indexOf(item.payload) > -1 && item.config.includes('profile-level-id=64'))\n                .map(item => item.payload);\n        }\n\n        if (removePts.length > 0) {\n            // We also need to remove the payload types that are related to RTX\n            // for the codecs we want to disable.\n            const rtxApts = removePts.map(item => `apt=${item}`);\n            const rtxPts = mLine.fmtp.filter(\n                item => rtxApts.indexOf(item.config) !== -1);\n\n            removePts.push(...rtxPts.map(item => item.payload));\n\n            // Call toString() on payloads to get around an issue within\n            // SDPTransform that sets payloads as a number, instead of a string,\n            // when there is only one payload.\n            const allPts = mLine.payloads\n                .toString()\n                .split(' ')\n                .map(Number);\n            const keepPts = allPts.filter(pt => removePts.indexOf(pt) === -1);\n\n            if (keepPts.length === 0) {\n                // There are no other codecs, disable the stream.\n                mLine.port = 0;\n                mLine.direction = MediaDirection.INACTIVE;\n                mLine.payloads = '*';\n            } else {\n                mLine.payloads = keepPts.join(' ');\n            }\n\n            mLine.rtp = mLine.rtp.filter(\n                item => keepPts.indexOf(item.payload) !== -1);\n            mLine.fmtp = mLine.fmtp.filter(\n                item => keepPts.indexOf(item.payload) !== -1);\n            if (mLine.rtcpFb) {\n                mLine.rtcpFb = mLine.rtcpFb.filter(\n                    item => keepPts.indexOf(item.payload) !== -1);\n            }\n        }\n    }\n};\n\nexport default SDPUtil;\n","/* global module */\n/**\n * Enumeration of the media direction types.\n * @type {{INACTIVE: string, RECVONLY: string, SENDONLY: string, SENDRECV: string}}\n */\nconst MediaDirection = {\n    /**\n     * Media is send and receive is suspended.\n     */\n    INACTIVE: 'inactive',\n\n    /**\n     * Media is only received from remote peer.\n     */\n    RECVONLY: 'recvonly',\n\n    /**\n     * Media is only sent to the remote peer.\n     */\n    SENDONLY: 'sendonly',\n\n    /**\n     * Media is sent and received.\n     */\n    SENDRECV: 'sendrecv'\n};\n\nmodule.exports = MediaDirection;\n","/* global\n          __filename,\n          MediaStreamTrack,\n          RTCIceCandidate: true,\n          RTCPeerConnection,\n          RTCSessionDescription: true\n*/\n\nimport EventEmitter from 'events';\nimport { getLogger } from 'jitsi-meet-logger';\nimport clonedeep from 'lodash.clonedeep';\n\nimport JitsiTrackError from '../../JitsiTrackError';\nimport * as JitsiTrackErrors from '../../JitsiTrackErrors';\nimport CameraFacingMode from '../../service/RTC/CameraFacingMode';\nimport RTCEvents from '../../service/RTC/RTCEvents';\nimport Resolutions from '../../service/RTC/Resolutions';\nimport VideoType from '../../service/RTC/VideoType';\nimport { AVAILABLE_DEVICE } from '../../service/statistics/AnalyticsEvents';\nimport browser from '../browser';\nimport SDPUtil from '../sdp/SDPUtil';\nimport Statistics from '../statistics/statistics';\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\nimport Listenable from '../util/Listenable';\n\nimport screenObtainer from './ScreenObtainer';\n\nconst logger = getLogger(__filename);\n\n// Require adapter only for certain browsers. This is being done for\n// react-native, which has its own shims, and while browsers are being migrated\n// over to use adapter's shims.\nif (browser.usesAdapter()) {\n    require('webrtc-adapter');\n}\n\nconst eventEmitter = new EventEmitter();\n\nconst AVAILABLE_DEVICES_POLL_INTERVAL_TIME = 3000; // ms\n\n/**\n * Default MediaStreamConstraints to use for calls to getUserMedia.\n *\n * @private\n */\nconst DEFAULT_CONSTRAINTS = {\n    video: {\n        height: {\n            ideal: 720,\n            max: 720,\n            min: 180\n        },\n        width: {\n            ideal: 1280,\n            max: 1280,\n            min: 320\n        }\n    }\n};\n\n// Currently audio output device change is supported only in Chrome and\n// default output always has 'default' device ID\nlet audioOutputDeviceId = 'default'; // default device\n// whether user has explicitly set a device to use\nlet audioOutputChanged = false;\n\n// Disables all audio processing\nlet disableAP = false;\n\n// Disables Acoustic Echo Cancellation\nlet disableAEC = false;\n\n// Disables Noise Suppression\nlet disableNS = false;\n\n// Disables Automatic Gain Control\nlet disableAGC = false;\n\n// Enables stereo.\nlet stereo = null;\n\nconst featureDetectionAudioEl = document.createElement('audio');\nconst isAudioOutputDeviceChangeAvailable\n    = typeof featureDetectionAudioEl.setSinkId !== 'undefined';\n\nlet availableDevices = [];\nlet availableDevicesPollTimer;\n\n/**\n * An empty function.\n */\nfunction emptyFuncton() {\n    // no-op\n}\n\n/**\n * Creates a constraints object to be passed into a call to getUserMedia.\n *\n * @param {Array} um - An array of user media types to get. The accepted types are \"video\", \"audio\", and \"desktop.\"\n * @param {Object} options - Various values to be added to the constraints.\n * @param {string} options.cameraDeviceId - The device id for the video capture device to get video from.\n * @param {Object} options.constraints - Default constraints object to use as a base for the returned constraints.\n * @param {Object} options.desktopStream - The desktop source id from which to capture a desktop sharing video.\n * @param {string} options.facingMode - Which direction the camera is pointing to (applicable on mobile)\n * @param {string} options.micDeviceId - The device id for the audio capture device to get audio from.\n * @private\n * @returns {Object}\n */\nfunction getConstraints(um = [], options = {}) {\n    // Create a deep copy of the constraints to avoid any modification of\n    // the passed in constraints object.\n    const constraints = clonedeep(options.constraints || DEFAULT_CONSTRAINTS);\n\n    if (um.indexOf('video') >= 0) {\n        // The \"resolution\" option is a shortcut and takes precendence.\n        if (Resolutions[options.resolution]) {\n            const r = Resolutions[options.resolution];\n\n            constraints.video.height = { ideal: r.height };\n            constraints.video.width = { ideal: r.width };\n        }\n\n        if (!constraints.video) {\n            constraints.video = {};\n        }\n\n        // Override the constraints on Safari because of the following webkit bug.\n        // https://bugs.webkit.org/show_bug.cgi?id=210932\n        // Camera doesn't start on older macOS versions if min/max constraints are specified.\n        // TODO: remove this hack when the bug fix is available on Mojave, Sierra and High Sierra.\n        if (browser.isWebKitBased()) {\n            if (constraints.video.height && constraints.video.height.ideal) {\n                constraints.video.height = { ideal: constraints.video.height.ideal };\n            } else {\n                logger.warn('Ideal camera height missing, camera may not start properly');\n            }\n            if (constraints.video.width && constraints.video.width.ideal) {\n                constraints.video.width = { ideal: constraints.video.width.ideal };\n            } else {\n                logger.warn('Ideal camera width missing, camera may not start properly');\n            }\n        }\n        if (options.cameraDeviceId) {\n            constraints.video.deviceId = options.cameraDeviceId;\n        } else {\n            const facingMode = options.facingMode || CameraFacingMode.USER;\n\n            constraints.video.facingMode = facingMode;\n        }\n    } else {\n        constraints.video = false;\n    }\n\n    if (um.indexOf('audio') >= 0) {\n        if (!constraints.audio || typeof constraints.audio === 'boolean') {\n            constraints.audio = {};\n        }\n\n        constraints.audio = {\n            autoGainControl: !disableAGC && !disableAP,\n            deviceId: options.micDeviceId,\n            echoCancellation: !disableAEC && !disableAP,\n            noiseSuppression: !disableNS && !disableAP\n        };\n\n        if (stereo) {\n            Object.assign(constraints.audio, { channelCount: 2 });\n        }\n    } else {\n        constraints.audio = false;\n    }\n\n    return constraints;\n}\n\n/**\n * Updates the granted permissions based on the options we requested and the\n * streams we received.\n * @param um the options we requested to getUserMedia.\n * @param stream the stream we received from calling getUserMedia.\n */\nfunction updateGrantedPermissions(um, stream) {\n    const audioTracksReceived\n        = Boolean(stream) && stream.getAudioTracks().length > 0;\n    const videoTracksReceived\n        = Boolean(stream) && stream.getVideoTracks().length > 0;\n    const grantedPermissions = {};\n\n    if (um.indexOf('video') !== -1) {\n        grantedPermissions.video = videoTracksReceived;\n    }\n    if (um.indexOf('audio') !== -1) {\n        grantedPermissions.audio = audioTracksReceived;\n    }\n\n    eventEmitter.emit(RTCEvents.PERMISSIONS_CHANGED, grantedPermissions);\n}\n\n/**\n * Checks if new list of available media devices differs from previous one.\n * @param {MediaDeviceInfo[]} newDevices - list of new devices.\n * @returns {boolean} - true if list is different, false otherwise.\n */\nfunction compareAvailableMediaDevices(newDevices) {\n    if (newDevices.length !== availableDevices.length) {\n        return true;\n    }\n\n    /* eslint-disable newline-per-chained-call */\n\n    return (\n        newDevices.map(mediaDeviceInfoToJSON).sort().join('')\n            !== availableDevices\n                .map(mediaDeviceInfoToJSON).sort().join(''));\n\n    /* eslint-enable newline-per-chained-call */\n\n    /**\n     *\n     * @param info\n     */\n    function mediaDeviceInfoToJSON(info) {\n        return JSON.stringify({\n            kind: info.kind,\n            deviceId: info.deviceId,\n            groupId: info.groupId,\n            label: info.label,\n            facing: info.facing\n        });\n    }\n}\n\n/**\n * Sends analytics event with the passed device list.\n *\n * @param {Array<MediaDeviceInfo>} deviceList - List with info about the\n * available devices.\n * @returns {void}\n */\nfunction sendDeviceListToAnalytics(deviceList) {\n    const audioInputDeviceCount\n        = deviceList.filter(d => d.kind === 'audioinput').length;\n    const audioOutputDeviceCount\n        = deviceList.filter(d => d.kind === 'audiooutput').length;\n    const videoInputDeviceCount\n        = deviceList.filter(d => d.kind === 'videoinput').length;\n    const videoOutputDeviceCount\n        = deviceList.filter(d => d.kind === 'videooutput').length;\n\n    deviceList.forEach(device => {\n        const attributes = {\n            'audio_input_device_count': audioInputDeviceCount,\n            'audio_output_device_count': audioOutputDeviceCount,\n            'video_input_device_count': videoInputDeviceCount,\n            'video_output_device_count': videoOutputDeviceCount,\n            'device_id': device.deviceId,\n            'device_group_id': device.groupId,\n            'device_kind': device.kind,\n            'device_label': device.label\n        };\n\n        Statistics.sendAnalytics(AVAILABLE_DEVICE, attributes);\n    });\n}\n\n\n/**\n * Update known devices.\n *\n * @param {Array<Object>} pds - The new devices.\n * @returns {void}\n *\n * NOTE: Use this function as a shared callback to handle both the devicechange event  and the polling implementations.\n * This prevents duplication and works around a chrome bug (verified to occur on 68) where devicechange fires twice in\n * a row, which can cause async post devicechange processing to collide.\n */\nfunction updateKnownDevices(pds) {\n    if (compareAvailableMediaDevices(pds)) {\n        onMediaDevicesListChanged(pds);\n    }\n}\n\n/**\n * Event handler for the 'devicechange' event.\n *\n * @param {MediaDeviceInfo[]} devices - list of media devices.\n * @emits RTCEvents.DEVICE_LIST_CHANGED\n */\nfunction onMediaDevicesListChanged(devicesReceived) {\n    availableDevices = devicesReceived.slice(0);\n    logger.info('list of media devices has changed:', availableDevices);\n\n    sendDeviceListToAnalytics(availableDevices);\n\n    // Used by tracks to update the real device id before the consumer of lib-jitsi-meet receives the new device list.\n    eventEmitter.emit(RTCEvents.DEVICE_LIST_WILL_CHANGE, availableDevices);\n\n    eventEmitter.emit(RTCEvents.DEVICE_LIST_CHANGED, availableDevices);\n}\n\n/**\n *\n */\nclass RTCUtils extends Listenable {\n    /**\n     *\n     */\n    constructor() {\n        super(eventEmitter);\n    }\n\n    /**\n     * Depending on the browser, sets difference instance methods for\n     * interacting with user media and adds methods to native WebRTC-related\n     * objects. Also creates an instance variable for peer connection\n     * constraints.\n     *\n     * @param {Object} options\n     * @returns {void}\n     */\n    init(options = {}) {\n        if (typeof options.disableAEC === 'boolean') {\n            disableAEC = options.disableAEC;\n            logger.info(`Disable AEC: ${disableAEC}`);\n        }\n        if (typeof options.disableNS === 'boolean') {\n            disableNS = options.disableNS;\n            logger.info(`Disable NS: ${disableNS}`);\n        }\n        if (typeof options.disableAP === 'boolean') {\n            disableAP = options.disableAP;\n            logger.info(`Disable AP: ${disableAP}`);\n        }\n        if (typeof options.disableAGC === 'boolean') {\n            disableAGC = options.disableAGC;\n            logger.info(`Disable AGC: ${disableAGC}`);\n        }\n        if (typeof options.audioQuality?.stereo === 'boolean') {\n            stereo = options.audioQuality.stereo;\n            logger.info(`Stereo: ${stereo}`);\n        }\n\n        window.clearInterval(availableDevicesPollTimer);\n        availableDevicesPollTimer = undefined;\n\n        if (browser.isReactNative()) {\n            this.RTCPeerConnectionType = RTCPeerConnection;\n\n            this.attachMediaStream = undefined; // Unused on React Native.\n\n            this.getStreamID = function({ id }) {\n                // The react-native-webrtc implementation that we use at the\n                // time of this writing returns a number for the id of\n                // MediaStream. Let's just say that a number contains no special\n                // characters.\n                return (\n                    typeof id === 'number'\n                        ? id\n                        : SDPUtil.filterSpecialChars(id));\n            };\n            this.getTrackID = ({ id }) => id;\n        } else {\n            this.RTCPeerConnectionType = RTCPeerConnection;\n\n            this.attachMediaStream\n                = wrapAttachMediaStream((element, stream) => {\n                    if (element) {\n                        element.srcObject = stream;\n                    }\n                });\n\n            this.getStreamID = ({ id }) => id;\n            this.getTrackID = ({ id }) => id;\n        }\n\n        this.pcConstraints = browser.isChromiumBased() || browser.isReactNative()\n            ? { optional: [\n                { googScreencastMinBitrate: 100 },\n                { googCpuOveruseDetection: true }\n            ] }\n            : {};\n\n        screenObtainer.init(options);\n\n        if (this.isDeviceListAvailable()) {\n            this.enumerateDevices(ds => {\n                availableDevices = ds.slice(0);\n\n                logger.debug('Available devices: ', availableDevices);\n                sendDeviceListToAnalytics(availableDevices);\n\n                eventEmitter.emit(\n                    RTCEvents.DEVICE_LIST_AVAILABLE,\n                    availableDevices);\n\n                if (browser.supportsDeviceChangeEvent()) {\n                    navigator.mediaDevices.addEventListener(\n                        'devicechange',\n                        () => this.enumerateDevices(emptyFuncton));\n                } else {\n                    // Periodically poll enumerateDevices() method to check if\n                    // list of media devices has changed.\n                    availableDevicesPollTimer = window.setInterval(\n                        () => this.enumerateDevices(emptyFuncton),\n                        AVAILABLE_DEVICES_POLL_INTERVAL_TIME);\n                }\n            });\n        }\n    }\n\n    /**\n     *\n     * @param {Function} callback\n     */\n    enumerateDevices(callback) {\n        navigator.mediaDevices.enumerateDevices()\n            .then(devices => {\n                updateKnownDevices(devices);\n                callback(devices);\n            })\n            .catch(error => {\n                logger.warn(`Failed to  enumerate devices. ${error}`);\n                updateKnownDevices([]);\n                callback([]);\n            });\n    }\n\n    /**\n     * Acquires a media stream via getUserMedia that\n     * matches the given constraints\n     *\n     * @param {array} umDevices which devices to acquire (e.g. audio, video)\n     * @param {Object} constraints - Stream specifications to use.\n     * @param {number} timeout - The timeout in ms for GUM.\n     * @returns {Promise}\n     */\n    _getUserMedia(umDevices, constraints = {}, timeout = 0) {\n        return new Promise((resolve, reject) => {\n            let gumTimeout, timeoutExpired = false;\n\n            if (typeof timeout === 'number' && !isNaN(timeout) && timeout > 0) {\n                gumTimeout = setTimeout(() => {\n                    timeoutExpired = true;\n                    gumTimeout = undefined;\n                    reject(new JitsiTrackError(JitsiTrackErrors.TIMEOUT));\n                }, timeout);\n            }\n\n            navigator.mediaDevices.getUserMedia(constraints)\n                .then(stream => {\n                    logger.log('onUserMediaSuccess');\n                    updateGrantedPermissions(umDevices, stream);\n                    if (!timeoutExpired) {\n                        if (typeof gumTimeout !== 'undefined') {\n                            clearTimeout(gumTimeout);\n                        }\n                        resolve(stream);\n                    }\n                })\n                .catch(error => {\n                    logger.warn(`Failed to get access to local media. ${error} ${JSON.stringify(constraints)}`);\n                    const jitsiError = new JitsiTrackError(error, constraints, umDevices);\n\n                    if (!timeoutExpired) {\n                        if (typeof gumTimeout !== 'undefined') {\n                            clearTimeout(gumTimeout);\n                        }\n                        reject(error);\n                    }\n\n                    if (jitsiError.name === JitsiTrackErrors.PERMISSION_DENIED) {\n                        updateGrantedPermissions(umDevices, undefined);\n                    }\n\n                    // else {\n                    // Probably the error is not caused by the lack of permissions and we don't need to update them.\n                    // }\n                });\n        });\n    }\n\n    /**\n     * Acquire a display stream via the screenObtainer. This requires extra\n     * logic compared to use screenObtainer versus normal device capture logic\n     * in RTCUtils#_getUserMedia.\n     *\n     * @returns {Promise} A promise which will be resolved with an object which\n     * contains the acquired display stream. If desktop sharing is not supported\n     * then a rejected promise will be returned.\n     */\n    _getDesktopMedia() {\n        if (!screenObtainer.isSupported()) {\n            return Promise.reject(new Error('Desktop sharing is not supported!'));\n        }\n\n        return new Promise((resolve, reject) => {\n            screenObtainer.obtainStream(\n                stream => {\n                    resolve(stream);\n                },\n                error => {\n                    reject(error);\n                });\n        });\n    }\n\n    /**\n     * Private utility for determining if the passed in MediaStream contains\n     * tracks of the type(s) specified in the requested devices.\n     *\n     * @param {string[]} requestedDevices - The track types that are expected to\n     * be includes in the stream.\n     * @param {MediaStream} stream - The MediaStream to check if it has the\n     * expected track types.\n     * @returns {string[]} An array of string with the missing track types. The\n     * array will be empty if all requestedDevices are found in the stream.\n     */\n    _getMissingTracks(requestedDevices = [], stream) {\n        const missingDevices = [];\n\n        const audioDeviceRequested = requestedDevices.includes('audio');\n        const audioTracksReceived\n            = stream && stream.getAudioTracks().length > 0;\n\n        if (audioDeviceRequested && !audioTracksReceived) {\n            missingDevices.push('audio');\n        }\n\n        const videoDeviceRequested = requestedDevices.includes('video');\n        const videoTracksReceived\n            = stream && stream.getVideoTracks().length > 0;\n\n        if (videoDeviceRequested && !videoTracksReceived) {\n            missingDevices.push('video');\n        }\n\n        return missingDevices;\n    }\n\n    /**\n     * Gets streams from specified device types. This function intentionally\n     * ignores errors for upstream to catch and handle instead.\n     *\n     * @param {Object} options - A hash describing what devices to get and\n     * relevant constraints.\n     * @param {string[]} options.devices - The types of media to capture. Valid\n     * values are \"desktop\", \"audio\", and \"video\".\n     * @param {Object} options.desktopSharingFrameRate\n     * @param {Object} options.desktopSharingFrameRate.min - Minimum fps\n     * @param {Object} options.desktopSharingFrameRate.max - Maximum fps\n     * @param {String} options.desktopSharingSourceDevice - The device id or\n     * label for a video input source that should be used for screensharing.\n     * @returns {Promise} The promise, when successful, will return an array of\n     * meta data for the requested device type, which includes the stream and\n     * track. If an error occurs, it will be deferred to the caller for\n     * handling.\n     */\n    obtainAudioAndVideoPermissions(options) {\n        const {\n            timeout,\n            ...otherOptions\n        } = options;\n\n        const mediaStreamsMetaData = [];\n\n        // Declare private functions to be used in the promise chain below.\n        // These functions are declared in the scope of this function because\n        // they are not being used anywhere else, so only this function needs to\n        // know about them.\n\n        /**\n         * Executes a request for desktop media if specified in options.\n         *\n         * @returns {Promise}\n         */\n        const maybeRequestDesktopDevice = function() {\n            const umDevices = otherOptions.devices || [];\n            const isDesktopDeviceRequested\n                = umDevices.indexOf('desktop') !== -1;\n\n            if (!isDesktopDeviceRequested) {\n                return Promise.resolve();\n            }\n\n            const {\n                desktopSharingSourceDevice\n            } = otherOptions;\n\n            // Attempt to use a video input device as a screenshare source if\n            // the option is defined.\n            if (desktopSharingSourceDevice) {\n                const matchingDevice\n                    = availableDevices && availableDevices.find(device =>\n                        device.kind === 'videoinput'\n                            && (device.deviceId === desktopSharingSourceDevice\n                            || device.label === desktopSharingSourceDevice));\n\n                if (!matchingDevice) {\n                    return Promise.reject(new JitsiTrackError(\n                        { name: 'ConstraintNotSatisfiedError' },\n                        {},\n                        [ desktopSharingSourceDevice ]\n                    ));\n                }\n\n                const requestedDevices = [ 'video' ];\n                const constraints = {\n                    video: {\n                        deviceId: matchingDevice.deviceId\n\n                        // frameRate is omited here on purpose since this is a device that we'll pretend is a screen.\n                    }\n                };\n\n                return this._getUserMedia(requestedDevices, constraints, timeout)\n                    .then(stream => {\n                        return {\n                            sourceType: 'device',\n                            stream\n                        };\n                    });\n            }\n\n            return this._getDesktopMedia();\n        }.bind(this);\n\n        /**\n         * Creates a meta data object about the passed in desktopStream and\n         * pushes the meta data to the internal array mediaStreamsMetaData to be\n         * returned later.\n         *\n         * @param {MediaStreamTrack} desktopStream - A track for a desktop\n         * capture.\n         * @returns {void}\n         */\n        const maybeCreateAndAddDesktopTrack = function(desktopStream) {\n            if (!desktopStream) {\n                return;\n            }\n\n            const { stream, sourceId, sourceType } = desktopStream;\n\n            const desktopAudioTracks = stream.getAudioTracks();\n\n            if (desktopAudioTracks.length) {\n                const desktopAudioStream = new MediaStream(desktopAudioTracks);\n\n                mediaStreamsMetaData.push({\n                    stream: desktopAudioStream,\n                    sourceId,\n                    sourceType,\n                    track: desktopAudioStream.getAudioTracks()[0]\n                });\n            }\n\n            const desktopVideoTracks = stream.getVideoTracks();\n\n            if (desktopVideoTracks.length) {\n                const desktopVideoStream = new MediaStream(desktopVideoTracks);\n\n                mediaStreamsMetaData.push({\n                    stream: desktopVideoStream,\n                    sourceId,\n                    sourceType,\n                    track: desktopVideoStream.getVideoTracks()[0],\n                    videoType: VideoType.DESKTOP\n                });\n            }\n        };\n\n        /**\n         * Executes a request for audio and/or video, as specified in options.\n         * By default both audio and video will be captured if options.devices\n         * is not defined.\n         *\n         * @returns {Promise}\n         */\n        const maybeRequestCaptureDevices = function() {\n            const umDevices = otherOptions.devices || [ 'audio', 'video' ];\n            const requestedCaptureDevices = umDevices.filter(device => device === 'audio' || device === 'video');\n\n            if (!requestedCaptureDevices.length) {\n                return Promise.resolve();\n            }\n\n            const constraints = getConstraints(requestedCaptureDevices, otherOptions);\n\n            logger.info('Got media constraints: ', JSON.stringify(constraints));\n\n            return this._getUserMedia(requestedCaptureDevices, constraints, timeout);\n        }.bind(this);\n\n        /**\n         * Splits the passed in media stream into separate audio and video\n         * streams and creates meta data objects for each and pushes them to the\n         * internal array mediaStreamsMetaData to be returned later.\n         *\n         * @param {MediaStreamTrack} avStream - A track for with audio and/or\n         * video track.\n         * @returns {void}\n         */\n        const maybeCreateAndAddAVTracks = function(avStream) {\n            if (!avStream) {\n                return;\n            }\n\n            const audioTracks = avStream.getAudioTracks();\n\n            if (audioTracks.length) {\n                const audioStream = new MediaStream(audioTracks);\n\n                mediaStreamsMetaData.push({\n                    stream: audioStream,\n                    track: audioStream.getAudioTracks()[0],\n                    effects: otherOptions.effects\n                });\n            }\n\n            const videoTracks = avStream.getVideoTracks();\n\n            if (videoTracks.length) {\n                const videoStream = new MediaStream(videoTracks);\n\n                mediaStreamsMetaData.push({\n                    stream: videoStream,\n                    track: videoStream.getVideoTracks()[0],\n                    videoType: VideoType.CAMERA,\n                    effects: otherOptions.effects\n                });\n            }\n        };\n\n        return maybeRequestDesktopDevice()\n            .then(maybeCreateAndAddDesktopTrack)\n            .then(maybeRequestCaptureDevices)\n            .then(maybeCreateAndAddAVTracks)\n            .then(() => mediaStreamsMetaData)\n            .catch(error => {\n                mediaStreamsMetaData.forEach(({ stream }) => {\n                    this.stopMediaStream(stream);\n                });\n\n                return Promise.reject(error);\n            });\n    }\n\n    /**\n     * Checks whether it is possible to enumerate available cameras/microphones.\n     *\n     * @returns {boolean} {@code true} if the device listing is available;\n     * {@code false}, otherwise.\n     */\n    isDeviceListAvailable() {\n        return Boolean(\n            navigator.mediaDevices\n                && navigator.mediaDevices.enumerateDevices);\n    }\n\n    /**\n     * Returns true if changing the input (camera / microphone) or output\n     * (audio) device is supported and false if not.\n     * @params {string} [deviceType] - type of device to change. Default is\n     *      undefined or 'input', 'output' - for audio output device change.\n     * @returns {boolean} true if available, false otherwise.\n     */\n    isDeviceChangeAvailable(deviceType) {\n        return deviceType === 'output' || deviceType === 'audiooutput'\n            ? isAudioOutputDeviceChangeAvailable\n            : true;\n    }\n\n    /**\n     * A method to handle stopping of the stream.\n     * One point to handle the differences in various implementations.\n     * @param mediaStream MediaStream object to stop.\n     */\n    stopMediaStream(mediaStream) {\n        if (!mediaStream) {\n            return;\n        }\n\n        mediaStream.getTracks().forEach(track => {\n            if (track.stop) {\n                track.stop();\n            }\n        });\n\n        // leave stop for implementation still using it\n        if (mediaStream.stop) {\n            mediaStream.stop();\n        }\n\n        // The MediaStream implementation of the react-native-webrtc project has\n        // an explicit release method that is to be invoked in order to release\n        // used resources such as memory.\n        if (mediaStream.release) {\n            mediaStream.release();\n        }\n    }\n\n    /**\n     * Returns whether the desktop sharing is enabled or not.\n     * @returns {boolean}\n     */\n    isDesktopSharingEnabled() {\n        return screenObtainer.isSupported();\n    }\n\n    /**\n     * Sets current audio output device.\n     * @param {string} deviceId - id of 'audiooutput' device from\n     *      navigator.mediaDevices.enumerateDevices(), 'default' for default\n     *      device\n     * @returns {Promise} - resolves when audio output is changed, is rejected\n     *      otherwise\n     */\n    setAudioOutputDevice(deviceId) {\n        if (!this.isDeviceChangeAvailable('output')) {\n            return Promise.reject(\n                new Error('Audio output device change is not supported'));\n        }\n\n        return featureDetectionAudioEl.setSinkId(deviceId)\n            .then(() => {\n                audioOutputDeviceId = deviceId;\n                audioOutputChanged = true;\n\n                logger.log(`Audio output device set to ${deviceId}`);\n\n                eventEmitter.emit(RTCEvents.AUDIO_OUTPUT_DEVICE_CHANGED,\n                    deviceId);\n            });\n    }\n\n    /**\n     * Sets the capture frame rate for desktop tracks.\n     *\n     * @param {number} maxFps - max fps to be used as the capture frame rate.\n     * @returns {void}\n     */\n    setDesktopSharingFrameRate(maxFps) {\n        screenObtainer.setDesktopSharingFrameRate(maxFps);\n    }\n\n    /**\n     * Returns currently used audio output device id, '' stands for default\n     * device\n     * @returns {string}\n     */\n    getAudioOutputDevice() {\n        return audioOutputDeviceId;\n    }\n\n    /**\n     * Returns list of available media devices if its obtained, otherwise an\n     * empty array is returned/\n     * @returns {Array} list of available media devices.\n     */\n    getCurrentlyAvailableMediaDevices() {\n        return availableDevices;\n    }\n\n    /**\n     * Returns whether available devices have permissions granted\n     * @returns {Boolean}\n     */\n    arePermissionsGrantedForAvailableDevices() {\n        return availableDevices.some(device => Boolean(device.label));\n    }\n\n    /**\n     * Returns event data for device to be reported to stats.\n     * @returns {MediaDeviceInfo} device.\n     */\n    getEventDataForActiveDevice(device) {\n        const deviceList = [];\n        const deviceData = {\n            'deviceId': device.deviceId,\n            'kind': device.kind,\n            'label': device.label,\n            'groupId': device.groupId\n        };\n\n        deviceList.push(deviceData);\n\n        return { deviceList };\n    }\n\n    /**\n     * Configures the given PeerConnection constraints to either enable or\n     * disable (according to the value of the 'enable' parameter) the\n     * 'googSuspendBelowMinBitrate' option.\n     * @param constraints the constraints on which to operate.\n     * @param enable {boolean} whether to enable or disable the suspend video\n     * option.\n     */\n    setSuspendVideo(constraints, enable) {\n        if (!constraints.optional) {\n            constraints.optional = [];\n        }\n\n        // Get rid of all \"googSuspendBelowMinBitrate\" constraints (we assume\n        // that the elements of constraints.optional contain a single property).\n        constraints.optional\n            = constraints.optional.filter(\n                c => !c.hasOwnProperty('googSuspendBelowMinBitrate'));\n\n        if (enable) {\n            constraints.optional.push({ googSuspendBelowMinBitrate: 'true' });\n        }\n    }\n}\n\nconst rtcUtils = new RTCUtils();\n\n/**\n * Wraps original attachMediaStream function to set current audio output device\n * if this is supported.\n * @param {Function} origAttachMediaStream\n * @returns {Function}\n */\nfunction wrapAttachMediaStream(origAttachMediaStream) {\n    return function(element, stream) {\n        // eslint-disable-next-line prefer-rest-params\n        const res = origAttachMediaStream.apply(rtcUtils, arguments);\n\n        if (stream\n                && rtcUtils.isDeviceChangeAvailable('output')\n                && stream.getAudioTracks\n                && stream.getAudioTracks().length\n\n                // we skip setting audio output if there was no explicit change\n                && audioOutputChanged) {\n            element.setSinkId(rtcUtils.getAudioOutputDevice())\n                .catch(function(ex) {\n                    const err\n                        = new JitsiTrackError(ex, null, [ 'audiooutput' ]);\n\n                    GlobalOnErrorHandler.callUnhandledRejectionHandler({\n                        promise: this, // eslint-disable-line no-invalid-this\n                        reason: err\n                    });\n\n                    logger.warn(\n                        'Failed to set audio output device for the element.'\n                            + ' Default audio output device will be used'\n                            + ' instead',\n                        element,\n                        err);\n                });\n        }\n\n        return res;\n    };\n}\n\nexport default rtcUtils;\n","/**\n * This utility class defines custom onerror and onunhandledrejection functions.\n * The custom error handlers respect the previously-defined error handlers.\n * GlobalOnErrorHandler class provides utilities to add many custom error\n * handlers and to execute the error handlers directly.\n */\n\n\n/**\n * List with global error handlers that will be executed.\n */\nconst handlers = [];\n\n// If an old handler exists, also fire its events.\nconst oldOnErrorHandler = window.onerror;\n\n/**\n * Custom error handler that calls the old global error handler and executes\n * all handlers that were previously added.\n */\nfunction JitsiGlobalErrorHandler(...args) {\n    handlers.forEach(handler => handler(...args));\n    oldOnErrorHandler && oldOnErrorHandler(...args);\n}\n\n// If an old handler exists, also fire its events.\nconst oldOnUnhandledRejection = window.onunhandledrejection;\n\n/**\n * Custom handler that calls the old global handler and executes all handlers\n * that were previously added. This handler handles rejected Promises.\n */\nfunction JitsiGlobalUnhandledRejection(event) {\n    handlers.forEach(handler => handler(null, null, null, null, event.reason));\n    oldOnUnhandledRejection && oldOnUnhandledRejection(event);\n}\n\n// Setting the custom error handlers.\nwindow.onerror = JitsiGlobalErrorHandler;\nwindow.onunhandledrejection = JitsiGlobalUnhandledRejection;\n\nconst GlobalOnErrorHandler = {\n    /**\n     * Adds new error handlers.\n     * @param handler the new handler.\n     */\n    addHandler(handler) {\n        handlers.push(handler);\n    },\n\n    /**\n     * Calls the global error handler if there is one.\n     * @param error the error to pass to the error handler\n     */\n    callErrorHandler(error) {\n        const errHandler = window.onerror;\n\n        if (!errHandler) {\n            return;\n        }\n        errHandler(null, null, null, null, error);\n    },\n\n    /**\n     * Calls the global rejection handler if there is one.\n     * @param error the error to pass to the rejection handler.\n     */\n    callUnhandledRejectionHandler(error) {\n        const errHandler = window.onunhandledrejection;\n\n        if (!errHandler) {\n            return;\n        }\n        errHandler(error);\n    }\n};\n\n\nmodule.exports = GlobalOnErrorHandler;\n","/* global __filename */\n\nimport { getLogger } from 'jitsi-meet-logger';\n\nimport * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\nimport * as MediaType from '../../service/RTC/MediaType';\nimport RTCEvents from '../../service/RTC/RTCEvents';\nimport VideoType from '../../service/RTC/VideoType';\nimport browser from '../browser';\nimport Statistics from '../statistics/statistics';\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\nimport Listenable from '../util/Listenable';\nimport { safeCounterIncrement } from '../util/MathUtil';\n\nimport BridgeChannel from './BridgeChannel';\nimport JitsiLocalTrack from './JitsiLocalTrack';\nimport RTCUtils from './RTCUtils';\nimport TraceablePeerConnection from './TraceablePeerConnection';\n\n\nconst logger = getLogger(__filename);\n\n/**\n * The counter used to generated id numbers assigned to peer connections\n * @type {number}\n */\nlet peerConnectionIdCounter = 0;\n\n/**\n * The counter used to generate id number for the local\n * <code>MediaStreamTrack</code>s.\n * @type {number}\n */\nlet rtcTrackIdCounter = 0;\n\n/**\n * Creates {@code JitsiLocalTrack} instances from the passed in meta information\n * about MedieaTracks.\n *\n * @param {Object[]} mediaStreamMetaData - An array of meta information with\n * MediaTrack instances. Each can look like:\n * {{\n *     stream: MediaStream instance that holds a track with audio or video,\n *     track: MediaTrack within the MediaStream,\n *     videoType: \"camera\" or \"desktop\" or falsy,\n *     sourceId: ID of the desktopsharing source,\n *     sourceType: The desktopsharing source type,\n *     effects: Array of effect types\n * }}\n */\nfunction _createLocalTracks(mediaStreamMetaData = []) {\n    return mediaStreamMetaData.map(metaData => {\n        const {\n            sourceId,\n            sourceType,\n            stream,\n            track,\n            videoType,\n            effects\n        } = metaData;\n\n        const { deviceId, facingMode } = track.getSettings();\n\n        // FIXME Move rtcTrackIdCounter to a static method in JitsiLocalTrack\n        // so RTC does not need to handle ID management. This move would be\n        // safer to do once the old createLocalTracks is removed.\n        rtcTrackIdCounter = safeCounterIncrement(rtcTrackIdCounter);\n\n        return new JitsiLocalTrack({\n            deviceId,\n            facingMode,\n            mediaType: track.kind,\n            rtcId: rtcTrackIdCounter,\n            sourceId,\n            sourceType,\n            stream,\n            track,\n            videoType: videoType || null,\n            effects\n        });\n    });\n}\n\n/**\n *\n */\nexport default class RTC extends Listenable {\n    /**\n     *\n     * @param conference\n     * @param options\n     */\n    constructor(conference, options = {}) {\n        super();\n        this.conference = conference;\n\n        /**\n         * A map of active <tt>TraceablePeerConnection</tt>.\n         * @type {Map.<number, TraceablePeerConnection>}\n         */\n        this.peerConnections = new Map();\n\n        this.localTracks = [];\n\n        this.options = options;\n\n        // BridgeChannel instance.\n        // @private\n        // @type {BridgeChannel}\n        this._channel = null;\n\n        /**\n         * The value specified to the last invocation of setLastN before the\n         * channel completed opening. If non-null, the value will be sent\n         * through a channel (once) as soon as it opens and will then be\n         * discarded.\n         * @private\n         * @type {number}\n         */\n        this._lastN = undefined;\n\n        /**\n         * Defines the last N endpoints list. It can be null or an array once\n         * initialised with a channel last N event.\n         * @type {Array<string>|null}\n         * @private\n         */\n        this._lastNEndpoints = null;\n\n        /**\n         * The number representing the maximum video height the local client\n         * should receive from the bridge.\n         *\n         * @type {number|undefined}\n         * @private\n         */\n        this._maxFrameHeight = undefined;\n\n        /**\n         * The endpoint IDs of currently selected participants.\n         *\n         * @type {Array}\n         * @private\n         */\n        this._selectedEndpoints = null;\n\n        // The last N change listener.\n        this._lastNChangeListener = this._onLastNChanged.bind(this);\n\n        this._onDeviceListChanged = this._onDeviceListChanged.bind(this);\n        this._updateAudioOutputForAudioTracks\n            = this._updateAudioOutputForAudioTracks.bind(this);\n\n        // The default video type assumed by the bridge.\n        this._videoType = VideoType.NONE;\n\n        // Switch audio output device on all remote audio tracks. Local audio\n        // tracks handle this event by themselves.\n        if (RTCUtils.isDeviceChangeAvailable('output')) {\n            RTCUtils.addListener(\n                RTCEvents.AUDIO_OUTPUT_DEVICE_CHANGED,\n                this._updateAudioOutputForAudioTracks\n            );\n\n            RTCUtils.addListener(\n                RTCEvents.DEVICE_LIST_CHANGED,\n                this._onDeviceListChanged\n            );\n        }\n    }\n\n    /**\n     * Removes any listeners and stored state from this {@code RTC} instance.\n     *\n     * @returns {void}\n     */\n    destroy() {\n        RTCUtils.removeListener(RTCEvents.AUDIO_OUTPUT_DEVICE_CHANGED, this._updateAudioOutputForAudioTracks);\n        RTCUtils.removeListener(RTCEvents.DEVICE_LIST_CHANGED, this._onDeviceListChanged);\n\n        if (this._channelOpenListener) {\n            this.removeListener(\n                RTCEvents.DATA_CHANNEL_OPEN,\n                this._channelOpenListener\n            );\n        }\n    }\n\n    /**\n     * Exposes the private helper for converting a WebRTC MediaStream to a\n     * JitsiLocalTrack.\n     *\n     * @param {Array<Object>} tracksInfo\n     * @returns {Array<JitsiLocalTrack>}\n     */\n    static createLocalTracks(tracksInfo) {\n        return _createLocalTracks(tracksInfo);\n    }\n\n    /**\n     * Creates the local MediaStreams.\n     * @param {object} [options] Optional parameters.\n     * @param {array} options.devices The devices that will be requested.\n     * @param {string} options.resolution Resolution constraints.\n     * @param {string} options.cameraDeviceId\n     * @param {string} options.micDeviceId\n     * @returns {*} Promise object that will receive the new JitsiTracks\n     */\n    static obtainAudioAndVideoPermissions(options) {\n        return RTCUtils.obtainAudioAndVideoPermissions(options)\n            .then(tracksInfo => _createLocalTracks(tracksInfo));\n    }\n\n    /**\n     * Initializes the bridge channel of this instance.\n     * At least one of both, peerconnection or wsUrl parameters, must be\n     * given.\n     * @param {RTCPeerConnection} [peerconnection] WebRTC peer connection\n     * instance.\n     * @param {string} [wsUrl] WebSocket URL.\n     */\n    initializeBridgeChannel(peerconnection, wsUrl) {\n        this._channel = new BridgeChannel(peerconnection, wsUrl, this.eventEmitter);\n\n        this._channelOpenListener = () => {\n            const logError = (error, msgType, value) => {\n                GlobalOnErrorHandler.callErrorHandler(error);\n                logger.error(`Cannot send ${msgType}(${JSON.stringify(value)}) endpoint message`, error);\n            };\n\n            // When the channel becomes available, tell the bridge about video selections so that it can do adaptive\n            // simulcast, we want the notification to trigger even if userJid is undefined, or null.\n            if (this._receiverVideoConstraints) {\n                try {\n                    this._channel.sendNewReceiverVideoConstraintsMessage(this._receiverVideoConstraints);\n                } catch (error) {\n                    logError(error, 'ReceiverVideoConstraints', this._receiverVideoConstraints);\n                }\n            }\n            if (this._selectedEndpoints) {\n                try {\n                    this._channel.sendSelectedEndpointsMessage(this._selectedEndpoints);\n                } catch (error) {\n                    logError(error, 'SelectedEndpointsChangedEvent', this._selectedEndpoint);\n                }\n            }\n            if (typeof this._maxFrameHeight !== 'undefined') {\n                try {\n                    this._channel.sendReceiverVideoConstraintMessage(this._maxFrameHeight);\n                } catch (error) {\n                    logError(error, 'ReceiverVideoConstraint', this._maxFrameHeight);\n                }\n            }\n            if (typeof this._lastN !== 'undefined' && this._lastN !== -1) {\n                try {\n                    this._channel.sendSetLastNMessage(this._lastN);\n                } catch (error) {\n                    logError(error, 'LastNChangedEvent', this._lastN);\n                }\n            }\n            try {\n                this._channel.sendVideoTypeMessage(this._videoType);\n            } catch (error) {\n                logError(error, 'VideoTypeMessage', this._videoType);\n            }\n\n            this.removeListener(RTCEvents.DATA_CHANNEL_OPEN, this._channelOpenListener);\n            this._channelOpenListener = null;\n        };\n        this.addListener(RTCEvents.DATA_CHANNEL_OPEN, this._channelOpenListener);\n\n        // Add Last N change listener.\n        this.addListener(RTCEvents.LASTN_ENDPOINT_CHANGED, this._lastNChangeListener);\n    }\n\n    /**\n     * Callback invoked when the list of known audio and video devices has\n     * been updated. Attempts to update the known available audio output\n     * devices.\n     *\n     * @private\n     * @returns {void}\n     */\n    _onDeviceListChanged() {\n        this._updateAudioOutputForAudioTracks(RTCUtils.getAudioOutputDevice());\n    }\n\n    /**\n     * Receives events when Last N had changed.\n     * @param {array} lastNEndpoints The new Last N endpoints.\n     * @private\n     */\n    _onLastNChanged(lastNEndpoints = []) {\n        const oldLastNEndpoints = this._lastNEndpoints || [];\n        let leavingLastNEndpoints = [];\n        let enteringLastNEndpoints = [];\n\n        this._lastNEndpoints = lastNEndpoints;\n\n        leavingLastNEndpoints = oldLastNEndpoints.filter(\n            id => !this.isInLastN(id));\n\n        enteringLastNEndpoints = lastNEndpoints.filter(\n            id => oldLastNEndpoints.indexOf(id) === -1);\n\n        this.conference.eventEmitter.emit(\n            JitsiConferenceEvents.LAST_N_ENDPOINTS_CHANGED,\n            leavingLastNEndpoints,\n            enteringLastNEndpoints);\n    }\n\n    /**\n     * Should be called when current media session ends and after the\n     * PeerConnection has been closed using PeerConnection.close() method.\n     */\n    onCallEnded() {\n        if (this._channel) {\n            // The BridgeChannel is not explicitly closed as the PeerConnection\n            // is closed on call ended which triggers datachannel onclose\n            // events. If using a WebSocket, the channel must be closed since\n            // it is not managed by the PeerConnection.\n            // The reference is cleared to disable any logic related to the\n            // channel.\n            if (this._channel && this._channel.mode === 'websocket') {\n                this._channel.close();\n            }\n\n            this._channel = null;\n        }\n    }\n\n    /**\n     * Sets the capture frame rate to be used for desktop tracks.\n     *\n     * @param {number} maxFps framerate to be used for desktop track capture.\n     */\n    setDesktopSharingFrameRate(maxFps) {\n        RTCUtils.setDesktopSharingFrameRate(maxFps);\n    }\n\n    /**\n     * Sets the receiver video constraints that determine how bitrate is allocated to each of the video streams\n     * requested from the bridge. The constraints are cached and sent through the bridge channel once the channel\n     * is established.\n     * @param {*} constraints\n     */\n    setNewReceiverVideoConstraints(constraints) {\n        this._receiverVideoConstraints = constraints;\n\n        if (this._channel && this._channel.isOpen()) {\n            this._channel.sendNewReceiverVideoConstraintsMessage(constraints);\n        }\n    }\n\n    /**\n     * Sets the maximum video size the local participant should receive from\n     * remote participants. Will cache the value and send it through the channel\n     * once it is created.\n     *\n     * @param {number} maxFrameHeightPixels the maximum frame height, in pixels,\n     * this receiver is willing to receive.\n     * @returns {void}\n     */\n    setReceiverVideoConstraint(maxFrameHeight) {\n        this._maxFrameHeight = maxFrameHeight;\n\n        if (this._channel && this._channel.isOpen()) {\n            this._channel.sendReceiverVideoConstraintMessage(maxFrameHeight);\n        }\n    }\n\n    /**\n     * Sets the video type and availability for the local video source.\n     *\n     * @param {string} videoType 'camera' for camera, 'desktop' for screenshare and\n     * 'none' for when local video source is muted or removed from the peerconnection.\n     * @returns {void}\n     */\n    setVideoType(videoType) {\n        if (this._videoType !== videoType) {\n            this._videoType = videoType;\n\n            if (this._channel && this._channel.isOpen()) {\n                this._channel.sendVideoTypeMessage(videoType);\n            }\n        }\n    }\n\n    /**\n     * Elects the participants with the given ids to be the selected\n     * participants in order to always receive video for this participant (even\n     * when last n is enabled). If there is no channel we store it and send it\n     * through the channel once it is created.\n     *\n     * @param {Array<string>} ids - The user ids.\n     * @throws NetworkError or InvalidStateError or Error if the operation\n     * fails.\n     * @returns {void}\n     */\n    selectEndpoints(ids) {\n        this._selectedEndpoints = ids;\n\n        if (this._channel && this._channel.isOpen()) {\n            this._channel.sendSelectedEndpointsMessage(ids);\n        }\n    }\n\n    /**\n     *\n     * @param eventType\n     * @param listener\n     */\n    static addListener(eventType, listener) {\n        RTCUtils.addListener(eventType, listener);\n    }\n\n    /**\n     *\n     * @param eventType\n     * @param listener\n     */\n    static removeListener(eventType, listener) {\n        RTCUtils.removeListener(eventType, listener);\n    }\n\n    /**\n     *\n     * @param options\n     */\n    static init(options = {}) {\n        this.options = options;\n\n        return RTCUtils.init(this.options);\n    }\n\n    /* eslint-disable max-params */\n\n    /**\n     * Creates new <tt>TraceablePeerConnection</tt>\n     * @param {SignalingLayer} signaling The signaling layer that will\n     *      provide information about the media or participants which is not\n     *      carried over SDP.\n     * @param {object} iceConfig An object describing the ICE config like\n     *      defined in the WebRTC specification.\n     * @param {boolean} isP2P Indicates whether or not the new TPC will be used\n     *      in a peer to peer type of session.\n     * @param {object} options The config options.\n     * @param {boolean} options.enableInsertableStreams - Set to true when the insertable streams constraints is to be\n     * enabled on the PeerConnection.\n     * @param {boolean} options.disableSimulcast If set to 'true' will disable\n     *      the simulcast.\n     * @param {boolean} options.disableRtx If set to 'true' will disable the\n     *      RTX.\n     * @param {boolean} options.disableH264 If set to 'true' H264 will be\n     *      disabled by removing it from the SDP.\n     * @param {boolean} options.preferH264 If set to 'true' H264 will be\n     *      preferred over other video codecs.\n     * @param {boolean} options.startSilent If set to 'true' no audio will be sent or received.\n     * @return {TraceablePeerConnection}\n     */\n    createPeerConnection(signaling, iceConfig, isP2P, options) {\n        const pcConstraints = JSON.parse(JSON.stringify(RTCUtils.pcConstraints));\n\n        if (typeof options.abtestSuspendVideo !== 'undefined') {\n            RTCUtils.setSuspendVideo(pcConstraints, options.abtestSuspendVideo);\n\n            Statistics.analytics.addPermanentProperties(\n                { abtestSuspendVideo: options.abtestSuspendVideo });\n        }\n\n        // FIXME: We should rename iceConfig to pcConfig.\n\n        if (options.enableInsertableStreams) {\n            logger.debug('E2EE - setting insertable streams constraints');\n            iceConfig.encodedInsertableStreams = true;\n        }\n\n        const supportsSdpSemantics = browser.isReactNative()\n            || (browser.isChromiumBased() && !options.usesUnifiedPlan);\n\n        if (supportsSdpSemantics) {\n            iceConfig.sdpSemantics = 'plan-b';\n        }\n\n        if (options.forceTurnRelay) {\n            iceConfig.iceTransportPolicy = 'relay';\n        }\n\n        // Set the RTCBundlePolicy to max-bundle so that only one set of ice candidates is generated.\n        // The default policy generates separate ice candidates for audio and video connections.\n        // This change is necessary for Unified plan to work properly on Chrome and Safari.\n        iceConfig.bundlePolicy = 'max-bundle';\n\n        peerConnectionIdCounter = safeCounterIncrement(peerConnectionIdCounter);\n\n        const newConnection\n            = new TraceablePeerConnection(\n                this,\n                peerConnectionIdCounter,\n                signaling,\n                iceConfig, pcConstraints,\n                isP2P, options);\n\n        this.peerConnections.set(newConnection.id, newConnection);\n\n        return newConnection;\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     * Removed given peer connection from this RTC module instance.\n     * @param {TraceablePeerConnection} traceablePeerConnection\n     * @return {boolean} <tt>true</tt> if the given peer connection was removed\n     * successfully or <tt>false</tt> if there was no peer connection mapped in\n     * this RTC instance.\n     */\n    _removePeerConnection(traceablePeerConnection) {\n        const id = traceablePeerConnection.id;\n\n        if (this.peerConnections.has(id)) {\n            // NOTE Remote tracks are not removed here.\n            this.peerConnections.delete(id);\n\n            return true;\n        }\n\n        return false;\n\n    }\n\n    /**\n     *\n     * @param track\n     */\n    addLocalTrack(track) {\n        if (!track) {\n            throw new Error('track must not be null nor undefined');\n        }\n\n        this.localTracks.push(track);\n\n        track.conference = this.conference;\n    }\n\n    /**\n     * Get local video track.\n     * @returns {JitsiLocalTrack|undefined}\n     */\n    getLocalVideoTrack() {\n        const localVideo = this.getLocalTracks(MediaType.VIDEO);\n\n\n        return localVideo.length ? localVideo[0] : undefined;\n    }\n\n    /**\n     * Get local audio track.\n     * @returns {JitsiLocalTrack|undefined}\n     */\n    getLocalAudioTrack() {\n        const localAudio = this.getLocalTracks(MediaType.AUDIO);\n\n\n        return localAudio.length ? localAudio[0] : undefined;\n    }\n\n    /**\n     * Returns the endpoint id for the local user.\n     * @returns {string}\n     */\n    getLocalEndpointId() {\n        return this.conference.myUserId();\n    }\n\n    /**\n     * Returns the local tracks of the given media type, or all local tracks if\n     * no specific type is given.\n     * @param {MediaType} [mediaType] Optional media type filter.\n     * (audio or video).\n     */\n    getLocalTracks(mediaType) {\n        let tracks = this.localTracks.slice();\n\n        if (mediaType !== undefined) {\n            tracks = tracks.filter(\n                track => track.getType() === mediaType);\n        }\n\n        return tracks;\n    }\n\n    /**\n     * Obtains all remote tracks currently known to this RTC module instance.\n     * @param {MediaType} [mediaType] The remote tracks will be filtered\n     *      by their media type if this argument is specified.\n     * @return {Array<JitsiRemoteTrack>}\n     */\n    getRemoteTracks(mediaType) {\n        let remoteTracks = [];\n\n        for (const tpc of this.peerConnections.values()) {\n            const pcRemoteTracks = tpc.getRemoteTracks(undefined, mediaType);\n\n            if (pcRemoteTracks) {\n                remoteTracks = remoteTracks.concat(pcRemoteTracks);\n            }\n        }\n\n        return remoteTracks;\n    }\n\n    /**\n     * Set mute for all local audio streams attached to the conference.\n     * @param value The mute value.\n     * @returns {Promise}\n     */\n    setAudioMute(value) {\n        const mutePromises = [];\n\n        this.getLocalTracks(MediaType.AUDIO).forEach(audioTrack => {\n            // this is a Promise\n            mutePromises.push(value ? audioTrack.mute() : audioTrack.unmute());\n        });\n\n        // We return a Promise from all Promises so we can wait for their\n        // execution.\n        return Promise.all(mutePromises);\n    }\n\n    /**\n    * Set mute for all local video streams attached to the conference.\n    * @param value The mute value.\n    * @returns {Promise}\n    */\n    setVideoMute(value) {\n        const mutePromises = [];\n\n        this.getLocalTracks(MediaType.VIDEO).concat(this.getLocalTracks(MediaType.PRESENTER))\n            .forEach(videoTrack => {\n                // this is a Promise\n                mutePromises.push(value ? videoTrack.mute() : videoTrack.unmute());\n            });\n\n        // We return a Promise from all Promises so we can wait for their\n        // execution.\n        return Promise.all(mutePromises);\n    }\n\n    /**\n     *\n     * @param track\n     */\n    removeLocalTrack(track) {\n        const pos = this.localTracks.indexOf(track);\n\n        if (pos === -1) {\n            return;\n        }\n\n        this.localTracks.splice(pos, 1);\n    }\n\n    /**\n     *\n     * @param elSelector\n     * @param stream\n     */\n    static attachMediaStream(elSelector, stream) {\n        return RTCUtils.attachMediaStream(elSelector, stream);\n    }\n\n    /**\n     * Returns the id of the given stream.\n     * @param {MediaStream} stream\n     */\n    static getStreamID(stream) {\n        return RTCUtils.getStreamID(stream);\n    }\n\n    /**\n     * Returns the id of the given track.\n     * @param {MediaStreamTrack} track\n     */\n    static getTrackID(track) {\n        return RTCUtils.getTrackID(track);\n    }\n\n    /**\n     * Returns true if retrieving the list of input devices is supported\n     * and false if not.\n     */\n    static isDeviceListAvailable() {\n        return RTCUtils.isDeviceListAvailable();\n    }\n\n    /**\n     * Returns true if changing the input (camera / microphone) or output\n     * (audio) device is supported and false if not.\n     * @param {string} [deviceType] Type of device to change. Default is\n     *      undefined or 'input', 'output' - for audio output device change.\n     * @returns {boolean} true if available, false otherwise.\n     */\n    static isDeviceChangeAvailable(deviceType) {\n        return RTCUtils.isDeviceChangeAvailable(deviceType);\n    }\n\n    /**\n     * Returns whether the current execution environment supports WebRTC (for\n     * use within this library).\n     *\n     * @returns {boolean} {@code true} if WebRTC is supported in the current\n     * execution environment (for use within this library); {@code false},\n     * otherwise.\n     */\n    static isWebRtcSupported() {\n        return browser.isSupported();\n    }\n\n    /**\n     * Returns currently used audio output device id, '' stands for default\n     * device\n     * @returns {string}\n     */\n    static getAudioOutputDevice() {\n        return RTCUtils.getAudioOutputDevice();\n    }\n\n    /**\n     * Returns list of available media devices if its obtained, otherwise an\n     * empty array is returned/\n     * @returns {array} list of available media devices.\n     */\n    static getCurrentlyAvailableMediaDevices() {\n        return RTCUtils.getCurrentlyAvailableMediaDevices();\n    }\n\n    /**\n     * Returns whether available devices have permissions granted\n     * @returns {Boolean}\n     */\n    static arePermissionsGrantedForAvailableDevices() {\n        return RTCUtils.arePermissionsGrantedForAvailableDevices();\n    }\n\n    /**\n     * Returns event data for device to be reported to stats.\n     * @returns {MediaDeviceInfo} device.\n     */\n    static getEventDataForActiveDevice(device) {\n        return RTCUtils.getEventDataForActiveDevice(device);\n    }\n\n    /**\n     * Sets current audio output device.\n     * @param {string} deviceId Id of 'audiooutput' device from\n     *      navigator.mediaDevices.enumerateDevices().\n     * @returns {Promise} resolves when audio output is changed, is rejected\n     *      otherwise\n     */\n    static setAudioOutputDevice(deviceId) {\n        return RTCUtils.setAudioOutputDevice(deviceId);\n    }\n\n    /**\n     * Returns <tt>true<tt/> if given WebRTC MediaStream is considered a valid\n     * \"user\" stream which means that it's not a \"receive only\" stream nor a\n     * \"mixed\" JVB stream.\n     *\n     * Clients that implement Unified Plan, such as Firefox use recvonly\n     * \"streams/channels/tracks\" for receiving remote stream/tracks, as opposed\n     * to Plan B where there are only 3 channels: audio, video and data.\n     *\n     * @param {MediaStream} stream The WebRTC MediaStream instance.\n     * @returns {boolean}\n     */\n    static isUserStream(stream) {\n        return RTC.isUserStreamById(RTCUtils.getStreamID(stream));\n    }\n\n    /**\n     * Returns <tt>true<tt/> if a WebRTC MediaStream identified by given stream\n     * ID is considered a valid \"user\" stream which means that it's not a\n     * \"receive only\" stream nor a \"mixed\" JVB stream.\n     *\n     * Clients that implement Unified Plan, such as Firefox use recvonly\n     * \"streams/channels/tracks\" for receiving remote stream/tracks, as opposed\n     * to Plan B where there are only 3 channels: audio, video and data.\n     *\n     * @param {string} streamId The id of WebRTC MediaStream.\n     * @returns {boolean}\n     */\n    static isUserStreamById(streamId) {\n        return streamId && streamId !== 'mixedmslabel'\n            && streamId !== 'default';\n    }\n\n    /**\n     * Allows to receive list of available cameras/microphones.\n     * @param {function} callback Would receive array of devices as an\n     *      argument.\n     */\n    static enumerateDevices(callback) {\n        RTCUtils.enumerateDevices(callback);\n    }\n\n    /**\n     * A method to handle stopping of the stream.\n     * One point to handle the differences in various implementations.\n     * @param {MediaStream} mediaStream MediaStream object to stop.\n     */\n    static stopMediaStream(mediaStream) {\n        RTCUtils.stopMediaStream(mediaStream);\n    }\n\n    /**\n     * Returns whether the desktop sharing is enabled or not.\n     * @returns {boolean}\n     */\n    static isDesktopSharingEnabled() {\n        return RTCUtils.isDesktopSharingEnabled();\n    }\n\n    /**\n     * Closes the currently opened bridge channel.\n     */\n    closeBridgeChannel() {\n        if (this._channel) {\n            this._channel.close();\n            this._channel = null;\n\n            this.removeListener(RTCEvents.LASTN_ENDPOINT_CHANGED, this._lastNChangeListener);\n        }\n    }\n\n    /* eslint-disable max-params */\n    /**\n     *\n     * @param {TraceablePeerConnection} tpc\n     * @param {number} ssrc\n     * @param {number} audioLevel\n     * @param {boolean} isLocal\n     */\n    setAudioLevel(tpc, ssrc, audioLevel, isLocal) {\n        const track = tpc.getTrackBySSRC(ssrc);\n\n        if (!track) {\n            return;\n        } else if (!track.isAudioTrack()) {\n            logger.warn(`Received audio level for non-audio track: ${ssrc}`);\n\n            return;\n        } else if (track.isLocal() !== isLocal) {\n            logger.error(\n                `${track} was expected to ${isLocal ? 'be' : 'not be'} local`);\n        }\n\n        track.setAudioLevel(audioLevel, tpc);\n    }\n\n    /**\n     * Sends message via the bridge channel.\n     * @param {string} to The id of the endpoint that should receive the\n     *      message. If \"\" the message will be sent to all participants.\n     * @param {object} payload The payload of the message.\n     * @throws NetworkError or InvalidStateError or Error if the operation\n     * fails or there is no data channel created.\n     */\n    sendChannelMessage(to, payload) {\n        if (this._channel) {\n            this._channel.sendMessage(to, payload);\n        } else {\n            throw new Error('Channel support is disabled!');\n        }\n    }\n\n    /**\n     * Sends the local stats via the bridge channel.\n     * @param {Object} payload The payload of the message.\n     * @throws NetworkError/InvalidStateError/Error if the operation fails or if there is no data channel created.\n     */\n    sendEndpointStatsMessage(payload) {\n        if (this._channel && this._channel.isOpen()) {\n            this._channel.sendEndpointStatsMessage(payload);\n        }\n    }\n\n    /**\n     * Selects a new value for \"lastN\". The requested amount of videos are going\n     * to be delivered after the value is in effect. Set to -1 for unlimited or\n     * all available videos.\n     * @param {number} value the new value for lastN.\n     */\n    setLastN(value) {\n        if (this._lastN !== value) {\n            this._lastN = value;\n            if (this._channel && this._channel.isOpen()) {\n                this._channel.sendSetLastNMessage(value);\n            }\n            this.eventEmitter.emit(RTCEvents.LASTN_VALUE_CHANGED, value);\n        }\n    }\n\n    /**\n     * Indicates if the endpoint id is currently included in the last N.\n     * @param {string} id The endpoint id that we check for last N.\n     * @returns {boolean} true if the endpoint id is in the last N or if we\n     * don't have bridge channel support, otherwise we return false.\n     */\n    isInLastN(id) {\n        return !this._lastNEndpoints // lastNEndpoints not initialised yet.\n            || this._lastNEndpoints.indexOf(id) > -1;\n    }\n\n    /**\n     * Updates the target audio output device for all remote audio tracks.\n     *\n     * @param {string} deviceId - The device id of the audio ouput device to\n     * use for all remote tracks.\n     * @private\n     * @returns {void}\n     */\n    _updateAudioOutputForAudioTracks(deviceId) {\n        const remoteAudioTracks = this.getRemoteTracks(MediaType.AUDIO);\n\n        for (const track of remoteAudioTracks) {\n            track.setAudioOutput(deviceId);\n        }\n    }\n}\n","/* global module */\n/**\n * Enumeration of the video types\n * @type {{CAMERA: string, DESKTOP: string, NONE: string}}\n */\nconst VideoType = {\n    /**\n     * The camera video type.\n     */\n    CAMERA: 'camera',\n\n    /**\n     * The desktop video type.\n     */\n    DESKTOP: 'desktop',\n\n    /**\n     * No local video source.\n     */\n    NONE: 'none'\n};\n\nmodule.exports = VideoType;\n","/**\n * The errors for the JitsiTrack objects.\n */\n\n/**\n * An error which indicates that some of requested constraints in\n * getUserMedia call were not satisfied.\n */\nexport const CONSTRAINT_FAILED = 'gum.constraint_failed';\n\n/**\n * A generic error which indicates an error occurred while selecting\n * a DesktopCapturerSource from the electron app.\n */\nexport const ELECTRON_DESKTOP_PICKER_ERROR\n    = 'gum.electron_desktop_picker_error';\n\n/**\n * An error which indicates a custom desktop picker could not be detected\n * for the electron app.\n */\nexport const ELECTRON_DESKTOP_PICKER_NOT_FOUND\n    = 'gum.electron_desktop_picker_not_found';\n\n/**\n * Generic getUserMedia error.\n */\nexport const GENERAL = 'gum.general';\n\n/**\n * An error which indicates that requested device was not found.\n */\nexport const NOT_FOUND = 'gum.not_found';\n\n/**\n * An error which indicates that user denied permission to share requested\n * device.\n */\nexport const PERMISSION_DENIED = 'gum.permission_denied';\n\n/**\n * Generic error for screensharing failure.\n */\nexport const SCREENSHARING_GENERIC_ERROR\n    = 'gum.screensharing_generic_error';\n\n/**\n * An error which indicates that user canceled screen sharing window\n * selection dialog.\n */\nexport const SCREENSHARING_USER_CANCELED\n    = 'gum.screensharing_user_canceled';\n\n\n/**\n * Indicates that the timeout passed to the obtainAudioAndVideoPermissions has expired without GUM resolving.\n */\nexport const TIMEOUT = 'gum.timeout';\n\n/**\n * An error which indicates that track has been already disposed and cannot\n * be longer used.\n */\nexport const TRACK_IS_DISPOSED = 'track.track_is_disposed';\n\n/**\n * An error which indicates that track has no MediaStream associated.\n */\nexport const TRACK_NO_STREAM_FOUND = 'track.no_stream_found';\n\n/**\n * An error which indicates that requested video resolution is not supported\n * by a webcam.\n */\nexport const UNSUPPORTED_RESOLUTION = 'gum.unsupported_resolution';\n","/**\n * The media track was removed to the conference.\n */\nexport const LOCAL_TRACK_STOPPED = 'track.stopped';\n\n/**\n * Audio levels of a this track was changed.\n * The first argument is a number with audio level value in range [0, 1].\n * The second argument is a <tt>TraceablePeerConnection</tt> which is the peer\n * connection which measured the audio level (one audio track can be added\n * to multiple peer connection at the same time). This argument is optional for\n * local tracks for which we can measure audio level without the peer\n * connection (the value will be <tt>undefined</tt>).\n *\n * NOTE The second argument should be treated as library internal and can be\n * removed at any time.\n */\nexport const TRACK_AUDIO_LEVEL_CHANGED = 'track.audioLevelsChanged';\n\n/**\n * The audio output of the track was changed.\n */\nexport const TRACK_AUDIO_OUTPUT_CHANGED = 'track.audioOutputChanged';\n\n/**\n * A media track mute status was changed.\n */\nexport const TRACK_MUTE_CHANGED = 'track.trackMuteChanged';\n\n/**\n * The video type(\"camera\" or \"desktop\") of the track was changed.\n */\nexport const TRACK_VIDEOTYPE_CHANGED = 'track.videoTypeChanged';\n\n/**\n * Indicates that the track is not receiving any data even though we expect it\n * to receive data (i.e. the stream is not stopped).\n */\nexport const NO_DATA_FROM_SOURCE = 'track.no_data_from_source';\n\n/**\n * Indicates that the local audio track is not receiving any audio input from\n * the microphone that is currently selected.\n */\nexport const NO_AUDIO_INPUT = 'track.no_audio_input';\n","/**\n * The errors for the conference.\n */\n\n/**\n * Indicates that client must be authenticated to create the conference.\n */\nexport const AUTHENTICATION_REQUIRED = 'conference.authenticationRequired';\n\n/**\n * Indicates that chat error occurred.\n */\nexport const CHAT_ERROR = 'conference.chatError';\n\n/**\n * Indicates that conference has been destroyed.\n */\nexport const CONFERENCE_DESTROYED = 'conference.destroyed';\n\n/**\n * Indicates that max users limit has been reached.\n */\nexport const CONFERENCE_MAX_USERS = 'conference.max_users';\n\n/**\n * Indicates that a connection error occurred when trying to join a conference.\n */\nexport const CONNECTION_ERROR = 'conference.connectionError';\n\n/**\n * Indicates that the client has been forced to restart by jicofo when the\n * conference was migrated from one bridge to another.\n */\nexport const CONFERENCE_RESTARTED = 'conference.restarted';\n\n/**\n * Indicates that a connection error is due to not allowed,\n * occurred when trying to join a conference.\n */\nexport const NOT_ALLOWED_ERROR = 'conference.connectionError.notAllowed';\n\n/**\n * Indicates that a connection error is due to not allowed,\n * occurred when trying to join a conference, only approved members are allowed to join.\n */\nexport const MEMBERS_ONLY_ERROR = 'conference.connectionError.membersOnly';\n\n/**\n * Indicates that a connection error is due to denied access to the room,\n * occurred after joining a lobby room and access is denied by the room moderators.\n */\nexport const CONFERENCE_ACCESS_DENIED = 'conference.connectionError.accessDenied';\n\n/**\n * Indicates that focus error happened.\n */\nexport const FOCUS_DISCONNECTED = 'conference.focusDisconnected';\n\n/**\n * Indicates that focus left the conference.\n */\nexport const FOCUS_LEFT = 'conference.focusLeft';\n\n/**\n * Indicates that graceful shutdown happened.\n */\nexport const GRACEFUL_SHUTDOWN = 'conference.gracefulShutdown';\n\n/**\n * Indicates that the media connection has failed.\n */\nexport const ICE_FAILED = 'conference.iceFailed';\n\n/**\n * Indicates that the versions of the server side components are incompatible\n * with the client side.\n */\nexport const INCOMPATIBLE_SERVER_VERSIONS\n    = 'conference.incompatible_server_versions';\n\n/**\n * Indicates that offer/answer had failed.\n */\nexport const OFFER_ANSWER_FAILED = 'conference.offerAnswerFailed';\n\n/**\n * Indicates that password cannot be set for this conference.\n */\nexport const PASSWORD_NOT_SUPPORTED = 'conference.passwordNotSupported';\n\n/**\n * Indicates that a password is required in order to join the conference.\n */\nexport const PASSWORD_REQUIRED = 'conference.passwordRequired';\n\n/**\n * Indicates that reservation system returned error.\n */\nexport const RESERVATION_ERROR = 'conference.reservationError';\n\n/**\n * Indicates that there is no available videobridge.\n */\nexport const VIDEOBRIDGE_NOT_AVAILABLE = 'conference.videobridgeNotAvailable';\n","/* global $ */\n\nimport MediaDirection from '../../service/RTC/MediaDirection';\nimport browser from '../browser';\n\nimport SDPUtil from './SDPUtil';\n\n/**\n *\n * @param sdp\n */\nexport default function SDP(sdp) {\n    const media = sdp.split('\\r\\nm=');\n\n    for (let i = 1, length = media.length; i < length; i++) {\n        let mediaI = `m=${media[i]}`;\n\n        if (i !== length - 1) {\n            mediaI += '\\r\\n';\n        }\n        media[i] = mediaI;\n    }\n    const session = `${media.shift()}\\r\\n`;\n\n    this.media = media;\n    this.raw = session + media.join('');\n    this.session = session;\n}\n\n/**\n * A flag will make {@link transportToJingle} and {@link jingle2media} replace\n * ICE candidates IPs with invalid value of '1.1.1.1' which will cause ICE\n * failure. The flag is used in the automated testing.\n * @type {boolean}\n */\nSDP.prototype.failICE = false;\n\n/**\n * Whether or not to remove TCP ice candidates when translating from/to jingle.\n * @type {boolean}\n */\nSDP.prototype.removeTcpCandidates = false;\n\n/**\n * Whether or not to remove UDP ice candidates when translating from/to jingle.\n * @type {boolean}\n */\nSDP.prototype.removeUdpCandidates = false;\n\n/**\n * Returns map of MediaChannel mapped per channel idx.\n */\nSDP.prototype.getMediaSsrcMap = function() {\n    const mediaSSRCs = {};\n\n    for (let mediaindex = 0; mediaindex < this.media.length; mediaindex++) {\n        const mid\n            = SDPUtil.parseMID(\n                SDPUtil.findLine(this.media[mediaindex], 'a=mid:'));\n        const media = {\n            mediaindex,\n            mid,\n            ssrcs: {},\n            ssrcGroups: []\n        };\n\n        mediaSSRCs[mediaindex] = media;\n\n        SDPUtil.findLines(this.media[mediaindex], 'a=ssrc:').forEach(line => {\n            const linessrc = line.substring(7).split(' ')[0];\n\n            // allocate new ChannelSsrc\n\n            if (!media.ssrcs[linessrc]) {\n                media.ssrcs[linessrc] = {\n                    ssrc: linessrc,\n                    lines: []\n                };\n            }\n            media.ssrcs[linessrc].lines.push(line);\n        });\n        SDPUtil.findLines(this.media[mediaindex], 'a=ssrc-group:').forEach(line => {\n            const idx = line.indexOf(' ');\n            const semantics = line.substr(0, idx).substr(13);\n            const ssrcs = line.substr(14 + semantics.length).split(' ');\n\n            if (ssrcs.length) {\n                media.ssrcGroups.push({\n                    semantics,\n                    ssrcs\n                });\n            }\n        });\n    }\n\n    return mediaSSRCs;\n};\n\n/**\n * Returns <tt>true</tt> if this SDP contains given SSRC.\n * @param ssrc the ssrc to check.\n * @returns {boolean} <tt>true</tt> if this SDP contains given SSRC.\n */\nSDP.prototype.containsSSRC = function(ssrc) {\n    // FIXME this code is really strange - improve it if you can\n    const medias = this.getMediaSsrcMap();\n    let result = false;\n\n    Object.keys(medias).forEach(mediaindex => {\n        if (result) {\n            return;\n        }\n        if (medias[mediaindex].ssrcs[ssrc]) {\n            result = true;\n        }\n    });\n\n    return result;\n};\n\n// add content's to a jingle element\nSDP.prototype.toJingle = function(elem, thecreator) {\n    // https://xmpp.org/extensions/xep-0338.html\n    SDPUtil.findLines(this.session, 'a=group:').forEach(line => {\n        const parts = line.split(' ');\n        const semantics = parts.shift().substr(8);\n\n        elem.c('group', { xmlns: 'urn:xmpp:jingle:apps:grouping:0',\n            semantics });\n        for (let j = 0; j < parts.length; j++) {\n            elem.c('content', { name: parts[j] }).up();\n        }\n        elem.up();\n    });\n\n    for (let i = 0; i < this.media.length; i++) {\n        const mline = SDPUtil.parseMLine(this.media[i].split('\\r\\n')[0]);\n\n        if (!(mline.media === 'audio'\n              || mline.media === 'video'\n              || mline.media === 'application')) {\n            continue; // eslint-disable-line no-continue\n        }\n\n        let ssrc;\n        const assrcline = SDPUtil.findLine(this.media[i], 'a=ssrc:');\n\n        if (assrcline) {\n            ssrc = assrcline.substring(7).split(' ')[0]; // take the first\n        } else {\n            ssrc = false;\n        }\n\n        elem.c('content', { creator: thecreator,\n            name: mline.media });\n        const amidline = SDPUtil.findLine(this.media[i], 'a=mid:');\n\n        if (amidline) {\n            // prefer identifier from a=mid if present\n            const mid = SDPUtil.parseMID(amidline);\n\n            elem.attrs({ name: mid });\n        }\n\n        if (mline.media === 'audio' || mline.media === 'video') {\n            elem.c('description',\n                { xmlns: 'urn:xmpp:jingle:apps:rtp:1',\n                    media: mline.media });\n            if (ssrc) {\n                elem.attrs({ ssrc });\n            }\n            for (let j = 0; j < mline.fmt.length; j++) {\n                const rtpmap\n                    = SDPUtil.findLine(\n                        this.media[i],\n                        `a=rtpmap:${mline.fmt[j]}`);\n\n                elem.c('payload-type', SDPUtil.parseRTPMap(rtpmap));\n\n                // put any 'a=fmtp:' + mline.fmt[j] lines into <param name=foo\n                // value=bar/>\n                const afmtpline\n                    = SDPUtil.findLine(\n                        this.media[i],\n                        `a=fmtp:${mline.fmt[j]}`);\n\n                if (afmtpline) {\n                    const fmtpParameters = SDPUtil.parseFmtp(afmtpline);\n\n                    // eslint-disable-next-line max-depth\n                    for (let k = 0; k < fmtpParameters.length; k++) {\n                        elem.c('parameter', fmtpParameters[k]).up();\n                    }\n                }\n\n                // XEP-0293 -- map a=rtcp-fb\n                this.rtcpFbToJingle(i, elem, mline.fmt[j]);\n\n                elem.up();\n            }\n\n            if (ssrc) {\n                const ssrcMap = SDPUtil.parseSSRC(this.media[i]);\n\n                for (const [ availableSsrc, ssrcParameters ] of ssrcMap) {\n                    elem.c('source', {\n                        ssrc: availableSsrc,\n                        xmlns: 'urn:xmpp:jingle:apps:rtp:ssma:0'\n                    });\n\n                    ssrcParameters.forEach(ssrcSdpLine => {\n                        // get everything after first space\n                        const idx = ssrcSdpLine.indexOf(' ');\n                        const kv = ssrcSdpLine.substr(idx + 1);\n\n                        elem.c('parameter');\n                        if (kv.indexOf(':') === -1) {\n                            elem.attrs({ name: kv });\n                        } else {\n                            const name = kv.split(':', 2)[0];\n\n                            elem.attrs({ name });\n\n                            let v = kv.split(':', 2)[1];\n\n                            v = SDPUtil.filterSpecialChars(v);\n                            elem.attrs({ value: v });\n                        }\n                        elem.up();\n                    });\n\n                    elem.up();\n                }\n\n                // XEP-0339 handle ssrc-group attributes\n                const ssrcGroupLines\n                    = SDPUtil.findLines(this.media[i], 'a=ssrc-group:');\n\n                ssrcGroupLines.forEach(line => {\n                    const idx = line.indexOf(' ');\n                    const semantics = line.substr(0, idx).substr(13);\n                    const ssrcs = line.substr(14 + semantics.length).split(' ');\n\n                    if (ssrcs.length) {\n                        elem.c('ssrc-group', { semantics,\n                            xmlns: 'urn:xmpp:jingle:apps:rtp:ssma:0' });\n                        ssrcs.forEach(s => elem.c('source', { ssrc: s }).up());\n                        elem.up();\n                    }\n                });\n            }\n\n            const ridLines = SDPUtil.findLines(this.media[i], 'a=rid:');\n\n            if (ridLines.length && browser.usesRidsForSimulcast()) {\n                // Map a line which looks like \"a=rid:2 send\" to just\n                // the rid (\"2\")\n                const rids = ridLines\n                    .map(ridLine => ridLine.split(':')[1])\n                    .map(ridInfo => ridInfo.split(' ')[0]);\n\n                rids.forEach(rid => {\n                    elem.c('source', {\n                        rid,\n                        xmlns: 'urn:xmpp:jingle:apps:rtp:ssma:0'\n                    });\n                    elem.up();\n                });\n                const unifiedSimulcast\n                    = SDPUtil.findLine(this.media[i], 'a=simulcast:');\n\n                if (unifiedSimulcast) {\n                    elem.c('rid-group', {\n                        semantics: 'SIM',\n                        xmlns: 'urn:xmpp:jingle:apps:rtp:ssma:0'\n                    });\n                    rids.forEach(rid => {\n                        elem.c('source', { rid }).up();\n                    });\n                    elem.up();\n                }\n            }\n\n            if (SDPUtil.findLine(this.media[i], 'a=rtcp-mux')) {\n                elem.c('rtcp-mux').up();\n            }\n\n            // XEP-0293 -- map a=rtcp-fb:*\n            this.rtcpFbToJingle(i, elem, '*');\n\n            // XEP-0294\n            const extmapLines = SDPUtil.findLines(this.media[i], 'a=extmap:');\n\n            for (let j = 0; j < extmapLines.length; j++) {\n                const extmap = SDPUtil.parseExtmap(extmapLines[j]);\n\n                elem.c('rtp-hdrext', {\n                    xmlns: 'urn:xmpp:jingle:apps:rtp:rtp-hdrext:0',\n                    uri: extmap.uri,\n                    id: extmap.value\n                });\n\n                // eslint-disable-next-line max-depth\n                if (extmap.hasOwnProperty('direction')) {\n\n                    // eslint-disable-next-line max-depth\n                    switch (extmap.direction) {\n                    case MediaDirection.SENDONLY:\n                        elem.attrs({ senders: 'responder' });\n                        break;\n                    case MediaDirection.RECVONLY:\n                        elem.attrs({ senders: 'initiator' });\n                        break;\n                    case MediaDirection.SENDRECV:\n                        elem.attrs({ senders: 'both' });\n                        break;\n                    case MediaDirection.INACTIVE:\n                        elem.attrs({ senders: 'none' });\n                        break;\n                    }\n                }\n\n                // TODO: handle params\n                elem.up();\n            }\n            elem.up(); // end of description\n        }\n\n        // map ice-ufrag/pwd, dtls fingerprint, candidates\n        this.transportToJingle(i, elem);\n\n        const m = this.media[i];\n\n        if (SDPUtil.findLine(m, `a=${MediaDirection.SENDRECV}`, this.session)) {\n            elem.attrs({ senders: 'both' });\n        } else if (SDPUtil.findLine(m, `a=${MediaDirection.SENDONLY}`, this.session)) {\n            elem.attrs({ senders: 'initiator' });\n        } else if (SDPUtil.findLine(m, `a=${MediaDirection.RECVONLY}`, this.session)) {\n            elem.attrs({ senders: 'responder' });\n        } else if (SDPUtil.findLine(m, `a=${MediaDirection.INACTIVE}`, this.session)) {\n            elem.attrs({ senders: 'none' });\n        }\n\n        // Reject an m-line only when port is 0 and a=bundle-only is not present in the section.\n        // The port is automatically set to 0 when bundle-only is used.\n        if (mline.port === '0' && !SDPUtil.findLine(m, 'a=bundle-only', this.session)) {\n            // estos hack to reject an m-line\n            elem.attrs({ senders: 'rejected' });\n        }\n        elem.up(); // end of content\n    }\n    elem.up();\n\n    return elem;\n};\n\nSDP.prototype.transportToJingle = function(mediaindex, elem) {\n    elem.c('transport');\n\n    // XEP-0343 DTLS/SCTP\n    const sctpmap\n        = SDPUtil.findLine(this.media[mediaindex], 'a=sctpmap:', this.session);\n\n    if (sctpmap) {\n        const sctpAttrs = SDPUtil.parseSCTPMap(sctpmap);\n\n        elem.c('sctpmap', {\n            xmlns: 'urn:xmpp:jingle:transports:dtls-sctp:1',\n            number: sctpAttrs[0], /* SCTP port */\n            protocol: sctpAttrs[1] /* protocol */\n        });\n\n        // Optional stream count attribute\n        if (sctpAttrs.length > 2) {\n            elem.attrs({ streams: sctpAttrs[2] });\n        }\n        elem.up();\n    }\n\n    // XEP-0320\n    const fingerprints\n        = SDPUtil.findLines(\n            this.media[mediaindex],\n            'a=fingerprint:',\n            this.session);\n\n    fingerprints.forEach(line => {\n        const fingerprint = SDPUtil.parseFingerprint(line);\n\n        fingerprint.xmlns = 'urn:xmpp:jingle:apps:dtls:0';\n        elem.c('fingerprint').t(fingerprint.fingerprint);\n        delete fingerprint.fingerprint;\n\n        const setupLine\n            = SDPUtil.findLine(\n                this.media[mediaindex],\n                'a=setup:',\n                this.session);\n\n        if (setupLine) {\n            fingerprint.setup = setupLine.substr(8);\n        }\n        elem.attrs(fingerprint);\n        elem.up(); // end of fingerprint\n    });\n    const iceParameters = SDPUtil.iceparams(this.media[mediaindex], this.session);\n\n    if (iceParameters) {\n        iceParameters.xmlns = 'urn:xmpp:jingle:transports:ice-udp:1';\n        elem.attrs(iceParameters);\n\n        // XEP-0176\n        const candidateLines\n            = SDPUtil.findLines(\n                this.media[mediaindex],\n                'a=candidate:',\n                this.session);\n\n        candidateLines.forEach(line => { // add any a=candidate lines\n            const candidate = SDPUtil.candidateToJingle(line);\n\n            if (this.failICE) {\n                candidate.ip = '1.1.1.1';\n            }\n            const protocol\n                = candidate && typeof candidate.protocol === 'string'\n                    ? candidate.protocol.toLowerCase()\n                    : '';\n\n            if ((this.removeTcpCandidates\n                    && (protocol === 'tcp' || protocol === 'ssltcp'))\n                || (this.removeUdpCandidates && protocol === 'udp')) {\n                return;\n            }\n            elem.c('candidate', candidate).up();\n        });\n    }\n    elem.up(); // end of transport\n};\n\n// XEP-0293\nSDP.prototype.rtcpFbToJingle = function(mediaindex, elem, payloadtype) {\n    const lines\n        = SDPUtil.findLines(\n            this.media[mediaindex],\n            `a=rtcp-fb:${payloadtype}`);\n\n    lines.forEach(line => {\n        const feedback = SDPUtil.parseRTCPFB(line);\n\n        if (feedback.type === 'trr-int') {\n            elem.c('rtcp-fb-trr-int', {\n                xmlns: 'urn:xmpp:jingle:apps:rtp:rtcp-fb:0',\n                value: feedback.params[0]\n            });\n            elem.up();\n        } else {\n            elem.c('rtcp-fb', {\n                xmlns: 'urn:xmpp:jingle:apps:rtp:rtcp-fb:0',\n                type: feedback.type\n            });\n            if (feedback.params.length > 0) {\n                elem.attrs({ 'subtype': feedback.params[0] });\n            }\n            elem.up();\n        }\n    });\n};\n\nSDP.prototype.rtcpFbFromJingle = function(elem, payloadtype) { // XEP-0293\n    let sdp = '';\n    const feedbackElementTrrInt\n        = elem.find(\n            '>rtcp-fb-trr-int[xmlns=\"urn:xmpp:jingle:apps:rtp:rtcp-fb:0\"]');\n\n    if (feedbackElementTrrInt.length) {\n        sdp += 'a=rtcp-fb:* trr-int ';\n        if (feedbackElementTrrInt.attr('value')) {\n            sdp += feedbackElementTrrInt.attr('value');\n        } else {\n            sdp += '0';\n        }\n        sdp += '\\r\\n';\n    }\n\n    const feedbackElements = elem.find('>rtcp-fb[xmlns=\"urn:xmpp:jingle:apps:rtp:rtcp-fb:0\"]');\n\n    feedbackElements.each((_, fb) => {\n        sdp += `a=rtcp-fb:${payloadtype} ${fb.getAttribute('type')}`;\n        if (fb.hasAttribute('subtype')) {\n            sdp += ` ${fb.getAttribute('subtype')}`;\n        }\n        sdp += '\\r\\n';\n    });\n\n    return sdp;\n};\n\n// construct an SDP from a jingle stanza\nSDP.prototype.fromJingle = function(jingle) {\n    const sessionId = Date.now();\n\n    // Use a unique session id for every TPC.\n    this.raw = 'v=0\\r\\n'\n        + `o=- ${sessionId} 2 IN IP4 0.0.0.0\\r\\n`\n        + 's=-\\r\\n'\n        + 't=0 0\\r\\n';\n\n    // http://tools.ietf.org/html/draft-ietf-mmusic-sdp-bundle-negotiation-04\n    // #section-8\n    const groups\n        = $(jingle).find('>group[xmlns=\"urn:xmpp:jingle:apps:grouping:0\"]');\n\n    if (groups.length) {\n        groups.each((idx, group) => {\n            const contents\n                = $(group)\n                    .find('>content')\n                    .map((_, content) => content.getAttribute('name'))\n                    .get();\n\n            if (contents.length > 0) {\n                this.raw\n                    += `a=group:${\n                        group.getAttribute('semantics')\n                            || group.getAttribute('type')} ${\n                        contents.join(' ')}\\r\\n`;\n            }\n        });\n    }\n\n    this.session = this.raw;\n    jingle.find('>content').each((_, content) => {\n        const m = this.jingle2media($(content));\n\n        this.media.push(m);\n    });\n\n    // reconstruct msid-semantic -- apparently not necessary\n    /*\n     var msid = SDPUtil.parseSSRC(this.raw);\n     if (msid.hasOwnProperty('mslabel')) {\n     this.session += \"a=msid-semantic: WMS \" + msid.mslabel + \"\\r\\n\";\n     }\n     */\n\n    this.raw = this.session + this.media.join('');\n};\n\n// translate a jingle content element into an an SDP media part\nSDP.prototype.jingle2media = function(content) {\n    const desc = content.find('>description');\n    const transport = content.find('>transport[xmlns=\"urn:xmpp:jingle:transports:ice-udp:1\"]');\n    let sdp = '';\n    const sctp = transport.find(\n        '>sctpmap[xmlns=\"urn:xmpp:jingle:transports:dtls-sctp:1\"]');\n\n    const media = { media: desc.attr('media') };\n\n    media.port = '1';\n    if (content.attr('senders') === 'rejected') {\n        // estos hack to reject an m-line.\n        media.port = '0';\n    }\n    if (transport.find('>fingerprint[xmlns=\"urn:xmpp:jingle:apps:dtls:0\"]').length) {\n        media.proto = sctp.length ? 'DTLS/SCTP' : 'RTP/SAVPF';\n    } else {\n        media.proto = 'RTP/AVPF';\n    }\n    if (sctp.length) {\n        sdp += `m=application ${media.port} DTLS/SCTP ${\n            sctp.attr('number')}\\r\\n`;\n        sdp += `a=sctpmap:${sctp.attr('number')} ${sctp.attr('protocol')}`;\n\n        const streamCount = sctp.attr('streams');\n\n        if (streamCount) {\n            sdp += ` ${streamCount}\\r\\n`;\n        } else {\n            sdp += '\\r\\n';\n        }\n    } else {\n        media.fmt\n            = desc\n                .find('>payload-type')\n                .map((_, payloadType) => payloadType.getAttribute('id'))\n                .get();\n        sdp += `${SDPUtil.buildMLine(media)}\\r\\n`;\n    }\n\n    sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n    if (!sctp.length) {\n        sdp += 'a=rtcp:1 IN IP4 0.0.0.0\\r\\n';\n    }\n\n    // XEP-0176 ICE parameters\n    if (transport.length) {\n        if (transport.attr('ufrag')) {\n            sdp += `${SDPUtil.buildICEUfrag(transport.attr('ufrag'))}\\r\\n`;\n        }\n        if (transport.attr('pwd')) {\n            sdp += `${SDPUtil.buildICEPwd(transport.attr('pwd'))}\\r\\n`;\n        }\n        transport.find('>fingerprint[xmlns=\"urn:xmpp:jingle:apps:dtls:0\"]').each((_, fingerprint) => {\n            sdp += `a=fingerprint:${fingerprint.getAttribute('hash')}`;\n            sdp += ` ${$(fingerprint).text()}`;\n            sdp += '\\r\\n';\n            if (fingerprint.hasAttribute('setup')) {\n                sdp += `a=setup:${fingerprint.getAttribute('setup')}\\r\\n`;\n            }\n        });\n    }\n\n    // XEP-0176 ICE candidates\n    transport.find('>candidate')\n        .each((_, candidate) => {\n            let protocol = candidate.getAttribute('protocol');\n\n            protocol\n                = typeof protocol === 'string' ? protocol.toLowerCase() : '';\n\n            if ((this.removeTcpCandidates\n                    && (protocol === 'tcp' || protocol === 'ssltcp'))\n                || (this.removeUdpCandidates && protocol === 'udp')) {\n                return;\n            } else if (this.failICE) {\n                candidate.setAttribute('ip', '1.1.1.1');\n            }\n\n            sdp += SDPUtil.candidateFromJingle(candidate);\n        });\n\n    switch (content.attr('senders')) {\n    case 'initiator':\n        sdp += `a=${MediaDirection.SENDONLY}\\r\\n`;\n        break;\n    case 'responder':\n        sdp += `a=${MediaDirection.RECVONLY}\\r\\n`;\n        break;\n    case 'none':\n        sdp += `a=${MediaDirection.INACTIVE}\\r\\n`;\n        break;\n    case 'both':\n        sdp += `a=${MediaDirection.SENDRECV}\\r\\n`;\n        break;\n    }\n    sdp += `a=mid:${content.attr('name')}\\r\\n`;\n\n    // <description><rtcp-mux/></description>\n    // see http://code.google.com/p/libjingle/issues/detail?id=309 -- no spec\n    // though\n    // and http://mail.jabber.org/pipermail/jingle/2011-December/001761.html\n    if (desc.find('>rtcp-mux').length) {\n        sdp += 'a=rtcp-mux\\r\\n';\n    }\n\n    desc.find('>payload-type').each((_, payloadType) => {\n        sdp += `${SDPUtil.buildRTPMap(payloadType)}\\r\\n`;\n        if ($(payloadType).find('>parameter').length) {\n            sdp += `a=fmtp:${payloadType.getAttribute('id')} `;\n            sdp\n                += $(payloadType)\n                    .find('>parameter')\n                    .map((__, parameter) => {\n                        const name = parameter.getAttribute('name');\n\n                        return (\n                            (name ? `${name}=` : '')\n                                + parameter.getAttribute('value'));\n                    })\n                    .get()\n                    .join('; ');\n            sdp += '\\r\\n';\n        }\n\n        // xep-0293\n        sdp += this.rtcpFbFromJingle($(payloadType), payloadType.getAttribute('id'));\n    });\n\n    // xep-0293\n    sdp += this.rtcpFbFromJingle(desc, '*');\n\n    // xep-0294\n    desc\n        .find('>rtp-hdrext[xmlns=\"urn:xmpp:jingle:apps:rtp:rtp-hdrext:0\"]')\n        .each((_, hdrExt) => {\n            sdp\n                += `a=extmap:${hdrExt.getAttribute('id')} ${\n                    hdrExt.getAttribute('uri')}\\r\\n`;\n        });\n\n    // XEP-0339 handle ssrc-group attributes\n    desc\n        .find('>ssrc-group[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]')\n        .each((_, ssrcGroup) => {\n            const semantics = ssrcGroup.getAttribute('semantics');\n            const ssrcs\n                = $(ssrcGroup)\n                    .find('>source')\n                    .map((__, source) => source.getAttribute('ssrc'))\n                    .get();\n\n            if (ssrcs.length) {\n                sdp += `a=ssrc-group:${semantics} ${ssrcs.join(' ')}\\r\\n`;\n            }\n        });\n\n    // XEP-0339 handle source attributes\n    desc\n        .find('>source[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]')\n        .each((_, source) => {\n            const ssrc = source.getAttribute('ssrc');\n\n            $(source)\n                .find('>parameter')\n                .each((__, parameter) => {\n                    const name = parameter.getAttribute('name');\n                    let value = parameter.getAttribute('value');\n\n                    value = SDPUtil.filterSpecialChars(value);\n                    sdp += `a=ssrc:${ssrc} ${name}`;\n                    if (value && value.length) {\n                        sdp += `:${value}`;\n                    }\n                    sdp += '\\r\\n';\n                });\n        });\n\n    return sdp;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","/* global module */\n/**\n * Enumeration of the codec mime types\n * @type {{H264: string, OPUS: string, VP8: string, VP9: string}}\n */\nconst CodecMimeType = {\n    /**\n     * The h264 codec mime type.\n     */\n    H264: 'h264',\n\n    /**\n     * The opus codec mime type.\n     */\n    OPUS: 'opus',\n\n    /**\n     * The vp8 codec mime type.\n     */\n    VP8: 'vp8',\n\n    /**\n     * The vp9 codec mime type.\n     */\n    VP9: 'vp9'\n\n};\n\nmodule.exports = CodecMimeType;\n","import * as JitsiTrackErrors from './JitsiTrackErrors';\n\nconst TRACK_ERROR_TO_MESSAGE_MAP = {};\n\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.UNSUPPORTED_RESOLUTION]\n    = 'Video resolution is not supported: ';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.SCREENSHARING_USER_CANCELED]\n    = 'User canceled screen sharing prompt';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.SCREENSHARING_GENERIC_ERROR]\n    = 'Unknown error from screensharing';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.ELECTRON_DESKTOP_PICKER_ERROR]\n    = 'Unkown error from desktop picker';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.ELECTRON_DESKTOP_PICKER_NOT_FOUND]\n    = 'Failed to detect desktop picker';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.GENERAL]\n    = 'Generic getUserMedia error';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.PERMISSION_DENIED]\n    = 'User denied permission to use device(s): ';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.NOT_FOUND]\n    = 'Requested device(s) was/were not found: ';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.CONSTRAINT_FAILED]\n    = 'Constraint could not be satisfied: ';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.TIMEOUT]\n    = 'Could not start media source. Timeout occured!';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.TRACK_IS_DISPOSED]\n    = 'Track has been already disposed';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.TRACK_NO_STREAM_FOUND]\n    = 'Track does not have an associated Media Stream';\n\n// FIXME: Using prototype inheritance because otherwise instanceof is not\n// working properly (see https://github.com/babel/babel/issues/3083)\n\n/**\n *\n * Represents an error that occurred to a JitsiTrack. Can represent various\n * types of errors. For error descriptions (@see JitsiTrackErrors).\n *\n * @extends Error\n *\n *\n * @constructor\n * @param {Object|string} error - error object or error name\n * @param {Object|string} (options) - getUserMedia constraints object or\n * error message\n * @param {('audio'|'video'|'desktop'|'screen'|'audiooutput')[]} (devices) -\n * list of getUserMedia requested devices\n */\nfunction JitsiTrackError(error, options, devices) {\n    if (typeof error === 'object' && typeof error.name !== 'undefined') {\n        /**\n         * Additional information about original getUserMedia error\n         * and constraints.\n         * @type {{\n         *     error: Object,\n         *     constraints: Object,\n         *     devices: Array.<'audio'|'video'|'desktop'|'screen'>\n         * }}\n         */\n        this.gum = {\n            error,\n            constraints: options,\n            devices: devices && Array.isArray(devices)\n                ? devices.slice(0)\n                : undefined\n        };\n\n        switch (error.name) {\n        case 'NotAllowedError':\n        case 'PermissionDeniedError':\n        case 'SecurityError':\n            this.name = JitsiTrackErrors.PERMISSION_DENIED;\n            this.message\n                = TRACK_ERROR_TO_MESSAGE_MAP[this.name]\n                    + (this.gum.devices || []).join(', ');\n            break;\n        case 'DevicesNotFoundError':\n        case 'NotFoundError':\n            this.name = JitsiTrackErrors.NOT_FOUND;\n            this.message\n                = TRACK_ERROR_TO_MESSAGE_MAP[this.name]\n                    + (this.gum.devices || []).join(', ');\n            break;\n        case 'ConstraintNotSatisfiedError':\n        case 'OverconstrainedError': {\n            const constraintName = error.constraintName || error.constraint;\n\n            // we treat deviceId as unsupported resolution, as we want to\n            // retry and finally if everything fails to remove deviceId from\n            // mandatory constraints\n            if (options\n                    && options.video\n                    && (!devices || devices.indexOf('video') > -1)\n                    && (constraintName === 'minWidth'\n                        || constraintName === 'maxWidth'\n                        || constraintName === 'minHeight'\n                        || constraintName === 'maxHeight'\n                        || constraintName === 'width'\n                        || constraintName === 'height'\n                        || constraintName === 'deviceId')) {\n                this.name = JitsiTrackErrors.UNSUPPORTED_RESOLUTION;\n                this.message\n                    = TRACK_ERROR_TO_MESSAGE_MAP[this.name]\n                        + getResolutionFromFailedConstraint(\n                            constraintName,\n                            options);\n            } else {\n                this.name = JitsiTrackErrors.CONSTRAINT_FAILED;\n                this.message\n                    = TRACK_ERROR_TO_MESSAGE_MAP[this.name]\n                        + error.constraintName;\n            }\n            break;\n        }\n\n        default:\n            this.name = JitsiTrackErrors.GENERAL;\n            this.message\n                = error.message || TRACK_ERROR_TO_MESSAGE_MAP[this.name];\n            break;\n        }\n    } else if (typeof error === 'string') {\n        if (TRACK_ERROR_TO_MESSAGE_MAP[error]) {\n            this.name = error;\n            this.message = options || TRACK_ERROR_TO_MESSAGE_MAP[error];\n        } else {\n            // this is some generic error that do not fit any of our\n            // pre-defined errors, so don't give it any specific name, just\n            // store message\n            this.message = error;\n        }\n    } else {\n        throw new Error('Invalid arguments');\n    }\n\n    this.stack = error.stack || (new Error()).stack;\n}\n\nJitsiTrackError.prototype = Object.create(Error.prototype);\nJitsiTrackError.prototype.constructor = JitsiTrackError;\n\n/**\n * Gets failed resolution constraint from corresponding object.\n * @param {string} failedConstraintName\n * @param {Object} constraints\n * @returns {string|number}\n */\nfunction getResolutionFromFailedConstraint(failedConstraintName, constraints) {\n    if (constraints && constraints.video && constraints.video.mandatory) {\n        switch (failedConstraintName) {\n        case 'width':\n            return constraints.video.mandatory.minWidth;\n        case 'height':\n            return constraints.video.mandatory.minHeight;\n        default:\n            return constraints.video.mandatory[failedConstraintName] || '';\n        }\n    }\n\n    return '';\n}\n\nexport default JitsiTrackError;\n","import EventEmitter from 'events';\n\n/**\n * The class implements basic event operations - add/remove listener.\n * NOTE: The purpose of the class is to be extended in order to add\n * this functionality to other classes.\n */\nexport default class Listenable {\n    /**\n     * Creates new instance.\n     * @param {EventEmitter} eventEmitter\n     * @constructor\n     */\n    constructor(eventEmitter = new EventEmitter()) {\n        this.eventEmitter = eventEmitter;\n\n        // aliases for addListener/removeListener\n        this.addEventListener = this.on = this.addListener;\n        this.removeEventListener = this.off = this.removeListener;\n    }\n\n    /**\n     * Adds new listener.\n     * @param {String} eventName the name of the event\n     * @param {Function} listener the listener.\n     * @returns {Function} - The unsubscribe function.\n     */\n    addListener(eventName, listener) {\n        this.eventEmitter.addListener(eventName, listener);\n\n        return () => this.removeEventListener(eventName, listener);\n    }\n\n    /**\n     * Removes listener.\n     * @param {String} eventName the name of the event that triggers the\n     * listener\n     * @param {Function} listener the listener.\n     */\n    removeListener(eventName, listener) {\n        this.eventEmitter.removeListener(eventName, listener);\n    }\n}\n","var parser = require('./parser');\nvar writer = require('./writer');\n\nexports.write = writer;\nexports.parse = parser.parse;\nexports.parseFmtpConfig = parser.parseFmtpConfig;\nexports.parseParams = parser.parseParams;\nexports.parsePayloads = parser.parsePayloads;\nexports.parseRemoteCandidates = parser.parseRemoteCandidates;\nexports.parseImageAttributes = parser.parseImageAttributes;\nexports.parseSimulcastStreamList = parser.parseSimulcastStreamList;\n","/**\n * Event triggered by a audio detector indicating that its active state has changed from active to inactive or vice\n * versa.\n * @event\n * @type {boolean} - true when service has changed to active false otherwise.\n */\nexport const DETECTOR_STATE_CHANGE = 'detector_state_change';\n\n/** Event triggered by {@link NoAudioSignalDetector} when the local audio device associated with a JitsiConference\n * starts receiving audio levels with the value of 0 meaning no audio is being captured on that device, or when\n * it starts receiving audio levels !== 0 after being in a state of no audio.\n * @event\n * @type {boolean} - true when the current conference audio track has audio input false otherwise.\n */\nexport const AUDIO_INPUT_STATE_CHANGE = 'audio_input_state_changed';\n\n/** Event triggered by NoAudioSignalDetector when the local audio device associated with a JitsiConference goes silent\n * for a period of time, meaning that the device is either broken or hardware/software muted.\n * @event\n * @type {void}\n */\nexport const NO_AUDIO_INPUT = 'no_audio_input_detected';\n\n/**\n *  Event generated by {@link VADNoiseDetection} when the tracked device is considered noisy.\n *  @event\n *  @type {Object}\n */\nexport const VAD_NOISY_DEVICE = 'detection.vad_noise_device';\n\n/**\n * Event generated by VADReportingService when if finishes creating a VAD report for the monitored devices.\n * The generated objects are of type Array<Object>, one score for each monitored device.\n * @event VAD_REPORT_PUBLISHED\n * @type Array<Object> with the following structure:\n * @property {Date} timestamp - Timestamp at which the compute took place.\n * @property {number} avgVAD - Average VAD score over monitored period of time.\n * @property {string} deviceId - Associate local audio device ID.\n */\nexport const VAD_REPORT_PUBLISHED = 'vad-report-published';\n\n/**\n * Event generated by {@link TrackVADEmitter} when PCM sample VAD score is available.\n *\n * @event\n * @type {Object}\n * @property {Date}   timestamp - Exact time at which processed PCM sample was generated.\n * @property {number} score - VAD score on a scale from 0 to 1 (i.e. 0.7)\n * @property {Float32Array} pcmData - Raw PCM data with which the VAD score was calculated.\n * @property {string} deviceId - Device id of the associated track.\n */\nexport const VAD_SCORE_PUBLISHED = 'detection.vad_score_published';\n\n/**\n *  Event generated by {@link VADTalkMutedDetection} when a user is talking while the mic is muted.\n *\n *  @event\n *  @type {Object}\n */\nexport const VAD_TALK_WHILE_MUTED = 'detection.vad_talk_while_muted';\n","/* global $ */\n\nimport { getLogger } from 'jitsi-meet-logger';\nimport { $msg, Strophe } from 'strophe.js';\nimport 'strophejs-plugin-disco';\n\nimport * as JitsiConnectionErrors from '../../JitsiConnectionErrors';\nimport * as JitsiConnectionEvents from '../../JitsiConnectionEvents';\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\nimport browser from '../browser';\nimport { E2EEncryption } from '../e2ee/E2EEncryption';\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\nimport Listenable from '../util/Listenable';\nimport RandomUtil from '../util/RandomUtil';\n\nimport Caps, { parseDiscoInfo } from './Caps';\nimport XmppConnection from './XmppConnection';\nimport MucConnectionPlugin from './strophe.emuc';\nimport JingleConnectionPlugin from './strophe.jingle';\nimport initStropheLogger from './strophe.logger';\nimport RayoConnectionPlugin from './strophe.rayo';\nimport initStropheUtil from './strophe.util';\n\nconst logger = getLogger(__filename);\n\n/**\n* Regex to extract exact error message on jwt error.\n*/\nconst FAILURE_REGEX = /<failure.*><not-allowed\\/><text>(.*)<\\/text><\\/failure>/gi;\n\n/**\n * Creates XMPP connection.\n *\n * @param {Object} options\n * @param {string} [options.token] - JWT token used for authentication(JWT authentication module must be enabled in\n * Prosody).\n * @param {string} options.serviceUrl - The service URL for XMPP connection.\n * @param {string} options.shard - The shard where XMPP connection initially landed.\n * @param {string} options.enableWebsocketResume - True to enable stream resumption.\n * @param {number} [options.websocketKeepAlive] - See {@link XmppConnection} constructor.\n * @param {number} [options.websocketKeepAliveUrl] - See {@link XmppConnection} constructor.\n * @param {Object} [options.xmppPing] - See {@link XmppConnection} constructor.\n * @returns {XmppConnection}\n */\nfunction createConnection({\n    enableWebsocketResume,\n    serviceUrl = '/http-bind',\n    shard,\n    token,\n    websocketKeepAlive,\n    websocketKeepAliveUrl,\n    xmppPing }) {\n\n    // Append token as URL param\n    if (token) {\n        // eslint-disable-next-line no-param-reassign\n        serviceUrl += `${serviceUrl.indexOf('?') === -1 ? '?' : '&'}token=${token}`;\n    }\n\n    return new XmppConnection({\n        enableWebsocketResume,\n        serviceUrl,\n        websocketKeepAlive,\n        websocketKeepAliveUrl,\n        xmppPing,\n        shard\n    });\n}\n\n/**\n * Initializes Strophe plugins that need to work with Strophe.Connection directly rather than the lib-jitsi-meet's\n * {@link XmppConnection} wrapper.\n *\n * @returns {void}\n */\nfunction initStropheNativePlugins() {\n    initStropheUtil();\n    initStropheLogger();\n}\n\n// FIXME: remove once we have a default config template. -saghul\n/**\n * A list of ice servers to use by default for P2P.\n */\nexport const DEFAULT_STUN_SERVERS = [\n    { urls: 'stun:meet-jit-si-turnrelay.jitsi.net:443' }\n];\n\n/**\n * The name of the field used to recognize a chat message as carrying a JSON\n * payload from another endpoint.\n * If the json-message of a chat message contains a valid JSON object, and\n * the JSON has this key, then it is a valid json-message to be sent.\n */\nexport const JITSI_MEET_MUC_TYPE = 'type';\n\n/**\n * The feature used by jigasi participants.\n * @type {string}\n */\nexport const FEATURE_JIGASI = 'http://jitsi.org/protocol/jigasi';\n\n/**\n * The feature used by the lib to mark support for e2ee. We use the feature by putting it in the presence\n * to avoid additional signaling (disco-info).\n * @type {string}\n */\nexport const FEATURE_E2EE = 'https://jitsi.org/meet/e2ee';\n\n/**\n *\n */\nexport default class XMPP extends Listenable {\n    /**\n     * FIXME describe all options\n     * @param {Object} options\n     * @param {String} options.serviceUrl - URL passed to the XMPP client which will be used to establish XMPP\n     * connection with the server.\n     * @param {String} options.bosh - Deprecated, use {@code serviceUrl}.\n     * @param {boolean} options.enableWebsocketResume - Enables XEP-0198 stream management which will make the XMPP\n     * module try to resume the session in case the Websocket connection breaks.\n     * @param {number} [options.websocketKeepAlive] - The websocket keep alive interval. See {@link XmppConnection}\n     * constructor for more details.\n     * @param {number} [options.websocketKeepAliveUrl] - The websocket keep alive url. See {@link XmppConnection}\n     * constructor for more details.\n     * @param {Object} [options.xmppPing] - The xmpp ping settings.\n     * @param {Array<Object>} options.p2pStunServers see {@link JingleConnectionPlugin} for more details.\n     * @param token\n     */\n    constructor(options, token) {\n        super();\n        this.connection = null;\n        this.disconnectInProgress = false;\n        this.connectionTimes = {};\n        this.options = options;\n        this.token = token;\n        this.authenticatedUser = false;\n\n        initStropheNativePlugins();\n\n        const xmppPing = options.xmppPing || {};\n\n        // let's ping the main domain (in case a guest one is used for the connection)\n        xmppPing.domain = options.hosts.domain;\n\n        this.connection = createConnection({\n            enableWebsocketResume: options.enableWebsocketResume,\n\n            // FIXME remove deprecated bosh option at some point\n            serviceUrl: options.serviceUrl || options.bosh,\n            token,\n            websocketKeepAlive: options.websocketKeepAlive,\n            websocketKeepAliveUrl: options.websocketKeepAliveUrl,\n            xmppPing,\n            shard: options.deploymentInfo?.shard\n        });\n\n        // forwards the shard changed event\n        this.connection.on(XmppConnection.Events.CONN_SHARD_CHANGED, () => {\n            /* eslint-disable camelcase */\n            const details = {\n                shard_changed: true,\n                suspend_time: this.connection.ping.getPingSuspendTime(),\n                time_since_last_success: this.connection.getTimeSinceLastSuccess()\n            };\n            /* eslint-enable camelcase */\n\n            this.eventEmitter.emit(\n                JitsiConnectionEvents.CONNECTION_FAILED,\n                JitsiConnectionErrors.OTHER_ERROR,\n                undefined,\n                undefined,\n                details);\n        });\n\n        this._initStrophePlugins();\n\n        this.caps = new Caps(this.connection, this.options.clientNode);\n\n        // Initialize features advertised in disco-info\n        this.initFeaturesList();\n\n        // Setup a disconnect on unload as a way to facilitate API consumers. It\n        // sounds like they would want that. A problem for them though may be if\n        // they wanted to utilize the connected connection in an unload handler\n        // of their own. However, it should be fairly easy for them to do that\n        // by registering their unload handler before us.\n        $(window).on('beforeunload unload', ev => {\n            this.disconnect(ev).catch(() => {\n                // ignore errors in order to not brake the unload.\n            });\n        });\n    }\n\n    /**\n     * Initializes the list of feature advertised through the disco-info\n     * mechanism.\n     */\n    initFeaturesList() {\n        // http://xmpp.org/extensions/xep-0167.html#support\n        // http://xmpp.org/extensions/xep-0176.html#support\n        this.caps.addFeature('urn:xmpp:jingle:1');\n        this.caps.addFeature('urn:xmpp:jingle:apps:rtp:1');\n        this.caps.addFeature('urn:xmpp:jingle:transports:ice-udp:1');\n        this.caps.addFeature('urn:xmpp:jingle:apps:dtls:0');\n        this.caps.addFeature('urn:xmpp:jingle:transports:dtls-sctp:1');\n        this.caps.addFeature('urn:xmpp:jingle:apps:rtp:audio');\n        this.caps.addFeature('urn:xmpp:jingle:apps:rtp:video');\n\n        // Disable RTX on Firefox 83 and older versions because of\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1668028\n        if (!(this.options.disableRtx || (browser.isFirefox() && browser.isVersionLessThan(84)))) {\n            this.caps.addFeature('urn:ietf:rfc:4588');\n        }\n        if (this.options.enableOpusRed === true && browser.supportsAudioRed()) {\n            this.caps.addFeature('http://jitsi.org/opus-red');\n        }\n\n        if (typeof this.options.enableRemb === 'undefined' || this.options.enableRemb) {\n            this.caps.addFeature('http://jitsi.org/remb');\n        }\n\n        // Disable TCC on Firefox because of a known issue where BWE is halved on every renegotiation.\n        if (!browser.isFirefox() && (typeof this.options.enableTcc === 'undefined' || this.options.enableTcc)) {\n            this.caps.addFeature('http://jitsi.org/tcc');\n        }\n\n        // this is dealt with by SDP O/A so we don't need to announce this\n        // XEP-0293\n        // this.caps.addFeature('urn:xmpp:jingle:apps:rtp:rtcp-fb:0');\n        // XEP-0294\n        // this.caps.addFeature('urn:xmpp:jingle:apps:rtp:rtp-hdrext:0');\n\n        this.caps.addFeature('urn:ietf:rfc:5761'); // rtcp-mux\n        this.caps.addFeature('urn:ietf:rfc:5888'); // a=group, e.g. bundle\n\n        // this.caps.addFeature('urn:ietf:rfc:5576'); // a=ssrc\n\n        // Enable Lipsync ?\n        if (browser.isChromiumBased() && this.options.enableLipSync === true) {\n            logger.info('Lip-sync enabled !');\n            this.caps.addFeature('http://jitsi.org/meet/lipsync');\n        }\n\n        if (this.connection.rayo) {\n            this.caps.addFeature('urn:xmpp:rayo:client:1');\n        }\n\n        if (E2EEncryption.isSupported(this.options)) {\n            this.caps.addFeature(FEATURE_E2EE, false, true);\n        }\n    }\n\n    /**\n     *\n     */\n    getConnection() {\n        return this.connection;\n    }\n\n    /**\n     * Receive connection status changes and handles them.\n     *\n     * @param {Object} credentials\n     * @param {string} credentials.jid - The user's XMPP ID passed to the\n     * connect method. For example, 'user@xmpp.com'.\n     * @param {string} credentials.password - The password passed to the connect\n     * method.\n     * @param {string} status - One of Strophe's connection status strings.\n     * @param {string} [msg] - The connection error message provided by Strophe.\n     */\n    connectionHandler(credentials = {}, status, msg) {\n        const now = window.performance.now();\n        const statusStr = Strophe.getStatusString(status).toLowerCase();\n\n        this.connectionTimes[statusStr] = now;\n        logger.log(\n            `(TIME) Strophe ${statusStr}${msg ? `[${msg}]` : ''}:\\t`,\n            now);\n\n        this.eventEmitter.emit(XMPPEvents.CONNECTION_STATUS_CHANGED, credentials, status, msg);\n        if (status === Strophe.Status.CONNECTED || status === Strophe.Status.ATTACHED) {\n            // once connected or attached we no longer need this handle, drop it if it exist\n            if (this._sysMessageHandler) {\n                this.connection._stropheConn.deleteHandler(this._sysMessageHandler);\n                this._sysMessageHandler = null;\n            }\n\n            this.sendDiscoInfo && this.connection.jingle.getStunAndTurnCredentials();\n\n            logger.info(`My Jabber ID: ${this.connection.jid}`);\n\n            // XmppConnection emits CONNECTED again on reconnect - a good opportunity to clear any \"last error\" flags\n            this._resetState();\n\n            this.sendDiscoInfo && this.caps.getFeaturesAndIdentities(this.options.hosts.domain)\n                .then(({ features, identities }) => {\n                    if (!features.has(Strophe.NS.PING)) {\n                        logger.error(`Ping NOT supported by ${\n                            this.options.hosts.domain} - please enable ping in your XMPP server config`);\n                    }\n\n                    this._processDiscoInfoIdentities(\n                        identities, undefined /* when querying we will query for features */);\n                })\n                .catch(error => {\n                    const errmsg = 'Feature discovery error';\n\n                    GlobalOnErrorHandler.callErrorHandler(\n                        new Error(`${errmsg}: ${error}`));\n                    logger.error(errmsg, error);\n                });\n\n            // make sure we don't query again\n            this.sendDiscoInfo = false;\n\n            if (credentials.password) {\n                this.authenticatedUser = true;\n            }\n            if (this.connection && this.connection.connected\n                && Strophe.getResourceFromJid(this.connection.jid)) {\n                // .connected is true while connecting?\n                // this.connection.send($pres());\n                this.eventEmitter.emit(\n                    JitsiConnectionEvents.CONNECTION_ESTABLISHED,\n                    Strophe.getResourceFromJid(this.connection.jid));\n            }\n        } else if (status === Strophe.Status.CONNFAIL) {\n            if (msg === 'x-strophe-bad-non-anon-jid') {\n                this.anonymousConnectionFailed = true;\n            } else {\n                this.connectionFailed = true;\n            }\n            this.lastErrorMsg = msg;\n            if (msg === 'giving-up') {\n                this.eventEmitter.emit(\n                    JitsiConnectionEvents.CONNECTION_FAILED,\n                    JitsiConnectionErrors.OTHER_ERROR, msg);\n            }\n        } else if (status === Strophe.Status.ERROR) {\n            this.lastErrorMsg = msg;\n        } else if (status === Strophe.Status.DISCONNECTED) {\n            // Stop ping interval\n            this.connection.ping.stopInterval();\n            const wasIntentionalDisconnect = Boolean(this.disconnectInProgress);\n            const errMsg = msg || this.lastErrorMsg;\n\n            if (this.anonymousConnectionFailed) {\n                // prompt user for username and password\n                this.eventEmitter.emit(\n                    JitsiConnectionEvents.CONNECTION_FAILED,\n                    JitsiConnectionErrors.PASSWORD_REQUIRED);\n            } else if (this.connectionFailed) {\n                this.eventEmitter.emit(\n                    JitsiConnectionEvents.CONNECTION_FAILED,\n                    JitsiConnectionErrors.OTHER_ERROR,\n                    errMsg,\n                    undefined, /* credentials */\n                    this._getConnectionFailedReasonDetails());\n            } else if (wasIntentionalDisconnect) {\n                this.eventEmitter.emit(\n                    JitsiConnectionEvents.CONNECTION_DISCONNECTED, errMsg);\n            } else {\n                // XXX if Strophe drops the connection while not being asked to,\n                // it means that most likely some serious error has occurred.\n                // One currently known case is when a BOSH request fails for\n                // more than 4 times. The connection is dropped without\n                // supplying a reason(error message/event) through the API.\n                logger.error('XMPP connection dropped!');\n\n                // XXX if the last request error is within 5xx range it means it\n                // was a server failure\n                const lastErrorStatus = Strophe.getLastErrorStatus();\n\n                if (lastErrorStatus >= 500 && lastErrorStatus < 600) {\n                    this.eventEmitter.emit(\n                        JitsiConnectionEvents.CONNECTION_FAILED,\n                        JitsiConnectionErrors.SERVER_ERROR,\n                        errMsg || 'server-error',\n                        /* credentials */ undefined,\n                        this._getConnectionFailedReasonDetails());\n                } else {\n                    this.eventEmitter.emit(\n                        JitsiConnectionEvents.CONNECTION_FAILED,\n                        JitsiConnectionErrors.CONNECTION_DROPPED_ERROR,\n                        errMsg || 'connection-dropped-error',\n                        /* credentials */ undefined,\n                        this._getConnectionFailedReasonDetails());\n                }\n            }\n        } else if (status === Strophe.Status.AUTHFAIL) {\n            const lastFailedRawMessage = this.getConnection().getLastFailedMessage();\n\n            // wrong password or username, prompt user\n            this.eventEmitter.emit(\n                JitsiConnectionEvents.CONNECTION_FAILED,\n                JitsiConnectionErrors.PASSWORD_REQUIRED,\n                msg || this._parseConnectionFailedMessage(lastFailedRawMessage),\n                credentials);\n        }\n    }\n\n    /**\n     * Process received identities.\n     * @param {Set<String>} identities The identities to process.\n     * @param {Set<String>} features The features to process, optional. If missing lobby component will be queried\n     * for more features.\n     * @private\n     */\n    _processDiscoInfoIdentities(identities, features) {\n        // check for speakerstats\n        identities.forEach(identity => {\n            if (identity.type === 'av_moderation') {\n                this.avModerationComponentAddress = identity.name;\n            }\n\n            if (identity.type === 'speakerstats') {\n                this.speakerStatsComponentAddress = identity.name;\n            }\n\n            if (identity.type === 'conference_duration') {\n                this.conferenceDurationComponentAddress = identity.name;\n            }\n\n            if (identity.type === 'lobbyrooms') {\n                this.lobbySupported = true;\n                const processLobbyFeatures = f => {\n                    f.forEach(fr => {\n                        if (fr.endsWith('#displayname_required')) {\n                            this.eventEmitter.emit(JitsiConnectionEvents.DISPLAY_NAME_REQUIRED);\n                        }\n                    });\n                };\n\n                if (features) {\n                    processLobbyFeatures(features);\n                } else {\n                    identity.name && this.caps.getFeaturesAndIdentities(identity.name, identity.type)\n                        .then(({ features: f }) => processLobbyFeatures(f))\n                        .catch(e => logger.warn('Error getting features from lobby.', e && e.message));\n                }\n            }\n        });\n\n        if (this.avModerationComponentAddress\n            || this.speakerStatsComponentAddress\n            || this.conferenceDurationComponentAddress) {\n            this.connection.addHandler(this._onPrivateMessage.bind(this), null, 'message', null, null);\n        }\n    }\n\n    /**\n    * Parses a raw failure xmpp xml message received on auth failed.\n    *\n    * @param {string} msg - The raw failure message from xmpp.\n    * @returns {string|null} - The parsed message from the raw xmpp message.\n    */\n    _parseConnectionFailedMessage(msg) {\n        if (!msg) {\n            return null;\n        }\n\n        const matches = FAILURE_REGEX.exec(msg);\n\n        return matches ? matches[1] : null;\n    }\n\n    /**\n     *\n     * @param jid\n     * @param password\n     */\n    _connect(jid, password) {\n        // connection.connect() starts the connection process.\n        //\n        // As the connection process proceeds, the user supplied callback will\n        // be triggered multiple times with status updates. The callback should\n        // take two arguments - the status code and the error condition.\n        //\n        // The status code will be one of the values in the Strophe.Status\n        // constants. The error condition will be one of the conditions defined\n        // in RFC 3920 or the condition ‘strophe-parsererror’.\n        //\n        // The Parameters wait, hold and route are optional and only relevant\n        // for BOSH connections. Please see XEP 124 for a more detailed\n        // explanation of the optional parameters.\n        //\n        // Connection status constants for use by the connection handler\n        // callback.\n        //\n        //  Status.ERROR - An error has occurred (websockets specific)\n        //  Status.CONNECTING - The connection is currently being made\n        //  Status.CONNFAIL - The connection attempt failed\n        //  Status.AUTHENTICATING - The connection is authenticating\n        //  Status.AUTHFAIL - The authentication attempt failed\n        //  Status.CONNECTED - The connection has succeeded\n        //  Status.DISCONNECTED - The connection has been terminated\n        //  Status.DISCONNECTING - The connection is currently being terminated\n        //  Status.ATTACHED - The connection has been attached\n\n        this._resetState();\n\n        // we want to send this only on the initial connect\n        this.sendDiscoInfo = true;\n\n        if (this.connection._stropheConn && this.connection._stropheConn._addSysHandler) {\n            this._sysMessageHandler = this.connection._stropheConn._addSysHandler(\n                this._onSystemMessage.bind(this),\n                null,\n                'message'\n            );\n        } else {\n            logger.warn('Cannot attach strophe system handler, jiconop cannot operate');\n        }\n\n        this.connection.connect(\n            jid,\n            password,\n            this.connectionHandler.bind(this, {\n                jid,\n                password\n            }));\n    }\n\n    /**\n     * Receives system messages during the connect/login process and checks for services or\n     * @param msg The received message.\n     * @returns {void}\n     * @private\n     */\n    _onSystemMessage(msg) {\n        // proceed only if the message has any of the expected information\n        if ($(msg).find('>services').length === 0 && $(msg).find('>query').length === 0) {\n            return;\n        }\n\n        this.sendDiscoInfo = false;\n\n        const foundIceServers = this.connection.jingle.onReceiveStunAndTurnCredentials(msg);\n\n        const { features, identities } = parseDiscoInfo(msg);\n\n        this._processDiscoInfoIdentities(identities, features);\n\n        // check for shard name in identities\n        identities.forEach(i => {\n            if (i.type === 'shard') {\n                this.options.deploymentInfo.shard = i.name;\n            }\n        });\n\n        if (foundIceServers || identities.size > 0 || features.size > 0) {\n            this.connection._stropheConn.deleteHandler(this._sysMessageHandler);\n            this._sysMessageHandler = null;\n        }\n    }\n\n    /**\n     * Attach to existing connection. Can be used for optimizations. For\n     * example: if the connection is created on the server we can attach to it\n     * and start using it.\n     *\n     * @param options {object} connecting options - rid, sid, jid and password.\n     */\n    attach(options) {\n        this._resetState();\n\n        // we want to send this only on the initial connect\n        this.sendDiscoInfo = true;\n\n        const now = this.connectionTimes.attaching = window.performance.now();\n\n        logger.log('(TIME) Strophe Attaching:\\t', now);\n        this.connection.attach(options.jid, options.sid,\n            parseInt(options.rid, 10) + 1,\n            this.connectionHandler.bind(this, {\n                jid: options.jid,\n                password: options.password\n            }));\n    }\n\n    /**\n     * Resets any state/flag before starting a new connection.\n     * @private\n     */\n    _resetState() {\n        this.anonymousConnectionFailed = false;\n        this.connectionFailed = false;\n        this.lastErrorMsg = undefined;\n        this.disconnectInProgress = undefined;\n    }\n\n    /**\n     *\n     * @param jid\n     * @param password\n     */\n    connect(jid, password) {\n        if (!jid) {\n            const { anonymousdomain, domain } = this.options.hosts;\n            let configDomain = anonymousdomain || domain;\n\n            // Force authenticated domain if room is appended with '?login=true'\n            // or if we're joining with the token\n\n            // FIXME Do not rely on window.location because (1) React Native\n            // does not have a window.location by default and (2) here we cannot\n            // know for sure that query/search has not be stripped from\n            // window.location by the time the following executes.\n            const { location } = window;\n\n            if (anonymousdomain) {\n                const search = location && location.search;\n\n                if ((search && search.indexOf('login=true') !== -1)\n                        || this.token) {\n                    configDomain = domain;\n                }\n            }\n\n            // eslint-disable-next-line no-param-reassign\n            jid = configDomain || (location && location.hostname);\n        }\n\n        return this._connect(jid, password);\n    }\n\n    /**\n     * Joins or creates a muc with the provided jid, created from the passed\n     * in room name and muc host and onCreateResource result.\n     *\n     * @param {string} roomName - The name of the muc to join.\n     * @param {Object} options - Configuration for how to join the muc.\n     * @param {Function} [onCreateResource] - Callback to invoke when a resource\n     * is to be added to the jid.\n     * @returns {Promise} Resolves with an instance of a strophe muc.\n     */\n    createRoom(roomName, options, onCreateResource) {\n        // There are cases (when using subdomain) where muc can hold an uppercase part\n        let roomjid = `${roomName}@${options.customDomain\n            ? options.customDomain : this.options.hosts.muc.toLowerCase()}/`;\n\n        const mucNickname = onCreateResource\n            ? onCreateResource(this.connection.jid, this.authenticatedUser)\n            : RandomUtil.randomHexString(8).toLowerCase();\n\n        logger.info(`JID ${this.connection.jid} using MUC nickname ${mucNickname}`);\n        roomjid += mucNickname;\n\n        return this.connection.emuc.createRoom(roomjid, null, options);\n    }\n\n    /**\n     * Returns the jid of the participant associated with the Strophe connection.\n     *\n     * @returns {string} The jid of the participant.\n     */\n    getJid() {\n        return this.connection.jid;\n    }\n\n    /**\n     * Returns the logs from strophe.jingle.\n     * @returns {Object}\n     */\n    getJingleLog() {\n        const jingle = this.connection.jingle;\n\n\n        return jingle ? jingle.getLog() : {};\n    }\n\n    /**\n     * Returns the logs from strophe.\n     */\n    getXmppLog() {\n        return (this.connection.logger || {}).log || null;\n    }\n\n    /**\n     *\n     */\n    dial(...args) {\n        this.connection.rayo.dial(...args);\n    }\n\n    /**\n     * Pings the server.\n     * @param timeout how many ms before a timeout should occur.\n     * @returns {Promise} resolved on ping success and reject on an error or\n     * a timeout.\n     */\n    ping(timeout) {\n        return new Promise((resolve, reject) => {\n            this.connection.ping.ping(this.connection.pingDomain, resolve, reject, timeout);\n        });\n    }\n\n    /**\n     *\n     */\n    getSessions() {\n        return this.connection.jingle.sessions;\n    }\n\n    /**\n     * Disconnects this from the XMPP server (if this is connected).\n     *\n     * @param {Object} ev - Optionally, the event which triggered the necessity to\n     * disconnect from the XMPP server (e.g. beforeunload, unload).\n     * @returns {Promise} - Resolves when the disconnect process is finished or rejects with an error.\n     */\n    disconnect(ev) {\n        if (this.disconnectInProgress) {\n            return this.disconnectInProgress;\n        } else if (!this.connection) {\n            return Promise.resolve();\n        }\n\n        this.disconnectInProgress = new Promise(resolve => {\n            const disconnectListener = (credentials, status) => {\n                if (status === Strophe.Status.DISCONNECTED) {\n                    resolve();\n                    this.eventEmitter.removeListener(XMPPEvents.CONNECTION_STATUS_CHANGED, disconnectListener);\n                }\n            };\n\n            this.eventEmitter.on(XMPPEvents.CONNECTION_STATUS_CHANGED, disconnectListener);\n        });\n\n        this._cleanupXmppConnection(ev);\n\n        return this.disconnectInProgress;\n    }\n\n    /**\n     * The method is supposed to gracefully close the XMPP connection and the main goal is to make sure that the current\n     * participant will be removed from the conference XMPP MUC, so that it doesn't leave a \"ghost\" participant behind.\n     *\n     * @param {Object} ev - Optionally, the event which triggered the necessity to disconnect from the XMPP server\n     * (e.g. beforeunload, unload).\n     * @private\n     * @returns {void}\n     */\n    _cleanupXmppConnection(ev) {\n        // XXX Strophe is asynchronously sending by default. Unfortunately, that means that there may not be enough time\n        // to send an unavailable presence or disconnect at all. Switching Strophe to synchronous sending is not much of\n        // an option because it may lead to a noticeable delay in navigating away from the current location. As\n        // a compromise, we will try to increase the chances of sending an unavailable presence and/or disconnecting\n        // within the short time span that we have upon unloading by invoking flush() on the connection. We flush() once\n        // before disconnect() in order to attempt to have its unavailable presence at the top of the send queue. We\n        // flush() once more after disconnect() in order to attempt to have its unavailable presence sent as soon as\n        // possible.\n        !this.connection.isUsingWebSocket && this.connection.flush();\n\n        if (!this.connection.isUsingWebSocket && ev !== null && typeof ev !== 'undefined') {\n            const evType = ev.type;\n\n            if (evType === 'beforeunload' || evType === 'unload') {\n                // XXX Whatever we said above, synchronous sending is the best (known) way to properly disconnect from\n                // the XMPP server. Consequently, it may be fine to have the source code and comment it in or out\n                // depending on whether we want to run with it for some time.\n                this.connection.options.sync = true;\n\n                // This is needed in some browsers where sync xhr sending is disabled by default on unload.\n                if (this.connection.sendUnavailableBeacon()) {\n\n                    return;\n                }\n            }\n        }\n\n        this.connection.disconnect();\n\n        if (this.connection.options.sync !== true) {\n            this.connection.flush();\n        }\n    }\n\n    /**\n     *\n     */\n    _initStrophePlugins() {\n        const iceConfig = {\n            jvb: { iceServers: [ ] },\n            p2p: { iceServers: [ ] }\n        };\n\n        const p2pStunServers = (this.options.p2p\n            && this.options.p2p.stunServers) || DEFAULT_STUN_SERVERS;\n\n        if (Array.isArray(p2pStunServers)) {\n            logger.info('P2P STUN servers: ', p2pStunServers);\n            iceConfig.p2p.iceServers = p2pStunServers;\n        }\n\n        if (this.options.p2p && this.options.p2p.iceTransportPolicy) {\n            logger.info('P2P ICE transport policy: ',\n                this.options.p2p.iceTransportPolicy);\n\n            iceConfig.p2p.iceTransportPolicy\n                = this.options.p2p.iceTransportPolicy;\n        }\n\n        this.connection.addConnectionPlugin('emuc', new MucConnectionPlugin(this));\n        this.connection.addConnectionPlugin('jingle', new JingleConnectionPlugin(this, this.eventEmitter, iceConfig));\n        this.connection.addConnectionPlugin('rayo', new RayoConnectionPlugin());\n    }\n\n    /**\n     * Returns details about connection failure. Shard change or is it after\n     * suspend.\n     * @returns {object} contains details about a connection failure.\n     * @private\n     */\n    _getConnectionFailedReasonDetails() {\n        const details = {};\n\n        // check for moving between shard if information is available\n        if (this.options.deploymentInfo\n            && this.options.deploymentInfo.shard\n            && this.connection.lastResponseHeaders) {\n\n            // split headers by line\n            const headersArr = this.connection.lastResponseHeaders\n                .trim().split(/[\\r\\n]+/);\n            const headers = {};\n\n            headersArr.forEach(line => {\n                const parts = line.split(': ');\n                const header = parts.shift();\n                const value = parts.join(': ');\n\n                headers[header] = value;\n            });\n\n            /* eslint-disable camelcase */\n            details.shard_changed\n                = this.options.deploymentInfo.shard\n                    !== headers['x-jitsi-shard'];\n            /* eslint-enable camelcase */\n        }\n\n        /* eslint-disable camelcase */\n        // check for possible suspend\n        details.suspend_time = this.connection.ping.getPingSuspendTime();\n        details.time_since_last_success = this.connection.getTimeSinceLastSuccess();\n        /* eslint-enable camelcase */\n\n        return details;\n    }\n\n    /**\n     * Notifies speaker stats component if available that we are the new\n     * dominant speaker in the conference.\n     * @param {String} roomJid - The room jid where the speaker event occurred.\n     */\n    sendDominantSpeakerEvent(roomJid) {\n        // no speaker stats component advertised\n        if (!this.speakerStatsComponentAddress || !roomJid) {\n            return;\n        }\n\n        const msg = $msg({ to: this.speakerStatsComponentAddress });\n\n        msg.c('speakerstats', {\n            xmlns: 'http://jitsi.org/jitmeet',\n            room: roomJid })\n            .up();\n\n        this.connection.send(msg);\n    }\n\n    /**\n     * Check if the given argument is a valid JSON ENDPOINT_MESSAGE string by\n     * parsing it and checking if it has a field called 'type'.\n     *\n     * @param {string} jsonString check if this string is a valid json string\n     * and contains the special structure.\n     * @returns {boolean, object} if given object is a valid JSON string, return\n     * the json object. Otherwise, returns false.\n     */\n    tryParseJSONAndVerify(jsonString) {\n        // ignore empty strings, like message errors\n        if (!jsonString) {\n            return false;\n        }\n\n        try {\n            const json = JSON.parse(jsonString);\n\n            // Handle non-exception-throwing cases:\n            // Neither JSON.parse(false) or JSON.parse(1234) throw errors,\n            // hence the type-checking,\n            // but... JSON.parse(null) returns null, and\n            // typeof null === \"object\",\n            // so we must check for that, too.\n            // Thankfully, null is falsey, so this suffices:\n            if (json && typeof json === 'object') {\n                const type = json[JITSI_MEET_MUC_TYPE];\n\n                if (typeof type !== 'undefined') {\n                    return json;\n                }\n\n                logger.debug('parsing valid json but does not have correct '\n                    + 'structure', 'topic: ', type);\n            }\n        } catch (e) {\n            logger.error(`Error parsing json ${jsonString}`, e);\n\n            return false;\n        }\n\n        return false;\n    }\n\n    /**\n     * A private message is received, message that is not addressed to the muc.\n     * We expect private message coming from plugins component if it is\n     * enabled and running.\n     *\n     * @param {string} msg - The message.\n     */\n    _onPrivateMessage(msg) {\n        const from = msg.getAttribute('from');\n\n        if (!(from === this.speakerStatsComponentAddress\n            || from === this.conferenceDurationComponentAddress\n            || from === this.avModerationComponentAddress)) {\n            return true;\n        }\n\n        const jsonMessage = $(msg).find('>json-message')\n            .text();\n        const parsedJson = this.tryParseJSONAndVerify(jsonMessage);\n\n        if (!parsedJson) {\n            return true;\n        }\n\n        if (parsedJson[JITSI_MEET_MUC_TYPE] === 'speakerstats' && parsedJson.users) {\n            this.eventEmitter.emit(XMPPEvents.SPEAKER_STATS_RECEIVED, parsedJson.users);\n        } else if (parsedJson[JITSI_MEET_MUC_TYPE] === 'conference_duration' && parsedJson.created_timestamp) {\n            this.eventEmitter.emit(XMPPEvents.CONFERENCE_TIMESTAMP_RECEIVED, parsedJson.created_timestamp);\n        } else if (parsedJson[JITSI_MEET_MUC_TYPE] === 'av_moderation') {\n            this.eventEmitter.emit(XMPPEvents.AV_MODERATION_RECEIVED, parsedJson);\n        }\n\n        return true;\n    }\n}\n","/**\n * Status that video SIP GW service is available.\n * @type {string}\n */\nexport const STATUS_AVAILABLE = 'available';\n\n/**\n * Status that video SIP GW service is not available.\n * @type {string}\n */\nexport const STATUS_UNDEFINED = 'undefined';\n\n/**\n * Status that video SIP GW service is available but there are no free nodes\n * at the moment to serve new requests.\n * @type {string}\n */\nexport const STATUS_BUSY = 'busy';\n\n/**\n * Video SIP GW session state, currently running.\n * @type {string}\n */\nexport const STATE_ON = 'on';\n\n/**\n * Video SIP GW session state, currently stopped and not running.\n * @type {string}\n */\nexport const STATE_OFF = 'off';\n\n/**\n * Video SIP GW session state, currently is starting.\n * @type {string}\n */\nexport const STATE_PENDING = 'pending';\n\n/**\n * Video SIP GW session state, has observed some issues and is retrying at the\n * moment.\n * @type {string}\n */\nexport const STATE_RETRYING = 'retrying';\n\n/**\n * Video SIP GW session state, tried to start but it failed.\n * @type {string}\n */\nexport const STATE_FAILED = 'failed';\n\n/**\n * Error on trying to create video SIP GW session in conference where\n * there is no room connection (hasn't joined or has left the room).\n * @type {string}\n */\nexport const ERROR_NO_CONNECTION = 'error_no_connection';\n\n/**\n * Error on trying to create video SIP GW session with address for which\n * there is an already created session.\n * @type {string}\n */\nexport const ERROR_SESSION_EXISTS = 'error_session_already_exists';\n","/**\n * The events for the connection.\n */\n\n/**\n * Indicates that the connection has been disconnected. The event provides\n * the following parameters to its listeners:\n *\n * @param msg {string} a message associated with the disconnect such as the\n * last (known) error message\n */\nexport const CONNECTION_DISCONNECTED = 'connection.connectionDisconnected';\n\n/**\n * Indicates that the connection has been established. The event provides\n * the following parameters to its listeners:\n *\n * @param id {string} the ID of the local endpoint/participant/peer (within\n * the context of the established connection)\n */\nexport const CONNECTION_ESTABLISHED = 'connection.connectionEstablished';\n\n/**\n * Indicates that the connection has been failed for some reason. The event\n * provides the following parameters to its listeners:\n *\n * @param errType {JitsiConnectionErrors} the type of error associated with\n * the failure\n * @param errReason {string} the error (message) associated with the failure\n * @param credentials {object} the credentials used to connect (if any)\n * @param errReasonDetails {object} an optional object with details about\n * the error, like shard moving, suspending. Used for analytics purposes.\n */\nexport const CONNECTION_FAILED = 'connection.connectionFailed';\n\n/**\n * Indicates that the performed action cannot be executed because the\n * connection is not in the correct state(connected, disconnected, etc.)\n */\nexport const WRONG_STATE = 'connection.wrongState';\n\n/**\n * Indicates that the display name is required over this connection and need to be supplied when\n * joining the room.\n * There are cases like lobby room where display name is required.\n */\nexport const DISPLAY_NAME_REQUIRED = 'connection.display_name_required';\n","/**\n * Notifies about audio level in RTP statistics by SSRC.\n *\n * @param ssrc - The synchronization source identifier (SSRC) of the\n * endpoint/participant whose audio level is being reported.\n * @param {number} audioLevel - The audio level of <tt>ssrc</tt> according to\n * RTP statistics.\n * @param {boolean} isLocal - <tt>true</tt> if <tt>ssrc</tt> identifies the\n * local endpoint/participant; otherwise, <tt>false</tt>.\n */\nexport const AUDIO_LEVEL = 'statistics.audioLevel';\n\n/**\n * An event fired just before the statistics module gets disposes and it's\n * the last chance to submit some logs that will end up in stats services like\n * CallStats (if enabled).\n */\nexport const BEFORE_DISPOSED = 'statistics.before_disposed';\n\n/**\n * An event carrying all statistics by ssrc.\n */\nexport const BYTE_SENT_STATS = 'statistics.byte_sent_stats';\n\n/**\n * An event carrying connection statistics.\n *\n * @param {object} connectionStats - The connection statistics carried by the\n * event such as <tt>bandwidth</tt>, <tt>bitrate</tt>, <tt>packetLoss</tt>,\n * <tt>resolution</tt>, and <tt>transport</tt>.\n */\nexport const CONNECTION_STATS = 'statistics.connectionstats';\n\n/**\n * An event carrying performance stats.\n */\nexport const LONG_TASKS_STATS = 'statistics.long_tasks_stats';\n","import { jitsiLocalStorage } from '@jitsi/js-utils';\nimport { getLogger } from 'jitsi-meet-logger';\n\nconst logger = getLogger(__filename);\n\nimport UsernameGenerator from '../util/UsernameGenerator';\n\nlet _callStatsUserName;\n\nlet _machineId;\n\n/**\n *\n */\nexport default {\n\n    /**\n     * The storage used to store the settings.\n     */\n    _storage: jitsiLocalStorage,\n\n    /**\n     * Initializes the Settings class.\n     *\n     * @param {Storage|undefined} externalStorage - Object that implements the Storage interface. This object will be\n     * used for storing data instead of jitsiLocalStorage if specified.\n     */\n    init(externalStorage) {\n        this._storage = externalStorage || jitsiLocalStorage;\n    },\n\n    /**\n     * Returns fake username for callstats\n     * @returns {string} fake username for callstats\n     */\n    get callStatsUserName() {\n        if (!_callStatsUserName) {\n            _callStatsUserName = this._storage.getItem('callStatsUserName');\n            if (!_callStatsUserName) {\n                _callStatsUserName = generateCallStatsUserName();\n                this._storage.setItem('callStatsUserName', _callStatsUserName);\n            }\n        }\n\n        return _callStatsUserName;\n    },\n\n    /**\n     * Returns current machine id.\n     * @returns {string} machine id\n     */\n    get machineId() {\n        if (!_machineId) {\n            const amDid = this._storage.getItem('billingId');\n\n            _machineId = amDid || this._storage.getItem('jitsiMeetId');\n\n            if (amDid) {\n                this._storage.setItem('jitsiMeetId', amDid);\n            } else if (!_machineId) {\n                _machineId = generateJitsiMeetId();\n                this._storage.setItem('jitsiMeetId', _machineId);\n            }\n        }\n\n        return _machineId;\n    },\n\n    /**\n     * Returns current session id.\n     * @returns {string} current session id\n     */\n    get sessionId() {\n        // We may update sessionId in localStorage from another JitsiConference\n        // instance and that's why we should always re-read it.\n        return this._storage.getItem('sessionId');\n    },\n\n    /**\n     * Save current session id.\n     * @param {string} sessionId session id\n     */\n    set sessionId(sessionId) {\n        if (sessionId) {\n            this._storage.setItem('sessionId', sessionId);\n        } else {\n            this._storage.removeItem('sessionId');\n        }\n    }\n};\n\n/**\n * Generate fake username for callstats.\n * @returns {string} fake random username\n */\nfunction generateCallStatsUserName() {\n    const username = UsernameGenerator.generateUsername();\n\n    logger.log('generated callstats uid', username);\n\n    return username;\n}\n\n/**\n * Generate unique id.\n * @returns {string} random unique id\n */\nfunction generateJitsiMeetId() {\n    const jitsiMeetId = generateUniqueId();\n\n    logger.log('generated id', jitsiMeetId);\n\n    return jitsiMeetId;\n}\n\n/**\n *\n */\nfunction generateUniqueId() {\n    return _p8() + _p8() + _p8() + _p8();\n}\n\n/**\n *\n */\nfunction _p8() {\n    return `${Math.random().toString(16)}000000000`.substr(2, 8);\n}\n","import * as transform from 'sdp-transform';\n\n/**\n * Parses the primary SSRC of given SSRC group.\n * @param {object} group the SSRC group object as defined by the 'sdp-transform'\n * @return {Number} the primary SSRC number\n */\nexport function parsePrimarySSRC(group) {\n    return parseInt(group.ssrcs.split(' ')[0], 10);\n}\n\n/**\n * Parses the secondary SSRC of given SSRC group.\n * @param {object} group the SSRC group object as defined by the 'sdp-transform'\n * @return {Number} the secondary SSRC number\n */\nexport function parseSecondarySSRC(group) {\n    return parseInt(group.ssrcs.split(' ')[1], 10);\n}\n\n/**\n * Tells how many distinct SSRCs are contained in given media line.\n * @param {Object} mLine the media line object as defined by 'sdp-transform' lib\n * @return {number}\n */\nfunction _getSSRCCount(mLine) {\n    if (!mLine.ssrcs) {\n        return 0;\n    }\n\n    return mLine.ssrcs\n        .map(ssrcInfo => ssrcInfo.id)\n        .filter((ssrc, index, array) => array.indexOf(ssrc) === index)\n        .length;\n}\n\n/**\n * A wrapper around 'sdp-transform' media description object which provides\n * utility methods for common SDP/SSRC related operations.\n */\nclass MLineWrap {\n\n    /**\n     * Creates new <tt>MLineWrap</t>>\n     * @param {Object} mLine the media line object as defined by 'sdp-transform'\n     * lib.\n     */\n    constructor(mLine) {\n        if (!mLine) {\n            throw new Error('mLine is undefined');\n        }\n\n        this.mLine = mLine;\n    }\n\n    /**\n     * Getter for the mLine's \"ssrcs\" array. If the array was undefined an empty\n     * one will be preassigned.\n     *\n     * @return {Array<Object>} an array of 'sdp-transform' SSRC attributes\n     * objects.\n     */\n    get ssrcs() {\n        if (!this.mLine.ssrcs) {\n            this.mLine.ssrcs = [];\n        }\n\n        return this.mLine.ssrcs;\n    }\n\n    /**\n     * Setter for the mLine's \"ssrcs\" array.\n     *\n     * @param {Array<Object>} ssrcs an array of 'sdp-transform' SSRC attributes\n     * objects.\n     */\n    set ssrcs(ssrcs) {\n        this.mLine.ssrcs = ssrcs;\n    }\n\n    /**\n     * Returns the direction of the underlying media description.\n     * @return {string} the media direction name as defined in the SDP.\n     */\n    get direction() {\n        return this.mLine.direction;\n    }\n\n    /**\n     * Modifies the direction of the underlying media description.\n     * @param {string} direction the new direction to be set\n     */\n    set direction(direction) {\n        this.mLine.direction = direction;\n    }\n\n    /**\n     * Exposes the SSRC group array of the underlying media description object.\n     * @return {Array.<Object>}\n     */\n    get ssrcGroups() {\n        if (!this.mLine.ssrcGroups) {\n            this.mLine.ssrcGroups = [];\n        }\n\n        return this.mLine.ssrcGroups;\n    }\n\n    /**\n     * Modifies the SSRC groups array of the underlying media description\n     * object.\n     * @param {Array.<Object>} ssrcGroups\n     */\n    set ssrcGroups(ssrcGroups) {\n        this.mLine.ssrcGroups = ssrcGroups;\n    }\n\n    /**\n     * Obtains value from SSRC attribute.\n     * @param {number} ssrcNumber the SSRC number for which attribute is to be\n     * found\n     * @param {string} attrName the name of the SSRC attribute to be found.\n     * @return {string|undefined} the value of SSRC attribute or\n     * <tt>undefined</tt> if no such attribute exists.\n     */\n    getSSRCAttrValue(ssrcNumber, attrName) {\n        const attribute = this.ssrcs.find(\n            ssrcObj => ssrcObj.id === ssrcNumber\n            && ssrcObj.attribute === attrName);\n\n\n        return attribute && attribute.value;\n    }\n\n    /**\n     * Removes all attributes for given SSRC number.\n     * @param {number} ssrcNum the SSRC number for which all attributes will be\n     * removed.\n     */\n    removeSSRC(ssrcNum) {\n        if (!this.mLine.ssrcs || !this.mLine.ssrcs.length) {\n            return;\n        }\n\n        this.mLine.ssrcs\n            = this.mLine.ssrcs.filter(ssrcObj => ssrcObj.id !== ssrcNum);\n    }\n\n    /**\n     * Adds SSRC attribute\n     * @param {object} ssrcObj the SSRC attribute object as defined in\n     * the 'sdp-transform' lib.\n     */\n    addSSRCAttribute(ssrcObj) {\n        this.ssrcs.push(ssrcObj);\n    }\n\n    /**\n     * Finds a SSRC group matching both semantics and SSRCs in order.\n     * @param {string} semantics the name of the semantics\n     * @param {string} [ssrcs] group SSRCs as a string (like it's defined in\n     * SSRC group object of the 'sdp-transform' lib) e.g. \"1232546 342344 25434\"\n     * @return {object|undefined} the SSRC group object or <tt>undefined</tt> if\n     * not found.\n     */\n    findGroup(semantics, ssrcs) {\n        return this.ssrcGroups.find(\n            group =>\n                group.semantics === semantics\n                    && (!ssrcs || ssrcs === group.ssrcs));\n    }\n\n    /**\n     * Finds all groups matching given semantic's name.\n     * @param {string} semantics the name of the semantics\n     * @return {Array.<object>} an array of SSRC group objects as defined by\n     * the 'sdp-transform' lib.\n     */\n    findGroups(semantics) {\n        return this.ssrcGroups.filter(\n            group => group.semantics === semantics);\n    }\n\n    /**\n     * Finds all groups matching given semantic's name and group's primary SSRC.\n     * @param {string} semantics the name of the semantics\n     * @param {number} primarySSRC the primary SSRC number to be matched\n     * @return {Object} SSRC group object as defined by the 'sdp-transform' lib.\n     */\n    findGroupByPrimarySSRC(semantics, primarySSRC) {\n        return this.ssrcGroups.find(\n            group => group.semantics === semantics\n                && parsePrimarySSRC(group) === primarySSRC);\n    }\n\n    /**\n     * @param {string|null} msid the media stream id or <tt>null</tt> to match\n     * the first SSRC object with any 'msid' value.\n     * @return {Object|undefined} the SSRC object as defined by 'sdp-transform'\n     * lib.\n     */\n    findSSRCByMSID(msid) {\n        return this.ssrcs.find(\n            ssrcObj => ssrcObj.attribute === 'msid'\n                && (msid === null || ssrcObj.value === msid));\n    }\n\n    /**\n     * Gets the SSRC count for the underlying media description.\n     * @return {number}\n     */\n    getSSRCCount() {\n        return _getSSRCCount(this.mLine);\n    }\n\n    /**\n     * Checks whether the underlying media description contains any SSRC groups.\n     * @return {boolean} <tt>true</tt> if there are any SSRC groups or\n     * <tt>false</tt> otherwise.\n     */\n    containsAnySSRCGroups() {\n        return this.mLine.ssrcGroups !== undefined;\n    }\n\n    /**\n     * Finds the primary video SSRC.\n     * @returns {number|undefined} the primary video ssrc\n     * @throws Error if the underlying media description is not a video\n     */\n    getPrimaryVideoSsrc() {\n        const mediaType = this.mLine.type;\n\n        if (mediaType !== 'video') {\n            throw new Error(\n                `getPrimarySsrc doesn't work with '${mediaType}'`);\n        }\n\n        const numSsrcs = _getSSRCCount(this.mLine);\n\n        if (numSsrcs === 1) {\n            // Not using \"ssrcs\" getter on purpose here\n            return this.mLine.ssrcs[0].id;\n        }\n\n        // Look for a SIM, FID, or FEC-FR group\n        if (this.mLine.ssrcGroups) {\n            const simGroup = this.findGroup('SIM');\n\n            if (simGroup) {\n                return parsePrimarySSRC(simGroup);\n            }\n            const fidGroup = this.findGroup('FID');\n\n            if (fidGroup) {\n                return parsePrimarySSRC(fidGroup);\n            }\n            const fecGroup = this.findGroup('FEC-FR');\n\n            if (fecGroup) {\n                return parsePrimarySSRC(fecGroup);\n            }\n        }\n\n    }\n\n    /**\n     * Obtains RTX SSRC from the underlying video description (the\n     * secondary SSRC of the first \"FID\" group found)\n     * @param {number} primarySsrc the video ssrc for which to find the\n     * corresponding rtx ssrc\n     * @returns {number|undefined} the rtx ssrc (or undefined if there isn't\n     * one)\n     */\n    getRtxSSRC(primarySsrc) {\n        const fidGroup = this.findGroupByPrimarySSRC('FID', primarySsrc);\n\n\n        return fidGroup && parseSecondarySSRC(fidGroup);\n    }\n\n    /**\n     * Obtains all SSRCs contained in the underlying media description.\n     * @return {Array.<number>} an array with all SSRC as numbers.\n     */\n    getSSRCs() {\n        return this.ssrcs\n            .map(ssrcInfo => ssrcInfo.id)\n            .filter((ssrc, index, array) => array.indexOf(ssrc) === index);\n    }\n\n    /**\n     * Obtains primary video SSRCs.\n     * @return {Array.<number>} an array of all primary video SSRCs as numbers.\n     * @throws Error if the wrapped media description is not a video.\n     */\n    getPrimaryVideoSSRCs() {\n        const mediaType = this.mLine.type;\n\n        if (mediaType !== 'video') {\n            throw new Error(\n                `getPrimaryVideoSSRCs doesn't work with ${mediaType}`);\n        }\n\n        const videoSSRCs = this.getSSRCs();\n\n        for (const ssrcGroupInfo of this.ssrcGroups) {\n            // Right now, FID and FEC-FR groups are the only ones we parse to\n            // disqualify streams.  If/when others arise we'll\n            // need to add support for them here\n            if (ssrcGroupInfo.semantics === 'FID'\n                    || ssrcGroupInfo.semantics === 'FEC-FR') {\n                // secondary streams should be filtered out\n                const secondarySsrc = parseSecondarySSRC(ssrcGroupInfo);\n\n                videoSSRCs.splice(\n                    videoSSRCs.indexOf(secondarySsrc), 1);\n            }\n        }\n\n        return videoSSRCs;\n    }\n\n    /**\n     * Dumps all SSRC groups of this media description to JSON.\n     */\n    dumpSSRCGroups() {\n        return JSON.stringify(this.mLine.ssrcGroups);\n    }\n\n    /**\n     * Removes all SSRC groups which contain given SSRC number at any position.\n     * @param {number} ssrc the SSRC for which all matching groups are to be\n     * removed.\n     */\n    removeGroupsWithSSRC(ssrc) {\n        if (!this.mLine.ssrcGroups) {\n            return;\n        }\n\n        this.mLine.ssrcGroups = this.mLine.ssrcGroups\n            .filter(groupInfo => groupInfo.ssrcs.indexOf(`${ssrc}`) === -1);\n    }\n\n    /**\n     * Removes groups that match given semantics.\n     * @param {string} semantics e.g. \"SIM\" or \"FID\"\n     */\n    removeGroupsBySemantics(semantics) {\n        if (!this.mLine.ssrcGroups) {\n            return;\n        }\n\n        this.mLine.ssrcGroups\n            = this.mLine.ssrcGroups\n                .filter(groupInfo => groupInfo.semantics !== semantics);\n    }\n\n    /**\n     * Replaces SSRC (does not affect SSRC groups, but only attributes).\n     * @param {number} oldSSRC the old SSRC number\n     * @param {number} newSSRC the new SSRC number\n     */\n    replaceSSRC(oldSSRC, newSSRC) {\n        if (this.mLine.ssrcs) {\n            this.mLine.ssrcs.forEach(ssrcInfo => {\n                if (ssrcInfo.id === oldSSRC) {\n                    ssrcInfo.id = newSSRC;\n                }\n            });\n        }\n    }\n\n    /**\n     * Adds given SSRC group to this media description.\n     * @param {object} group the SSRC group object as defined by\n     * the 'sdp-transform' lib.\n     */\n    addSSRCGroup(group) {\n        this.ssrcGroups.push(group);\n    }\n}\n\n/**\n * Utility class for SDP manipulation using the 'sdp-transform' library.\n *\n * Typical use usage scenario:\n *\n * const transformer = new SdpTransformWrap(rawSdp);\n * const videoMLine = transformer.selectMedia('video);\n * if (videoMLine) {\n *     videoMLiner.addSSRCAttribute({\n *         id: 2342343,\n *         attribute: \"cname\",\n *         value: \"someCname\"\n *     });\n *     rawSdp = transformer.toRawSdp();\n * }\n */\nexport class SdpTransformWrap {\n\n    /**\n     * Creates new instance and parses the raw SDP into objects using\n     * 'sdp-transform' lib.\n     * @param {string} rawSDP the SDP in raw text format.\n     */\n    constructor(rawSDP) {\n        this.parsedSDP = transform.parse(rawSDP);\n    }\n\n    /**\n     * Selects the first media SDP of given name.\n     * @param {string} mediaType the name of the media e.g. 'audio', 'video',\n     * 'data'.\n     * @return {MLineWrap|null} return {@link MLineWrap} instance for the media\n     * line or <tt>null</tt> if not found. The object returned references\n     * the underlying SDP state held by this <tt>SdpTransformWrap</tt> instance\n     * (it's not a copy).\n     */\n    selectMedia(mediaType) {\n        const selectedMLine\n            = this.parsedSDP.media.find(mLine => mLine.type === mediaType);\n\n        return selectedMLine ? new MLineWrap(selectedMLine) : null;\n    }\n\n    /**\n     * Converts the currently stored SDP state in this instance to raw text SDP\n     * format.\n     * @return {string}\n     */\n    toRawSDP() {\n        return transform.write(this.parsedSDP);\n    }\n}\n","\n/**\n * The method will increase the given number by 1. If the given counter is equal\n * or greater to {@link Number.MAX_SAFE_INTEGER} then it will be rolled back to\n * 1.\n * @param {number} number - An integer counter value to be incremented.\n * @return {number} the next counter value increased by 1 (see the description\n * above for exception).\n */\nexport function safeCounterIncrement(number) {\n    let nextValue = number;\n\n    if (number >= Number.MAX_SAFE_INTEGER) {\n        nextValue = 0;\n    }\n\n    return nextValue + 1;\n}\n\n/**\n * Calculates the average value of am Array of numbers.\n *\n * @param {Float32Array} valueArray - Array of numbers.\n * @returns {number} - Number array average.\n */\nexport function calculateAverage(valueArray) {\n    return valueArray.length > 0 ? valueArray.reduce((a, b) => a + b) / valueArray.length : 0;\n}\n\n/**\n * Calculates a unique hash for a given string similar to Java's\n * implementation of String.hashCode()\n *\n * @param {String} string - String whose hash has to be calculated.\n * @returns {number} - Unique hash code calculated.\n */\nexport function hashString(string) {\n    let hash = 0;\n\n    for (let i = 0; i < string.length; i++) {\n        hash += Math.pow(string.charCodeAt(i) * 31, string.length - i);\n\n        /* eslint-disable no-bitwise */\n        hash = hash & hash; // Convert to 32bit integer\n    }\n\n    return Math.abs(hash);\n}\n\n/**\n * Returns only the positive values from an array of numbers.\n *\n * @param {Float32Array} valueArray - Array of vad scores.\n * @returns {Array} - Array of positive numbers.\n */\nexport function filterPositiveValues(valueArray) {\n    return valueArray.filter(value => value >= 0);\n}\n\n/**\n * This class calculates a simple running average that continually changes\n * as more data points are collected and added.\n */\nexport class RunningAverage {\n    /**\n     * Creates an instance of the running average calculator.\n     */\n    constructor() {\n        this.average = 0;\n        this.n = 0;\n    }\n\n    /**\n     * Adds a new data point to the existing set of values and recomputes\n     * the running average.\n     * @param {number} value\n     * @returns {void}\n     */\n    addNext(value) {\n        if (typeof value !== 'number') {\n            return;\n        }\n        this.n += 1;\n        this.average = this.average + ((value - this.average) / this.n);\n    }\n\n    /**\n     * Obtains the average value for the current subset of values.\n     * @returns {number} - computed average.\n     */\n    getAverage() {\n        return this.average;\n    }\n}\n","/**\n * Indicates that the local connection statistics were updated.\n */\nexport const LOCAL_STATS_UPDATED = 'cq.local_stats_updated';\n\n/**\n * Indicates that the connection statistics for a particular remote participant\n * were updated.\n */\nexport const REMOTE_STATS_UPDATED = 'cq.remote_stats_updated';\n","/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = isEqual;\n","/**\n * The pending Jingle session state which means the session as defined in\n * XEP-0166(before 'session-invite/session-accept' took place).\n *\n * @type {string}\n */\nexport const PENDING = 'pending';\n\n/**\n * The active Jingle session state as defined in XEP-0166\n * (after 'session-invite'/'session-accept').\n *\n * @type {string}\n */\nexport const ACTIVE = 'active';\n\n/**\n * The ended Jingle session state as defined in XEP-0166\n * (after 'session-terminate').\n * @type {string}\n */\nexport const ENDED = 'ended';\n","/**\n * The know jingle actions that can be sent and should be acted upon by\n * {@code ProxyConnectionService} and {@code ProxyConnectionPC}.\n */\nexport const ACTIONS = {\n    ACCEPT: 'session-accept',\n    CONNECTION_ERROR: 'connection-error-encountered',\n    INITIATE: 'session-initiate',\n    TERMINATE: 'session-terminate',\n    TRANSPORT_INFO: 'transport-info',\n    UNAVAILABLE: 'unavailable'\n};\n","/* global callstats */\n\nimport browser from '../browser';\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\n\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\n\n/**\n * We define enumeration of wrtcFuncNames as we need them before\n * callstats is initialized to queue events.\n * @const\n * @see http://www.callstats.io/api/#enumeration-of-wrtcfuncnames\n */\nconst wrtcFuncNames = {\n    createOffer: 'createOffer',\n    createAnswer: 'createAnswer',\n    setLocalDescription: 'setLocalDescription',\n    setRemoteDescription: 'setRemoteDescription',\n    addIceCandidate: 'addIceCandidate',\n    getUserMedia: 'getUserMedia',\n    iceConnectionFailure: 'iceConnectionFailure',\n    signalingError: 'signalingError',\n    applicationLog: 'applicationLog'\n};\n\n/**\n * We define enumeration of fabricEvent as we need them before\n * callstats is initialized to queue events.\n * @const\n * @see http://www.callstats.io/api/#enumeration-of-fabricevent\n */\nconst fabricEvent = {\n    fabricHold: 'fabricHold',\n    fabricResume: 'fabricResume',\n    audioMute: 'audioMute',\n    audioUnmute: 'audioUnmute',\n    videoPause: 'videoPause',\n    videoResume: 'videoResume',\n    fabricUsageEvent: 'fabricUsageEvent',\n    fabricStats: 'fabricStats',\n    fabricTerminated: 'fabricTerminated',\n    screenShareStart: 'screenShareStart',\n    screenShareStop: 'screenShareStop',\n    dominantSpeaker: 'dominantSpeaker',\n    activeDeviceList: 'activeDeviceList'\n};\n\n/**\n * The user id to report to callstats as destination.\n * @type {string}\n */\nconst DEFAULT_REMOTE_USER = 'jitsi';\n\n/**\n * Type of pending reports, can be event or an error.\n * @type {{ERROR: string, EVENT: string}}\n */\nconst reportType = {\n    ERROR: 'error',\n    EVENT: 'event',\n    MST_WITH_USERID: 'mstWithUserID'\n};\n\n/**\n * Set of currently existing {@link CallStats} instances.\n * @type {Set<CallStats>}\n */\nlet _fabrics;\n\n/**\n * An instance of this class is a wrapper for the CallStats API fabric. A fabric\n * reports one peer connection to the CallStats backend and is allocated with\n * {@link callstats.addNewFabric}. It has a bunch of instance methods for\n * reporting various events. A fabric is considered disposed when\n * {@link CallStats.sendTerminateEvent} is executed.\n *\n * Currently only one backend instance can be created ever and it's done using\n * {@link CallStats.initBackend}. At the time of this writing there is no way to\n * explicitly shutdown the backend, but it's supposed to close it's connection\n * automatically, after all fabrics have been terminated.\n */\nexport default class CallStats {\n    /**\n     * A callback passed to {@link callstats.addNewFabric}.\n     * @param {string} error 'success' means ok\n     * @param {string} msg some more details\n     * @private\n     */\n    static _addNewFabricCallback(error, msg) {\n        if (CallStats.backend && error !== 'success') {\n            logger.error(`Monitoring status: ${error} msg: ${msg}`);\n        }\n    }\n\n    /**\n     * Callback passed to {@link callstats.initialize} (backend initialization)\n     * @param {string} error 'success' means ok\n     * @param {String} msg\n     * @private\n     */\n    static _initCallback(error, msg) {\n        logger.log(`CallStats Status: err=${error} msg=${msg}`);\n\n        // there is no lib, nothing to report to\n        if (error !== 'success') {\n            return;\n        }\n\n        CallStats.backendInitialized = true;\n\n        // I hate that\n        let atLeastOneFabric = false;\n        let defaultInstance = null;\n\n        for (const callStatsInstance of CallStats.fabrics.values()) {\n            if (!callStatsInstance.hasFabric) {\n                logger.debug('addNewFabric - initCallback');\n                if (callStatsInstance._addNewFabric()) {\n                    atLeastOneFabric = true;\n                    if (!defaultInstance) {\n                        defaultInstance = callStatsInstance;\n                    }\n                }\n            }\n        }\n\n        if (!atLeastOneFabric) {\n            return;\n        }\n\n        CallStats._emptyReportQueue(defaultInstance);\n    }\n\n    /**\n     * Empties report queue.\n     *\n     * @param {CallStats} csInstance - The callstats instance.\n     * @private\n     */\n    static _emptyReportQueue(csInstance) {\n        // There is no conference ID nor a PeerConnection available when some of\n        // the events are scheduled on the reportsQueue, so those will be\n        // reported on the first initialized fabric.\n        const defaultConfID = csInstance.confID;\n        const defaultPC = csInstance.peerconnection;\n\n        // notify callstats about failures if there were any\n        for (const report of CallStats.reportsQueue) {\n            if (report.type === reportType.ERROR) {\n                const errorData = report.data;\n\n                CallStats._reportError(\n                    csInstance,\n                    errorData.type,\n                    errorData.error,\n                    errorData.pc || defaultPC);\n            } else if (report.type === reportType.EVENT) {\n                // if we have and event to report and we failed to add\n                // fabric this event will not be reported anyway, returning\n                // an error\n                const eventData = report.data;\n\n                CallStats.backend.sendFabricEvent(\n                    report.pc || defaultPC,\n                    eventData.event,\n                    defaultConfID,\n                    eventData.eventData);\n            } else if (report.type === reportType.MST_WITH_USERID) {\n                const data = report.data;\n\n                CallStats.backend.associateMstWithUserID(\n                    report.pc || defaultPC,\n                    data.callStatsId,\n                    defaultConfID,\n                    data.ssrc,\n                    data.usageLabel,\n                    data.containerId\n                );\n            }\n        }\n        CallStats.reportsQueue.length = 0;\n    }\n\n    /* eslint-disable max-params */\n    /**\n     * Reports an error to callstats.\n     *\n     * @param {CallStats} [cs]\n     * @param type the type of the error, which will be one of the wrtcFuncNames\n     * @param error the error\n     * @param pc the peerconnection\n     * @private\n     */\n    static _reportError(cs, type, error, pc) {\n        let _error = error;\n\n        if (!_error) {\n            logger.warn('No error is passed!');\n            _error = new Error('Unknown error');\n        }\n        if (CallStats.backendInitialized && cs) {\n            CallStats.backend.reportError(pc, cs.confID, type, _error);\n        } else {\n            CallStats.reportsQueue.push({\n                type: reportType.ERROR,\n                data: {\n                    error: _error,\n                    pc,\n                    type\n                }\n            });\n        }\n\n        // else just ignore it\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     * Reports an error to callstats.\n     *\n     * @param {CallStats} cs\n     * @param event the type of the event, which will be one of the fabricEvent\n     * @param eventData additional data to pass to event\n     * @private\n     */\n    static _reportEvent(cs, event, eventData) {\n        const pc = cs && cs.peerconnection;\n        const confID = cs && cs.confID;\n\n        if (CallStats.backendInitialized && cs) {\n            CallStats.backend.sendFabricEvent(pc, event, confID, eventData);\n        } else {\n            CallStats.reportsQueue.push({\n                confID,\n                pc,\n                type: reportType.EVENT,\n                data: { event,\n                    eventData }\n            });\n        }\n    }\n\n    /**\n     * Wraps some of the CallStats API method and logs their calls with\n     * arguments on the debug logging level. Also wraps some of the backend\n     * methods execution into try catch blocks to not crash the app in case\n     * there is a problem with the backend itself.\n     * @param {callstats} theBackend\n     * @private\n     */\n    static _traceAndCatchBackendCalls(theBackend) {\n        const tryCatchMethods = [\n            'associateMstWithUserID',\n            'sendFabricEvent',\n            'sendUserFeedback'\n\n            // 'reportError', - this one needs special handling - see code below\n        ];\n\n        for (const methodName of tryCatchMethods) {\n            const originalMethod = theBackend[methodName];\n\n            theBackend[methodName] = function(...theArguments) {\n                try {\n                    return originalMethod.apply(theBackend, theArguments);\n                } catch (e) {\n                    GlobalOnErrorHandler.callErrorHandler(e);\n                }\n            };\n        }\n        const debugMethods = [\n            'associateMstWithUserID',\n            'sendFabricEvent',\n            'sendUserFeedback'\n\n            // 'reportError', - this one needs special handling - see code below\n        ];\n\n        for (const methodName of debugMethods) {\n            const originalMethod = theBackend[methodName];\n\n            theBackend[methodName] = function(...theArguments) {\n                logger.debug(methodName, theArguments);\n                originalMethod.apply(theBackend, theArguments);\n            };\n        }\n        const originalReportError = theBackend.reportError;\n\n        /* eslint-disable max-params */\n        theBackend.reportError = function(pc, cs, type, ...args) {\n            // Logs from the logger are submitted on the applicationLog event\n            // \"type\". Logging the arguments on the logger will create endless\n            // loop, because it will put all the logs to the logger queue again.\n            if (type === wrtcFuncNames.applicationLog) {\n                // NOTE otherArguments are not logged to the console on purpose\n                // to not log the whole log batch\n                // FIXME check the current logging level (currently not exposed\n                // by the logger implementation)\n                // NOTE it is not safe to log whole objects on react-native as\n                // those contain too many circular references and may crash\n                // the app.\n                if (!browser.isReactNative()) {\n                    console && console.debug('reportError', pc, cs, type);\n                }\n            } else {\n                logger.debug('reportError', pc, cs, type, ...args);\n            }\n            try {\n                originalReportError.call(theBackend, pc, cs, type, ...args);\n            } catch (exception) {\n                if (type === wrtcFuncNames.applicationLog) {\n                    console && console.error('reportError', exception);\n                } else {\n                    GlobalOnErrorHandler.callErrorHandler(exception);\n                }\n            }\n        };\n\n        /* eslint-enable max-params */\n    }\n\n    /**\n     * Returns the Set with the currently existing {@link CallStats} instances.\n     * Lazily initializes the Set to allow any Set polyfills to be applied.\n     * @type {Set<CallStats>}\n     */\n    static get fabrics() {\n        if (!_fabrics) {\n            _fabrics = new Set();\n        }\n\n        return _fabrics;\n    }\n\n    /**\n     * Initializes the CallStats backend. Should be called only if\n     * {@link CallStats.isBackendInitialized} returns <tt>false</tt>.\n     * @param {object} options\n     * @param {String} options.callStatsID CallStats credentials - ID\n     * @param {String} options.callStatsSecret CallStats credentials - secret\n     * @param {string} options.aliasName the <tt>aliasName</tt> part of\n     * the <tt>userID</tt> aka endpoint ID, see CallStats docs for more info.\n     * @param {string} options.userName the <tt>userName</tt> part of\n     * the <tt>userID</tt> aka display name, see CallStats docs for more info.\n     *\n     */\n    static initBackend(options) {\n        if (CallStats.backend) {\n            throw new Error('CallStats backend has been initialized already!');\n        }\n        try {\n            const CallStatsBackend = callstats;\n\n            CallStats.backend = new CallStatsBackend();\n            CallStats._traceAndCatchBackendCalls(CallStats.backend);\n            CallStats.userID = {\n                aliasName: options.aliasName,\n                userName: options.userName\n            };\n            CallStats.callStatsID = options.callStatsID;\n            CallStats.callStatsSecret = options.callStatsSecret;\n\n            let configParams;\n\n            if (options.applicationName) {\n                configParams = {\n                    applicationVersion:\n                        `${options.applicationName} (${\n                            browser.getName()})`\n                };\n            }\n\n            if (options.confID) {\n                // we first check is there a tenant in the confID\n                const match = options.confID.match(/.*\\/(.*)\\/.*/);\n\n                // if there is no tenant, we will just set '/'\n                configParams.siteID = options.siteID || (match && match[1]) || '/';\n            }\n\n            // userID is generated or given by the origin server\n            CallStats.backend.initialize(\n                CallStats.callStatsID,\n                CallStats.callStatsSecret,\n                CallStats.userID,\n                CallStats._initCallback,\n                undefined,\n                configParams);\n\n            const getWiFiStatsMethod = options.getWiFiStatsMethod;\n\n            if (getWiFiStatsMethod) {\n                CallStats.backend.attachWifiStatsHandler(getWiFiStatsMethod);\n\n                getWiFiStatsMethod().then(result => {\n                    if (result) {\n                        logger.info('Reported wifi addresses:'\n                            , JSON.parse(result).addresses);\n                    }\n                })\n                .catch(() => {});// eslint-disable-line no-empty-function\n            }\n\n            return true;\n        } catch (e) {\n            // The callstats.io API failed to initialize (e.g. because its\n            // download did not succeed in general or on time). Further attempts\n            // to utilize it cannot possibly succeed.\n            GlobalOnErrorHandler.callErrorHandler(e);\n            CallStats.backend = null;\n            logger.error(e);\n\n            return false;\n        }\n    }\n\n    /**\n     * Checks if the CallStats backend has been created. It does not mean that\n     * it has been initialized, but only that the API instance has been\n     * allocated successfully.\n     * @return {boolean} <tt>true</tt> if backend exists or <tt>false</tt>\n     * otherwise\n     */\n    static isBackendInitialized() {\n        return Boolean(CallStats.backend);\n    }\n\n    /**\n     * Notifies CallStats about active device.\n     * @param {{deviceList: {String:String}}} devicesData list of devices with\n     * their data\n     * @param {CallStats} cs callstats instance related to the event\n     */\n    static sendActiveDeviceListEvent(devicesData, cs) {\n        CallStats._reportEvent(cs, fabricEvent.activeDeviceList, devicesData);\n    }\n\n    /**\n     * Notifies CallStats that there is a log we want to report.\n     *\n     * @param {Error} e error to send or {String} message\n     * @param {CallStats} cs callstats instance related to the error (optional)\n     */\n    static sendApplicationLog(e, cs) {\n        try {\n            CallStats._reportError(\n                cs,\n                wrtcFuncNames.applicationLog,\n                e,\n                cs && cs.peerconnection);\n        } catch (error) {\n            // If sendApplicationLog fails it should not be printed to\n            // the logger, because it will try to push the logs again\n            // (through sendApplicationLog) and an endless loop is created.\n            if (console && (typeof console.error === 'function')) {\n                // FIXME send analytics event as well\n                console.error('sendApplicationLog failed', error);\n            }\n        }\n    }\n\n    /**\n     * Sends the given feedback through CallStats.\n     *\n     * @param {string} conferenceID the conference ID for which the feedback\n     * will be reported.\n     * @param overall an integer between 1 and 5 indicating the\n     * user feedback\n     * @param comment detailed feedback from the user.\n     */\n    static sendFeedback(conferenceID, overall, comment) {\n        return new Promise((resolve, reject) => {\n            if (CallStats.backend) {\n                CallStats.backend.sendUserFeedback(\n                    conferenceID,\n                    {\n                        userID: CallStats.userID,\n                        overall,\n                        comment\n                    },\n                    (status, message) => {\n                        if (status === 'success') {\n                            resolve(message);\n                        } else {\n                            reject(message);\n                        }\n                    });\n            } else {\n                const reason = 'Failed to submit feedback to CallStats - no backend';\n\n                logger.error(reason);\n                reject(reason);\n            }\n        });\n    }\n\n    /**\n     * Notifies CallStats that getUserMedia failed.\n     *\n     * @param {Error} e error to send\n     * @param {CallStats} cs callstats instance related to the error (optional)\n     */\n    static sendGetUserMediaFailed(e, cs) {\n        CallStats._reportError(cs, wrtcFuncNames.getUserMedia, e, null);\n    }\n\n    /**\n     * Notifies CallStats for mute events\n     * @param mute {boolean} true for muted and false for not muted\n     * @param type {String} \"audio\"/\"video\"\n     * @param {CallStats} cs callstats instance related to the event\n     */\n    static sendMuteEvent(mute, type, cs) {\n        let event;\n\n        if (type === 'video') {\n            event = mute ? fabricEvent.videoPause : fabricEvent.videoResume;\n        } else {\n            event = mute ? fabricEvent.audioMute : fabricEvent.audioUnmute;\n        }\n\n        CallStats._reportEvent(cs, event);\n    }\n\n    /**\n     * Creates new CallStats instance that handles all callstats API calls for\n     * given {@link TraceablePeerConnection}. Each instance is meant to handle\n     * one CallStats fabric added with 'addFabric' API method for the\n     * {@link TraceablePeerConnection} instance passed in the constructor.\n     * @param {TraceablePeerConnection} tpc\n     * @param {Object} options\n     * @param {string} options.confID the conference ID that wil be used to\n     * report the session.\n     * @param {string} [options.remoteUserID='jitsi'] the remote user ID to\n     * which given <tt>tpc</tt> is connected.\n     */\n    constructor(tpc, options) {\n        this.confID = options.confID;\n        this.tpc = tpc;\n        this.peerconnection = tpc.peerconnection;\n        this.remoteUserID = options.remoteUserID || DEFAULT_REMOTE_USER;\n        this.hasFabric = false;\n\n        CallStats.fabrics.add(this);\n\n        if (CallStats.backendInitialized) {\n            this._addNewFabric();\n\n            // if this is the first fabric let's try to empty the\n            // report queue. Reports all events that we recorded between\n            // backend initialization and receiving the first fabric\n            if (CallStats.fabrics.size === 1) {\n                CallStats._emptyReportQueue(this);\n            }\n        }\n    }\n\n    /**\n     * Initializes CallStats fabric by calling \"addNewFabric\" for\n     * the peer connection associated with this instance.\n     * @return {boolean} true if the call was successful or false otherwise.\n     */\n    _addNewFabric() {\n        logger.info('addNewFabric', this.remoteUserID);\n        try {\n            const fabricAttributes = {\n                remoteEndpointType:\n                    this.tpc.isP2P\n                        ? CallStats.backend.endpointType.peer\n                        : CallStats.backend.endpointType.server\n            };\n            const ret\n                = CallStats.backend.addNewFabric(\n                    this.peerconnection,\n                    this.remoteUserID,\n                    CallStats.backend.fabricUsage.multiplex,\n                    this.confID,\n                    fabricAttributes,\n                    CallStats._addNewFabricCallback);\n\n            this.hasFabric = true;\n\n            const success = ret.status === 'success';\n\n            if (!success) {\n                logger.error('callstats fabric not initilized', ret.message);\n            }\n\n            return success;\n\n        } catch (error) {\n            GlobalOnErrorHandler.callErrorHandler(error);\n\n            return false;\n        }\n    }\n\n    /* eslint-disable max-params */\n\n    /**\n     * Lets CallStats module know where is given SSRC rendered by providing\n     * renderer tag ID.\n     * If the lib is not initialized yet queue the call for later, when it's\n     * ready.\n     * @param {number} ssrc the SSRC of the stream\n     * @param {boolean} isLocal indicates whether this the stream is local\n     * @param {string|null} streamEndpointId if the stream is not local the it\n     * needs to contain the stream owner's ID\n     * @param {string} usageLabel meaningful usage label of this stream like\n     *        'microphone', 'camera' or 'screen'.\n     * @param {string} containerId  the id of media 'audio' or 'video' tag which\n     *        renders the stream.\n     */\n    associateStreamWithVideoTag(\n            ssrc,\n            isLocal,\n            streamEndpointId,\n            usageLabel,\n            containerId) {\n        if (!CallStats.backend) {\n            return;\n        }\n\n        const callStatsId = isLocal ? CallStats.userID : streamEndpointId;\n\n        if (CallStats.backendInitialized) {\n            CallStats.backend.associateMstWithUserID(\n                this.peerconnection,\n                callStatsId,\n                this.confID,\n                ssrc,\n                usageLabel,\n                containerId);\n        } else {\n            CallStats.reportsQueue.push({\n                type: reportType.MST_WITH_USERID,\n                pc: this.peerconnection,\n                data: {\n                    callStatsId,\n                    containerId,\n                    ssrc,\n                    usageLabel\n                }\n            });\n        }\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     * Notifies CallStats that we are the new dominant speaker in the\n     * conference.\n     */\n    sendDominantSpeakerEvent() {\n        CallStats._reportEvent(this, fabricEvent.dominantSpeaker);\n    }\n\n    /**\n     * Notifies CallStats that the fabric for the underlying peerconnection was\n     * closed and no evens should be reported, after this call.\n     */\n    sendTerminateEvent() {\n        if (CallStats.backendInitialized) {\n            CallStats.backend.sendFabricEvent(\n                this.peerconnection,\n                CallStats.backend.fabricEvent.fabricTerminated,\n                this.confID);\n        }\n        CallStats.fabrics.delete(this);\n    }\n\n    /**\n     * Notifies CallStats for ice connection failed\n     */\n    sendIceConnectionFailedEvent() {\n        CallStats._reportError(\n            this,\n            wrtcFuncNames.iceConnectionFailure,\n            null,\n            this.peerconnection);\n    }\n\n    /**\n     * Notifies CallStats that peer connection failed to create offer.\n     *\n     * @param {Error} e error to send\n     */\n    sendCreateOfferFailed(e) {\n        CallStats._reportError(\n            this, wrtcFuncNames.createOffer, e, this.peerconnection);\n    }\n\n    /**\n     * Notifies CallStats that peer connection failed to create answer.\n     *\n     * @param {Error} e error to send\n     */\n    sendCreateAnswerFailed(e) {\n        CallStats._reportError(\n            this, wrtcFuncNames.createAnswer, e, this.peerconnection);\n    }\n\n    /**\n     * Sends either resume or hold event for the fabric associated with\n     * the underlying peerconnection.\n     * @param {boolean} isResume true to resume or false to hold\n     */\n    sendResumeOrHoldEvent(isResume) {\n        CallStats._reportEvent(\n            this,\n            isResume ? fabricEvent.fabricResume : fabricEvent.fabricHold);\n    }\n\n    /**\n     * Notifies CallStats for screen sharing events\n     * @param {boolean} start true for starting screen sharing and\n     * false for not stopping\n     * @param {string|null} ssrc - optional ssrc value, used only when\n     * starting screen sharing.\n     */\n    sendScreenSharingEvent(start, ssrc) {\n        let eventData;\n\n        if (ssrc) {\n            eventData = { ssrc };\n        }\n\n        CallStats._reportEvent(\n            this,\n            start ? fabricEvent.screenShareStart : fabricEvent.screenShareStop,\n            eventData);\n    }\n\n    /**\n     * Notifies CallStats that peer connection failed to set local description.\n     *\n     * @param {Error} e error to send\n     */\n    sendSetLocalDescFailed(e) {\n        CallStats._reportError(\n            this, wrtcFuncNames.setLocalDescription, e, this.peerconnection);\n    }\n\n    /**\n     * Notifies CallStats that peer connection failed to set remote description.\n     *\n     * @param {Error} e error to send\n     */\n    sendSetRemoteDescFailed(e) {\n        CallStats._reportError(\n            this, wrtcFuncNames.setRemoteDescription, e, this.peerconnection);\n    }\n\n    /**\n     * Notifies CallStats that peer connection failed to add ICE candidate.\n     *\n     * @param {Error} e error to send\n     */\n    sendAddIceCandidateFailed(e) {\n        CallStats._reportError(\n            this, wrtcFuncNames.addIceCandidate, e, this.peerconnection);\n    }\n}\n\n/**\n * The CallStats API backend instance\n * @type {callstats}\n */\nCallStats.backend = null;\n\n// some errors/events may happen before CallStats init\n// in this case we accumulate them in this array\n// and send them to callstats on init\nCallStats.reportsQueue = [];\n\n/**\n * Whether the library was successfully initialized(the backend) using its\n * initialize method.\n * @type {boolean}\n */\nCallStats.backendInitialized = false;\n\n/**\n * Part of the CallStats credentials - application ID\n * @type {string}\n */\nCallStats.callStatsID = null;\n\n/**\n * Part of the CallStats credentials - application secret\n * @type {string}\n */\nCallStats.callStatsSecret = null;\n\n/**\n * Local CallStats user ID structure. Can be set only once when\n * {@link backend} is initialized, so it's static for the time being.\n * See CallStats API for more info:\n * https://www.callstats.io/api/#userid\n * @type {object}\n */\nCallStats.userID = null;\n","/*!\n * jQuery JavaScript Library v3.6.0\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright OpenJS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2021-03-02T17:08Z\n */\n( function( global, factory ) {\n\n\t\"use strict\";\n\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\n\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\n\t\t// is present, execute the factory and get jQuery.\n\t\t// For environments that do not have a `window` with a `document`\n\t\t// (such as Node.js), expose a factory as module.exports.\n\t\t// This accentuates the need for the creation of a real `window`.\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t// See ticket #14549 for more info.\n\t\tmodule.exports = global.document ?\n\t\t\tfactory( global, true ) :\n\t\t\tfunction( w ) {\n\t\t\t\tif ( !w.document ) {\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t}\n\t\t\t\treturn factory( w );\n\t\t\t};\n\t} else {\n\t\tfactory( global );\n\t}\n\n// Pass this if window is not defined yet\n} )( typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\n// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n// enough that all such attempts are guarded in a try block.\n\"use strict\";\n\nvar arr = [];\n\nvar getProto = Object.getPrototypeOf;\n\nvar slice = arr.slice;\n\nvar flat = arr.flat ? function( array ) {\n\treturn arr.flat.call( array );\n} : function( array ) {\n\treturn arr.concat.apply( [], array );\n};\n\n\nvar push = arr.push;\n\nvar indexOf = arr.indexOf;\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar fnToString = hasOwn.toString;\n\nvar ObjectFunctionString = fnToString.call( Object );\n\nvar support = {};\n\nvar isFunction = function isFunction( obj ) {\n\n\t\t// Support: Chrome <=57, Firefox <=52\n\t\t// In some browsers, typeof returns \"function\" for HTML <object> elements\n\t\t// (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).\n\t\t// We don't want to classify *any* DOM node as a function.\n\t\t// Support: QtWeb <=3.8.5, WebKit <=534.34, wkhtmltopdf tool <=0.12.5\n\t\t// Plus for old WebKit, typeof returns \"function\" for HTML collections\n\t\t// (e.g., `typeof document.getElementsByTagName(\"div\") === \"function\"`). (gh-4756)\n\t\treturn typeof obj === \"function\" && typeof obj.nodeType !== \"number\" &&\n\t\t\ttypeof obj.item !== \"function\";\n\t};\n\n\nvar isWindow = function isWindow( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t};\n\n\nvar document = window.document;\n\n\n\n\tvar preservedScriptAttributes = {\n\t\ttype: true,\n\t\tsrc: true,\n\t\tnonce: true,\n\t\tnoModule: true\n\t};\n\n\tfunction DOMEval( code, node, doc ) {\n\t\tdoc = doc || document;\n\n\t\tvar i, val,\n\t\t\tscript = doc.createElement( \"script\" );\n\n\t\tscript.text = code;\n\t\tif ( node ) {\n\t\t\tfor ( i in preservedScriptAttributes ) {\n\n\t\t\t\t// Support: Firefox 64+, Edge 18+\n\t\t\t\t// Some browsers don't support the \"nonce\" property on scripts.\n\t\t\t\t// On the other hand, just using `getAttribute` is not enough as\n\t\t\t\t// the `nonce` attribute is reset to an empty string whenever it\n\t\t\t\t// becomes browsing-context connected.\n\t\t\t\t// See https://github.com/whatwg/html/issues/2369\n\t\t\t\t// See https://html.spec.whatwg.org/#nonce-attributes\n\t\t\t\t// The `node.getAttribute` check was added for the sake of\n\t\t\t\t// `jQuery.globalEval` so that it can fake a nonce-containing node\n\t\t\t\t// via an object.\n\t\t\t\tval = node[ i ] || node.getAttribute && node.getAttribute( i );\n\t\t\t\tif ( val ) {\n\t\t\t\t\tscript.setAttribute( i, val );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdoc.head.appendChild( script ).parentNode.removeChild( script );\n\t}\n\n\nfunction toType( obj ) {\n\tif ( obj == null ) {\n\t\treturn obj + \"\";\n\t}\n\n\t// Support: Android <=2.3 only (functionish RegExp)\n\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\tclass2type[ toString.call( obj ) ] || \"object\" :\n\t\ttypeof obj;\n}\n/* global Symbol */\n// Defining this global in .eslintrc.json would create a danger of using the global\n// unguarded in another place, it seems safer to define global only for this module\n\n\n\nvar\n\tversion = \"3.6.0\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t};\n\njQuery.fn = jQuery.prototype = {\n\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\n\t\t// Return all the elements in a clean array\n\t\tif ( num == null ) {\n\t\t\treturn slice.call( this );\n\t\t}\n\n\t\t// Return just the one element from the set\n\t\treturn num < 0 ? this[ num + this.length ] : this[ num ];\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\teach: function( callback ) {\n\t\treturn jQuery.each( this, callback );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t} ) );\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teven: function() {\n\t\treturn this.pushStack( jQuery.grep( this, function( _elem, i ) {\n\t\t\treturn ( i + 1 ) % 2;\n\t\t} ) );\n\t},\n\n\todd: function() {\n\t\treturn this.pushStack( jQuery.grep( this, function( _elem, i ) {\n\t\t\treturn i % 2;\n\t\t} ) );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor();\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: arr.sort,\n\tsplice: arr.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[ 0 ] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// Skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};\n\t\ti++;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !isFunction( target ) ) {\n\t\ttarget = {};\n\t}\n\n\t// Extend jQuery itself if only one argument is passed\n\tif ( i === length ) {\n\t\ttarget = this;\n\t\ti--;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\n\t\t// Only deal with non-null/undefined values\n\t\tif ( ( options = arguments[ i ] ) != null ) {\n\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent Object.prototype pollution\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( name === \"__proto__\" || target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\n\t\t\t\t\t( copyIsArray = Array.isArray( copy ) ) ) ) {\n\t\t\t\t\tsrc = target[ name ];\n\n\t\t\t\t\t// Ensure proper type for the source value\n\t\t\t\t\tif ( copyIsArray && !Array.isArray( src ) ) {\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t} else if ( !copyIsArray && !jQuery.isPlainObject( src ) ) {\n\t\t\t\t\t\tclone = {};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src;\n\t\t\t\t\t}\n\t\t\t\t\tcopyIsArray = false;\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend( {\n\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// Assume jQuery is ready without the ready module\n\tisReady: true,\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\tnoop: function() {},\n\n\tisPlainObject: function( obj ) {\n\t\tvar proto, Ctor;\n\n\t\t// Detect obvious negatives\n\t\t// Use toString instead of jQuery.type to catch host objects\n\t\tif ( !obj || toString.call( obj ) !== \"[object Object]\" ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tproto = getProto( obj );\n\n\t\t// Objects with no prototype (e.g., `Object.create( null )`) are plain\n\t\tif ( !proto ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Objects with prototype are plain iff they were constructed by a global Object function\n\t\tCtor = hasOwn.call( proto, \"constructor\" ) && proto.constructor;\n\t\treturn typeof Ctor === \"function\" && fnToString.call( Ctor ) === ObjectFunctionString;\n\t},\n\n\tisEmptyObject: function( obj ) {\n\t\tvar name;\n\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\t// Evaluates a script in a provided context; falls back to the global one\n\t// if not specified.\n\tglobalEval: function( code, options, doc ) {\n\t\tDOMEval( code, { nonce: options && options.nonce }, doc );\n\t},\n\n\teach: function( obj, callback ) {\n\t\tvar length, i = 0;\n\n\t\tif ( isArrayLike( obj ) ) {\n\t\t\tlength = obj.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i in obj ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArrayLike( Object( arr ) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpush.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t},\n\n\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t// push.apply(_, arraylike) throws on ancient WebKit\n\tmerge: function( first, second ) {\n\t\tvar len = +second.length,\n\t\t\tj = 0,\n\t\t\ti = first.length;\n\n\t\tfor ( ; j < len; j++ ) {\n\t\t\tfirst[ i++ ] = second[ j ];\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, invert ) {\n\t\tvar callbackInverse,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tcallbackExpect = !invert;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar length, value,\n\t\t\ti = 0,\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their new values\n\t\tif ( isArrayLike( elems ) ) {\n\t\t\tlength = elems.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn flat( ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// jQuery.support is not used in Core but other projects attach their\n\t// properties to it so it needs to exist.\n\tsupport: support\n} );\n\nif ( typeof Symbol === \"function\" ) {\n\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\n}\n\n// Populate the class2type map\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\n\tfunction( _i, name ) {\n\t\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n\t} );\n\nfunction isArrayLike( obj ) {\n\n\t// Support: real iOS 8.2 only (not reproducible in simulator)\n\t// `in` check used to prevent JIT error (gh-2145)\n\t// hasOwn isn't used here due to false negatives\n\t// regarding Nodelist length in IE\n\tvar length = !!obj && \"length\" in obj && obj.length,\n\t\ttype = toType( obj );\n\n\tif ( isFunction( obj ) || isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\treturn type === \"array\" || length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\nvar Sizzle =\n/*!\n * Sizzle CSS Selector Engine v2.3.6\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://js.foundation/\n *\n * Date: 2021-02-16\n */\n( function( window ) {\nvar i,\n\tsupport,\n\tExpr,\n\tgetText,\n\tisXML,\n\ttokenize,\n\tcompile,\n\tselect,\n\toutermostContext,\n\tsortInput,\n\thasDuplicate,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + 1 * new Date(),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\tnonnativeSelectorCache = createCache(),\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// Instance methods\n\thasOwn = ( {} ).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpushNative = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\n\t// Use a stripped-down indexOf as it's faster than native\n\t// https://jsperf.com/thor-indexof-vs-for/5\n\tindexOf = function( list, elem ) {\n\t\tvar i = 0,\n\t\t\tlen = list.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( list[ i ] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|\" +\n\t\t\"ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\n\t// https://www.w3.org/TR/css-syntax-3/#ident-token-diagram\n\tidentifier = \"(?:\\\\\\\\[\\\\da-fA-F]{1,6}\" + whitespace +\n\t\t\"?|\\\\\\\\[^\\\\r\\\\n\\\\f]|[\\\\w-]|[^\\0-\\\\x7f])+\",\n\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\n\n\t\t// Operator (capture 2)\n\t\t\"*([*^$|!~]?=)\" + whitespace +\n\n\t\t// \"Attribute values must be CSS identifiers [capture 5]\n\t\t// or strings [capture 3 or capture 4]\"\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" +\n\t\twhitespace + \"*\\\\]\",\n\n\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\n\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\n\t\t// 2. simple (capture 6)\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\n\t\t// 3. anything else (capture 2)\n\t\t\".*\" +\n\t\t\")\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" +\n\t\twhitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace +\n\t\t\"*\" ),\n\trdescend = new RegExp( whitespace + \"|>\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" +\n\t\t\twhitespace + \"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" +\n\t\t\twhitespace + \"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace +\n\t\t\t\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" + whitespace +\n\t\t\t\"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trhtml = /HTML$/i,\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trsibling = /[+~]/,\n\n\t// CSS escapes\n\t// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\[\\\\da-fA-F]{1,6}\" + whitespace + \"?|\\\\\\\\([^\\\\r\\\\n\\\\f])\", \"g\" ),\n\tfunescape = function( escape, nonHex ) {\n\t\tvar high = \"0x\" + escape.slice( 1 ) - 0x10000;\n\n\t\treturn nonHex ?\n\n\t\t\t// Strip the backslash prefix from a non-hex escape sequence\n\t\t\tnonHex :\n\n\t\t\t// Replace a hexadecimal escape sequence with the encoded Unicode code point\n\t\t\t// Support: IE <=11+\n\t\t\t// For values outside the Basic Multilingual Plane (BMP), manually construct a\n\t\t\t// surrogate pair\n\t\t\thigh < 0 ?\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t},\n\n\t// CSS string/identifier serialization\n\t// https://drafts.csswg.org/cssom/#common-serializing-idioms\n\trcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\n\tfcssescape = function( ch, asCodePoint ) {\n\t\tif ( asCodePoint ) {\n\n\t\t\t// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n\t\t\tif ( ch === \"\\0\" ) {\n\t\t\t\treturn \"\\uFFFD\";\n\t\t\t}\n\n\t\t\t// Control characters and (dependent upon position) numbers get escaped as code points\n\t\t\treturn ch.slice( 0, -1 ) + \"\\\\\" +\n\t\t\t\tch.charCodeAt( ch.length - 1 ).toString( 16 ) + \" \";\n\t\t}\n\n\t\t// Other potentially-special ASCII characters get backslash-escaped\n\t\treturn \"\\\\\" + ch;\n\t},\n\n\t// Used for iframes\n\t// See setDocument()\n\t// Removing the function wrapper causes a \"Permission Denied\"\n\t// error in IE\n\tunloadHandler = function() {\n\t\tsetDocument();\n\t},\n\n\tinDisabledFieldset = addCombinator(\n\t\tfunction( elem ) {\n\t\t\treturn elem.disabled === true && elem.nodeName.toLowerCase() === \"fieldset\";\n\t\t},\n\t\t{ dir: \"parentNode\", next: \"legend\" }\n\t);\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t( arr = slice.call( preferredDoc.childNodes ) ),\n\t\tpreferredDoc.childNodes\n\t);\n\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\t// eslint-disable-next-line no-unused-expressions\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpushNative.apply( target, slice.call( els ) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( ( target[ j++ ] = els[ i++ ] ) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar m, i, elem, nid, match, groups, newSelector,\n\t\tnewContext = context && context.ownerDocument,\n\n\t\t// nodeType defaults to 9, since context defaults to document\n\t\tnodeType = context ? context.nodeType : 9;\n\n\tresults = results || [];\n\n\t// Return early from calls with invalid selector or context\n\tif ( typeof selector !== \"string\" || !selector ||\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\n\t\treturn results;\n\t}\n\n\t// Try to shortcut find operations (as opposed to filters) in HTML documents\n\tif ( !seed ) {\n\t\tsetDocument( context );\n\t\tcontext = context || document;\n\n\t\tif ( documentIsHTML ) {\n\n\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\n\t\t\tif ( nodeType !== 11 && ( match = rquickExpr.exec( selector ) ) ) {\n\n\t\t\t\t// ID selector\n\t\t\t\tif ( ( m = match[ 1 ] ) ) {\n\n\t\t\t\t\t// Document context\n\t\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\t\tif ( ( elem = context.getElementById( m ) ) ) {\n\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t// Element context\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\tif ( newContext && ( elem = newContext.getElementById( m ) ) &&\n\t\t\t\t\t\t\tcontains( context, elem ) &&\n\t\t\t\t\t\t\telem.id === m ) {\n\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t// Type selector\n\t\t\t\t} else if ( match[ 2 ] ) {\n\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\t\treturn results;\n\n\t\t\t\t// Class selector\n\t\t\t\t} else if ( ( m = match[ 3 ] ) && support.getElementsByClassName &&\n\t\t\t\t\tcontext.getElementsByClassName ) {\n\n\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\t\treturn results;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Take advantage of querySelectorAll\n\t\t\tif ( support.qsa &&\n\t\t\t\t!nonnativeSelectorCache[ selector + \" \" ] &&\n\t\t\t\t( !rbuggyQSA || !rbuggyQSA.test( selector ) ) &&\n\n\t\t\t\t// Support: IE 8 only\n\t\t\t\t// Exclude object elements\n\t\t\t\t( nodeType !== 1 || context.nodeName.toLowerCase() !== \"object\" ) ) {\n\n\t\t\t\tnewSelector = selector;\n\t\t\t\tnewContext = context;\n\n\t\t\t\t// qSA considers elements outside a scoping root when evaluating child or\n\t\t\t\t// descendant combinators, which is not what we want.\n\t\t\t\t// In such cases, we work around the behavior by prefixing every selector in the\n\t\t\t\t// list with an ID selector referencing the scope context.\n\t\t\t\t// The technique has to be used as well when a leading combinator is used\n\t\t\t\t// as such selectors are not recognized by querySelectorAll.\n\t\t\t\t// Thanks to Andrew Dupont for this technique.\n\t\t\t\tif ( nodeType === 1 &&\n\t\t\t\t\t( rdescend.test( selector ) || rcombinators.test( selector ) ) ) {\n\n\t\t\t\t\t// Expand context for sibling selectors\n\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext;\n\n\t\t\t\t\t// We can use :scope instead of the ID hack if the browser\n\t\t\t\t\t// supports it & if we're not changing the context.\n\t\t\t\t\tif ( newContext !== context || !support.scope ) {\n\n\t\t\t\t\t\t// Capture the context ID, setting it first if necessary\n\t\t\t\t\t\tif ( ( nid = context.getAttribute( \"id\" ) ) ) {\n\t\t\t\t\t\t\tnid = nid.replace( rcssescape, fcssescape );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcontext.setAttribute( \"id\", ( nid = expando ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prefix every selector in the list\n\t\t\t\t\tgroups = tokenize( selector );\n\t\t\t\t\ti = groups.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tgroups[ i ] = ( nid ? \"#\" + nid : \":scope\" ) + \" \" +\n\t\t\t\t\t\t\ttoSelector( groups[ i ] );\n\t\t\t\t\t}\n\t\t\t\t\tnewSelector = groups.join( \",\" );\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t);\n\t\t\t\t\treturn results;\n\t\t\t\t} catch ( qsaError ) {\n\t\t\t\t\tnonnativeSelectorCache( selector, true );\n\t\t\t\t} finally {\n\t\t\t\t\tif ( nid === expando ) {\n\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn ( cache[ key + \" \" ] = value );\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created element and returns a boolean result\n */\nfunction assert( fn ) {\n\tvar el = document.createElement( \"fieldset\" );\n\n\ttry {\n\t\treturn !!fn( el );\n\t} catch ( e ) {\n\t\treturn false;\n\t} finally {\n\n\t\t// Remove from its parent by default\n\t\tif ( el.parentNode ) {\n\t\t\tel.parentNode.removeChild( el );\n\t\t}\n\n\t\t// release memory in IE\n\t\tel = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split( \"|\" ),\n\t\ti = arr.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[ i ] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\ta.sourceIndex - b.sourceIndex;\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( ( cur = cur.nextSibling ) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn ( name === \"input\" || name === \"button\" ) && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for :enabled/:disabled\n * @param {Boolean} disabled true for :disabled; false for :enabled\n */\nfunction createDisabledPseudo( disabled ) {\n\n\t// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n\treturn function( elem ) {\n\n\t\t// Only certain elements can match :enabled or :disabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n\t\tif ( \"form\" in elem ) {\n\n\t\t\t// Check for inherited disabledness on relevant non-disabled elements:\n\t\t\t// * listed form-associated elements in a disabled fieldset\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n\t\t\t// * option elements in a disabled optgroup\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n\t\t\t// All such elements have a \"form\" property.\n\t\t\tif ( elem.parentNode && elem.disabled === false ) {\n\n\t\t\t\t// Option elements defer to a parent optgroup if present\n\t\t\t\tif ( \"label\" in elem ) {\n\t\t\t\t\tif ( \"label\" in elem.parentNode ) {\n\t\t\t\t\t\treturn elem.parentNode.disabled === disabled;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn elem.disabled === disabled;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Support: IE 6 - 11\n\t\t\t\t// Use the isDisabled shortcut property to check for disabled fieldset ancestors\n\t\t\t\treturn elem.isDisabled === disabled ||\n\n\t\t\t\t\t// Where there is no isDisabled, check manually\n\t\t\t\t\t/* jshint -W018 */\n\t\t\t\t\telem.isDisabled !== !disabled &&\n\t\t\t\t\tinDisabledFieldset( elem ) === disabled;\n\t\t\t}\n\n\t\t\treturn elem.disabled === disabled;\n\n\t\t// Try to winnow out elements that can't be disabled before trusting the disabled property.\n\t\t// Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n\t\t// even exist on them, let alone have a boolean value.\n\t\t} else if ( \"label\" in elem ) {\n\t\t\treturn elem.disabled === disabled;\n\t\t}\n\n\t\t// Remaining elements are neither :enabled nor :disabled\n\t\treturn false;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction( function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction( function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ ( j = matchIndexes[ i ] ) ] ) {\n\t\t\t\t\tseed[ j ] = !( matches[ j ] = seed[ j ] );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t} );\n}\n\n/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n}\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\nisXML = Sizzle.isXML = function( elem ) {\n\tvar namespace = elem && elem.namespaceURI,\n\t\tdocElem = elem && ( elem.ownerDocument || elem ).documentElement;\n\n\t// Support: IE <=8\n\t// Assume HTML when documentElement doesn't yet exist, such as inside loading iframes\n\t// https://bugs.jquery.com/ticket/4833\n\treturn !rhtml.test( namespace || docElem && docElem.nodeName || \"HTML\" );\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar hasCompare, subWindow,\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\n\t// Return early if doc is invalid or already selected\n\t// Support: IE 11+, Edge 17 - 18+\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t// two documents; shallow comparisons work.\n\t// eslint-disable-next-line eqeqeq\n\tif ( doc == document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Update global variables\n\tdocument = doc;\n\tdocElem = document.documentElement;\n\tdocumentIsHTML = !isXML( document );\n\n\t// Support: IE 9 - 11+, Edge 12 - 18+\n\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\t// Support: IE 11+, Edge 17 - 18+\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t// two documents; shallow comparisons work.\n\t// eslint-disable-next-line eqeqeq\n\tif ( preferredDoc != document &&\n\t\t( subWindow = document.defaultView ) && subWindow.top !== subWindow ) {\n\n\t\t// Support: IE 11, Edge\n\t\tif ( subWindow.addEventListener ) {\n\t\t\tsubWindow.addEventListener( \"unload\", unloadHandler, false );\n\n\t\t// Support: IE 9 - 10 only\n\t\t} else if ( subWindow.attachEvent ) {\n\t\t\tsubWindow.attachEvent( \"onunload\", unloadHandler );\n\t\t}\n\t}\n\n\t// Support: IE 8 - 11+, Edge 12 - 18+, Chrome <=16 - 25 only, Firefox <=3.6 - 31 only,\n\t// Safari 4 - 5 only, Opera <=11.6 - 12.x only\n\t// IE/Edge & older browsers don't support the :scope pseudo-class.\n\t// Support: Safari 6.0 only\n\t// Safari 6.0 supports :scope but it's an alias of :root there.\n\tsupport.scope = assert( function( el ) {\n\t\tdocElem.appendChild( el ).appendChild( document.createElement( \"div\" ) );\n\t\treturn typeof el.querySelectorAll !== \"undefined\" &&\n\t\t\t!el.querySelectorAll( \":scope fieldset div\" ).length;\n\t} );\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties\n\t// (excepting IE8 booleans)\n\tsupport.attributes = assert( function( el ) {\n\t\tel.className = \"i\";\n\t\treturn !el.getAttribute( \"className\" );\n\t} );\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert( function( el ) {\n\t\tel.appendChild( document.createComment( \"\" ) );\n\t\treturn !el.getElementsByTagName( \"*\" ).length;\n\t} );\n\n\t// Support: IE<9\n\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programmatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert( function( el ) {\n\t\tdocElem.appendChild( el ).id = expando;\n\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\n\t} );\n\n\t// ID filter and find\n\tif ( support.getById ) {\n\t\tExpr.filter[ \"ID\" ] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute( \"id\" ) === attrId;\n\t\t\t};\n\t\t};\n\t\tExpr.find[ \"ID\" ] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar elem = context.getElementById( id );\n\t\t\t\treturn elem ? [ elem ] : [];\n\t\t\t}\n\t\t};\n\t} else {\n\t\tExpr.filter[ \"ID\" ] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\n\t\t\t\t\telem.getAttributeNode( \"id\" );\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\n\t\t// Support: IE 6 - 7 only\n\t\t// getElementById is not reliable as a find shortcut\n\t\tExpr.find[ \"ID\" ] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar node, i, elems,\n\t\t\t\t\telem = context.getElementById( id );\n\n\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t// Verify the id attribute\n\t\t\t\t\tnode = elem.getAttributeNode( \"id\" );\n\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t}\n\n\t\t\t\t\t// Fall back on getElementsByName\n\t\t\t\t\telems = context.getElementsByName( id );\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile ( ( elem = elems[ i++ ] ) ) {\n\t\t\t\t\t\tnode = elem.getAttributeNode( \"id\" );\n\t\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn [];\n\t\t\t}\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[ \"TAG\" ] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\n\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t} else if ( support.qsa ) {\n\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t}\n\t\t} :\n\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( ( elem = results[ i++ ] ) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[ \"CLASS\" ] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See https://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( ( support.qsa = rnative.test( document.querySelectorAll ) ) ) {\n\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert( function( el ) {\n\n\t\t\tvar input;\n\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// https://bugs.jquery.com/ticket/12359\n\t\t\tdocElem.appendChild( el ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\n\t\t\t\t\"<option selected=''></option></select>\";\n\n\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\tif ( el.querySelectorAll( \"[msallowcapture^='']\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !el.querySelectorAll( \"[selected]\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\t\t\tif ( !el.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"~=\" );\n\t\t\t}\n\n\t\t\t// Support: IE 11+, Edge 15 - 18+\n\t\t\t// IE 11/Edge don't find elements on a `[name='']` query in some cases.\n\t\t\t// Adding a temporary attribute to the document before the selection works\n\t\t\t// around the issue.\n\t\t\t// Interestingly, IE 10 & older don't seem to have the issue.\n\t\t\tinput = document.createElement( \"input\" );\n\t\t\tinput.setAttribute( \"name\", \"\" );\n\t\t\tel.appendChild( input );\n\t\t\tif ( !el.querySelectorAll( \"[name='']\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*name\" + whitespace + \"*=\" +\n\t\t\t\t\twhitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !el.querySelectorAll( \":checked\" ).length ) {\n\t\t\t\trbuggyQSA.push( \":checked\" );\n\t\t\t}\n\n\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t// In-page `selector#id sibling-combinator selector` fails\n\t\t\tif ( !el.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\trbuggyQSA.push( \".#.+[+~]\" );\n\t\t\t}\n\n\t\t\t// Support: Firefox <=3.6 - 5 only\n\t\t\t// Old Firefox doesn't throw on a badly-escaped identifier.\n\t\t\tel.querySelectorAll( \"\\\\\\f\" );\n\t\t\trbuggyQSA.push( \"[\\\\r\\\\n\\\\f]\" );\n\t\t} );\n\n\t\tassert( function( el ) {\n\t\t\tel.innerHTML = \"<a href='' disabled='disabled'></a>\" +\n\t\t\t\t\"<select disabled='disabled'><option/></select>\";\n\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\tvar input = document.createElement( \"input\" );\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tel.appendChild( input ).setAttribute( \"name\", \"D\" );\n\n\t\t\t// Support: IE8\n\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\tif ( el.querySelectorAll( \"[name=d]\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( el.querySelectorAll( \":enabled\" ).length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Support: IE9-11+\n\t\t\t// IE's :disabled selector does not pick up the children of disabled fieldsets\n\t\t\tdocElem.appendChild( el ).disabled = true;\n\t\t\tif ( el.querySelectorAll( \":disabled\" ).length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Support: Opera 10 - 11 only\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tel.querySelectorAll( \"*,:x\" );\n\t\t\trbuggyQSA.push( \",.*:\" );\n\t\t} );\n\t}\n\n\tif ( ( support.matchesSelector = rnative.test( ( matches = docElem.matches ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector ) ) ) ) {\n\n\t\tassert( function( el ) {\n\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( el, \"*\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( el, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t} );\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join( \"|\" ) );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join( \"|\" ) );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\n\t// Element contains another\n\t// Purposefully self-exclusive\n\t// As in, an element does not contain itself\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\tfunction( a, b ) {\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t) );\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( ( b = b.parentNode ) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = hasCompare ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\tif ( compare ) {\n\t\t\treturn compare;\n\t\t}\n\n\t\t// Calculate position if both inputs belong to the same document\n\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t// two documents; shallow comparisons work.\n\t\t// eslint-disable-next-line eqeqeq\n\t\tcompare = ( a.ownerDocument || a ) == ( b.ownerDocument || b ) ?\n\t\t\ta.compareDocumentPosition( b ) :\n\n\t\t\t// Otherwise we know they are disconnected\n\t\t\t1;\n\n\t\t// Disconnected nodes\n\t\tif ( compare & 1 ||\n\t\t\t( !support.sortDetached && b.compareDocumentPosition( a ) === compare ) ) {\n\n\t\t\t// Choose the first element that is related to our preferred document\n\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t// two documents; shallow comparisons work.\n\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\tif ( a == document || a.ownerDocument == preferredDoc &&\n\t\t\t\tcontains( preferredDoc, a ) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t// two documents; shallow comparisons work.\n\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\tif ( b == document || b.ownerDocument == preferredDoc &&\n\t\t\t\tcontains( preferredDoc, b ) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Maintain original order\n\t\t\treturn sortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\t\t}\n\n\t\treturn compare & 4 ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\tif ( !aup || !bup ) {\n\n\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t// two documents; shallow comparisons work.\n\t\t\t/* eslint-disable eqeqeq */\n\t\t\treturn a == document ? -1 :\n\t\t\t\tb == document ? 1 :\n\t\t\t\t/* eslint-enable eqeqeq */\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( ( cur = cur.parentNode ) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( ( cur = cur.parentNode ) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[ i ] === bp[ i ] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[ i ], bp[ i ] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t// two documents; shallow comparisons work.\n\t\t\t/* eslint-disable eqeqeq */\n\t\t\tap[ i ] == preferredDoc ? -1 :\n\t\t\tbp[ i ] == preferredDoc ? 1 :\n\t\t\t/* eslint-enable eqeqeq */\n\t\t\t0;\n\t};\n\n\treturn document;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\tsetDocument( elem );\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t!nonnativeSelectorCache[ expr + \" \" ] &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\n\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t// fragment in IE 9\n\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch ( e ) {\n\t\t\tnonnativeSelectorCache( expr, true );\n\t\t}\n\t}\n\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\n\t// Set document vars if needed\n\t// Support: IE 11+, Edge 17 - 18+\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t// two documents; shallow comparisons work.\n\t// eslint-disable-next-line eqeqeq\n\tif ( ( context.ownerDocument || context ) != document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\n\t// Set document vars if needed\n\t// Support: IE 11+, Edge 17 - 18+\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t// two documents; shallow comparisons work.\n\t// eslint-disable-next-line eqeqeq\n\tif ( ( elem.ownerDocument || elem ) != document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val !== undefined ?\n\t\tval :\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t( val = elem.getAttributeNode( name ) ) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull;\n};\n\nSizzle.escape = function( sel ) {\n\treturn ( sel + \"\" ).replace( rcssescape, fcssescape );\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( ( elem = results[ i++ ] ) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\t// Clear input after sorting to release objects\n\t// See https://github.com/jquery/sizzle/pull/225\n\tsortInput = null;\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( ( node = elem[ i++ ] ) ) {\n\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[ 1 ] = match[ 1 ].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[ 3 ] = ( match[ 3 ] || match[ 4 ] ||\n\t\t\t\tmatch[ 5 ] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[ 2 ] === \"~=\" ) {\n\t\t\t\tmatch[ 3 ] = \" \" + match[ 3 ] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[ 1 ] = match[ 1 ].toLowerCase();\n\n\t\t\tif ( match[ 1 ].slice( 0, 3 ) === \"nth\" ) {\n\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[ 3 ] ) {\n\t\t\t\t\tSizzle.error( match[ 0 ] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[ 4 ] = +( match[ 4 ] ?\n\t\t\t\t\tmatch[ 5 ] + ( match[ 6 ] || 1 ) :\n\t\t\t\t\t2 * ( match[ 3 ] === \"even\" || match[ 3 ] === \"odd\" ) );\n\t\t\t\tmatch[ 5 ] = +( ( match[ 7 ] + match[ 8 ] ) || match[ 3 ] === \"odd\" );\n\n\t\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[ 3 ] ) {\n\t\t\t\tSizzle.error( match[ 0 ] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[ 6 ] && match[ 2 ];\n\n\t\t\tif ( matchExpr[ \"CHILD\" ].test( match[ 0 ] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[ 3 ] ) {\n\t\t\t\tmatch[ 2 ] = match[ 4 ] || match[ 5 ] || \"\";\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t( excess = tokenize( unquoted, true ) ) &&\n\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t( excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length ) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[ 0 ] = match[ 0 ].slice( 0, excess );\n\t\t\t\tmatch[ 2 ] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() {\n\t\t\t\t\treturn true;\n\t\t\t\t} :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t( pattern = new RegExp( \"(^|\" + whitespace +\n\t\t\t\t\t\")\" + className + \"(\" + whitespace + \"|$)\" ) ) && classCache(\n\t\t\t\t\t\tclassName, function( elem ) {\n\t\t\t\t\t\t\treturn pattern.test(\n\t\t\t\t\t\t\t\ttypeof elem.className === \"string\" && elem.className ||\n\t\t\t\t\t\t\t\ttypeof elem.getAttribute !== \"undefined\" &&\n\t\t\t\t\t\t\t\t\telem.getAttribute( \"class\" ) ||\n\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t);\n\t\t\t\t} );\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\t/* eslint-disable max-len */\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t\t/* eslint-enable max-len */\n\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, _argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, _context, xml ) {\n\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType,\n\t\t\t\t\t\tdiff = false;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( ( node = node[ dir ] ) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\n\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\n\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\tnode = parent;\n\t\t\t\t\t\t\touterCache = node[ expando ] || ( node[ expando ] = {} );\n\n\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t( outerCache[ node.uniqueID ] = {} );\n\n\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( ( node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t( diff = nodeIndex = 0 ) || start.pop() ) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t\tif ( useCache ) {\n\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || ( node[ expando ] = {} );\n\n\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t( outerCache[ node.uniqueID ] = {} );\n\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\t\tdiff = nodeIndex;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// xml :nth-child(...)\n\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t\tif ( diff === false ) {\n\n\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\t\twhile ( ( node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t\t( diff = nodeIndex = 0 ) || start.pop() ) ) {\n\n\t\t\t\t\t\t\t\t\tif ( ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\n\t\t\t\t\t\t\t\t\t\t++diff ) {\n\n\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t( node[ expando ] = {} );\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t( outerCache[ node.uniqueID ] = {} );\n\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction( function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[ i ] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[ i ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t} ) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction( function( selector ) {\n\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction( function( seed, matches, _context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( ( elem = unmatched[ i ] ) ) {\n\t\t\t\t\t\t\tseed[ i ] = !( matches[ i ] = elem );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} ) :\n\t\t\t\tfunction( elem, _context, xml ) {\n\t\t\t\t\tinput[ 0 ] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\n\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\tinput[ 0 ] = null;\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t} ),\n\n\t\t\"has\": markFunction( function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t} ),\n\n\t\t\"contains\": markFunction( function( text ) {\n\t\t\ttext = text.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t} ),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test( lang || \"\" ) ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( ( elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute( \"xml:lang\" ) || elem.getAttribute( \"lang\" ) ) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( ( elem = elem.parentNode ) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t} ),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement &&\n\t\t\t\t( !document.hasFocus || document.hasFocus() ) &&\n\t\t\t\t!!( elem.type || elem.href || ~elem.tabIndex );\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": createDisabledPseudo( false ),\n\t\t\"disabled\": createDisabledPseudo( true ),\n\n\t\t\"checked\": function( elem ) {\n\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn ( nodeName === \"input\" && !!elem.checked ) ||\n\t\t\t\t( nodeName === \"option\" && !!elem.selected );\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\t// eslint-disable-next-line no-unused-expressions\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[ \"empty\" ]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\n\t\t\t\t// Support: IE<8\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t( ( attr = elem.getAttribute( \"type\" ) ) == null ||\n\t\t\t\t\tattr.toLowerCase() === \"text\" );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo( function() {\n\t\t\treturn [ 0 ];\n\t\t} ),\n\n\t\t\"last\": createPositionalPseudo( function( _matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t} ),\n\n\t\t\"eq\": createPositionalPseudo( function( _matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t} ),\n\n\t\t\"even\": createPositionalPseudo( function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t} ),\n\n\t\t\"odd\": createPositionalPseudo( function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t} ),\n\n\t\t\"lt\": createPositionalPseudo( function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ?\n\t\t\t\targument + length :\n\t\t\t\targument > length ?\n\t\t\t\t\tlength :\n\t\t\t\t\targument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t} ),\n\n\t\t\"gt\": createPositionalPseudo( function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t} )\n\t}\n};\n\nExpr.pseudos[ \"nth\" ] = Expr.pseudos[ \"eq\" ];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || ( match = rcomma.exec( soFar ) ) ) {\n\t\t\tif ( match ) {\n\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[ 0 ].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( ( tokens = [] ) );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( ( match = rcombinators.exec( soFar ) ) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push( {\n\t\t\t\tvalue: matched,\n\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[ 0 ].replace( rtrim, \" \" )\n\t\t\t} );\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( ( match = matchExpr[ type ].exec( soFar ) ) && ( !preFilters[ type ] ||\n\t\t\t\t( match = preFilters[ type ]( match ) ) ) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push( {\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t} );\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n};\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[ i ].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tskip = combinator.next,\n\t\tkey = skip || dir,\n\t\tcheckNonElements = base && key === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( ( elem = elem[ dir ] ) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar oldCache, uniqueCache, outerCache,\n\t\t\t\tnewCache = [ dirruns, doneName ];\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( ( elem = elem[ dir ] ) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( ( elem = elem[ dir ] ) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || ( elem[ expando ] = {} );\n\n\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] ||\n\t\t\t\t\t\t\t( outerCache[ elem.uniqueID ] = {} );\n\n\t\t\t\t\t\tif ( skip && skip === elem.nodeName.toLowerCase() ) {\n\t\t\t\t\t\t\telem = elem[ dir ] || elem;\n\t\t\t\t\t\t} else if ( ( oldCache = uniqueCache[ key ] ) &&\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\treturn ( newCache[ 2 ] = oldCache[ 2 ] );\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\tuniqueCache[ key ] = newCache;\n\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\tif ( ( newCache[ 2 ] = matcher( elem, context, xml ) ) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[ i ]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[ 0 ];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[ i ], results );\n\t}\n\treturn results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( ( elem = unmatched[ i ] ) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction( function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts(\n\t\t\t\tselector || \"*\",\n\t\t\t\tcontext.nodeType ? [ context ] : context,\n\t\t\t\t[]\n\t\t\t),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( ( elem = temp[ i ] ) ) {\n\t\t\t\t\tmatcherOut[ postMap[ i ] ] = !( matcherIn[ postMap[ i ] ] = elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( ( elem = matcherOut[ i ] ) ) {\n\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( ( matcherIn[ i ] = elem ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, ( matcherOut = [] ), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( ( elem = matcherOut[ i ] ) &&\n\t\t\t\t\t\t( temp = postFinder ? indexOf( seed, elem ) : preMap[ i ] ) > -1 ) {\n\n\t\t\t\t\t\tseed[ temp ] = !( results[ temp ] = elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t} );\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[ 0 ].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[ \" \" ],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t( checkContext = context ).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\n\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\tcheckContext = null;\n\t\t\treturn ret;\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( ( matcher = Expr.relative[ tokens[ i ].type ] ) ) {\n\t\t\tmatchers = [ addCombinator( elementMatcher( matchers ), matcher ) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[ i ].type ].apply( null, tokens[ i ].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[ j ].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\n\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\ttokens\n\t\t\t\t\t\t.slice( 0, i - 1 )\n\t\t\t\t\t\t.concat( { value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" } )\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( ( tokens = tokens.slice( j ) ) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\tvar bySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\tsetMatched = [],\n\t\t\t\tcontextBackup = outermostContext,\n\n\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\telems = seed || byElement && Expr.find[ \"TAG\" ]( \"*\", outermost ),\n\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = ( dirruns += contextBackup == null ? 1 : Math.random() || 0.1 ),\n\t\t\t\tlen = elems.length;\n\n\t\t\tif ( outermost ) {\n\n\t\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t\t// two documents; shallow comparisons work.\n\t\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\t\toutermostContext = context == document || context || outermost;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Support: IE<9, Safari\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\tfor ( ; i !== len && ( elem = elems[ i ] ) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\n\t\t\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t\t\t// two documents; shallow comparisons work.\n\t\t\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\t\t\tif ( !context && elem.ownerDocument != document ) {\n\t\t\t\t\t\tsetDocument( elem );\n\t\t\t\t\t\txml = !documentIsHTML;\n\t\t\t\t\t}\n\t\t\t\t\twhile ( ( matcher = elementMatchers[ j++ ] ) ) {\n\t\t\t\t\t\tif ( matcher( elem, context || document, xml ) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( ( elem = !matcher && elem ) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\n\t\t\t// makes the latter nonnegative.\n\t\t\tmatchedCount += i;\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n\t\t\t// no element matchers and no seed.\n\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n\t\t\t// numerically zero.\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( ( matcher = setMatchers[ j++ ] ) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !( unmatched[ i ] || setMatched[ i ] ) ) {\n\t\t\t\t\t\t\t\tsetMatched[ i ] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !match ) {\n\t\t\tmatch = tokenize( selector );\n\t\t}\n\t\ti = match.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( match[ i ] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache(\n\t\t\tselector,\n\t\t\tmatcherFromGroupMatchers( elementMatchers, setMatchers )\n\t\t);\n\n\t\t// Save selector and tokenization\n\t\tcached.selector = selector;\n\t}\n\treturn cached;\n};\n\n/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nselect = Sizzle.select = function( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tcompiled = typeof selector === \"function\" && selector,\n\t\tmatch = !seed && tokenize( ( selector = compiled.selector || selector ) );\n\n\tresults = results || [];\n\n\t// Try to minimize operations if there is only one selector in the list and no seed\n\t// (the latter of which guarantees us context)\n\tif ( match.length === 1 ) {\n\n\t\t// Reduce context if the leading compound selector is an ID\n\t\ttokens = match[ 0 ] = match[ 0 ].slice( 0 );\n\t\tif ( tokens.length > 2 && ( token = tokens[ 0 ] ).type === \"ID\" &&\n\t\t\tcontext.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[ 1 ].type ] ) {\n\n\t\t\tcontext = ( Expr.find[ \"ID\" ]( token.matches[ 0 ]\n\t\t\t\t.replace( runescape, funescape ), context ) || [] )[ 0 ];\n\t\t\tif ( !context ) {\n\t\t\t\treturn results;\n\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t} else if ( compiled ) {\n\t\t\t\tcontext = context.parentNode;\n\t\t\t}\n\n\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t}\n\n\t\t// Fetch a seed set for right-to-left matching\n\t\ti = matchExpr[ \"needsContext\" ].test( selector ) ? 0 : tokens.length;\n\t\twhile ( i-- ) {\n\t\t\ttoken = tokens[ i ];\n\n\t\t\t// Abort if we hit a combinator\n\t\t\tif ( Expr.relative[ ( type = token.type ) ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( ( find = Expr.find[ type ] ) ) {\n\n\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\tif ( ( seed = find(\n\t\t\t\t\ttoken.matches[ 0 ].replace( runescape, funescape ),\n\t\t\t\t\trsibling.test( tokens[ 0 ].type ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext\n\t\t\t\t) ) ) {\n\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function if one is not provided\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\t( compiled || compile( selector, match ) )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\n\t);\n\treturn results;\n};\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split( \"\" ).sort( sortOrder ).join( \"\" ) === expando;\n\n// Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert( function( el ) {\n\n\t// Should return 1, but returns 4 (following)\n\treturn el.compareDocumentPosition( document.createElement( \"fieldset\" ) ) & 1;\n} );\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert( function( el ) {\n\tel.innerHTML = \"<a href='#'></a>\";\n\treturn el.firstChild.getAttribute( \"href\" ) === \"#\";\n} ) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t} );\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert( function( el ) {\n\tel.innerHTML = \"<input/>\";\n\tel.firstChild.setAttribute( \"value\", \"\" );\n\treturn el.firstChild.getAttribute( \"value\" ) === \"\";\n} ) ) {\n\taddHandle( \"value\", function( elem, _name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t} );\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert( function( el ) {\n\treturn el.getAttribute( \"disabled\" ) == null;\n} ) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t( val = elem.getAttributeNode( name ) ) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\t\tnull;\n\t\t}\n\t} );\n}\n\nreturn Sizzle;\n\n} )( window );\n\n\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\n\n// Deprecated\njQuery.expr[ \":\" ] = jQuery.expr.pseudos;\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\njQuery.escapeSelector = Sizzle.escape;\n\n\n\n\nvar dir = function( elem, dir, until ) {\n\tvar matched = [],\n\t\ttruncate = until !== undefined;\n\n\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\n\t\tif ( elem.nodeType === 1 ) {\n\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmatched.push( elem );\n\t\t}\n\t}\n\treturn matched;\n};\n\n\nvar siblings = function( n, elem ) {\n\tvar matched = [];\n\n\tfor ( ; n; n = n.nextSibling ) {\n\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\tmatched.push( n );\n\t\t}\n\t}\n\n\treturn matched;\n};\n\n\nvar rneedsContext = jQuery.expr.match.needsContext;\n\n\n\nfunction nodeName( elem, name ) {\n\n\treturn elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\n}\nvar rsingleTag = ( /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i );\n\n\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t} );\n\t}\n\n\t// Single element\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t} );\n\t}\n\n\t// Arraylike of elements (jQuery, arguments, Array)\n\tif ( typeof qualifier !== \"string\" ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\n\t\t} );\n\t}\n\n\t// Filtered directly for both simple and complex selectors\n\treturn jQuery.filter( qualifier, elements, not );\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\tif ( elems.length === 1 && elem.nodeType === 1 ) {\n\t\treturn jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];\n\t}\n\n\treturn jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\treturn elem.nodeType === 1;\n\t} ) );\n};\n\njQuery.fn.extend( {\n\tfind: function( selector ) {\n\t\tvar i, ret,\n\t\t\tlen = this.length,\n\t\t\tself = this;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ) );\n\t\t}\n\n\t\tret = this.pushStack( [] );\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\treturn len > 1 ? jQuery.uniqueSort( ret ) : ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], false ) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], true ) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n} );\n\n\n// Initialize a jQuery object\n\n\n// A central reference to the root jQuery(document)\nvar rootjQuery,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\t// Shortcut simple #id case for speed\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\n\n\tinit = jQuery.fn.init = function( selector, context, root ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Method init() accepts an alternate rootjQuery\n\t\t// so migrate can support jQuery.sub (gh-2101)\n\t\troot = root || rootjQuery;\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector[ 0 ] === \"<\" &&\n\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\n\t\t\t\tselector.length >= 3 ) {\n\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[ 1 ] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\n\n\t\t\t\t\t// Option to run scripts is true for back-compat\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[ 1 ],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[ 2 ] );\n\n\t\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis[ 0 ] = elem;\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || root ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis[ 0 ] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( isFunction( selector ) ) {\n\t\t\treturn root.ready !== undefined ?\n\t\t\t\troot.ready( selector ) :\n\n\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\tselector( jQuery );\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t};\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery( document );\n\n\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\n\t// Methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.fn.extend( {\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter( function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\ttargets = typeof selectors !== \"string\" && jQuery( selectors );\n\n\t\t// Positional selectors never match, since there's no _selection_ context\n\t\tif ( !rneedsContext.test( selectors ) ) {\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\n\n\t\t\t\t\t// Always skip document fragments\n\t\t\t\t\tif ( cur.nodeType < 11 && ( targets ?\n\t\t\t\t\t\ttargets.index( cur ) > -1 :\n\n\t\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\n\n\t\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within the set\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// Index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.uniqueSort(\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t)\n\t\t);\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\n\t\t);\n\t}\n} );\n\nfunction sibling( cur, dir ) {\n\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\n\treturn cur;\n}\n\njQuery.each( {\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, _i, until ) {\n\t\treturn dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, _i, until ) {\n\t\treturn dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, _i, until ) {\n\t\treturn dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn siblings( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n\t\tif ( elem.contentDocument != null &&\n\n\t\t\t// Support: IE 11+\n\t\t\t// <object> elements with no `data` attribute has an object\n\t\t\t// `contentDocument` with a `null` prototype.\n\t\t\tgetProto( elem.contentDocument ) ) {\n\n\t\t\treturn elem.contentDocument;\n\t\t}\n\n\t\t// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\n\t\t// Treat the template element as a regular one in browsers that\n\t\t// don't support it.\n\t\tif ( nodeName( elem, \"template\" ) ) {\n\t\t\telem = elem.content || elem;\n\t\t}\n\n\t\treturn jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.uniqueSort( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n} );\nvar rnothtmlwhite = ( /[^\\x20\\t\\r\\n\\f]+/g );\n\n\n\n// Convert String-formatted options into Object-formatted ones\nfunction createOptions( options ) {\n\tvar object = {};\n\tjQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t} );\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\tcreateOptions( options ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Flag to know if list is currently firing\n\t\tfiring,\n\n\t\t// Last fire value for non-forgettable lists\n\t\tmemory,\n\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\n\t\t// Flag to prevent firing\n\t\tlocked,\n\n\t\t// Actual callback list\n\t\tlist = [],\n\n\t\t// Queue of execution data for repeatable lists\n\t\tqueue = [],\n\n\t\t// Index of currently firing callback (modified by add/remove as needed)\n\t\tfiringIndex = -1,\n\n\t\t// Fire callbacks\n\t\tfire = function() {\n\n\t\t\t// Enforce single-firing\n\t\t\tlocked = locked || options.once;\n\n\t\t\t// Execute callbacks for all pending executions,\n\t\t\t// respecting firingIndex overrides and runtime changes\n\t\t\tfired = firing = true;\n\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\n\t\t\t\tmemory = queue.shift();\n\t\t\t\twhile ( ++firingIndex < list.length ) {\n\n\t\t\t\t\t// Run callback and check for early termination\n\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\n\t\t\t\t\t\toptions.stopOnFalse ) {\n\n\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\n\t\t\t\t\t\tfiringIndex = list.length;\n\t\t\t\t\t\tmemory = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Forget the data if we're done with it\n\t\t\tif ( !options.memory ) {\n\t\t\t\tmemory = false;\n\t\t\t}\n\n\t\t\tfiring = false;\n\n\t\t\t// Clean up if we're done firing for good\n\t\t\tif ( locked ) {\n\n\t\t\t\t// Keep an empty list if we have data for future add calls\n\t\t\t\tif ( memory ) {\n\t\t\t\t\tlist = [];\n\n\t\t\t\t// Otherwise, this object is spent\n\t\t\t\t} else {\n\t\t\t\t\tlist = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// Actual Callbacks object\n\t\tself = {\n\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\n\t\t\t\t\t// If we have memory from a past run, we should fire after adding\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfiringIndex = list.length - 1;\n\t\t\t\t\t\tqueue.push( memory );\n\t\t\t\t\t}\n\n\t\t\t\t\t( function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tif ( isFunction( arg ) ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && toType( arg ) !== \"string\" ) {\n\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t} )( arguments );\n\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\tvar index;\n\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\tlist.splice( index, 1 );\n\n\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ?\n\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\n\t\t\t\t\tlist.length > 0;\n\t\t\t},\n\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Disable .fire and .add\n\t\t\t// Abort any current/pending executions\n\t\t\t// Clear all callbacks and values\n\t\t\tdisable: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tlist = memory = \"\";\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\n\t\t\t// Disable .fire\n\t\t\t// Also disable .add unless we have memory (since it would have no effect)\n\t\t\t// Abort any pending executions\n\t\t\tlock: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tif ( !memory && !firing ) {\n\t\t\t\t\tlist = memory = \"\";\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tlocked: function() {\n\t\t\t\treturn !!locked;\n\t\t\t},\n\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( !locked ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tqueue.push( args );\n\t\t\t\t\tif ( !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\n\nfunction Identity( v ) {\n\treturn v;\n}\nfunction Thrower( ex ) {\n\tthrow ex;\n}\n\nfunction adoptValue( value, resolve, reject, noValue ) {\n\tvar method;\n\n\ttry {\n\n\t\t// Check for promise aspect first to privilege synchronous behavior\n\t\tif ( value && isFunction( ( method = value.promise ) ) ) {\n\t\t\tmethod.call( value ).done( resolve ).fail( reject );\n\n\t\t// Other thenables\n\t\t} else if ( value && isFunction( ( method = value.then ) ) ) {\n\t\t\tmethod.call( value, resolve, reject );\n\n\t\t// Other non-thenables\n\t\t} else {\n\n\t\t\t// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\n\t\t\t// * false: [ value ].slice( 0 ) => resolve( value )\n\t\t\t// * true: [ value ].slice( 1 ) => resolve()\n\t\t\tresolve.apply( undefined, [ value ].slice( noValue ) );\n\t\t}\n\n\t// For Promises/A+, convert exceptions into rejections\n\t// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n\t// Deferred#then to conditionally suppress rejection.\n\t} catch ( value ) {\n\n\t\t// Support: Android 4.0 only\n\t\t// Strict mode functions invoked without .call/.apply get global-object context\n\t\treject.apply( undefined, [ value ] );\n\t}\n}\n\njQuery.extend( {\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\n\t\t\t\t// action, add listener, callbacks,\n\t\t\t\t// ... .then handlers, argument index, [final state]\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"memory\" ), 2 ],\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 0, \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 1, \"rejected\" ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\t\"catch\": function( fn ) {\n\t\t\t\t\treturn promise.then( null, fn );\n\t\t\t\t},\n\n\t\t\t\t// Keep pipe for back-compat\n\t\t\t\tpipe: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( _i, tuple ) {\n\n\t\t\t\t\t\t\t// Map tuples (progress, done, fail) to arguments (done, fail, progress)\n\t\t\t\t\t\t\tvar fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];\n\n\t\t\t\t\t\t\t// deferred.progress(function() { bind to newDefer or newDefer.notify })\n\t\t\t\t\t\t\t// deferred.done(function() { bind to newDefer or newDefer.resolve })\n\t\t\t\t\t\t\t// deferred.fail(function() { bind to newDefer or newDefer.reject })\n\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\n\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\t\t\t\tthen: function( onFulfilled, onRejected, onProgress ) {\n\t\t\t\t\tvar maxDepth = 0;\n\t\t\t\t\tfunction resolve( depth, deferred, handler, special ) {\n\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\tvar that = this,\n\t\t\t\t\t\t\t\targs = arguments,\n\t\t\t\t\t\t\t\tmightThrow = function() {\n\t\t\t\t\t\t\t\t\tvar returned, then;\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.3\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-59\n\t\t\t\t\t\t\t\t\t// Ignore double-resolution attempts\n\t\t\t\t\t\t\t\t\tif ( depth < maxDepth ) {\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturned = handler.apply( that, args );\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.1\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-48\n\t\t\t\t\t\t\t\t\tif ( returned === deferred.promise() ) {\n\t\t\t\t\t\t\t\t\t\tthrow new TypeError( \"Thenable self-resolution\" );\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ sections 2.3.3.1, 3.5\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-54\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-75\n\t\t\t\t\t\t\t\t\t// Retrieve `then` only once\n\t\t\t\t\t\t\t\t\tthen = returned &&\n\n\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.4\n\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-64\n\t\t\t\t\t\t\t\t\t\t// Only check objects and functions for thenability\n\t\t\t\t\t\t\t\t\t\t( typeof returned === \"object\" ||\n\t\t\t\t\t\t\t\t\t\t\ttypeof returned === \"function\" ) &&\n\t\t\t\t\t\t\t\t\t\treturned.then;\n\n\t\t\t\t\t\t\t\t\t// Handle a returned thenable\n\t\t\t\t\t\t\t\t\tif ( isFunction( then ) ) {\n\n\t\t\t\t\t\t\t\t\t\t// Special processors (notify) just wait for resolution\n\t\t\t\t\t\t\t\t\t\tif ( special ) {\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special )\n\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t// Normal processors (resolve) also hook into progress\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\t// ...and disregard older resolution values\n\t\t\t\t\t\t\t\t\t\t\tmaxDepth++;\n\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdeferred.notifyWith )\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Handle all other returned values\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\tif ( handler !== Identity ) {\n\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\targs = [ returned ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// Process the value(s)\n\t\t\t\t\t\t\t\t\t\t// Default process is resolve\n\t\t\t\t\t\t\t\t\t\t( special || deferred.resolveWith )( that, args );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t// Only normal processors (resolve) catch and reject exceptions\n\t\t\t\t\t\t\t\tprocess = special ?\n\t\t\t\t\t\t\t\t\tmightThrow :\n\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\tmightThrow();\n\t\t\t\t\t\t\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t\t\t\t\t\t\tif ( jQuery.Deferred.exceptionHook ) {\n\t\t\t\t\t\t\t\t\t\t\t\tjQuery.Deferred.exceptionHook( e,\n\t\t\t\t\t\t\t\t\t\t\t\t\tprocess.stackTrace );\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.4.1\n\t\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-61\n\t\t\t\t\t\t\t\t\t\t\t// Ignore post-resolution exceptions\n\t\t\t\t\t\t\t\t\t\t\tif ( depth + 1 >= maxDepth ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\t\t\tif ( handler !== Thrower ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\t\t\targs = [ e ];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tdeferred.rejectWith( that, args );\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.1\n\t\t\t\t\t\t\t// https://promisesaplus.com/#point-57\n\t\t\t\t\t\t\t// Re-resolve promises immediately to dodge false rejection from\n\t\t\t\t\t\t\t// subsequent errors\n\t\t\t\t\t\t\tif ( depth ) {\n\t\t\t\t\t\t\t\tprocess();\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// Call an optional hook to record the stack, in case of exception\n\t\t\t\t\t\t\t\t// since it's otherwise lost when execution goes async\n\t\t\t\t\t\t\t\tif ( jQuery.Deferred.getStackHook ) {\n\t\t\t\t\t\t\t\t\tprocess.stackTrace = jQuery.Deferred.getStackHook();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twindow.setTimeout( process );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\n\t\t\t\t\t\t// progress_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 0 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onProgress ) ?\n\t\t\t\t\t\t\t\t\tonProgress :\n\t\t\t\t\t\t\t\t\tIdentity,\n\t\t\t\t\t\t\t\tnewDefer.notifyWith\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// fulfilled_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 1 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onFulfilled ) ?\n\t\t\t\t\t\t\t\t\tonFulfilled :\n\t\t\t\t\t\t\t\t\tIdentity\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// rejected_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 2 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onRejected ) ?\n\t\t\t\t\t\t\t\t\tonRejected :\n\t\t\t\t\t\t\t\t\tThrower\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 5 ];\n\n\t\t\t// promise.progress = list.add\n\t\t\t// promise.done = list.add\n\t\t\t// promise.fail = list.add\n\t\t\tpromise[ tuple[ 1 ] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add(\n\t\t\t\t\tfunction() {\n\n\t\t\t\t\t\t// state = \"resolved\" (i.e., fulfilled)\n\t\t\t\t\t\t// state = \"rejected\"\n\t\t\t\t\t\tstate = stateString;\n\t\t\t\t\t},\n\n\t\t\t\t\t// rejected_callbacks.disable\n\t\t\t\t\t// fulfilled_callbacks.disable\n\t\t\t\t\ttuples[ 3 - i ][ 2 ].disable,\n\n\t\t\t\t\t// rejected_handlers.disable\n\t\t\t\t\t// fulfilled_handlers.disable\n\t\t\t\t\ttuples[ 3 - i ][ 3 ].disable,\n\n\t\t\t\t\t// progress_callbacks.lock\n\t\t\t\t\ttuples[ 0 ][ 2 ].lock,\n\n\t\t\t\t\t// progress_handlers.lock\n\t\t\t\t\ttuples[ 0 ][ 3 ].lock\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// progress_handlers.fire\n\t\t\t// fulfilled_handlers.fire\n\t\t\t// rejected_handlers.fire\n\t\t\tlist.add( tuple[ 3 ].fire );\n\n\t\t\t// deferred.notify = function() { deferred.notifyWith(...) }\n\t\t\t// deferred.resolve = function() { deferred.resolveWith(...) }\n\t\t\t// deferred.reject = function() { deferred.rejectWith(...) }\n\t\t\tdeferred[ tuple[ 0 ] ] = function() {\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? undefined : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\t// deferred.notifyWith = list.fireWith\n\t\t\t// deferred.resolveWith = list.fireWith\n\t\t\t// deferred.rejectWith = list.fireWith\n\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\n\t\t} );\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( singleValue ) {\n\t\tvar\n\n\t\t\t// count of uncompleted subordinates\n\t\t\tremaining = arguments.length,\n\n\t\t\t// count of unprocessed arguments\n\t\t\ti = remaining,\n\n\t\t\t// subordinate fulfillment data\n\t\t\tresolveContexts = Array( i ),\n\t\t\tresolveValues = slice.call( arguments ),\n\n\t\t\t// the primary Deferred\n\t\t\tprimary = jQuery.Deferred(),\n\n\t\t\t// subordinate callback factory\n\t\t\tupdateFunc = function( i ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tresolveContexts[ i ] = this;\n\t\t\t\t\tresolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\tif ( !( --remaining ) ) {\n\t\t\t\t\t\tprimary.resolveWith( resolveContexts, resolveValues );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\n\t\t// Single- and empty arguments are adopted like Promise.resolve\n\t\tif ( remaining <= 1 ) {\n\t\t\tadoptValue( singleValue, primary.done( updateFunc( i ) ).resolve, primary.reject,\n\t\t\t\t!remaining );\n\n\t\t\t// Use .then() to unwrap secondary thenables (cf. gh-3000)\n\t\t\tif ( primary.state() === \"pending\" ||\n\t\t\t\tisFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {\n\n\t\t\t\treturn primary.then();\n\t\t\t}\n\t\t}\n\n\t\t// Multiple arguments are aggregated like Promise.all array elements\n\t\twhile ( i-- ) {\n\t\t\tadoptValue( resolveValues[ i ], updateFunc( i ), primary.reject );\n\t\t}\n\n\t\treturn primary.promise();\n\t}\n} );\n\n\n// These usually indicate a programmer mistake during development,\n// warn about them ASAP rather than swallowing them by default.\nvar rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n\njQuery.Deferred.exceptionHook = function( error, stack ) {\n\n\t// Support: IE 8 - 9 only\n\t// Console exists when dev tools are open, which can happen at any time\n\tif ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {\n\t\twindow.console.warn( \"jQuery.Deferred exception: \" + error.message, error.stack, stack );\n\t}\n};\n\n\n\n\njQuery.readyException = function( error ) {\n\twindow.setTimeout( function() {\n\t\tthrow error;\n\t} );\n};\n\n\n\n\n// The deferred used on DOM ready\nvar readyList = jQuery.Deferred();\n\njQuery.fn.ready = function( fn ) {\n\n\treadyList\n\t\t.then( fn )\n\n\t\t// Wrap jQuery.readyException in a function so that the lookup\n\t\t// happens at the time of error handling instead of callback\n\t\t// registration.\n\t\t.catch( function( error ) {\n\t\t\tjQuery.readyException( error );\n\t\t} );\n\n\treturn this;\n};\n\njQuery.extend( {\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\t}\n} );\n\njQuery.ready.then = readyList.then;\n\n// The ready event handler and self cleanup method\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\n\twindow.removeEventListener( \"load\", completed );\n\tjQuery.ready();\n}\n\n// Catch cases where $(document).ready() is called\n// after the browser event has already occurred.\n// Support: IE <=9 - 10 only\n// Older IE sometimes signals \"interactive\" too soon\nif ( document.readyState === \"complete\" ||\n\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n\n\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\twindow.setTimeout( jQuery.ready );\n\n} else {\n\n\t// Use the handy event callback\n\tdocument.addEventListener( \"DOMContentLoaded\", completed );\n\n\t// A fallback to window.onload, that will always work\n\twindow.addEventListener( \"load\", completed );\n}\n\n\n\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( toType( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, _key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn(\n\t\t\t\t\telems[ i ], key, raw ?\n\t\t\t\t\t\tvalue :\n\t\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( chainable ) {\n\t\treturn elems;\n\t}\n\n\t// Gets\n\tif ( bulk ) {\n\t\treturn fn.call( elems );\n\t}\n\n\treturn len ? fn( elems[ 0 ], key ) : emptyGet;\n};\n\n\n// Matches dashed string for camelizing\nvar rmsPrefix = /^-ms-/,\n\trdashAlpha = /-([a-z])/g;\n\n// Used by camelCase as callback to replace()\nfunction fcamelCase( _all, letter ) {\n\treturn letter.toUpperCase();\n}\n\n// Convert dashed to camelCase; used by the css and data modules\n// Support: IE <=9 - 11, Edge 12 - 15\n// Microsoft forgot to hump their vendor prefix (#9572)\nfunction camelCase( string ) {\n\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n}\nvar acceptData = function( owner ) {\n\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n};\n\n\n\n\nfunction Data() {\n\tthis.expando = jQuery.expando + Data.uid++;\n}\n\nData.uid = 1;\n\nData.prototype = {\n\n\tcache: function( owner ) {\n\n\t\t// Check if the owner object already has a cache\n\t\tvar value = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !value ) {\n\t\t\tvalue = {};\n\n\t\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t\t// but we should not, see #8335.\n\t\t\t// Always return an empty object.\n\t\t\tif ( acceptData( owner ) ) {\n\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t\t\t// use plain assignment\n\t\t\t\tif ( owner.nodeType ) {\n\t\t\t\t\towner[ this.expando ] = value;\n\n\t\t\t\t// Otherwise secure it in a non-enumerable property\n\t\t\t\t// configurable must be true to allow the property to be\n\t\t\t\t// deleted when data is removed\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\tcache = this.cache( owner );\n\n\t\t// Handle: [ owner, key, value ] args\n\t\t// Always use camelCase key (gh-2257)\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ camelCase( data ) ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\n\t\t\t// Copy the properties one-by-one to the cache object\n\t\t\tfor ( prop in data ) {\n\t\t\t\tcache[ camelCase( prop ) ] = data[ prop ];\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\treturn key === undefined ?\n\t\t\tthis.cache( owner ) :\n\n\t\t\t// Always use camelCase key (gh-2257)\n\t\t\towner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];\n\t},\n\taccess: function( owner, key, value ) {\n\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\n\n\t\t\treturn this.get( owner, key );\n\t\t}\n\n\t\t// When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i,\n\t\t\tcache = owner[ this.expando ];\n\n\t\tif ( cache === undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( key !== undefined ) {\n\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( Array.isArray( key ) ) {\n\n\t\t\t\t// If key is an array of keys...\n\t\t\t\t// We always set camelCase keys, so remove that.\n\t\t\t\tkey = key.map( camelCase );\n\t\t\t} else {\n\t\t\t\tkey = camelCase( key );\n\n\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\tkey = key in cache ?\n\t\t\t\t\t[ key ] :\n\t\t\t\t\t( key.match( rnothtmlwhite ) || [] );\n\t\t\t}\n\n\t\t\ti = key.length;\n\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ key[ i ] ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if there's no more data\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\n\n\t\t\t// Support: Chrome <=35 - 45\n\t\t\t// Webkit & Blink performance suffers when deleting properties\n\t\t\t// from DOM nodes, so set to undefined instead\n\t\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n\t\t\tif ( owner.nodeType ) {\n\t\t\t\towner[ this.expando ] = undefined;\n\t\t\t} else {\n\t\t\t\tdelete owner[ this.expando ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\tvar cache = owner[ this.expando ];\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\n\t}\n};\nvar dataPriv = new Data();\n\nvar dataUser = new Data();\n\n\n\n//\tImplementation Summary\n//\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n//\t2. Improve the module's maintainability by reducing the storage\n//\t\tpaths to a single mechanism.\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /[A-Z]/g;\n\nfunction getData( data ) {\n\tif ( data === \"true\" ) {\n\t\treturn true;\n\t}\n\n\tif ( data === \"false\" ) {\n\t\treturn false;\n\t}\n\n\tif ( data === \"null\" ) {\n\t\treturn null;\n\t}\n\n\t// Only convert to a number if it doesn't change the string\n\tif ( data === +data + \"\" ) {\n\t\treturn +data;\n\t}\n\n\tif ( rbrace.test( data ) ) {\n\t\treturn JSON.parse( data );\n\t}\n\n\treturn data;\n}\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = getData( data );\n\t\t\t} catch ( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdataUser.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\n\njQuery.extend( {\n\thasData: function( elem ) {\n\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn dataUser.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdataUser.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to dataPriv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn dataPriv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdataPriv.remove( elem, name );\n\t}\n} );\n\njQuery.fn.extend( {\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[ 0 ],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = dataUser.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE 11 only\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = camelCase( name.slice( 5 ) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tdataUser.set( this, key );\n\t\t\t} );\n\t\t}\n\n\t\treturn access( this, function( value ) {\n\t\t\tvar data;\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// The key will always be camelCased in Data\n\t\t\t\tdata = dataUser.get( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tthis.each( function() {\n\n\t\t\t\t// We always store the camelCased key\n\t\t\t\tdataUser.set( this, key, value );\n\t\t\t} );\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each( function() {\n\t\t\tdataUser.remove( this, key );\n\t\t} );\n\t}\n} );\n\n\njQuery.extend( {\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = dataPriv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || Array.isArray( data ) ) {\n\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// Clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// Not public - generate a queueHooks object, or return the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\n\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t} )\n\t\t} );\n\t}\n} );\n\njQuery.fn.extend( {\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[ 0 ], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each( function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// Ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t} );\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t} );\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile ( i-- ) {\n\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n} );\nvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\n\nvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\n\n\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\nvar documentElement = document.documentElement;\n\n\n\n\tvar isAttached = function( elem ) {\n\t\t\treturn jQuery.contains( elem.ownerDocument, elem );\n\t\t},\n\t\tcomposed = { composed: true };\n\n\t// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only\n\t// Check attachment across shadow DOM boundaries when possible (gh-3504)\n\t// Support: iOS 10.0-10.2 only\n\t// Early iOS 10 versions support `attachShadow` but not `getRootNode`,\n\t// leading to errors. We need to check for `getRootNode`.\n\tif ( documentElement.getRootNode ) {\n\t\tisAttached = function( elem ) {\n\t\t\treturn jQuery.contains( elem.ownerDocument, elem ) ||\n\t\t\t\telem.getRootNode( composed ) === elem.ownerDocument;\n\t\t};\n\t}\nvar isHiddenWithinTree = function( elem, el ) {\n\n\t\t// isHiddenWithinTree might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\n\t\t// Inline style trumps all\n\t\treturn elem.style.display === \"none\" ||\n\t\t\telem.style.display === \"\" &&\n\n\t\t\t// Otherwise, check computed style\n\t\t\t// Support: Firefox <=43 - 45\n\t\t\t// Disconnected elements can have computed display: none, so first confirm that elem is\n\t\t\t// in the document.\n\t\t\tisAttached( elem ) &&\n\n\t\t\tjQuery.css( elem, \"display\" ) === \"none\";\n\t};\n\n\n\nfunction adjustCSS( elem, prop, valueParts, tween ) {\n\tvar adjusted, scale,\n\t\tmaxIterations = 20,\n\t\tcurrentValue = tween ?\n\t\t\tfunction() {\n\t\t\t\treturn tween.cur();\n\t\t\t} :\n\t\t\tfunction() {\n\t\t\t\treturn jQuery.css( elem, prop, \"\" );\n\t\t\t},\n\t\tinitial = currentValue(),\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t// Starting value computation is required for potential unit mismatches\n\t\tinitialInUnit = elem.nodeType &&\n\t\t\t( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\n\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\n\n\t\t// Support: Firefox <=54\n\t\t// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)\n\t\tinitial = initial / 2;\n\n\t\t// Trust units reported by jQuery.css\n\t\tunit = unit || initialInUnit[ 3 ];\n\n\t\t// Iteratively approximate from a nonzero starting point\n\t\tinitialInUnit = +initial || 1;\n\n\t\twhile ( maxIterations-- ) {\n\n\t\t\t// Evaluate and update our best guess (doubling guesses that zero out).\n\t\t\t// Finish if the scale equals or crosses 1 (making the old*new product non-positive).\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\t\t\tif ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {\n\t\t\t\tmaxIterations = 0;\n\t\t\t}\n\t\t\tinitialInUnit = initialInUnit / scale;\n\n\t\t}\n\n\t\tinitialInUnit = initialInUnit * 2;\n\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\n\t\t// Make sure we update the tween properties later on\n\t\tvalueParts = valueParts || [];\n\t}\n\n\tif ( valueParts ) {\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\n\n\t\t// Apply relative offset (+=/-=) if specified\n\t\tadjusted = valueParts[ 1 ] ?\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\n\t\t\t+valueParts[ 2 ];\n\t\tif ( tween ) {\n\t\t\ttween.unit = unit;\n\t\t\ttween.start = initialInUnit;\n\t\t\ttween.end = adjusted;\n\t\t}\n\t}\n\treturn adjusted;\n}\n\n\nvar defaultDisplayMap = {};\n\nfunction getDefaultDisplay( elem ) {\n\tvar temp,\n\t\tdoc = elem.ownerDocument,\n\t\tnodeName = elem.nodeName,\n\t\tdisplay = defaultDisplayMap[ nodeName ];\n\n\tif ( display ) {\n\t\treturn display;\n\t}\n\n\ttemp = doc.body.appendChild( doc.createElement( nodeName ) );\n\tdisplay = jQuery.css( temp, \"display\" );\n\n\ttemp.parentNode.removeChild( temp );\n\n\tif ( display === \"none\" ) {\n\t\tdisplay = \"block\";\n\t}\n\tdefaultDisplayMap[ nodeName ] = display;\n\n\treturn display;\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\t// Determine new display value for elements that need to change\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\n\t\t\t// Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n\t\t\t// check is required in this first loop unless we have a nonempty display value (either\n\t\t\t// inline or about-to-be-restored)\n\t\t\tif ( display === \"none\" ) {\n\t\t\t\tvalues[ index ] = dataPriv.get( elem, \"display\" ) || null;\n\t\t\t\tif ( !values[ index ] ) {\n\t\t\t\t\telem.style.display = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( elem.style.display === \"\" && isHiddenWithinTree( elem ) ) {\n\t\t\t\tvalues[ index ] = getDefaultDisplay( elem );\n\t\t\t}\n\t\t} else {\n\t\t\tif ( display !== \"none\" ) {\n\t\t\t\tvalues[ index ] = \"none\";\n\n\t\t\t\t// Remember what we're overwriting\n\t\t\t\tdataPriv.set( elem, \"display\", display );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of the elements in a second loop to avoid constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\tif ( values[ index ] != null ) {\n\t\t\telements[ index ].style.display = values[ index ];\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.fn.extend( {\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tif ( isHiddenWithinTree( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t} );\n\t}\n} );\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\n\nvar rtagName = ( /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i );\n\nvar rscriptType = ( /^$|^module$|\\/(?:java|ecma)script/i );\n\n\n\n( function() {\n\tvar fragment = document.createDocumentFragment(),\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\tinput = document.createElement( \"input\" );\n\n\t// Support: Android 4.0 - 4.3 only\n\t// Check state lost if the name is set (#11217)\n\t// Support: Windows Web Apps (WWA)\n\t// `name` and `type` must use .setAttribute for WWA (#14901)\n\tinput.setAttribute( \"type\", \"radio\" );\n\tinput.setAttribute( \"checked\", \"checked\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tdiv.appendChild( input );\n\n\t// Support: Android <=4.1 only\n\t// Older WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: IE <=11 only\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n\n\t// Support: IE <=9 only\n\t// IE <=9 replaces <option> tags with their contents when inserted outside of\n\t// the select element.\n\tdiv.innerHTML = \"<option></option>\";\n\tsupport.option = !!div.lastChild;\n} )();\n\n\n// We have to close these tags to support XHTML (#13200)\nvar wrapMap = {\n\n\t// XHTML parsers do not magically insert elements in the\n\t// same way that tag soup parsers do. So we cannot shorten\n\t// this by omitting <tbody> or other required elements.\n\tthead: [ 1, \"<table>\", \"</table>\" ],\n\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t_default: [ 0, \"\", \"\" ]\n};\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n// Support: IE <=9 only\nif ( !support.option ) {\n\twrapMap.optgroup = wrapMap.option = [ 1, \"<select multiple='multiple'>\", \"</select>\" ];\n}\n\n\nfunction getAll( context, tag ) {\n\n\t// Support: IE <=9 - 11 only\n\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\n\tvar ret;\n\n\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\tret = context.getElementsByTagName( tag || \"*\" );\n\n\t} else if ( typeof context.querySelectorAll !== \"undefined\" ) {\n\t\tret = context.querySelectorAll( tag || \"*\" );\n\n\t} else {\n\t\tret = [];\n\t}\n\n\tif ( tag === undefined || tag && nodeName( context, tag ) ) {\n\t\treturn jQuery.merge( [ context ], ret );\n\t}\n\n\treturn ret;\n}\n\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar i = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdataPriv.set(\n\t\t\telems[ i ],\n\t\t\t\"globalEval\",\n\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\n\nvar rhtml = /<|&#?\\w+;/;\n\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\n\tvar elem, tmp, tag, wrap, attached, j,\n\t\tfragment = context.createDocumentFragment(),\n\t\tnodes = [],\n\t\ti = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\telem = elems[ i ];\n\n\t\tif ( elem || elem === 0 ) {\n\n\t\t\t// Add nodes directly\n\t\t\tif ( toType( elem ) === \"object\" ) {\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t// Convert non-html into a text node\n\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t// Convert html into DOM nodes\n\t\t\t} else {\n\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\n\n\t\t\t\t// Deserialize a standard representation\n\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\n\n\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\tj = wrap[ 0 ];\n\t\t\t\twhile ( j-- ) {\n\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t}\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t// Remember the top-level container\n\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t// Ensure the created nodes are orphaned (#12392)\n\t\t\t\ttmp.textContent = \"\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove wrapper from fragment\n\tfragment.textContent = \"\";\n\n\ti = 0;\n\twhile ( ( elem = nodes[ i++ ] ) ) {\n\n\t\t// Skip elements already in the context collection (trac-4087)\n\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\n\t\t\tif ( ignored ) {\n\t\t\t\tignored.push( elem );\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tattached = isAttached( elem );\n\n\t\t// Append to fragment\n\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t// Preserve script evaluation history\n\t\tif ( attached ) {\n\t\t\tsetGlobalEval( tmp );\n\t\t}\n\n\t\t// Capture executables\n\t\tif ( scripts ) {\n\t\t\tj = 0;\n\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\n\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\tscripts.push( elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn fragment;\n}\n\n\nvar rtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\n// Support: IE <=9 - 11+\n// focus() and blur() are asynchronous, except when they are no-op.\n// So expect focus to be synchronous when the element is already active,\n// and blur to be synchronous when the element is not already active.\n// (focus and blur are always synchronous in other supported browsers,\n// this just defines when we can count on it).\nfunction expectSync( elem, type ) {\n\treturn ( elem === safeActiveElement() ) === ( type === \"focus\" );\n}\n\n// Support: IE <=9 only\n// Accessing document.activeElement can throw unexpectedly\n// https://bugs.jquery.com/ticket/13393\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\nfunction on( elem, types, selector, data, fn, one ) {\n\tvar origFn, type;\n\n\t// Types can be a map of types/handlers\n\tif ( typeof types === \"object\" ) {\n\n\t\t// ( types-Object, selector, data )\n\t\tif ( typeof selector !== \"string\" ) {\n\n\t\t\t// ( types-Object, data )\n\t\t\tdata = data || selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tfor ( type in types ) {\n\t\t\ton( elem, type, selector, data, types[ type ], one );\n\t\t}\n\t\treturn elem;\n\t}\n\n\tif ( data == null && fn == null ) {\n\n\t\t// ( types, fn )\n\t\tfn = selector;\n\t\tdata = selector = undefined;\n\t} else if ( fn == null ) {\n\t\tif ( typeof selector === \"string\" ) {\n\n\t\t\t// ( types, selector, fn )\n\t\t\tfn = data;\n\t\t\tdata = undefined;\n\t\t} else {\n\n\t\t\t// ( types, data, fn )\n\t\t\tfn = data;\n\t\t\tdata = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t}\n\tif ( fn === false ) {\n\t\tfn = returnFalse;\n\t} else if ( !fn ) {\n\t\treturn elem;\n\t}\n\n\tif ( one === 1 ) {\n\t\torigFn = fn;\n\t\tfn = function( event ) {\n\n\t\t\t// Can use an empty set, since event contains the info\n\t\t\tjQuery().off( event );\n\t\t\treturn origFn.apply( this, arguments );\n\t\t};\n\n\t\t// Use same guid so caller can remove using origFn\n\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t}\n\treturn elem.each( function() {\n\t\tjQuery.event.add( this, types, fn, data, selector );\n\t} );\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.get( elem );\n\n\t\t// Only attach events to objects that accept data\n\t\tif ( !acceptData( elem ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Ensure that invalid selectors throw exceptions at attach time\n\t\t// Evaluate against documentElement in case elem is a non-element node (e.g., document)\n\t\tif ( selector ) {\n\t\t\tjQuery.find.matchesSelector( documentElement, selector );\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !( events = elemData.events ) ) {\n\t\t\tevents = elemData.events = Object.create( null );\n\t\t}\n\t\tif ( !( eventHandle = elemData.handle ) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t};\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend( {\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join( \".\" )\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !( handlers = events[ type ] ) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup ||\n\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\n\n\t\tif ( !elemData || !( events = elemData.events ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[ 2 ] &&\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector ||\n\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown ||\n\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove data and the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdataPriv.remove( elem, \"handle events\" );\n\t\t}\n\t},\n\n\tdispatch: function( nativeEvent ) {\n\n\t\tvar i, j, ret, matched, handleObj, handlerQueue,\n\t\t\targs = new Array( arguments.length ),\n\n\t\t\t// Make a writable jQuery.Event from the native event object\n\t\t\tevent = jQuery.event.fix( nativeEvent ),\n\n\t\t\thandlers = (\n\t\t\t\tdataPriv.get( this, \"events\" ) || Object.create( null )\n\t\t\t)[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[ 0 ] = event;\n\n\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\n\t\t\t\t!event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// If the event is namespaced, then each handler is only invoked if it is\n\t\t\t\t// specially universal or its namespaces are a superset of the event's.\n\t\t\t\tif ( !event.rnamespace || handleObj.namespace === false ||\n\t\t\t\t\tevent.rnamespace.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\n\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, handleObj, sel, matchedHandlers, matchedSelectors,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Find delegate handlers\n\t\tif ( delegateCount &&\n\n\t\t\t// Support: IE <=9\n\t\t\t// Black-hole SVG <use> instance trees (trac-13180)\n\t\t\tcur.nodeType &&\n\n\t\t\t// Support: Firefox <=42\n\t\t\t// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n\t\t\t// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n\t\t\t// Support: IE 11 only\n\t\t\t// ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n\t\t\t!( event.type === \"click\" && event.button >= 1 ) ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't check non-elements (#13208)\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\tif ( cur.nodeType === 1 && !( event.type === \"click\" && cur.disabled === true ) ) {\n\t\t\t\t\tmatchedHandlers = [];\n\t\t\t\t\tmatchedSelectors = {};\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatchedSelectors[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] ) {\n\t\t\t\t\t\t\tmatchedHandlers.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matchedHandlers.length ) {\n\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matchedHandlers } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tcur = this;\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\taddProp: function( name, hook ) {\n\t\tObject.defineProperty( jQuery.Event.prototype, name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\n\t\t\tget: isFunction( hook ) ?\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\treturn hook( this.originalEvent );\n\t\t\t\t\t}\n\t\t\t\t} :\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\treturn this.originalEvent[ name ];\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\tset: function( value ) {\n\t\t\t\tObject.defineProperty( this, name, {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tvalue: value\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t},\n\n\tfix: function( originalEvent ) {\n\t\treturn originalEvent[ jQuery.expando ] ?\n\t\t\toriginalEvent :\n\t\t\tnew jQuery.Event( originalEvent );\n\t},\n\n\tspecial: {\n\t\tload: {\n\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tclick: {\n\n\t\t\t// Utilize native event to ensure correct state for checkable inputs\n\t\t\tsetup: function( data ) {\n\n\t\t\t\t// For mutual compressibility with _default, replace `this` access with a local var.\n\t\t\t\t// `|| data` is dead code meant only to preserve the variable through minification.\n\t\t\t\tvar el = this || data;\n\n\t\t\t\t// Claim the first handler\n\t\t\t\tif ( rcheckableType.test( el.type ) &&\n\t\t\t\t\tel.click && nodeName( el, \"input\" ) ) {\n\n\t\t\t\t\t// dataPriv.set( el, \"click\", ... )\n\t\t\t\t\tleverageNative( el, \"click\", returnTrue );\n\t\t\t\t}\n\n\t\t\t\t// Return false to allow normal processing in the caller\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\ttrigger: function( data ) {\n\n\t\t\t\t// For mutual compressibility with _default, replace `this` access with a local var.\n\t\t\t\t// `|| data` is dead code meant only to preserve the variable through minification.\n\t\t\t\tvar el = this || data;\n\n\t\t\t\t// Force setup before triggering a click\n\t\t\t\tif ( rcheckableType.test( el.type ) &&\n\t\t\t\t\tel.click && nodeName( el, \"input\" ) ) {\n\n\t\t\t\t\tleverageNative( el, \"click\" );\n\t\t\t\t}\n\n\t\t\t\t// Return non-false to allow normal event-path propagation\n\t\t\t\treturn true;\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, suppress native .click() on links\n\t\t\t// Also prevent it if we're currently inside a leveraged native-event stack\n\t\t\t_default: function( event ) {\n\t\t\t\tvar target = event.target;\n\t\t\t\treturn rcheckableType.test( target.type ) &&\n\t\t\t\t\ttarget.click && nodeName( target, \"input\" ) &&\n\t\t\t\t\tdataPriv.get( target, \"click\" ) ||\n\t\t\t\t\tnodeName( target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Ensure the presence of an event listener that handles manually-triggered\n// synthetic events by interrupting progress until reinvoked in response to\n// *native* events that it fires directly, ensuring that state changes have\n// already occurred before other listeners are invoked.\nfunction leverageNative( el, type, expectSync ) {\n\n\t// Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add\n\tif ( !expectSync ) {\n\t\tif ( dataPriv.get( el, type ) === undefined ) {\n\t\t\tjQuery.event.add( el, type, returnTrue );\n\t\t}\n\t\treturn;\n\t}\n\n\t// Register the controller as a special universal handler for all event namespaces\n\tdataPriv.set( el, type, false );\n\tjQuery.event.add( el, type, {\n\t\tnamespace: false,\n\t\thandler: function( event ) {\n\t\t\tvar notAsync, result,\n\t\t\t\tsaved = dataPriv.get( this, type );\n\n\t\t\tif ( ( event.isTrigger & 1 ) && this[ type ] ) {\n\n\t\t\t\t// Interrupt processing of the outer synthetic .trigger()ed event\n\t\t\t\t// Saved data should be false in such cases, but might be a leftover capture object\n\t\t\t\t// from an async native handler (gh-4350)\n\t\t\t\tif ( !saved.length ) {\n\n\t\t\t\t\t// Store arguments for use when handling the inner native event\n\t\t\t\t\t// There will always be at least one argument (an event object), so this array\n\t\t\t\t\t// will not be confused with a leftover capture object.\n\t\t\t\t\tsaved = slice.call( arguments );\n\t\t\t\t\tdataPriv.set( this, type, saved );\n\n\t\t\t\t\t// Trigger the native event and capture its result\n\t\t\t\t\t// Support: IE <=9 - 11+\n\t\t\t\t\t// focus() and blur() are asynchronous\n\t\t\t\t\tnotAsync = expectSync( this, type );\n\t\t\t\t\tthis[ type ]();\n\t\t\t\t\tresult = dataPriv.get( this, type );\n\t\t\t\t\tif ( saved !== result || notAsync ) {\n\t\t\t\t\t\tdataPriv.set( this, type, false );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult = {};\n\t\t\t\t\t}\n\t\t\t\t\tif ( saved !== result ) {\n\n\t\t\t\t\t\t// Cancel the outer synthetic event\n\t\t\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\t\t// Support: Chrome 86+\n\t\t\t\t\t\t// In Chrome, if an element having a focusout handler is blurred by\n\t\t\t\t\t\t// clicking outside of it, it invokes the handler synchronously. If\n\t\t\t\t\t\t// that handler calls `.remove()` on the element, the data is cleared,\n\t\t\t\t\t\t// leaving `result` undefined. We need to guard against this.\n\t\t\t\t\t\treturn result && result.value;\n\t\t\t\t\t}\n\n\t\t\t\t// If this is an inner synthetic event for an event with a bubbling surrogate\n\t\t\t\t// (focus or blur), assume that the surrogate already propagated from triggering the\n\t\t\t\t// native event and prevent that from happening again here.\n\t\t\t\t// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the\n\t\t\t\t// bubbling surrogate propagates *after* the non-bubbling base), but that seems\n\t\t\t\t// less bad than duplication.\n\t\t\t\t} else if ( ( jQuery.event.special[ type ] || {} ).delegateType ) {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t}\n\n\t\t\t// If this is a native event triggered above, everything is now in order\n\t\t\t// Fire an inner synthetic event with the original arguments\n\t\t\t} else if ( saved.length ) {\n\n\t\t\t\t// ...and capture the result\n\t\t\t\tdataPriv.set( this, type, {\n\t\t\t\t\tvalue: jQuery.event.trigger(\n\n\t\t\t\t\t\t// Support: IE <=9 - 11+\n\t\t\t\t\t\t// Extend with the prototype to reset the above stopImmediatePropagation()\n\t\t\t\t\t\tjQuery.extend( saved[ 0 ], jQuery.Event.prototype ),\n\t\t\t\t\t\tsaved.slice( 1 ),\n\t\t\t\t\t\tthis\n\t\t\t\t\t)\n\t\t\t\t} );\n\n\t\t\t\t// Abort handling of the native event\n\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t}\n\t\t}\n\t} );\n}\n\njQuery.removeEvent = function( elem, type, handle ) {\n\n\t// This \"if\" is needed for plain objects\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\n\t// Allow instantiation without the 'new' keyword\n\tif ( !( this instanceof jQuery.Event ) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\tsrc.defaultPrevented === undefined &&\n\n\t\t\t\t// Support: Android <=2.3 only\n\t\t\t\tsrc.returnValue === false ?\n\t\t\treturnTrue :\n\t\t\treturnFalse;\n\n\t\t// Create target properties\n\t\t// Support: Safari <=6 - 7 only\n\t\t// Target should not be a text node (#504, #13143)\n\t\tthis.target = ( src.target && src.target.nodeType === 3 ) ?\n\t\t\tsrc.target.parentNode :\n\t\t\tsrc.target;\n\n\t\tthis.currentTarget = src.currentTarget;\n\t\tthis.relatedTarget = src.relatedTarget;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || Date.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tconstructor: jQuery.Event,\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\tisSimulated: false,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Includes all common event props including KeyEvent and MouseEvent specific props\njQuery.each( {\n\taltKey: true,\n\tbubbles: true,\n\tcancelable: true,\n\tchangedTouches: true,\n\tctrlKey: true,\n\tdetail: true,\n\teventPhase: true,\n\tmetaKey: true,\n\tpageX: true,\n\tpageY: true,\n\tshiftKey: true,\n\tview: true,\n\t\"char\": true,\n\tcode: true,\n\tcharCode: true,\n\tkey: true,\n\tkeyCode: true,\n\tbutton: true,\n\tbuttons: true,\n\tclientX: true,\n\tclientY: true,\n\toffsetX: true,\n\toffsetY: true,\n\tpointerId: true,\n\tpointerType: true,\n\tscreenX: true,\n\tscreenY: true,\n\ttargetTouches: true,\n\ttoElement: true,\n\ttouches: true,\n\twhich: true\n}, jQuery.event.addProp );\n\njQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( type, delegateType ) {\n\tjQuery.event.special[ type ] = {\n\n\t\t// Utilize native event if possible so blur/focus sequence is correct\n\t\tsetup: function() {\n\n\t\t\t// Claim the first handler\n\t\t\t// dataPriv.set( this, \"focus\", ... )\n\t\t\t// dataPriv.set( this, \"blur\", ... )\n\t\t\tleverageNative( this, type, expectSync );\n\n\t\t\t// Return false to allow normal processing in the caller\n\t\t\treturn false;\n\t\t},\n\t\ttrigger: function() {\n\n\t\t\t// Force setup before trigger\n\t\t\tleverageNative( this, type );\n\n\t\t\t// Return non-false to allow normal event-path propagation\n\t\t\treturn true;\n\t\t},\n\n\t\t// Suppress native focus or blur as it's already being fired\n\t\t// in leverageNative.\n\t\t_default: function() {\n\t\t\treturn true;\n\t\t},\n\n\t\tdelegateType: delegateType\n\t};\n} );\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// so that event delegation works in jQuery.\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\n//\n// Support: Safari 7 only\n// Safari sends mouseenter too often; see:\n// https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n// for the description of the bug (it existed in older Chrome versions as well).\njQuery.each( {\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\",\n\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mouseenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n} );\n\njQuery.fn.extend( {\n\n\ton: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn );\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ?\n\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\n\t\t\t\t\thandleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t} );\n\t}\n} );\n\n\nvar\n\n\t// Support: IE <=10 - 11, Edge 12 - 13 only\n\t// In IE/Edge using regex groups here causes severe slowdowns.\n\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\n\trnoInnerhtml = /<script|<style|<link/i,\n\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\n\n// Prefer a tbody over its parent table for containing new rows\nfunction manipulationTarget( elem, content ) {\n\tif ( nodeName( elem, \"table\" ) &&\n\t\tnodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ) {\n\n\t\treturn jQuery( elem ).children( \"tbody\" )[ 0 ] || elem;\n\t}\n\n\treturn elem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tif ( ( elem.type || \"\" ).slice( 0, 5 ) === \"true/\" ) {\n\t\telem.type = elem.type.slice( 5 );\n\t} else {\n\t\telem.removeAttribute( \"type\" );\n\t}\n\n\treturn elem;\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( dataPriv.hasData( src ) ) {\n\t\tpdataOld = dataPriv.get( src );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdataPriv.remove( dest, \"handle events\" );\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( dataUser.hasData( src ) ) {\n\t\tudataOld = dataUser.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdataUser.set( dest, udataCur );\n\t}\n}\n\n// Fix IE bugs, see support tests\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\nfunction domManip( collection, args, callback, ignored ) {\n\n\t// Flatten any nested arrays\n\targs = flat( args );\n\n\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\ti = 0,\n\t\tl = collection.length,\n\t\tiNoClone = l - 1,\n\t\tvalue = args[ 0 ],\n\t\tvalueIsFunction = isFunction( value );\n\n\t// We can't cloneNode fragments that contain checked, in WebKit\n\tif ( valueIsFunction ||\n\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\treturn collection.each( function( index ) {\n\t\t\tvar self = collection.eq( index );\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t}\n\t\t\tdomManip( self, args, callback, ignored );\n\t\t} );\n\t}\n\n\tif ( l ) {\n\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\n\t\tfirst = fragment.firstChild;\n\n\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\tfragment = first;\n\t\t}\n\n\t\t// Require either new content or an interest in ignored elements to invoke the callback\n\t\tif ( first || ignored ) {\n\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\thasScripts = scripts.length;\n\n\t\t\t// Use the original fragment for the last item\n\t\t\t// instead of the first because it can end up\n\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tnode = fragment;\n\n\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\tif ( hasScripts ) {\n\n\t\t\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcallback.call( collection[ i ], node, i );\n\t\t\t}\n\n\t\t\tif ( hasScripts ) {\n\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t// Reenable scripts\n\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\n\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\tif ( node.src && ( node.type || \"\" ).toLowerCase()  !== \"module\" ) {\n\n\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\tif ( jQuery._evalUrl && !node.noModule ) {\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src, {\n\t\t\t\t\t\t\t\t\tnonce: node.nonce || node.getAttribute( \"nonce\" )\n\t\t\t\t\t\t\t\t}, doc );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tDOMEval( node.textContent.replace( rcleanScript, \"\" ), node, doc );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn collection;\n}\n\nfunction remove( elem, selector, keepData ) {\n\tvar node,\n\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\n\t\ti = 0;\n\n\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\n\t\tif ( !keepData && node.nodeType === 1 ) {\n\t\t\tjQuery.cleanData( getAll( node ) );\n\t\t}\n\n\t\tif ( node.parentNode ) {\n\t\t\tif ( keepData && isAttached( node ) ) {\n\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\n\t\t\t}\n\t\t\tnode.parentNode.removeChild( node );\n\t\t}\n\t}\n\n\treturn elem;\n}\n\njQuery.extend( {\n\thtmlPrefilter: function( html ) {\n\t\treturn html;\n\t},\n\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = isAttached( elem );\n\n\t\t// Fix IE cloning issues\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, type,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\n\t\t\tif ( acceptData( elem ) ) {\n\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataPriv.expando ] = undefined;\n\t\t\t\t}\n\t\t\t\tif ( elem[ dataUser.expando ] ) {\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataUser.expando ] = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n} );\n\njQuery.fn.extend( {\n\tdetach: function( selector ) {\n\t\treturn remove( this, selector, true );\n\t},\n\n\tremove: function( selector ) {\n\t\treturn remove( this, selector );\n\t},\n\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().each( function() {\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t} );\n\t},\n\n\tprepend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t} );\n\t},\n\n\tbefore: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t} );\n\t},\n\n\tafter: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t} );\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map( function() {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t} );\n\t},\n\n\thtml: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = jQuery.htmlPrefilter( value );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch ( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar ignored = [];\n\n\t\t// Make the changes, replacing each non-ignored context element with the new content\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tvar parent = this.parentNode;\n\n\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\n\t\t\t\tjQuery.cleanData( getAll( this ) );\n\t\t\t\tif ( parent ) {\n\t\t\t\t\tparent.replaceChild( elem, this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Force callback invocation\n\t\t}, ignored );\n\t}\n} );\n\njQuery.each( {\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t// .get() because push.apply(_, arraylike) throws on ancient WebKit\n\t\t\tpush.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n} );\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\nvar getStyles = function( elem ) {\n\n\t\t// Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n\t\t// IE throws on elements created in popups\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\tvar view = elem.ownerDocument.defaultView;\n\n\t\tif ( !view || !view.opener ) {\n\t\t\tview = window;\n\t\t}\n\n\t\treturn view.getComputedStyle( elem );\n\t};\n\nvar swap = function( elem, options, callback ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.call( elem );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};\n\n\nvar rboxStyle = new RegExp( cssExpand.join( \"|\" ), \"i\" );\n\n\n\n( function() {\n\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t// so they're executed at the same time to save the second computation.\n\tfunction computeStyleTests() {\n\n\t\t// This is a singleton, we need to execute it only once\n\t\tif ( !div ) {\n\t\t\treturn;\n\t\t}\n\n\t\tcontainer.style.cssText = \"position:absolute;left:-11111px;width:60px;\" +\n\t\t\t\"margin-top:1px;padding:0;border:0\";\n\t\tdiv.style.cssText =\n\t\t\t\"position:relative;display:block;box-sizing:border-box;overflow:scroll;\" +\n\t\t\t\"margin:auto;border:1px;padding:1px;\" +\n\t\t\t\"width:60%;top:1%\";\n\t\tdocumentElement.appendChild( container ).appendChild( div );\n\n\t\tvar divStyle = window.getComputedStyle( div );\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\n\t\t// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n\t\treliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;\n\n\t\t// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\n\t\t// Some styles come back with percentage values, even though they shouldn't\n\t\tdiv.style.right = \"60%\";\n\t\tpixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;\n\n\t\t// Support: IE 9 - 11 only\n\t\t// Detect misreporting of content dimensions for box-sizing:border-box elements\n\t\tboxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;\n\n\t\t// Support: IE 9 only\n\t\t// Detect overflow:scroll screwiness (gh-3699)\n\t\t// Support: Chrome <=64\n\t\t// Don't get tricked when zoom affects offsetWidth (gh-4029)\n\t\tdiv.style.position = \"absolute\";\n\t\tscrollboxSizeVal = roundPixelMeasures( div.offsetWidth / 3 ) === 12;\n\n\t\tdocumentElement.removeChild( container );\n\n\t\t// Nullify the div so it wouldn't be stored in the memory and\n\t\t// it will also be a sign that checks already performed\n\t\tdiv = null;\n\t}\n\n\tfunction roundPixelMeasures( measure ) {\n\t\treturn Math.round( parseFloat( measure ) );\n\t}\n\n\tvar pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,\n\t\treliableTrDimensionsVal, reliableMarginLeftVal,\n\t\tcontainer = document.createElement( \"div\" ),\n\t\tdiv = document.createElement( \"div\" );\n\n\t// Finish early in limited (non-browser) environments\n\tif ( !div.style ) {\n\t\treturn;\n\t}\n\n\t// Support: IE <=9 - 11 only\n\t// Style of cloned element affects source element cloned (#8908)\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\tjQuery.extend( support, {\n\t\tboxSizingReliable: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn boxSizingReliableVal;\n\t\t},\n\t\tpixelBoxStyles: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelBoxStylesVal;\n\t\t},\n\t\tpixelPosition: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelPositionVal;\n\t\t},\n\t\treliableMarginLeft: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn reliableMarginLeftVal;\n\t\t},\n\t\tscrollboxSize: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn scrollboxSizeVal;\n\t\t},\n\n\t\t// Support: IE 9 - 11+, Edge 15 - 18+\n\t\t// IE/Edge misreport `getComputedStyle` of table rows with width/height\n\t\t// set in CSS while `offset*` properties report correct values.\n\t\t// Behavior in IE 9 is more subtle than in newer versions & it passes\n\t\t// some versions of this test; make sure not to make it pass there!\n\t\t//\n\t\t// Support: Firefox 70+\n\t\t// Only Firefox includes border widths\n\t\t// in computed dimensions. (gh-4529)\n\t\treliableTrDimensions: function() {\n\t\t\tvar table, tr, trChild, trStyle;\n\t\t\tif ( reliableTrDimensionsVal == null ) {\n\t\t\t\ttable = document.createElement( \"table\" );\n\t\t\t\ttr = document.createElement( \"tr\" );\n\t\t\t\ttrChild = document.createElement( \"div\" );\n\n\t\t\t\ttable.style.cssText = \"position:absolute;left:-11111px;border-collapse:separate\";\n\t\t\t\ttr.style.cssText = \"border:1px solid\";\n\n\t\t\t\t// Support: Chrome 86+\n\t\t\t\t// Height set through cssText does not get applied.\n\t\t\t\t// Computed height then comes back as 0.\n\t\t\t\ttr.style.height = \"1px\";\n\t\t\t\ttrChild.style.height = \"9px\";\n\n\t\t\t\t// Support: Android 8 Chrome 86+\n\t\t\t\t// In our bodyBackground.html iframe,\n\t\t\t\t// display for all div elements is set to \"inline\",\n\t\t\t\t// which causes a problem only in Android 8 Chrome 86.\n\t\t\t\t// Ensuring the div is display: block\n\t\t\t\t// gets around this issue.\n\t\t\t\ttrChild.style.display = \"block\";\n\n\t\t\t\tdocumentElement\n\t\t\t\t\t.appendChild( table )\n\t\t\t\t\t.appendChild( tr )\n\t\t\t\t\t.appendChild( trChild );\n\n\t\t\t\ttrStyle = window.getComputedStyle( tr );\n\t\t\t\treliableTrDimensionsVal = ( parseInt( trStyle.height, 10 ) +\n\t\t\t\t\tparseInt( trStyle.borderTopWidth, 10 ) +\n\t\t\t\t\tparseInt( trStyle.borderBottomWidth, 10 ) ) === tr.offsetHeight;\n\n\t\t\t\tdocumentElement.removeChild( table );\n\t\t\t}\n\t\t\treturn reliableTrDimensionsVal;\n\t\t}\n\t} );\n} )();\n\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\n\t\t// Support: Firefox 51+\n\t\t// Retrieving style before computed somehow\n\t\t// fixes an issue with getting wrong values\n\t\t// on detached elements\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\n\t// getPropertyValue is needed for:\n\t//   .css('filter') (IE 9 only, #12537)\n\t//   .css('--customProperty) (#3144)\n\tif ( computed ) {\n\t\tret = computed.getPropertyValue( name ) || computed[ name ];\n\n\t\tif ( ret === \"\" && !isAttached( elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// Android Browser returns percentage for some values,\n\t\t// but width seems to be reliably pixels.\n\t\t// This is against the CSSOM draft spec:\n\t\t// https://drafts.csswg.org/cssom/#resolved-values\n\t\tif ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\n\t\t// Support: IE <=9 - 11 only\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\n\nfunction addGetHookIf( conditionFn, hookFn ) {\n\n\t// Define the hook, we'll check on the first run if it's really needed.\n\treturn {\n\t\tget: function() {\n\t\t\tif ( conditionFn() ) {\n\n\t\t\t\t// Hook not needed (or it's not possible to use it due\n\t\t\t\t// to missing dependency), remove it.\n\t\t\t\tdelete this.get;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\n\t\t}\n\t};\n}\n\n\nvar cssPrefixes = [ \"Webkit\", \"Moz\", \"ms\" ],\n\temptyStyle = document.createElement( \"div\" ).style,\n\tvendorProps = {};\n\n// Return a vendor-prefixed property or undefined\nfunction vendorPropName( name ) {\n\n\t// Check for vendor prefixed names\n\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in emptyStyle ) {\n\t\t\treturn name;\n\t\t}\n\t}\n}\n\n// Return a potentially-mapped jQuery.cssProps or vendor prefixed property\nfunction finalPropName( name ) {\n\tvar final = jQuery.cssProps[ name ] || vendorProps[ name ];\n\n\tif ( final ) {\n\t\treturn final;\n\t}\n\tif ( name in emptyStyle ) {\n\t\treturn name;\n\t}\n\treturn vendorProps[ name ] = vendorPropName( name ) || name;\n}\n\n\nvar\n\n\t// Swappable if display is none or starts with table\n\t// except \"table\", \"table-cell\", or \"table-caption\"\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\trcustomProp = /^--/,\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: \"0\",\n\t\tfontWeight: \"400\"\n\t};\n\nfunction setPositiveNumber( _elem, value, subtract ) {\n\n\t// Any relative (+/-) values have already been\n\t// normalized at this point\n\tvar matches = rcssNum.exec( value );\n\treturn matches ?\n\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {\n\tvar i = dimension === \"width\" ? 1 : 0,\n\t\textra = 0,\n\t\tdelta = 0;\n\n\t// Adjustment may not be necessary\n\tif ( box === ( isBorderBox ? \"border\" : \"content\" ) ) {\n\t\treturn 0;\n\t}\n\n\tfor ( ; i < 4; i += 2 ) {\n\n\t\t// Both box models exclude margin\n\t\tif ( box === \"margin\" ) {\n\t\t\tdelta += jQuery.css( elem, box + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\t// If we get here with a content-box, we're seeking \"padding\" or \"border\" or \"margin\"\n\t\tif ( !isBorderBox ) {\n\n\t\t\t// Add padding\n\t\t\tdelta += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// For \"border\" or \"margin\", add border\n\t\t\tif ( box !== \"padding\" ) {\n\t\t\t\tdelta += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\n\t\t\t// But still keep track of it otherwise\n\t\t\t} else {\n\t\t\t\textra += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\n\t\t// If we get here with a border-box (content + padding + border), we're seeking \"content\" or\n\t\t// \"padding\" or \"margin\"\n\t\t} else {\n\n\t\t\t// For \"content\", subtract padding\n\t\t\tif ( box === \"content\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// For \"content\" or \"padding\", subtract border\n\t\t\tif ( box !== \"margin\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Account for positive content-box scroll gutter when requested by providing computedVal\n\tif ( !isBorderBox && computedVal >= 0 ) {\n\n\t\t// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border\n\t\t// Assuming integer scroll gutter, subtract the rest and round down\n\t\tdelta += Math.max( 0, Math.ceil(\n\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\tcomputedVal -\n\t\t\tdelta -\n\t\t\textra -\n\t\t\t0.5\n\n\t\t// If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter\n\t\t// Use an explicit zero to avoid NaN (gh-3964)\n\t\t) ) || 0;\n\t}\n\n\treturn delta;\n}\n\nfunction getWidthOrHeight( elem, dimension, extra ) {\n\n\t// Start with computed style\n\tvar styles = getStyles( elem ),\n\n\t\t// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).\n\t\t// Fake content-box until we know it's needed to know the true value.\n\t\tboxSizingNeeded = !support.boxSizingReliable() || extra,\n\t\tisBorderBox = boxSizingNeeded &&\n\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\tvalueIsBorderBox = isBorderBox,\n\n\t\tval = curCSS( elem, dimension, styles ),\n\t\toffsetProp = \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 );\n\n\t// Support: Firefox <=54\n\t// Return a confounding non-pixel value or feign ignorance, as appropriate.\n\tif ( rnumnonpx.test( val ) ) {\n\t\tif ( !extra ) {\n\t\t\treturn val;\n\t\t}\n\t\tval = \"auto\";\n\t}\n\n\n\t// Support: IE 9 - 11 only\n\t// Use offsetWidth/offsetHeight for when box sizing is unreliable.\n\t// In those cases, the computed value can be trusted to be border-box.\n\tif ( ( !support.boxSizingReliable() && isBorderBox ||\n\n\t\t// Support: IE 10 - 11+, Edge 15 - 18+\n\t\t// IE/Edge misreport `getComputedStyle` of table rows with width/height\n\t\t// set in CSS while `offset*` properties report correct values.\n\t\t// Interestingly, in some cases IE 9 doesn't suffer from this issue.\n\t\t!support.reliableTrDimensions() && nodeName( elem, \"tr\" ) ||\n\n\t\t// Fall back to offsetWidth/offsetHeight when value is \"auto\"\n\t\t// This happens for inline elements with no explicit setting (gh-3571)\n\t\tval === \"auto\" ||\n\n\t\t// Support: Android <=4.1 - 4.3 only\n\t\t// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)\n\t\t!parseFloat( val ) && jQuery.css( elem, \"display\", false, styles ) === \"inline\" ) &&\n\n\t\t// Make sure the element is visible & connected\n\t\telem.getClientRects().length ) {\n\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\n\n\t\t// Where available, offsetWidth/offsetHeight approximate border box dimensions.\n\t\t// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the\n\t\t// retrieved value as a content box dimension.\n\t\tvalueIsBorderBox = offsetProp in elem;\n\t\tif ( valueIsBorderBox ) {\n\t\t\tval = elem[ offsetProp ];\n\t\t}\n\t}\n\n\t// Normalize \"\" and auto\n\tval = parseFloat( val ) || 0;\n\n\t// Adjust for the element's box model\n\treturn ( val +\n\t\tboxModelAdjustment(\n\t\t\telem,\n\t\t\tdimension,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles,\n\n\t\t\t// Provide the current computed size to request scroll gutter calculation (gh-3589)\n\t\t\tval\n\t\t)\n\t) + \"px\";\n}\n\njQuery.extend( {\n\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"animationIterationCount\": true,\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"gridArea\": true,\n\t\t\"gridColumn\": true,\n\t\t\"gridColumnEnd\": true,\n\t\t\"gridColumnStart\": true,\n\t\t\"gridRow\": true,\n\t\t\"gridRowEnd\": true,\n\t\t\"gridRowStart\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name ),\n\t\t\tstyle = elem.style;\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to query the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Gets hook for the prefixed version, then unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\n\t\t\t\tvalue = adjustCSS( elem, name, ret );\n\n\t\t\t\t// Fixes bug #9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that null and NaN values aren't set (#7116)\n\t\t\tif ( value == null || value !== value ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\n\t\t\t// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append\n\t\t\t// \"px\" to a few hardcoded values.\n\t\t\tif ( type === \"number\" && !isCustomProp ) {\n\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\n\t\t\t}\n\n\t\t\t// background-* props affect original clone's values\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\n\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\n\n\t\t\t\tif ( isCustomProp ) {\n\t\t\t\t\tstyle.setProperty( name, value );\n\t\t\t\t} else {\n\t\t\t\t\tstyle[ name ] = value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks &&\n\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\n\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name );\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to modify the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Try prefixed name followed by the unprefixed name\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t// Convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\n\t\t}\n\n\t\treturn val;\n\t}\n} );\n\njQuery.each( [ \"height\", \"width\" ], function( _i, dimension ) {\n\tjQuery.cssHooks[ dimension ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\n\t\t\t\t// but it must have a current display style that would benefit\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\n\n\t\t\t\t\t// Support: Safari 8+\n\t\t\t\t\t// Table columns in Safari have non-zero offsetWidth & zero\n\t\t\t\t\t// getBoundingClientRect().width unless display is changed.\n\t\t\t\t\t// Support: IE <=11 only\n\t\t\t\t\t// Running getBoundingClientRect on a disconnected node\n\t\t\t\t\t// in IE throws an error.\n\t\t\t\t\t( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?\n\t\t\t\t\tswap( elem, cssShow, function() {\n\t\t\t\t\t\treturn getWidthOrHeight( elem, dimension, extra );\n\t\t\t\t\t} ) :\n\t\t\t\t\tgetWidthOrHeight( elem, dimension, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar matches,\n\t\t\t\tstyles = getStyles( elem ),\n\n\t\t\t\t// Only read styles.position if the test has a chance to fail\n\t\t\t\t// to avoid forcing a reflow.\n\t\t\t\tscrollboxSizeBuggy = !support.scrollboxSize() &&\n\t\t\t\t\tstyles.position === \"absolute\",\n\n\t\t\t\t// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)\n\t\t\t\tboxSizingNeeded = scrollboxSizeBuggy || extra,\n\t\t\t\tisBorderBox = boxSizingNeeded &&\n\t\t\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\tsubtract = extra ?\n\t\t\t\t\tboxModelAdjustment(\n\t\t\t\t\t\telem,\n\t\t\t\t\t\tdimension,\n\t\t\t\t\t\textra,\n\t\t\t\t\t\tisBorderBox,\n\t\t\t\t\t\tstyles\n\t\t\t\t\t) :\n\t\t\t\t\t0;\n\n\t\t\t// Account for unreliable border-box dimensions by comparing offset* to computed and\n\t\t\t// faking a content-box to get border and padding (gh-3699)\n\t\t\tif ( isBorderBox && scrollboxSizeBuggy ) {\n\t\t\t\tsubtract -= Math.ceil(\n\t\t\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\t\t\tparseFloat( styles[ dimension ] ) -\n\t\t\t\t\tboxModelAdjustment( elem, dimension, \"border\", false, styles ) -\n\t\t\t\t\t0.5\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Convert to pixels if value adjustment is needed\n\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\n\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\n\n\t\t\t\telem.style[ dimension ] = value;\n\t\t\t\tvalue = jQuery.css( elem, dimension );\n\t\t\t}\n\n\t\t\treturn setPositiveNumber( elem, value, subtract );\n\t\t}\n\t};\n} );\n\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\n\t\t\t\telem.getBoundingClientRect().left -\n\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\n\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\n\t\t\t\t\t} )\n\t\t\t) + \"px\";\n\t\t}\n\t}\n);\n\n// These hooks are used by animate to expand properties\njQuery.each( {\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// Assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( prefix !== \"margin\" ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n} );\n\njQuery.fn.extend( {\n\tcss: function( name, value ) {\n\t\treturn access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t}\n} );\n\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || jQuery.easing._default;\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\t// Use a property on the element directly when it is not a DOM element,\n\t\t\t// or when there is no matching style property that exists.\n\t\t\tif ( tween.elem.nodeType !== 1 ||\n\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\n\t\t\t// Use step hook for back compat.\n\t\t\t// Use cssHook if its there.\n\t\t\t// Use .style if available and use plain properties where available.\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.nodeType === 1 && (\n\t\t\t\tjQuery.cssHooks[ tween.prop ] ||\n\t\t\t\t\ttween.elem.style[ finalPropName( tween.prop ) ] != null ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE <=9 only\n// Panic based approach to setting things on disconnected nodes\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t},\n\t_default: \"swing\"\n};\n\njQuery.fx = Tween.prototype.init;\n\n// Back compat <1.8 extension point\njQuery.fx.step = {};\n\n\n\n\nvar\n\tfxNow, inProgress,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trrun = /queueHooks$/;\n\nfunction schedule() {\n\tif ( inProgress ) {\n\t\tif ( document.hidden === false && window.requestAnimationFrame ) {\n\t\t\twindow.requestAnimationFrame( schedule );\n\t\t} else {\n\t\t\twindow.setTimeout( schedule, jQuery.fx.interval );\n\t\t}\n\n\t\tjQuery.fx.tick();\n\t}\n}\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\twindow.setTimeout( function() {\n\t\tfxNow = undefined;\n\t} );\n\treturn ( fxNow = Date.now() );\n}\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\ti = 0,\n\t\tattrs = { height: type };\n\n\t// If we include width, step value is 1 to do all cssExpand values,\n\t// otherwise step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth ? 1 : 0;\n\tfor ( ; i < 4; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\n\n\t\t\t// We're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction defaultPrefilter( elem, props, opts ) {\n\tvar prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,\n\t\tisBox = \"width\" in props || \"height\" in props,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHiddenWithinTree( elem ),\n\t\tdataShow = dataPriv.get( elem, \"fxshow\" );\n\n\t// Queue-skipping animations hijack the fx hooks\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always( function() {\n\n\t\t\t// Ensure the complete handler is called before this completes\n\t\t\tanim.always( function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n\n\t// Detect show/hide animations\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.test( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// Pretend to be hidden if this is a \"show\" and\n\t\t\t\t// there is still data from a stopped show/hide\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\n\t\t\t\t// Ignore all other no-op show/hide data\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\t\t}\n\t}\n\n\t// Bail out if this is a no-op like .hide().hide()\n\tpropTween = !jQuery.isEmptyObject( props );\n\tif ( !propTween && jQuery.isEmptyObject( orig ) ) {\n\t\treturn;\n\t}\n\n\t// Restrict \"overflow\" and \"display\" styles during box animations\n\tif ( isBox && elem.nodeType === 1 ) {\n\n\t\t// Support: IE <=9 - 11, Edge 12 - 15\n\t\t// Record all 3 overflow attributes because IE does not infer the shorthand\n\t\t// from identically-valued overflowX and overflowY and Edge just mirrors\n\t\t// the overflowX value there.\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Identify a display type, preferring old show/hide data over the CSS cascade\n\t\trestoreDisplay = dataShow && dataShow.display;\n\t\tif ( restoreDisplay == null ) {\n\t\t\trestoreDisplay = dataPriv.get( elem, \"display\" );\n\t\t}\n\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\tif ( display === \"none\" ) {\n\t\t\tif ( restoreDisplay ) {\n\t\t\t\tdisplay = restoreDisplay;\n\t\t\t} else {\n\n\t\t\t\t// Get nonempty value(s) by temporarily forcing visibility\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t\trestoreDisplay = elem.style.display || restoreDisplay;\n\t\t\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\t\t\tshowHide( [ elem ] );\n\t\t\t}\n\t\t}\n\n\t\t// Animate inline elements as inline-block\n\t\tif ( display === \"inline\" || display === \"inline-block\" && restoreDisplay != null ) {\n\t\t\tif ( jQuery.css( elem, \"float\" ) === \"none\" ) {\n\n\t\t\t\t// Restore the original display value at the end of pure show/hide animations\n\t\t\t\tif ( !propTween ) {\n\t\t\t\t\tanim.done( function() {\n\t\t\t\t\t\tstyle.display = restoreDisplay;\n\t\t\t\t\t} );\n\t\t\t\t\tif ( restoreDisplay == null ) {\n\t\t\t\t\t\tdisplay = style.display;\n\t\t\t\t\t\trestoreDisplay = display === \"none\" ? \"\" : display;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstyle.display = \"inline-block\";\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tanim.always( function() {\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t} );\n\t}\n\n\t// Implement show/hide animations\n\tpropTween = false;\n\tfor ( prop in orig ) {\n\n\t\t// General show/hide setup for this element animation\n\t\tif ( !propTween ) {\n\t\t\tif ( dataShow ) {\n\t\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\t\thidden = dataShow.hidden;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdataShow = dataPriv.access( elem, \"fxshow\", { display: restoreDisplay } );\n\t\t\t}\n\n\t\t\t// Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\n\t\t\tif ( toggle ) {\n\t\t\t\tdataShow.hidden = !hidden;\n\t\t\t}\n\n\t\t\t// Show elements before animating them\n\t\t\tif ( hidden ) {\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t}\n\n\t\t\t/* eslint-disable no-loop-func */\n\n\t\t\tanim.done( function() {\n\n\t\t\t\t/* eslint-enable no-loop-func */\n\n\t\t\t\t// The final step of a \"hide\" animation is actually hiding the element\n\t\t\t\tif ( !hidden ) {\n\t\t\t\t\tshowHide( [ elem ] );\n\t\t\t\t}\n\t\t\t\tdataPriv.remove( elem, \"fxshow\" );\n\t\t\t\tfor ( prop in orig ) {\n\t\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Per-property setup\n\t\tpropTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\t\tif ( !( prop in dataShow ) ) {\n\t\t\tdataShow[ prop ] = propTween.start;\n\t\t\tif ( hidden ) {\n\t\t\t\tpropTween.end = propTween.start;\n\t\t\t\tpropTween.start = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( Array.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\n\t\t\t// Reusing 'index' because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = Animation.prefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\n\t\t\t// Don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t} ),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\n\t\t\t\t// Support: Android 2.3 only\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\n\n\t\t\t// If there's more to do, yield\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t}\n\n\t\t\t// If this was an empty animation, synthesize a final progress notification\n\t\t\tif ( !length ) {\n\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t}\n\n\t\t\t// Resolve the animation and report its conclusion\n\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\treturn false;\n\t\t},\n\t\tanimation = deferred.promise( {\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, {\n\t\t\t\tspecialEasing: {},\n\t\t\t\teasing: jQuery.easing._default\n\t\t\t}, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t} ),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length; index++ ) {\n\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\tif ( isFunction( result.stop ) ) {\n\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\n\t\t\t\t\tresult.stop.bind( result );\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\t// Attach callbacks from options\n\tanimation\n\t\t.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t} )\n\t);\n\n\treturn animation;\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\n\ttweeners: {\n\t\t\"*\": [ function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value );\n\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\n\t\t\treturn tween;\n\t\t} ]\n\t},\n\n\ttweener: function( props, callback ) {\n\t\tif ( isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.match( rnothtmlwhite );\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\n\t\t\tAnimation.tweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilters: [ defaultPrefilter ],\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tAnimation.prefilters.unshift( callback );\n\t\t} else {\n\t\t\tAnimation.prefilters.push( callback );\n\t\t}\n\t}\n} );\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tisFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !isFunction( easing ) && easing\n\t};\n\n\t// Go to the end state if fx are off\n\tif ( jQuery.fx.off ) {\n\t\topt.duration = 0;\n\n\t} else {\n\t\tif ( typeof opt.duration !== \"number\" ) {\n\t\t\tif ( opt.duration in jQuery.fx.speeds ) {\n\t\t\t\topt.duration = jQuery.fx.speeds[ opt.duration ];\n\n\t\t\t} else {\n\t\t\t\topt.duration = jQuery.fx.speeds._default;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.fn.extend( {\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// Show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHiddenWithinTree ).css( \"opacity\", 0 ).show()\n\n\t\t\t// Animate to the value specified\n\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\n\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = dataPriv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this &&\n\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\n\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start the next in the queue if the last step wasn't forced.\n\t\t\t// Timers currently will call their complete callbacks, which\n\t\t\t// will dequeue but only if they were gotoEnd.\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t} );\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tvar index,\n\t\t\t\tdata = dataPriv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// Enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// Empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// Look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t} );\n\t}\n} );\n\njQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( _i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n} );\n\n// Generate shortcuts for custom animations\njQuery.each( {\n\tslideDown: genFx( \"show\" ),\n\tslideUp: genFx( \"hide\" ),\n\tslideToggle: genFx( \"toggle\" ),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n} );\n\njQuery.timers = [];\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ti = 0,\n\t\ttimers = jQuery.timers;\n\n\tfxNow = Date.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\n\t\t// Run the timer and safely remove it when done (allowing for external removal)\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tjQuery.timers.push( timer );\n\tjQuery.fx.start();\n};\n\njQuery.fx.interval = 13;\njQuery.fx.start = function() {\n\tif ( inProgress ) {\n\t\treturn;\n\t}\n\n\tinProgress = true;\n\tschedule();\n};\n\njQuery.fx.stop = function() {\n\tinProgress = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\n\t// Default speed\n\t_default: 400\n};\n\n\n// Based off of the plugin by Clint Helfers, with permission.\n// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\njQuery.fn.delay = function( time, type ) {\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\ttype = type || \"fx\";\n\n\treturn this.queue( type, function( next, hooks ) {\n\t\tvar timeout = window.setTimeout( next, time );\n\t\thooks.stop = function() {\n\t\t\twindow.clearTimeout( timeout );\n\t\t};\n\t} );\n};\n\n\n( function() {\n\tvar input = document.createElement( \"input\" ),\n\t\tselect = document.createElement( \"select\" ),\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\n\tinput.type = \"checkbox\";\n\n\t// Support: Android <=4.3 only\n\t// Default value for a checkbox should be \"on\"\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Support: IE <=11 only\n\t// Must access selectedIndex to make default options select\n\tsupport.optSelected = opt.selected;\n\n\t// Support: IE <=11 only\n\t// An input loses its value after becoming a radio\n\tinput = document.createElement( \"input\" );\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n} )();\n\n\nvar boolHook,\n\tattrHandle = jQuery.expr.attrHandle;\n\njQuery.fn.extend( {\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tattr: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set attributes on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// Attribute hooks are determined by the lowercase version\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\thooks = jQuery.attrHooks[ name.toLowerCase() ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\treturn value;\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tret = jQuery.find.attr( elem, name );\n\n\t\t// Non-existent attributes return null, we normalize to undefined\n\t\treturn ret == null ? undefined : ret;\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\tnodeName( elem, \"input\" ) ) {\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name,\n\t\t\ti = 0,\n\n\t\t\t// Attribute names can contain non-HTML whitespace characters\n\t\t\t// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n\t\t\tattrNames = value && value.match( rnothtmlwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\n\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( _i, name ) {\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\n\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar ret, handle,\n\t\t\tlowercaseName = name.toLowerCase();\n\n\t\tif ( !isXML ) {\n\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\thandle = attrHandle[ lowercaseName ];\n\t\t\tattrHandle[ lowercaseName ] = ret;\n\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\tlowercaseName :\n\t\t\t\tnull;\n\t\t\tattrHandle[ lowercaseName ] = handle;\n\t\t}\n\t\treturn ret;\n\t};\n} );\n\n\n\n\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\n\trclickable = /^(?:a|area)$/i;\n\njQuery.fn.extend( {\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\treturn ( elem[ name ] = value );\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn elem[ name ];\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\t// Support: IE <=9 - 11 only\n\t\t\t\t// elem.tabIndex doesn't always return the\n\t\t\t\t// correct value when it hasn't been explicitly set\n\t\t\t\t// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n\t\t\t\t// Use proper attribute retrieval(#12072)\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\n\n\t\t\t\tif ( tabindex ) {\n\t\t\t\t\treturn parseInt( tabindex, 10 );\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\n\t\t\t\t\trclickable.test( elem.nodeName ) &&\n\t\t\t\t\telem.href\n\t\t\t\t) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t},\n\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t}\n} );\n\n// Support: IE <=11 only\n// Accessing the selectedIndex property\n// forces the browser to respect setting selected\n// on the option\n// The getter ensures a default option is selected\n// when in an optgroup\n// eslint rule \"no-unused-expressions\" is disabled for this code\n// since it considers such accessions noop\nif ( !support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tset: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent ) {\n\t\t\t\tparent.selectedIndex;\n\n\t\t\t\tif ( parent.parentNode ) {\n\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\njQuery.each( [\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n} );\n\n\n\n\n\t// Strip and collapse whitespace according to HTML spec\n\t// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\n\tfunction stripAndCollapse( value ) {\n\t\tvar tokens = value.match( rnothtmlwhite ) || [];\n\t\treturn tokens.join( \" \" );\n\t}\n\n\nfunction getClass( elem ) {\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\n}\n\nfunction classesToArray( value ) {\n\tif ( Array.isArray( value ) ) {\n\t\treturn value;\n\t}\n\tif ( typeof value === \"string\" ) {\n\t\treturn value.match( rnothtmlwhite ) || [];\n\t}\n\treturn [];\n}\n\njQuery.fn.extend( {\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tclasses = classesToArray( value );\n\n\t\tif ( classes.length ) {\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( !arguments.length ) {\n\t\t\treturn this.attr( \"class\", \"\" );\n\t\t}\n\n\t\tclasses = classesToArray( value );\n\n\t\tif ( classes.length ) {\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) > -1 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar type = typeof value,\n\t\t\tisValidValue = type === \"string\" || Array.isArray( value );\n\n\t\tif ( typeof stateVal === \"boolean\" && isValidValue ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).toggleClass(\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\n\t\t\t\t\tstateVal\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar className, i, self, classNames;\n\n\t\t\tif ( isValidValue ) {\n\n\t\t\t\t// Toggle individual class names\n\t\t\t\ti = 0;\n\t\t\t\tself = jQuery( this );\n\t\t\t\tclassNames = classesToArray( value );\n\n\t\t\t\twhile ( ( className = classNames[ i++ ] ) ) {\n\n\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\n\t\t\t\tclassName = getClass( this );\n\t\t\t\tif ( className ) {\n\n\t\t\t\t\t// Store className if set\n\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed `false`,\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tif ( this.setAttribute ) {\n\t\t\t\t\tthis.setAttribute( \"class\",\n\t\t\t\t\t\tclassName || value === false ?\n\t\t\t\t\t\t\t\"\" :\n\t\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className, elem,\n\t\t\ti = 0;\n\n\t\tclassName = \" \" + selector + \" \";\n\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\tif ( elem.nodeType === 1 &&\n\t\t\t\t( \" \" + stripAndCollapse( getClass( elem ) ) + \" \" ).indexOf( className ) > -1 ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n} );\n\n\n\n\nvar rreturn = /\\r/g;\n\njQuery.fn.extend( {\n\tval: function( value ) {\n\t\tvar hooks, ret, valueIsFunction,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\n\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks &&\n\t\t\t\t\t\"get\" in hooks &&\n\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\n\t\t\t\t) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\t// Handle most common string cases\n\t\t\t\tif ( typeof ret === \"string\" ) {\n\t\t\t\t\treturn ret.replace( rreturn, \"\" );\n\t\t\t\t}\n\n\t\t\t\t// Handle cases where value is null/undef or number\n\t\t\t\treturn ret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvalueIsFunction = isFunction( value );\n\n\t\treturn this.each( function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\n\t\t\t} else if ( Array.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :\n\n\t\t\t\t\t// Support: IE <=10 - 11 only\n\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\n\t\t\t\t\t// Strip and collapse whitespace\n\t\t\t\t\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n\t\t\t\t\tstripAndCollapse( jQuery.text( elem ) );\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option, i,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\",\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length;\n\n\t\t\t\tif ( index < 0 ) {\n\t\t\t\t\ti = max;\n\n\t\t\t\t} else {\n\t\t\t\t\ti = one ? index : 0;\n\t\t\t\t}\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t// IE8-9 doesn't update selected after form reset (#2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t!option.disabled &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled ||\n\t\t\t\t\t\t\t\t!nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t/* eslint-disable no-cond-assign */\n\n\t\t\t\t\tif ( option.selected =\n\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\n\t\t\t\t\t) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* eslint-enable no-cond-assign */\n\t\t\t\t}\n\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Radios and checkboxes getter/setter\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( Array.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\n\t\t};\n\t}\n} );\n\n\n\n\n// Return jQuery for attributes-only inclusion\n\n\nsupport.focusin = \"onfocusin\" in window;\n\n\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n\tstopPropagationCallback = function( e ) {\n\t\te.stopPropagation();\n\t};\n\njQuery.extend( jQuery.event, {\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special, lastElement,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\n\n\t\tcur = lastElement = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf( \".\" ) > -1 ) {\n\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split( \".\" );\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join( \".\" );\n\t\tevent.rnamespace = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tlastElement = cur;\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( dataPriv.get( cur, \"events\" ) || Object.create( null ) )[ event.type ] &&\n\t\t\t\tdataPriv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\n\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( ( !special._default ||\n\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\n\t\t\t\tacceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\tif ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.addEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\telem[ type ]();\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.removeEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\t// Piggyback on a donor event to simulate a different one\n\t// Used only for `focus(in | out)` events\n\tsimulate: function( type, elem, event ) {\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true\n\t\t\t}\n\t\t);\n\n\t\tjQuery.event.trigger( e, null, elem );\n\t}\n\n} );\n\njQuery.fn.extend( {\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t} );\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[ 0 ];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n} );\n\n\n// Support: Firefox <=44\n// Firefox doesn't have focus(in | out) events\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n//\n// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n// focus(in | out) events fire after focus & blur events,\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\nif ( !support.focusin ) {\n\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\n\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\n\t\t\t\t// Handle: regular nodes (via `this.ownerDocument`), window\n\t\t\t\t// (via `this.document`) & document (via `this`).\n\t\t\t\tvar doc = this.ownerDocument || this.document || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this.document || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tdataPriv.remove( doc, fix );\n\n\t\t\t\t} else {\n\t\t\t\t\tdataPriv.access( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t} );\n}\nvar location = window.location;\n\nvar nonce = { guid: Date.now() };\n\nvar rquery = ( /\\?/ );\n\n\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml, parserErrorElem;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\n\t// Support: IE 9 - 11 only\n\t// IE throws on parseFromString with invalid input.\n\ttry {\n\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\n\t} catch ( e ) {}\n\n\tparserErrorElem = xml && xml.getElementsByTagName( \"parsererror\" )[ 0 ];\n\tif ( !xml || parserErrorElem ) {\n\t\tjQuery.error( \"Invalid XML: \" + (\n\t\t\tparserErrorElem ?\n\t\t\t\tjQuery.map( parserErrorElem.childNodes, function( el ) {\n\t\t\t\t\treturn el.textContent;\n\t\t\t\t} ).join( \"\\n\" ) :\n\t\t\t\tdata\n\t\t) );\n\t}\n\treturn xml;\n};\n\n\nvar\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( Array.isArray( obj ) ) {\n\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams(\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\n\t\t\t\t\tv,\n\t\t\t\t\ttraditional,\n\t\t\t\t\tadd\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\n\t} else if ( !traditional && toType( obj ) === \"object\" ) {\n\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, valueOrFunction ) {\n\n\t\t\t// If value is a function, invoke it and use its return value\n\t\t\tvar value = isFunction( valueOrFunction ) ?\n\t\t\t\tvalueOrFunction() :\n\t\t\t\tvalueOrFunction;\n\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" +\n\t\t\t\tencodeURIComponent( value == null ? \"\" : value );\n\t\t};\n\n\tif ( a == null ) {\n\t\treturn \"\";\n\t}\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t} );\n\n\t} else {\n\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" );\n};\n\njQuery.fn.extend( {\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map( function() {\n\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t} ).filter( function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t} ).map( function( _i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\tif ( val == null ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\treturn jQuery.map( val, function( val ) {\n\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t} ).get();\n\t}\n} );\n\n\nvar\n\tr20 = /%20/g,\n\trhash = /#.*$/,\n\trantiCache = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\n\t// #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat( \"*\" ),\n\n\t// Anchor tag for parsing the document origin\n\toriginAnchor = document.createElement( \"a\" );\n\noriginAnchor.href = location.href;\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];\n\n\t\tif ( isFunction( func ) ) {\n\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\n\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\n\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t} );\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s.throws ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tstate: \"parsererror\",\n\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n\njQuery.extend( {\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: location.href,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( location.protocol ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /\\bxml\\b/,\n\t\t\thtml: /\\bhtml/,\n\t\t\tjson: /\\bjson\\b/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": JSON.parse,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar transport,\n\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\n\t\t\t// Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\n\t\t\t// Url cleanup var\n\t\t\turlAnchor,\n\n\t\t\t// Request state (becomes false upon send and true upon completion)\n\t\t\tcompleted,\n\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\n\t\t\t// Loop variable\n\t\t\ti,\n\n\t\t\t// uncached part of the url\n\t\t\tuncached,\n\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context &&\n\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\tjQuery.event,\n\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\n\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( completed ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() + \" \" ] =\n\t\t\t\t\t\t\t\t\t( responseHeaders[ match[ 1 ].toLowerCase() + \" \" ] || [] )\n\t\t\t\t\t\t\t\t\t\t.concat( match[ 2 ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() + \" \" ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match.join( \", \" );\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn completed ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\tname = requestHeadersNames[ name.toLowerCase() ] =\n\t\t\t\t\t\t\trequestHeadersNames[ name.toLowerCase() ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( completed ) {\n\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Lazy-add the new callbacks in a way that preserves old ones\n\t\t\t\t\t\t\tfor ( code in map ) {\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR );\n\n\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || location.href ) + \"\" )\n\t\t\t.replace( rprotocol, location.protocol + \"//\" );\n\n\t\t// Alias method option to type as per ticket #12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = ( s.dataType || \"*\" ).toLowerCase().match( rnothtmlwhite ) || [ \"\" ];\n\n\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\n\t\tif ( s.crossDomain == null ) {\n\t\t\turlAnchor = document.createElement( \"a\" );\n\n\t\t\t// Support: IE <=8 - 11, Edge 12 - 15\n\t\t\t// IE throws exception on accessing the href property if url is malformed,\n\t\t\t// e.g. http://example.com:80x/\n\t\t\ttry {\n\t\t\t\turlAnchor.href = s.url;\n\n\t\t\t\t// Support: IE <=8 - 11 only\n\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\n\t\t\t\turlAnchor.href = urlAnchor.href;\n\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\n\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\n\t\t\t\t// it can be rejected by the transport if it is invalid\n\t\t\t\ts.crossDomain = true;\n\t\t\t}\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( completed ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\t\tfireGlobals = jQuery.event && s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger( \"ajaxStart\" );\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\t// Remove hash to simplify url manipulation\n\t\tcacheURL = s.url.replace( rhash, \"\" );\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// Remember the hash so we can put it back\n\t\t\tuncached = s.url.slice( cacheURL.length );\n\n\t\t\t// If data is available and should be processed, append data to url\n\t\t\tif ( s.data && ( s.processData || typeof s.data === \"string\" ) ) {\n\t\t\t\tcacheURL += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data;\n\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add or update anti-cache param if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\tcacheURL = cacheURL.replace( rantiCache, \"$1\" );\n\t\t\t\tuncached = ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + ( nonce.guid++ ) +\n\t\t\t\t\tuncached;\n\t\t\t}\n\n\t\t\t// Put hash and anti-cache on the URL that will be requested (gh-1732)\n\t\t\ts.url = cacheURL + uncached;\n\n\t\t// Change '%20' to '+' if this is encoded form body content (gh-2658)\n\t\t} else if ( s.data && s.processData &&\n\t\t\t( s.contentType || \"\" ).indexOf( \"application/x-www-form-urlencoded\" ) === 0 ) {\n\t\t\ts.data = s.data.replace( r20, \"+\" );\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\n\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend &&\n\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {\n\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// Aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tcompleteDeferred.add( s.complete );\n\t\tjqXHR.done( s.success );\n\t\tjqXHR.fail( s.error );\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\n\t\t\t// If request was aborted inside ajaxSend, stop there\n\t\t\tif ( completed ) {\n\t\t\t\treturn jqXHR;\n\t\t\t}\n\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = window.setTimeout( function() {\n\t\t\t\t\tjqXHR.abort( \"timeout\" );\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tcompleted = false;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// Rethrow post-completion exceptions\n\t\t\t\tif ( completed ) {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\n\t\t\t\t// Propagate others as results\n\t\t\t\tdone( -1, e );\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Ignore repeat invocations\n\t\t\tif ( completed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcompleted = true;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\twindow.clearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Use a noop converter for missing script but not if jsonp\n\t\t\tif ( !isSuccess &&\n\t\t\t\tjQuery.inArray( \"script\", s.dataTypes ) > -1 &&\n\t\t\t\tjQuery.inArray( \"json\", s.dataTypes ) < 0 ) {\n\t\t\t\ts.converters[ \"text script\" ] = function() {};\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n} );\n\njQuery.each( [ \"get\", \"post\" ], function( _i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\n\t\t// Shift arguments if data argument was omitted\n\t\tif ( isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\t// The url can be an options object (which then must have .url)\n\t\treturn jQuery.ajax( jQuery.extend( {\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t}, jQuery.isPlainObject( url ) && url ) );\n\t};\n} );\n\njQuery.ajaxPrefilter( function( s ) {\n\tvar i;\n\tfor ( i in s.headers ) {\n\t\tif ( i.toLowerCase() === \"content-type\" ) {\n\t\t\ts.contentType = s.headers[ i ] || \"\";\n\t\t}\n\t}\n} );\n\n\njQuery._evalUrl = function( url, options, doc ) {\n\treturn jQuery.ajax( {\n\t\turl: url,\n\n\t\t// Make this explicit, since user can override this through ajaxSetup (#11264)\n\t\ttype: \"GET\",\n\t\tdataType: \"script\",\n\t\tcache: true,\n\t\tasync: false,\n\t\tglobal: false,\n\n\t\t// Only evaluate the response if it is successful (gh-4126)\n\t\t// dataFilter is not invoked for failure responses, so using it instead\n\t\t// of the default converter is kludgy but it works.\n\t\tconverters: {\n\t\t\t\"text script\": function() {}\n\t\t},\n\t\tdataFilter: function( response ) {\n\t\t\tjQuery.globalEval( response, options, doc );\n\t\t}\n\t} );\n};\n\n\njQuery.fn.extend( {\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( this[ 0 ] ) {\n\t\t\tif ( isFunction( html ) ) {\n\t\t\t\thtml = html.call( this[ 0 ] );\n\t\t\t}\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map( function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t} ).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t} );\n\t},\n\n\twrap: function( html ) {\n\t\tvar htmlIsFunction = isFunction( html );\n\n\t\treturn this.each( function( i ) {\n\t\t\tjQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );\n\t\t} );\n\t},\n\n\tunwrap: function( selector ) {\n\t\tthis.parent( selector ).not( \"body\" ).each( function() {\n\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t} );\n\t\treturn this;\n\t}\n} );\n\n\njQuery.expr.pseudos.hidden = function( elem ) {\n\treturn !jQuery.expr.pseudos.visible( elem );\n};\njQuery.expr.pseudos.visible = function( elem ) {\n\treturn !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\n};\n\n\n\n\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new window.XMLHttpRequest();\n\t} catch ( e ) {}\n};\n\nvar xhrSuccessStatus = {\n\n\t\t// File protocol always yields status code 0, assume 200\n\t\t0: 200,\n\n\t\t// Support: IE <=9 only\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\txhrSupported = jQuery.ajaxSettings.xhr();\n\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nsupport.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport( function( options ) {\n\tvar callback, errorCallback;\n\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i,\n\t\t\t\t\txhr = options.xhr();\n\n\t\t\t\txhr.open(\n\t\t\t\t\toptions.type,\n\t\t\t\t\toptions.url,\n\t\t\t\t\toptions.async,\n\t\t\t\t\toptions.username,\n\t\t\t\t\toptions.password\n\t\t\t\t);\n\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\n\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\n\t\t\t\t}\n\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\n\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.ontimeout =\n\t\t\t\t\t\t\t\t\txhr.onreadystatechange = null;\n\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\n\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\n\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\n\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\n\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcomplete(\n\n\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see #8605, #14207\n\t\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\n\t\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\n\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\n\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\n\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\n\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\terrorCallback = xhr.onerror = xhr.ontimeout = callback( \"error\" );\n\n\t\t\t\t// Support: IE 9 only\n\t\t\t\t// Use onreadystatechange to replace onabort\n\t\t\t\t// to handle uncaught aborts\n\t\t\t\tif ( xhr.onabort !== undefined ) {\n\t\t\t\t\txhr.onabort = errorCallback;\n\t\t\t\t} else {\n\t\t\t\t\txhr.onreadystatechange = function() {\n\n\t\t\t\t\t\t// Check readyState before timeout as it changes\n\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\n\n\t\t\t\t\t\t\t// Allow onerror to be called first,\n\t\t\t\t\t\t\t// but that will not handle a native abort\n\t\t\t\t\t\t\t// Also, save errorCallback to a variable\n\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\n\t\t\t\t\t\t\twindow.setTimeout( function() {\n\t\t\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\t\t\terrorCallback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = callback( \"abort\" );\n\n\t\t\t\ttry {\n\n\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\n// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\njQuery.ajaxPrefilter( function( s ) {\n\tif ( s.crossDomain ) {\n\t\ts.contents.script = false;\n\t}\n} );\n\n// Install script dataType\njQuery.ajaxSetup( {\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, \" +\n\t\t\t\"application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /\\b(?:java|ecma)script\\b/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n} );\n\n// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t}\n} );\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\n\t// This transport only deals with cross domain or forced-by-attrs requests\n\tif ( s.crossDomain || s.scriptAttrs ) {\n\t\tvar script, callback;\n\t\treturn {\n\t\t\tsend: function( _, complete ) {\n\t\t\t\tscript = jQuery( \"<script>\" )\n\t\t\t\t\t.attr( s.scriptAttrs || {} )\n\t\t\t\t\t.prop( { charset: s.scriptCharset, src: s.url } )\n\t\t\t\t\t.on( \"load error\", callback = function( evt ) {\n\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\n\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup( {\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce.guid++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n} );\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" &&\n\t\t\t\t( s.contentType || \"\" )\n\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\n\t\t\t\trjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[ \"script json\" ] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// Force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always( function() {\n\n\t\t\t// If previous value didn't exist - remove it\n\t\t\tif ( overwritten === undefined ) {\n\t\t\t\tjQuery( window ).removeProp( callbackName );\n\n\t\t\t// Otherwise restore preexisting value\n\t\t\t} else {\n\t\t\t\twindow[ callbackName ] = overwritten;\n\t\t\t}\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\n\t\t\t\t// Make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// Save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t} );\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n} );\n\n\n\n\n// Support: Safari 8 only\n// In Safari 8 documents created via document.implementation.createHTMLDocument\n// collapse sibling forms: the second one becomes a child of the first one.\n// Because of that, this security measure has to be disabled in Safari 8.\n// https://bugs.webkit.org/show_bug.cgi?id=137337\nsupport.createHTMLDocument = ( function() {\n\tvar body = document.implementation.createHTMLDocument( \"\" ).body;\n\tbody.innerHTML = \"<form></form><form></form>\";\n\treturn body.childNodes.length === 2;\n} )();\n\n\n// Argument \"data\" should be string of html\n// context (optional): If specified, the fragment will be created in this context,\n// defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( typeof data !== \"string\" ) {\n\t\treturn [];\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\n\tvar base, parsed, scripts;\n\n\tif ( !context ) {\n\n\t\t// Stop scripts or inline event handlers from being executed immediately\n\t\t// by using document.implementation\n\t\tif ( support.createHTMLDocument ) {\n\t\t\tcontext = document.implementation.createHTMLDocument( \"\" );\n\n\t\t\t// Set the base href for the created document\n\t\t\t// so any parsed elements with URLs\n\t\t\t// are based on the document's URL (gh-2965)\n\t\t\tbase = context.createElement( \"base\" );\n\t\t\tbase.href = document.location.href;\n\t\t\tcontext.head.appendChild( base );\n\t\t} else {\n\t\t\tcontext = document;\n\t\t}\n\t}\n\n\tparsed = rsingleTag.exec( data );\n\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\n\t}\n\n\tparsed = buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf( \" \" );\n\n\tif ( off > -1 ) {\n\t\tselector = stripAndCollapse( url.slice( off ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax( {\n\t\t\turl: url,\n\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\n\t\t\t// Make value of this field explicit since\n\t\t\t// user can override it through ajaxSetup method\n\t\t\ttype: type || \"GET\",\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t} ).done( function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n\t\t// but they are ignored because response was set above.\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n\t\t} ).always( callback && function( jqXHR, status ) {\n\t\t\tself.each( function() {\n\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t\t} );\n\t\t} );\n\t}\n\n\treturn this;\n};\n\n\n\n\njQuery.expr.pseudos.animated = function( elem ) {\n\treturn jQuery.grep( jQuery.timers, function( fn ) {\n\t\treturn elem === fn.elem;\n\t} ).length;\n};\n\n\n\n\njQuery.offset = {\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\n\n\t\t// Need to be able to calculate position if either\n\t\t// top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( isFunction( options ) ) {\n\n\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\njQuery.fn.extend( {\n\n\t// offset() relates an element's border box to the document origin\n\toffset: function( options ) {\n\n\t\t// Preserve chaining for setter\n\t\tif ( arguments.length ) {\n\t\t\treturn options === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each( function( i ) {\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t} );\n\t\t}\n\n\t\tvar rect, win,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !elem ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n\t\t// Support: IE <=11 only\n\t\t// Running getBoundingClientRect on a\n\t\t// disconnected node in IE throws an error\n\t\tif ( !elem.getClientRects().length ) {\n\t\t\treturn { top: 0, left: 0 };\n\t\t}\n\n\t\t// Get document-relative position by adding viewport scroll to viewport-relative gBCR\n\t\trect = elem.getBoundingClientRect();\n\t\twin = elem.ownerDocument.defaultView;\n\t\treturn {\n\t\t\ttop: rect.top + win.pageYOffset,\n\t\t\tleft: rect.left + win.pageXOffset\n\t\t};\n\t},\n\n\t// position() relates an element's margin box to its offset parent's padding box\n\t// This corresponds to the behavior of CSS absolute positioning\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset, doc,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// position:fixed elements are offset from the viewport, which itself always has zero offset\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\n\t\t\t// Assume position:fixed implies availability of getBoundingClientRect\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\t\t\toffset = this.offset();\n\n\t\t\t// Account for the *real* offset parent, which can be the document or its root element\n\t\t\t// when a statically positioned element is identified\n\t\t\tdoc = elem.ownerDocument;\n\t\t\toffsetParent = elem.offsetParent || doc.documentElement;\n\t\t\twhile ( offsetParent &&\n\t\t\t\t( offsetParent === doc.body || offsetParent === doc.documentElement ) &&\n\t\t\t\tjQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\n\t\t\t\toffsetParent = offsetParent.parentNode;\n\t\t\t}\n\t\t\tif ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {\n\n\t\t\t\t// Incorporate borders into its offset, since they are outside its content origin\n\t\t\t\tparentOffset = jQuery( offsetParent ).offset();\n\t\t\t\tparentOffset.top += jQuery.css( offsetParent, \"borderTopWidth\", true );\n\t\t\t\tparentOffset.left += jQuery.css( offsetParent, \"borderLeftWidth\", true );\n\t\t\t}\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\t// This method will return documentElement in the following cases:\n\t// 1) For the element inside the iframe without offsetParent, this method will return\n\t//    documentElement of the parent window\n\t// 2) For the hidden or detached element\n\t// 3) For body or html element, i.e. in case of the html node - it will return itself\n\t//\n\t// but those exceptions were never presented as a real life use-cases\n\t// and might be considered as more preferable results.\n\t//\n\t// This logic, however, is not guaranteed and can change at any point in the future\n\toffsetParent: function() {\n\t\treturn this.map( function() {\n\t\t\tvar offsetParent = this.offsetParent;\n\n\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || documentElement;\n\t\t} );\n\t}\n} );\n\n// Create scrollLeft and scrollTop methods\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn access( this, function( elem, method, val ) {\n\n\t\t\t// Coalesce documents and windows\n\t\t\tvar win;\n\t\t\tif ( isWindow( elem ) ) {\n\t\t\t\twin = elem;\n\t\t\t} else if ( elem.nodeType === 9 ) {\n\t\t\t\twin = elem.defaultView;\n\t\t\t}\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : win.pageXOffset,\n\t\t\t\t\ttop ? val : win.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length );\n\t};\n} );\n\n// Support: Safari <=7 - 9.1, Chrome <=37 - 49\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n// getComputedStyle returns percent when specified for top/left/bottom/right;\n// rather than make the css module depend on the offset module, just check for it here\njQuery.each( [ \"top\", \"left\" ], function( _i, prop ) {\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\tcomputed = curCSS( elem, prop );\n\n\t\t\t\t// If curCSS returns percentage, fallback to offset\n\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\tcomputed;\n\t\t\t}\n\t\t}\n\t);\n} );\n\n\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( {\n\t\tpadding: \"inner\" + name,\n\t\tcontent: type,\n\t\t\"\": \"outer\" + name\n\t}, function( defaultExtra, funcName ) {\n\n\t\t// Margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( isWindow( elem ) ) {\n\n\t\t\t\t\t// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n\t\t\t\t\treturn funcName.indexOf( \"outer\" ) === 0 ?\n\t\t\t\t\t\telem[ \"inner\" + name ] :\n\t\t\t\t\t\telem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable );\n\t\t};\n\t} );\n} );\n\n\njQuery.each( [\n\t\"ajaxStart\",\n\t\"ajaxStop\",\n\t\"ajaxComplete\",\n\t\"ajaxError\",\n\t\"ajaxSuccess\",\n\t\"ajaxSend\"\n], function( _i, type ) {\n\tjQuery.fn[ type ] = function( fn ) {\n\t\treturn this.on( type, fn );\n\t};\n} );\n\n\n\n\njQuery.fn.extend( {\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ?\n\t\t\tthis.off( selector, \"**\" ) :\n\t\t\tthis.off( types, selector || \"**\", fn );\n\t},\n\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t}\n} );\n\njQuery.each(\n\t( \"blur focus focusin focusout resize scroll click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup contextmenu\" ).split( \" \" ),\n\tfunction( _i, name ) {\n\n\t\t// Handle event binding\n\t\tjQuery.fn[ name ] = function( data, fn ) {\n\t\t\treturn arguments.length > 0 ?\n\t\t\t\tthis.on( name, null, data, fn ) :\n\t\t\t\tthis.trigger( name );\n\t\t};\n\t}\n);\n\n\n\n\n// Support: Android <=4.0 only\n// Make sure we trim BOM and NBSP\nvar rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n\n// Bind a function to a context, optionally partially applying any\n// arguments.\n// jQuery.proxy is deprecated to promote standards (specifically Function#bind)\n// However, it is not slated for removal any time soon\njQuery.proxy = function( fn, context ) {\n\tvar tmp, args, proxy;\n\n\tif ( typeof context === \"string\" ) {\n\t\ttmp = fn[ context ];\n\t\tcontext = fn;\n\t\tfn = tmp;\n\t}\n\n\t// Quick check to determine if target is callable, in the spec\n\t// this throws a TypeError, but we will just return undefined.\n\tif ( !isFunction( fn ) ) {\n\t\treturn undefined;\n\t}\n\n\t// Simulated bind\n\targs = slice.call( arguments, 2 );\n\tproxy = function() {\n\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t};\n\n\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\treturn proxy;\n};\n\njQuery.holdReady = function( hold ) {\n\tif ( hold ) {\n\t\tjQuery.readyWait++;\n\t} else {\n\t\tjQuery.ready( true );\n\t}\n};\njQuery.isArray = Array.isArray;\njQuery.parseJSON = JSON.parse;\njQuery.nodeName = nodeName;\njQuery.isFunction = isFunction;\njQuery.isWindow = isWindow;\njQuery.camelCase = camelCase;\njQuery.type = toType;\n\njQuery.now = Date.now;\n\njQuery.isNumeric = function( obj ) {\n\n\t// As of jQuery 3.0, isNumeric is limited to\n\t// strings and numbers (primitives or objects)\n\t// that can be coerced to finite numbers (gh-2662)\n\tvar type = jQuery.type( obj );\n\treturn ( type === \"number\" || type === \"string\" ) &&\n\n\t\t// parseFloat NaNs numeric-cast false positives (\"\")\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t// subtraction forces infinities to NaN\n\t\t!isNaN( obj - parseFloat( obj ) );\n};\n\njQuery.trim = function( text ) {\n\treturn text == null ?\n\t\t\"\" :\n\t\t( text + \"\" ).replace( rtrim, \"\" );\n};\n\n\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( typeof define === \"function\" && define.amd ) {\n\tdefine( \"jquery\", [], function() {\n\t\treturn jQuery;\n\t} );\n}\n\n\n\n\nvar\n\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$;\n\njQuery.noConflict = function( deep ) {\n\tif ( window.$ === jQuery ) {\n\t\twindow.$ = _$;\n\t}\n\n\tif ( deep && window.jQuery === jQuery ) {\n\t\twindow.jQuery = _jQuery;\n\t}\n\n\treturn jQuery;\n};\n\n// Expose jQuery and $ identifiers, even in AMD\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (#13566)\nif ( typeof noGlobal === \"undefined\" ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\n\n\n\nreturn jQuery;\n} );\n","/**\n * @const\n */\nconst ALPHANUM\n    = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n/**\n * Hexadecimal digits.\n * @const\n */\nconst HEX_DIGITS = '0123456789abcdef';\n\n/**\n * Generates random int within the range [min, max]\n * @param min the minimum value for the generated number\n * @param max the maximum value for the generated number\n * @returns random int number\n */\nfunction randomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n/**\n * Get random element from array or string.\n * @param {Array|string} arr source\n * @returns array element or string character\n */\nfunction randomElement(arr) {\n    return arr[randomInt(0, arr.length - 1)];\n}\n\n/**\n * Generate random alphanumeric string.\n * @param {number} length expected string length\n * @returns {string} random string of specified length\n */\nfunction randomAlphanumStr(length) {\n    let result = '';\n\n    for (let i = 0; i < length; i += 1) {\n        result += randomElement(ALPHANUM);\n    }\n\n    return result;\n}\n\n/**\n * Exported interface.\n */\nconst RandomUtil = {\n    /**\n     * Returns a random hex digit.\n     * @returns {*}\n     */\n    randomHexDigit() {\n        return randomElement(HEX_DIGITS);\n    },\n\n    /**\n     * Returns a random string of hex digits with length 'len'.\n     * @param len the length.\n     */\n    randomHexString(len) {\n        let ret = '';\n\n        while (len--) { // eslint-disable-line no-param-reassign\n            ret += this.randomHexDigit();\n        }\n\n        return ret;\n    },\n    randomElement,\n    randomAlphanumStr,\n    randomInt\n};\n\nmodule.exports = RandomUtil;\n","import Listenable from '../util/Listenable';\n\n/**\n * Creates ConnectionPlugin class that extends the passed class.\n * @param {Class} base the definition of the class that will be extended by\n * ConnectionPlugin\n */\nfunction getConnectionPluginDefinition(base = class {}) {\n    /**\n     * Base class for strophe connection plugins.\n     */\n    return class extends base {\n        /**\n         *\n         */\n        constructor(...args) {\n            super(...args);\n            this.connection = null;\n        }\n\n        /**\n         *\n         * @param connection\n         */\n        init(connection) {\n            this.connection = connection;\n        }\n    };\n}\n\n/**\n * ConnectionPlugin class.\n */\nexport default getConnectionPluginDefinition();\n\n/**\n * ConnectionPlugin class that extends Listenable.\n */\nexport const ConnectionPluginListenable\n    = getConnectionPluginDefinition(Listenable);\n","\nimport JitsiTrackError from '../../JitsiTrackError';\nimport * as JitsiTrackErrors from '../../JitsiTrackErrors';\nimport browser from '../browser';\n\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\n\n/**\n * The default frame rate for Screen Sharing.\n */\nexport const SS_DEFAULT_FRAME_RATE = 5;\n\n/**\n * Handles obtaining a stream from a screen capture on different browsers.\n */\nconst ScreenObtainer = {\n    /**\n     * If not <tt>null</tt> it means that the initialization process is still in\n     * progress. It is used to make desktop stream request wait and continue\n     * after it's done.\n     * {@type Promise|null}\n     */\n\n    obtainStream: null,\n\n    /**\n     * Initializes the function used to obtain a screen capture\n     * (this.obtainStream).\n     *\n     * @param {object} options\n     */\n    init(options = {}) {\n        this.options = options;\n        this.obtainStream = this._createObtainStreamMethod();\n\n        if (!this.obtainStream) {\n            logger.info('Desktop sharing disabled');\n        }\n    },\n\n    /**\n     * Returns a method which will be used to obtain the screen sharing stream\n     * (based on the browser type).\n     *\n     * @returns {Function}\n     * @private\n     */\n    _createObtainStreamMethod() {\n        if (browser.isNWJS()) {\n            return (onSuccess, onFailure) => {\n                window.JitsiMeetNW.obtainDesktopStream(\n                    onSuccess,\n                    (error, constraints) => {\n                        let jitsiError;\n\n                        // FIXME:\n                        // This is very very dirty fix for recognising that the\n                        // user have clicked the cancel button from the Desktop\n                        // sharing pick window. The proper solution would be to\n                        // detect this in the NWJS application by checking the\n                        // streamId === \"\". Even better solution would be to\n                        // stop calling GUM from the NWJS app and just pass the\n                        // streamId to lib-jitsi-meet. This way the desktop\n                        // sharing implementation for NWJS and chrome extension\n                        // will be the same and lib-jitsi-meet will be able to\n                        // control the constraints, check the streamId, etc.\n                        //\n                        // I cannot find documentation about \"InvalidStateError\"\n                        // but this is what we are receiving from GUM when the\n                        // streamId for the desktop sharing is \"\".\n\n                        if (error && error.name === 'InvalidStateError') {\n                            jitsiError = new JitsiTrackError(\n                                JitsiTrackErrors.SCREENSHARING_USER_CANCELED\n                            );\n                        } else {\n                            jitsiError = new JitsiTrackError(\n                                error, constraints, [ 'desktop' ]);\n                        }\n                        (typeof onFailure === 'function')\n                            && onFailure(jitsiError);\n                    });\n            };\n        } else if (browser.isElectron()) {\n            return this.obtainScreenOnElectron;\n        } else if (browser.isReactNative() && browser.supportsGetDisplayMedia()) {\n            return this.obtainScreenFromGetDisplayMediaRN;\n        } else if (browser.supportsGetDisplayMedia()) {\n            return this.obtainScreenFromGetDisplayMedia;\n        }\n        logger.log('Screen sharing not supported on ', browser.getName());\n\n        return null;\n    },\n\n    /**\n     * Gets the appropriate constraints for audio sharing.\n     *\n     * @returns {Object|boolean}\n     */\n    _getAudioConstraints() {\n        const { audioQuality } = this.options;\n        const audio = audioQuality?.stereo ? {\n            autoGainControl: false,\n            channelCount: 2,\n            echoCancellation: false,\n            noiseSuppression: false\n        } : true;\n\n        return audio;\n    },\n\n    /**\n     * Checks whether obtaining a screen capture is supported in the current\n     * environment.\n     * @returns {boolean}\n     */\n    isSupported() {\n        return this.obtainStream !== null;\n    },\n\n    /**\n     * Obtains a screen capture stream on Electron.\n     *\n     * @param onSuccess - Success callback.\n     * @param onFailure - Failure callback.\n     */\n    obtainScreenOnElectron(onSuccess, onFailure) {\n        if (window.JitsiMeetScreenObtainer && window.JitsiMeetScreenObtainer.openDesktopPicker) {\n            const { desktopSharingFrameRate, desktopSharingSources } = this.options;\n\n            window.JitsiMeetScreenObtainer.openDesktopPicker(\n                {\n                    desktopSharingSources: desktopSharingSources || [ 'screen', 'window' ]\n                },\n                (streamId, streamType, screenShareAudio = false) => {\n                    if (streamId) {\n                        let audioConstraints = false;\n\n                        if (screenShareAudio) {\n                            audioConstraints = {};\n                            const optionalConstraints = this._getAudioConstraints();\n\n                            if (typeof optionalConstraints !== 'boolean') {\n                                audioConstraints = {\n                                    optional: optionalConstraints\n                                };\n                            }\n\n                            // Audio screen sharing for electron only works for screen type devices.\n                            // i.e. when the user shares the whole desktop.\n                            // Note. The documentation specifies that chromeMediaSourceId should not be present\n                            // which, in the case a users has multiple monitors, leads to them being shared all\n                            // at once. However we tested with chromeMediaSourceId present and it seems to be\n                            // working properly.\n                            if (streamType === 'screen') {\n                                audioConstraints.mandatory = {\n                                    chromeMediaSource: 'desktop'\n                                };\n                            }\n                        }\n\n                        const constraints = {\n                            audio: audioConstraints,\n                            video: {\n                                mandatory: {\n                                    chromeMediaSource: 'desktop',\n                                    chromeMediaSourceId: streamId,\n                                    minFrameRate: desktopSharingFrameRate?.min ?? SS_DEFAULT_FRAME_RATE,\n                                    maxFrameRate: desktopSharingFrameRate?.max ?? SS_DEFAULT_FRAME_RATE,\n                                    maxWidth: window.screen.width,\n                                    maxHeight: window.screen.height\n                                }\n                            }\n                        };\n\n                        // We have to use the old API on Electron to get a desktop stream.\n                        navigator.mediaDevices.getUserMedia(constraints)\n                            .then(stream => onSuccess({\n                                stream,\n                                sourceId: streamId,\n                                sourceType: streamType\n                            }), onFailure);\n                    } else {\n                        // As noted in Chrome Desktop Capture API:\n                        // If user didn't select any source (i.e. canceled the prompt)\n                        // then the callback is called with an empty streamId.\n                        onFailure(new JitsiTrackError(JitsiTrackErrors.SCREENSHARING_USER_CANCELED));\n                    }\n                },\n                err => onFailure(new JitsiTrackError(\n                    JitsiTrackErrors.ELECTRON_DESKTOP_PICKER_ERROR,\n                    err\n                ))\n            );\n        } else {\n            onFailure(new JitsiTrackError(JitsiTrackErrors.ELECTRON_DESKTOP_PICKER_NOT_FOUND));\n        }\n    },\n\n    /**\n     * Obtains a screen capture stream using getDisplayMedia.\n     *\n     * @param callback - The success callback.\n     * @param errorCallback - The error callback.\n     */\n    obtainScreenFromGetDisplayMedia(callback, errorCallback) {\n        let getDisplayMedia;\n\n        if (navigator.getDisplayMedia) {\n            getDisplayMedia = navigator.getDisplayMedia.bind(navigator);\n        } else {\n            // eslint-disable-next-line max-len\n            getDisplayMedia = navigator.mediaDevices.getDisplayMedia.bind(navigator.mediaDevices);\n        }\n\n        const { desktopSharingFrameRate } = this.options;\n        const video = typeof desktopSharingFrameRate === 'object' ? { frameRate: desktopSharingFrameRate } : true;\n        const audio = this._getAudioConstraints();\n\n        // At the time of this writing 'min' constraint for fps is not supported by getDisplayMedia.\n        video.frameRate && delete video.frameRate.min;\n\n        const constraints = {\n            video,\n            audio,\n            cursor: 'always'\n        };\n\n        logger.info('Using getDisplayMedia for screen sharing', constraints);\n\n        getDisplayMedia(constraints)\n            .then(stream => {\n                callback({\n                    stream,\n                    sourceId: stream.id\n                });\n            })\n            .catch(error => {\n                const errorDetails = {\n                    errorName: error && error.name,\n                    errorMsg: error && error.message,\n                    errorStack: error && error.stack\n                };\n\n                logger.error('getDisplayMedia error', constraints, errorDetails);\n\n                if (errorDetails.errorMsg && errorDetails.errorMsg.indexOf('denied by system') !== -1) {\n                    // On Chrome this is the only thing different between error returned when user cancels\n                    // and when no permission was given on the OS level.\n                    errorCallback(new JitsiTrackError(JitsiTrackErrors.PERMISSION_DENIED));\n\n                    return;\n                }\n\n                errorCallback(new JitsiTrackError(JitsiTrackErrors.SCREENSHARING_USER_CANCELED));\n            });\n    },\n\n    /**\n     * Obtains a screen capture stream using getDisplayMedia.\n     *\n     * @param callback - The success callback.\n     * @param errorCallback - The error callback.\n     */\n    obtainScreenFromGetDisplayMediaRN(callback, errorCallback) {\n        logger.info('Using getDisplayMedia for screen sharing');\n\n        navigator.mediaDevices.getDisplayMedia({ video: true })\n            .then(stream => {\n                callback({\n                    stream,\n                    sourceId: stream.id });\n            })\n            .catch(() => {\n                errorCallback(new JitsiTrackError(JitsiTrackErrors\n                    .SCREENSHARING_USER_CANCELED));\n            });\n    },\n\n    /**\n     * Sets the max frame rate to be used for a desktop track capture.\n     *\n     * @param {number} maxFps capture frame rate to be used for desktop tracks.\n     * @returns {void}\n     */\n    setDesktopSharingFrameRate(maxFps) {\n        logger.info(`Setting the desktop capture rate to ${maxFps}`);\n\n        this.options.desktopSharingFrameRate = {\n            min: SS_DEFAULT_FRAME_RATE,\n            max: maxFps\n        };\n    }\n};\n\nexport default ScreenObtainer;\n","/**\n * The errors for the connection.\n */\n\n/**\n * Indicates that the connection was dropped with an error which was most likely\n * caused by some networking issues. The dropped term in this context means that\n * the connection was closed unexpectedly (not on user's request).\n *\n * One example is 'item-not-found' error thrown by Prosody when the BOSH session\n * times out after 60 seconds of inactivity. On the other hand 'item-not-found'\n * could also happen when BOSH request is sent to the server with the session-id\n * that is not know to the server. But this should not happen in lib-jitsi-meet\n * case as long as the service is configured correctly (there is no bug).\n */\nexport const CONNECTION_DROPPED_ERROR = 'connection.droppedError';\n\n/**\n * Not specified errors.\n */\nexport const OTHER_ERROR = 'connection.otherError';\n\n/**\n * Indicates that a password is required in order to join the conference.\n */\nexport const PASSWORD_REQUIRED = 'connection.passwordRequired';\n\n/**\n * Indicates that the connection was dropped, because of too many 5xx HTTP\n * errors on BOSH requests.\n */\nexport const SERVER_ERROR = 'connection.serverError';\n","import { getLogger } from 'jitsi-meet-logger';\nimport { $pres, Strophe } from 'strophe.js';\nimport 'strophejs-plugin-stream-management';\n\nimport Listenable from '../util/Listenable';\n\nimport ResumeTask from './ResumeTask';\nimport LastSuccessTracker from './StropheLastSuccess';\nimport PingConnectionPlugin from './strophe.ping';\n\nconst logger = getLogger(__filename);\n\n/**\n * The lib-jitsi-meet layer for {@link Strophe.Connection}.\n */\nexport default class XmppConnection extends Listenable {\n    /**\n     * The list of {@link XmppConnection} events.\n     *\n     * @returns {Object}\n     */\n    static get Events() {\n        return {\n            CONN_STATUS_CHANGED: 'CONN_STATUS_CHANGED',\n            CONN_SHARD_CHANGED: 'CONN_SHARD_CHANGED'\n        };\n    }\n\n    /**\n     * The list of Xmpp connection statuses.\n     *\n     * @returns {Strophe.Status}\n     */\n    static get Status() {\n        return Strophe.Status;\n    }\n\n    /**\n     * Initializes new connection instance.\n     *\n     * @param {Object} options\n     * @param {String} options.serviceUrl - The BOSH or WebSocket service URL.\n     * @param {String} options.shard - The BOSH or WebSocket is connecting to this shard.\n     * Useful for detecting when shard changes.\n     * @param {String} [options.enableWebsocketResume=true] - True/false to control the stream resumption functionality.\n     * It will enable automatically by default if supported by the XMPP server.\n     * @param {Number} [options.websocketKeepAlive=60000] - The websocket keep alive interval.\n     * It's the interval + a up to a minute of jitter. Pass -1 to disable.\n     * The keep alive is HTTP GET request to {@link options.serviceUrl} or to {@link options.websocketKeepAliveUrl}.\n     * @param {Number} [options.websocketKeepAliveUrl] - The websocket keep alive url to use if any,\n     * if missing the serviceUrl url will be used.\n     * @param {Object} [options.xmppPing] - The xmpp ping settings.\n     */\n    constructor({ enableWebsocketResume, websocketKeepAlive, websocketKeepAliveUrl, serviceUrl, shard, xmppPing }) {\n        super();\n        this._options = {\n            enableWebsocketResume: typeof enableWebsocketResume === 'undefined' ? true : enableWebsocketResume,\n            pingOptions: xmppPing,\n            shard,\n            websocketKeepAlive: typeof websocketKeepAlive === 'undefined' ? 60 * 1000 : Number(websocketKeepAlive),\n            websocketKeepAliveUrl\n        };\n\n        this._stropheConn = new Strophe.Connection(serviceUrl);\n        this._usesWebsocket = serviceUrl.startsWith('ws:') || serviceUrl.startsWith('wss:');\n\n        // The default maxRetries is 5, which is too long.\n        this._stropheConn.maxRetries = 3;\n\n        this._rawInputTracker = new LastSuccessTracker();\n        this._rawInputTracker.startTracking(this, this._stropheConn);\n\n        this._resumeTask = new ResumeTask(this._stropheConn);\n\n        /**\n         * @typedef DeferredSendIQ Object\n         * @property {Element} iq - The IQ to send.\n         * @property {function} resolve - The resolve method of the deferred Promise.\n         * @property {function} reject - The reject method of the deferred Promise.\n         * @property {number} timeout - The ID of the timeout task that needs to be cleared, before sending the IQ.\n         */\n        /**\n         * Deferred IQs to be sent upon reconnect.\n         * @type {Array<DeferredSendIQ>}\n         * @private\n         */\n        this._deferredIQs = [];\n\n        // Ping plugin is mandatory for the Websocket mode to work correctly. It's used to detect when the connection\n        // is broken (WebSocket/TCP connection not closed gracefully).\n        this.addConnectionPlugin(\n            'ping',\n            new PingConnectionPlugin({\n                getTimeSinceLastServerResponse: () => this.getTimeSinceLastSuccess(),\n                onPingThresholdExceeded: () => this._onPingErrorThresholdExceeded(),\n                pingOptions: xmppPing\n            }));\n\n        // tracks whether this is the initial connection or a reconnect\n        this._oneSuccessfulConnect = false;\n    }\n\n    /**\n     * A getter for the connected state.\n     *\n     * @returns {boolean}\n     */\n    get connected() {\n        const websocket = this._stropheConn && this._stropheConn._proto && this._stropheConn._proto.socket;\n\n        return (this._status === Strophe.Status.CONNECTED || this._status === Strophe.Status.ATTACHED)\n            && (!this.isUsingWebSocket || (websocket && websocket.readyState === WebSocket.OPEN));\n    }\n\n    /**\n     * Retrieves the feature discovery plugin instance.\n     *\n     * @returns {Strophe.Connection.disco}\n     */\n    get disco() {\n        return this._stropheConn.disco;\n    }\n\n    /**\n     * A getter for the disconnecting state.\n     *\n     * @returns {boolean}\n     */\n    get disconnecting() {\n        return this._stropheConn.disconnecting === true;\n    }\n\n    /**\n     * A getter for the domain.\n     *\n     * @returns {string|null}\n     */\n    get domain() {\n        return this._stropheConn.domain;\n    }\n\n    /**\n     * Tells if Websocket is used as the transport for the current XMPP connection. Returns true for Websocket or false\n     * for BOSH.\n     * @returns {boolean}\n     */\n    get isUsingWebSocket() {\n        return this._usesWebsocket;\n    }\n\n    /**\n     * A getter for the JID.\n     *\n     * @returns {string|null}\n     */\n    get jid() {\n        return this._stropheConn.jid;\n    }\n\n    /**\n     * Returns headers for the last BOSH response received.\n     *\n     * @returns {string}\n     */\n    get lastResponseHeaders() {\n        return this._stropheConn._proto && this._stropheConn._proto.lastResponseHeaders;\n    }\n\n    /**\n     * A getter for the logger plugin instance.\n     *\n     * @returns {*}\n     */\n    get logger() {\n        return this._stropheConn.logger;\n    }\n\n    /**\n     * A getter for the connection options.\n     *\n     * @returns {*}\n     */\n    get options() {\n        return this._stropheConn.options;\n    }\n\n    /**\n     * A getter for the domain to be used for ping.\n     */\n    get pingDomain() {\n        return this._options.pingOptions?.domain || this.domain;\n    }\n\n    /**\n     * A getter for the service URL.\n     *\n     * @returns {string}\n     */\n    get service() {\n        return this._stropheConn.service;\n    }\n\n    /**\n     * Returns the current connection status.\n     *\n     * @returns {Strophe.Status}\n     */\n    get status() {\n        return this._status;\n    }\n\n    /**\n     * Adds a connection plugin to this instance.\n     *\n     * @param {string} name - The name of the plugin or rather a key under which it will be stored on this connection\n     * instance.\n     * @param {ConnectionPluginListenable} plugin - The plugin to add.\n     */\n    addConnectionPlugin(name, plugin) {\n        this[name] = plugin;\n        plugin.init(this);\n    }\n\n    /**\n     * See {@link Strophe.Connection.addHandler}\n     *\n     * @returns {void}\n     */\n    addHandler(...args) {\n        this._stropheConn.addHandler(...args);\n    }\n\n    /* eslint-disable max-params */\n    /**\n     * Wraps {@link Strophe.Connection.attach} method in order to intercept the connection status updates.\n     * See {@link Strophe.Connection.attach} for the params description.\n     *\n     * @returns {void}\n     */\n    attach(jid, sid, rid, callback, ...args) {\n        this._stropheConn.attach(jid, sid, rid, this._stropheConnectionCb.bind(this, callback), ...args);\n    }\n\n    /**\n     * Wraps Strophe.Connection.connect method in order to intercept the connection status updates.\n     * See {@link Strophe.Connection.connect} for the params description.\n     *\n     * @returns {void}\n     */\n    connect(jid, pass, callback, ...args) {\n        this._stropheConn.connect(jid, pass, this._stropheConnectionCb.bind(this, callback), ...args);\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     * Handles {@link Strophe.Status} updates for the current connection.\n     *\n     * @param {function} targetCallback - The callback passed by the {@link XmppConnection} consumer to one of\n     * the connect methods.\n     * @param {Strophe.Status} status - The new connection status.\n     * @param {*} args - The rest of the arguments passed by Strophe.\n     * @private\n     */\n    _stropheConnectionCb(targetCallback, status, ...args) {\n        this._status = status;\n\n        let blockCallback = false;\n\n        if (status === Strophe.Status.CONNECTED || status === Strophe.Status.ATTACHED) {\n            this._maybeEnableStreamResume();\n\n            // after connecting - immediately check whether shard changed,\n            // we need this only when using websockets as bosh checks headers from every response\n            if (this._usesWebsocket && this._oneSuccessfulConnect) {\n                this._keepAliveAndCheckShard();\n            }\n            this._oneSuccessfulConnect = true;\n\n            this._maybeStartWSKeepAlive();\n            this._processDeferredIQs();\n            this._resumeTask.cancel();\n            this.ping.startInterval(this._options.pingOptions?.domain || this.domain);\n        } else if (status === Strophe.Status.DISCONNECTED) {\n            this.ping.stopInterval();\n\n            // FIXME add RECONNECTING state instead of blocking the DISCONNECTED update\n            blockCallback = this._tryResumingConnection();\n            if (!blockCallback) {\n                clearTimeout(this._wsKeepAlive);\n            }\n        }\n\n        if (!blockCallback) {\n            targetCallback(status, ...args);\n            this.eventEmitter.emit(XmppConnection.Events.CONN_STATUS_CHANGED, status);\n        }\n    }\n\n    /**\n     * Clears the list of IQs and rejects deferred Promises with an error.\n     *\n     * @private\n     */\n    _clearDeferredIQs() {\n        for (const deferred of this._deferredIQs) {\n            deferred.reject(new Error('disconnect'));\n        }\n        this._deferredIQs = [];\n    }\n\n    /**\n     * The method is meant to be used for testing. It's a shortcut for closing the WebSocket.\n     *\n     * @returns {void}\n     */\n    closeWebsocket() {\n        if (this._stropheConn && this._stropheConn._proto) {\n            this._stropheConn._proto._closeSocket();\n            this._stropheConn._proto._onClose(null);\n        }\n    }\n\n    /**\n     * See {@link Strophe.Connection.disconnect}.\n     *\n     * @returns {void}\n     */\n    disconnect(...args) {\n        this._resumeTask.cancel();\n        clearTimeout(this._wsKeepAlive);\n        this._clearDeferredIQs();\n        this._stropheConn.disconnect(...args);\n    }\n\n    /**\n     * See {@link Strophe.Connection.flush}.\n     *\n     * @returns {void}\n     */\n    flush(...args) {\n        this._stropheConn.flush(...args);\n    }\n\n    /**\n     * See {@link LastRequestTracker.getTimeSinceLastSuccess}.\n     *\n     * @returns {number|null}\n     */\n    getTimeSinceLastSuccess() {\n        return this._rawInputTracker.getTimeSinceLastSuccess();\n    }\n\n    /**\n     * See {@link LastRequestTracker.getLastFailedMessage}.\n     *\n     * @returns {string|null}\n     */\n    getLastFailedMessage() {\n        return this._rawInputTracker.getLastFailedMessage();\n    }\n\n    /**\n     * Requests a resume token from the server if enabled and all requirements are met.\n     *\n     * @private\n     */\n    _maybeEnableStreamResume() {\n        if (!this._options.enableWebsocketResume) {\n\n            return;\n        }\n\n        const { streamManagement } = this._stropheConn;\n\n        if (!this.isUsingWebSocket) {\n            logger.warn('Stream resume enabled, but WebSockets are not enabled');\n        } else if (!streamManagement) {\n            logger.warn('Stream resume enabled, but Strophe streamManagement plugin is not installed');\n        } else if (!streamManagement.isSupported()) {\n            logger.warn('Stream resume enabled, but XEP-0198 is not supported by the server');\n        } else if (!streamManagement.getResumeToken()) {\n            logger.info('Enabling XEP-0198 stream management');\n            streamManagement.enable(/* resume */ true);\n        }\n    }\n\n    /**\n     * Starts the Websocket keep alive if enabled.\n     *\n     * @private\n     * @returns {void}\n     */\n    _maybeStartWSKeepAlive() {\n        const { websocketKeepAlive } = this._options;\n\n        if (this._usesWebsocket && websocketKeepAlive > 0) {\n            this._wsKeepAlive || logger.info(`WebSocket keep alive interval: ${websocketKeepAlive}ms`);\n            clearTimeout(this._wsKeepAlive);\n\n            const intervalWithJitter = /* base */ websocketKeepAlive + /* jitter */ (Math.random() * 60 * 1000);\n\n            logger.debug(`Scheduling next WebSocket keep-alive in ${intervalWithJitter}ms`);\n\n            this._wsKeepAlive = setTimeout(\n                () => this._keepAliveAndCheckShard()\n                    .then(() => this._maybeStartWSKeepAlive()),\n                intervalWithJitter);\n        }\n    }\n\n    /**\n     * Do a http GET to the shard and if shard change will throw an event.\n     *\n     * @private\n     * @returns {Promise}\n     */\n    _keepAliveAndCheckShard() {\n        const { shard, websocketKeepAliveUrl } = this._options;\n        const url = websocketKeepAliveUrl ? websocketKeepAliveUrl\n            : this.service.replace('wss://', 'https://').replace('ws://', 'http://');\n\n        return fetch(url)\n            .then(response => {\n\n                // skips header checking if there is no info in options\n                if (!shard) {\n                    return;\n                }\n\n                const responseShard = response.headers.get('x-jitsi-shard');\n\n                if (responseShard !== shard) {\n                    logger.error(\n                        `Detected that shard changed from ${shard} to ${responseShard}`);\n                    this.eventEmitter.emit(XmppConnection.Events.CONN_SHARD_CHANGED);\n                }\n            })\n            .catch(error => {\n                logger.error(`Websocket Keep alive failed for url: ${url}`, { error });\n            });\n    }\n\n    /**\n     * Goes over the list of {@link DeferredSendIQ} tasks and sends them.\n     *\n     * @private\n     * @returns {void}\n     */\n    _processDeferredIQs() {\n        for (const deferred of this._deferredIQs) {\n            if (deferred.iq) {\n                clearTimeout(deferred.timeout);\n\n                const timeLeft = Date.now() - deferred.start;\n\n                this.sendIQ(\n                    deferred.iq,\n                    result => deferred.resolve(result),\n                    error => deferred.reject(error),\n                    timeLeft);\n            }\n        }\n\n        this._deferredIQs = [];\n    }\n\n    /**\n     * Send a stanza. This function is called to push data onto the send queue to go out over the wire.\n     *\n     * @param {Element|Strophe.Builder} stanza - The stanza to send.\n     * @returns {void}\n     */\n    send(stanza) {\n        if (!this.connected) {\n            throw new Error('Not connected');\n        }\n        this._stropheConn.send(stanza);\n    }\n\n    /**\n     * Helper function to send IQ stanzas.\n     *\n     * @param {Element} elem - The stanza to send.\n     * @param {Function} callback - The callback function for a successful request.\n     * @param {Function} errback - The callback function for a failed or timed out request.  On timeout, the stanza will\n     * be null.\n     * @param {number} timeout - The time specified in milliseconds for a timeout to occur.\n     * @returns {number} - The id used to send the IQ.\n     */\n    sendIQ(elem, callback, errback, timeout) {\n        if (!this.connected) {\n            errback('Not connected');\n\n            return;\n        }\n\n        return this._stropheConn.sendIQ(elem, callback, errback, timeout);\n    }\n\n    /**\n     * Sends an IQ immediately if connected or puts it on the send queue otherwise(in contrary to other send methods\n     * which would fail immediately if disconnected).\n     *\n     * @param {Element} iq - The IQ to send.\n     * @param {number} timeout - How long to wait for the response. The time when the connection is reconnecting is\n     * included, which means that the IQ may never be sent and still fail with a timeout.\n     */\n    sendIQ2(iq, { timeout }) {\n        return new Promise((resolve, reject) => {\n            if (this.connected) {\n                this.sendIQ(\n                    iq,\n                    result => resolve(result),\n                    error => reject(error),\n                    timeout);\n            } else {\n                const deferred = {\n                    iq,\n                    resolve,\n                    reject,\n                    start: Date.now(),\n                    timeout: setTimeout(() => {\n                        // clears the IQ on timeout and invalidates the deferred task\n                        deferred.iq = undefined;\n\n                        // Strophe calls with undefined on timeout\n                        reject(undefined);\n                    }, timeout)\n                };\n\n                this._deferredIQs.push(deferred);\n            }\n        });\n    }\n\n    /**\n     * Called by the ping plugin when ping fails too many times.\n     *\n     * @returns {void}\n     */\n    _onPingErrorThresholdExceeded() {\n        if (this.isUsingWebSocket) {\n            logger.warn('Ping error threshold exceeded - killing the WebSocket');\n            this.closeWebsocket();\n        }\n    }\n\n    /**\n     *  Helper function to send presence stanzas. The main benefit is for sending presence stanzas for which you expect\n     *  a responding presence stanza with the same id (for example when leaving a chat room).\n     *\n     * @param {Element} elem - The stanza to send.\n     * @param {Function} callback - The callback function for a successful request.\n     * @param {Function} errback - The callback function for a failed or timed out request. On timeout, the stanza will\n     * be null.\n     * @param {number} timeout - The time specified in milliseconds for a timeout to occur.\n     * @returns {number} - The id used to send the presence.\n     */\n    sendPresence(elem, callback, errback, timeout) {\n        if (!this.connected) {\n            errback('Not connected');\n\n            return;\n        }\n        this._stropheConn.sendPresence(elem, callback, errback, timeout);\n    }\n\n    /**\n     * The method gracefully closes the BOSH connection by using 'navigator.sendBeacon'.\n     *\n     * @returns {boolean} - true if the beacon was sent.\n     */\n    sendUnavailableBeacon() {\n        if (!navigator.sendBeacon || this._stropheConn.disconnecting || !this._stropheConn.connected) {\n            return false;\n        }\n\n        this._stropheConn._changeConnectStatus(Strophe.Status.DISCONNECTING);\n        this._stropheConn.disconnecting = true;\n\n        const body = this._stropheConn._proto._buildBody()\n            .attrs({\n                type: 'terminate'\n            });\n        const pres = $pres({\n            xmlns: Strophe.NS.CLIENT,\n            type: 'unavailable'\n        });\n\n        body.cnode(pres.tree());\n\n        const res = navigator.sendBeacon(\n            this.service.indexOf('https://') === -1 ? `https:${this.service}` : this.service,\n            Strophe.serialize(body.tree()));\n\n        logger.info(`Successfully send unavailable beacon ${res}`);\n\n        this._stropheConn._proto._abortAllRequests();\n        this._stropheConn._doDisconnect();\n\n        return true;\n    }\n\n    /**\n     * Tries to use stream management plugin to resume dropped XMPP connection. The streamManagement plugin clears\n     * the resume token if any connection error occurs which would put it in unrecoverable state, so as long as\n     * the token is present it means the connection can be resumed.\n     *\n     * @private\n     * @returns {boolean}\n     */\n    _tryResumingConnection() {\n        const { streamManagement } = this._stropheConn;\n        const resumeToken = streamManagement && streamManagement.getResumeToken();\n\n        if (resumeToken) {\n            this._resumeTask.schedule();\n\n            return true;\n        }\n\n        return false;\n    }\n}\n","/**\n * Event triggered when participant's muted status changes.\n * @param {string} endpointId the track owner's identifier (MUC nickname)\n * @param {MediaType} mediaType \"audio\" or \"video\"\n * @param {boolean} isMuted the new muted state\n */\nexport const PEER_MUTED_CHANGED = 'signaling.peerMuted';\n\n/**\n * Event triggered when participant's video type changes.\n * @param {string} endpointId the video owner's ID (MUC nickname)\n * @param {VideoType} videoType the new value\n */\nexport const PEER_VIDEO_TYPE_CHANGED = 'signaling.peerVideoType';\n","export const CALLSTATS_SCRIPT_URL = 'https://api.callstats.io/static/callstats-ws.min.js';\n\n/**\n * The number of remote speakers for which the audio levels will be calculated using\n * RTCRtpReceiver#getSynchronizationSources. Limit the number of endpoints to save cpu on the client as this API call\n * is known to take longer to execute when there are many audio receivers.\n */\nexport const SPEAKERS_AUDIO_LEVELS = 5;\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/**\n * Adds the key-value `pair` to `map`.\n *\n * @private\n * @param {Object} map The map to modify.\n * @param {Array} pair The key-value pair to add.\n * @returns {Object} Returns `map`.\n */\nfunction addMapEntry(map, pair) {\n  // Don't return `map.set` because it's not chainable in IE 11.\n  map.set(pair[0], pair[1]);\n  return map;\n}\n\n/**\n * Adds `value` to `set`.\n *\n * @private\n * @param {Object} set The set to modify.\n * @param {*} value The value to add.\n * @returns {Object} Returns `set`.\n */\nfunction addSetEntry(set, value) {\n  // Don't return `set.add` because it's not chainable in IE 11.\n  set.add(value);\n  return set;\n}\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {boolean} [isFull] Specify a clone including symbols.\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      if (isHostObject(value)) {\n        return object ? value : {};\n      }\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, baseClone, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (!isArr) {\n    var props = isFull ? getAllKeys(value) : keys(value);\n  }\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n  });\n  return result;\n}\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} prototype The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nfunction baseCreate(proto) {\n  return isObject(proto) ? objectCreate(proto) : {};\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var result = new buffer.constructor(buffer.length);\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\n/**\n * Creates a clone of `map`.\n *\n * @private\n * @param {Object} map The map to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned map.\n */\nfunction cloneMap(map, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n  return arrayReduce(array, addMapEntry, new map.constructor);\n}\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\n/**\n * Creates a clone of `set`.\n *\n * @private\n * @param {Object} set The set to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned set.\n */\nfunction cloneSet(set, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n  return arrayReduce(array, addSetEntry, new set.constructor);\n}\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    assignValue(object, key, newValue === undefined ? source[key] : newValue);\n  }\n  return object;\n}\n\n/**\n * Copies own symbol properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Creates an array of the own enumerable symbol properties of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return cloneMap(object, isDeep, cloneFunc);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return cloneSet(object, isDeep, cloneFunc);\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, true, true);\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = cloneDeep;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","\n/**\n * Promise-like object which can be passed around for resolving it later. It\n * implements the \"thenable\" interface, so it can be used wherever a Promise\n * could be used.\n *\n * In addition a \"reject on timeout\" functionality is provided.\n */\nexport default class Deferred {\n    /**\n     * Instantiates a Deferred object.\n     */\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = (...args) => {\n                this.clearRejectTimeout();\n                resolve(...args);\n            };\n            this.reject = (...args) => {\n                this.clearRejectTimeout();\n                reject(...args);\n            };\n        });\n        this.then = this.promise.then.bind(this.promise);\n        this.catch = this.promise.catch.bind(this.promise);\n    }\n\n    /**\n     * Clears the reject timeout.\n     */\n    clearRejectTimeout() {\n        clearTimeout(this._timeout);\n    }\n\n    /**\n     * Rejects the promise after the given timeout.\n     */\n    setRejectTimeout(ms) {\n        this._timeout = setTimeout(() => {\n            this.reject(new Error('timeout'));\n        }, ms);\n    }\n}\n","/**\n * The possible camera facing modes. For now support only 'user' and\n * 'environment' because 'left' and 'right' are not used anywhere in our\n * projects at the time of this writing. For more information please refer to\n * https://w3c.github.io/mediacapture-main/getusermedia.html\n * #def-constraint-facingMode.\n *\n * @enum {string}\n */\nconst CameraFacingMode = {\n    /**\n     * The mode which specifies the environment-facing camera.\n     */\n    ENVIRONMENT: 'environment',\n\n    /**\n     * The mode which specifies the user-facing camera.\n     */\n    USER: 'user'\n};\n\nmodule.exports = CameraFacingMode;\n","/* eslint-env node */\n'use strict';\n\n// SDP helpers.\nconst SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function() {\n  return Math.random().toString(36).substr(2, 10);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function(blob) {\n  return blob.trim().split('\\n').map(line => line.trim());\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function(blob) {\n  const parts = blob.split('\\nm=');\n  return parts.map((part, index) => (index > 0 ?\n    'm=' + part : part).trim() + '\\r\\n');\n};\n\n// Returns the session description.\nSDPUtils.getDescription = function(blob) {\n  const sections = SDPUtils.splitSections(blob);\n  return sections && sections[0];\n};\n\n// Returns the individual media sections.\nSDPUtils.getMediaSections = function(blob) {\n  const sections = SDPUtils.splitSections(blob);\n  sections.shift();\n  return sections;\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function(blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(line => line.indexOf(prefix) === 0);\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\n// Input can be prefixed with a=.\nSDPUtils.parseCandidate = function(line) {\n  let parts;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  const candidate = {\n    foundation: parts[0],\n    component: {1: 'rtp', 2: 'rtcp'}[parts[1]] || parts[1],\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    address: parts[4], // address is an alias for ip.\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7],\n  };\n\n  for (let i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compatibility.\n        candidate.usernameFragment = parts[i + 1];\n        break;\n      default: // extension handling, in particular ufrag. Don't overwrite.\n        if (candidate[parts[i]] === undefined) {\n          candidate[parts[i]] = parts[i + 1];\n        }\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\n// This does not include the a= prefix!\nSDPUtils.writeCandidate = function(candidate) {\n  const sdp = [];\n  sdp.push(candidate.foundation);\n\n  const component = candidate.component;\n  if (component === 'rtp') {\n    sdp.push(1);\n  } else if (component === 'rtcp') {\n    sdp.push(2);\n  } else {\n    sdp.push(component);\n  }\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.address || candidate.ip);\n  sdp.push(candidate.port);\n\n  const type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress &&\n      candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress);\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort);\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  if (candidate.usernameFragment || candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.usernameFragment || candidate.ufrag);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an ice-options line, returns an array of option tags.\n// Sample input:\n// a=ice-options:foo bar\nSDPUtils.parseIceOptions = function(line) {\n  return line.substr(14).split(' ');\n};\n\n// Parses a rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function(line) {\n  let parts = line.substr(9).split(' ');\n  const parsed = {\n    payloadType: parseInt(parts.shift(), 10), // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  // legacy alias, got renamed back to channels in ORTC.\n  parsed.numChannels = parsed.channels;\n  return parsed;\n};\n\n// Generates a rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function(codec) {\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  const channels = codec.channels || codec.numChannels || 1;\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n      (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n};\n\n// Parses a extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function(line) {\n  const parts = line.substr(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1],\n  };\n};\n\n// Generates an extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function(headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\n        ? '/' + headerExtension.direction\n        : '') +\n      ' ' + headerExtension.uri + '\\r\\n';\n};\n\n// Parses a fmtp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\nSDPUtils.parseFmtp = function(line) {\n  const parsed = {};\n  let kv;\n  const parts = line.substr(line.indexOf(' ') + 1).split(';');\n  for (let j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates a fmtp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function(codec) {\n  let line = '';\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    const params = [];\n    Object.keys(codec.parameters).forEach(param => {\n      if (codec.parameters[param] !== undefined) {\n        params.push(param + '=' + codec.parameters[param]);\n      } else {\n        params.push(param);\n      }\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses a rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function(line) {\n  const parts = line.substr(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' '),\n  };\n};\n\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function(codec) {\n  let lines = '';\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(fb => {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n          '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses a RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function(line) {\n  const sp = line.indexOf(' ');\n  const parts = {\n    ssrc: parseInt(line.substr(7, sp - 7), 10),\n  };\n  const colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substr(sp + 1, colon - sp - 1);\n    parts.value = line.substr(colon + 1);\n  } else {\n    parts.attribute = line.substr(sp + 1);\n  }\n  return parts;\n};\n\n// Parse a ssrc-group line (see RFC 5576). Sample input:\n// a=ssrc-group:semantics 12 34\nSDPUtils.parseSsrcGroup = function(line) {\n  const parts = line.substr(13).split(' ');\n  return {\n    semantics: parts.shift(),\n    ssrcs: parts.map(ssrc => parseInt(ssrc, 10)),\n  };\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// Returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function(mediaSection) {\n  const mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substr(6);\n  }\n};\n\n// Parses a fingerprint line for DTLS-SRTP.\nSDPUtils.parseFingerprint = function(line) {\n  const parts = line.substr(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n    value: parts[1].toUpperCase(), // the definition is upper-case in RFC 4572.\n  };\n};\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n  const lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=fingerprint:');\n  // Note: a=setup line is ignored since we use the 'auto' role in Edge.\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint),\n  };\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function(params, setupType) {\n  let sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(fp => {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n\n// Parses a=crypto lines into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#dictionary-rtcsrtpsdesparameters-members\nSDPUtils.parseCryptoLine = function(line) {\n  const parts = line.substr(9).split(' ');\n  return {\n    tag: parseInt(parts[0], 10),\n    cryptoSuite: parts[1],\n    keyParams: parts[2],\n    sessionParams: parts.slice(3),\n  };\n};\n\nSDPUtils.writeCryptoLine = function(parameters) {\n  return 'a=crypto:' + parameters.tag + ' ' +\n    parameters.cryptoSuite + ' ' +\n    (typeof parameters.keyParams === 'object'\n      ? SDPUtils.writeCryptoKeyParams(parameters.keyParams)\n      : parameters.keyParams) +\n    (parameters.sessionParams ? ' ' + parameters.sessionParams.join(' ') : '') +\n    '\\r\\n';\n};\n\n// Parses the crypto key parameters into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#rtcsrtpkeyparam*\nSDPUtils.parseCryptoKeyParams = function(keyParams) {\n  if (keyParams.indexOf('inline:') !== 0) {\n    return null;\n  }\n  const parts = keyParams.substr(7).split('|');\n  return {\n    keyMethod: 'inline',\n    keySalt: parts[0],\n    lifeTime: parts[1],\n    mkiValue: parts[2] ? parts[2].split(':')[0] : undefined,\n    mkiLength: parts[2] ? parts[2].split(':')[1] : undefined,\n  };\n};\n\nSDPUtils.writeCryptoKeyParams = function(keyParams) {\n  return keyParams.keyMethod + ':'\n    + keyParams.keySalt +\n    (keyParams.lifeTime ? '|' + keyParams.lifeTime : '') +\n    (keyParams.mkiValue && keyParams.mkiLength\n      ? '|' + keyParams.mkiValue + ':' + keyParams.mkiLength\n      : '');\n};\n\n// Extracts all SDES parameters.\nSDPUtils.getCryptoParameters = function(mediaSection, sessionpart) {\n  const lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=crypto:');\n  return lines.map(SDPUtils.parseCryptoLine);\n};\n\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n  const ufrag = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-ufrag:')[0];\n  const pwd = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-pwd:')[0];\n  if (!(ufrag && pwd)) {\n    return null;\n  }\n  return {\n    usernameFragment: ufrag.substr(12),\n    password: pwd.substr(10),\n  };\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function(params) {\n  let sdp = 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n      'a=ice-pwd:' + params.password + '\\r\\n';\n  if (params.iceLite) {\n    sdp += 'a=ice-lite\\r\\n';\n  }\n  return sdp;\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function(mediaSection) {\n  const description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: [],\n  };\n  const lines = SDPUtils.splitLines(mediaSection);\n  const mline = lines[0].split(' ');\n  for (let i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n    const pt = mline[i];\n    const rtpmapline = SDPUtils.matchPrefix(\n      mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      const codec = SDPUtils.parseRtpMap(rtpmapline);\n      const fmtps = SDPUtils.matchPrefix(\n        mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\n        mediaSection, 'a=rtcp-fb:' + pt + ' ')\n        .map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(line => {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function(kind, caps) {\n  let sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' UDP/TLS/RTP/SAVPF ';\n  sdp += caps.codecs.map(codec => {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(codec => {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  let maxptime = 0;\n  caps.codecs.forEach(codec => {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n\n  if (caps.headerExtensions) {\n    caps.headerExtensions.forEach(extension => {\n      sdp += SDPUtils.writeExtmap(extension);\n    });\n  }\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n  const encodingParameters = [];\n  const description = SDPUtils.parseRtpParameters(mediaSection);\n  const hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  const hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  const ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(parts => parts.attribute === 'cname');\n  const primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  let secondarySsrc;\n\n  const flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n    .map(line => {\n      const parts = line.substr(17).split(' ');\n      return parts.map(part => parseInt(part, 10));\n    });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(codec => {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      let encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10),\n      };\n      if (primarySsrc && secondarySsrc) {\n        encParam.rtx = {ssrc: secondarySsrc};\n      }\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: primarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red',\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc,\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  let bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substr(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substr(5), 10) * 1000 * 0.95\n          - (50 * 40 * 8);\n    } else {\n      bandwidth = undefined;\n    }\n    encodingParameters.forEach(params => {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function(mediaSection) {\n  const rtcpParameters = {};\n\n  // Gets the first SSRC. Note that with RTX there might be multiple\n  // SSRCs.\n  const remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(obj => obj.attribute === 'cname')[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  const rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attrіbute.\n  // Note that Edge does not support unmuxed RTCP.\n  const mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\nSDPUtils.writeRtcpParameters = function(rtcpParameters) {\n  let sdp = '';\n  if (rtcpParameters.reducedSize) {\n    sdp += 'a=rtcp-rsize\\r\\n';\n  }\n  if (rtcpParameters.mux) {\n    sdp += 'a=rtcp-mux\\r\\n';\n  }\n  if (rtcpParameters.ssrc !== undefined && rtcpParameters.cname) {\n    sdp += 'a=ssrc:' + rtcpParameters.ssrc +\n      ' cname:' + rtcpParameters.cname + '\\r\\n';\n  }\n  return sdp;\n};\n\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function(mediaSection) {\n  let parts;\n  const spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substr(7).split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n  const planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(msidParts => msidParts.attribute === 'msid');\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n};\n\n// SCTP\n// parses draft-ietf-mmusic-sctp-sdp-26 first and falls back\n// to draft-ietf-mmusic-sctp-sdp-05\nSDPUtils.parseSctpDescription = function(mediaSection) {\n  const mline = SDPUtils.parseMLine(mediaSection);\n  const maxSizeLine = SDPUtils.matchPrefix(mediaSection, 'a=max-message-size:');\n  let maxMessageSize;\n  if (maxSizeLine.length > 0) {\n    maxMessageSize = parseInt(maxSizeLine[0].substr(19), 10);\n  }\n  if (isNaN(maxMessageSize)) {\n    maxMessageSize = 65536;\n  }\n  const sctpPort = SDPUtils.matchPrefix(mediaSection, 'a=sctp-port:');\n  if (sctpPort.length > 0) {\n    return {\n      port: parseInt(sctpPort[0].substr(12), 10),\n      protocol: mline.fmt,\n      maxMessageSize,\n    };\n  }\n  const sctpMapLines = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:');\n  if (sctpMapLines.length > 0) {\n    const parts = sctpMapLines[0]\n      .substr(10)\n      .split(' ');\n    return {\n      port: parseInt(parts[0], 10),\n      protocol: parts[1],\n      maxMessageSize,\n    };\n  }\n};\n\n// SCTP\n// outputs the draft-ietf-mmusic-sctp-sdp-26 version that all browsers\n// support by now receiving in this format, unless we originally parsed\n// as the draft-ietf-mmusic-sctp-sdp-05 format (indicated by the m-line\n// protocol of DTLS/SCTP -- without UDP/ or TCP/)\nSDPUtils.writeSctpDescription = function(media, sctp) {\n  let output = [];\n  if (media.protocol !== 'DTLS/SCTP') {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.protocol + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctp-port:' + sctp.port + '\\r\\n',\n    ];\n  } else {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.port + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctpmap:' + sctp.port + ' ' + sctp.protocol + ' 65535\\r\\n',\n    ];\n  }\n  if (sctp.maxMessageSize !== undefined) {\n    output.push('a=max-message-size:' + sctp.maxMessageSize + '\\r\\n');\n  }\n  return output.join('');\n};\n\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\nSDPUtils.generateSessionId = function() {\n  return Math.random().toString().substr(2, 21);\n};\n\n// Write boiler plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\n// sessUser is optional and defaults to 'thisisadapterortc'\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer, sessUser) {\n  let sessionId;\n  const version = sessVer !== undefined ? sessVer : 2;\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n  const user = sessUser || 'thisisadapterortc';\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' +\n      'o=' + user + ' ' + sessionId + ' ' + version +\n        ' IN IP4 127.0.0.1\\r\\n' +\n      's=-\\r\\n' +\n      't=0 0\\r\\n';\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  const lines = SDPUtils.splitLines(mediaSection);\n  for (let i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substr(2);\n      default:\n        // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function(mediaSection) {\n  const lines = SDPUtils.splitLines(mediaSection);\n  const mline = lines[0].split(' ');\n  return mline[0].substr(2);\n};\n\nSDPUtils.isRejected = function(mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function(mediaSection) {\n  const lines = SDPUtils.splitLines(mediaSection);\n  const parts = lines[0].substr(2).split(' ');\n  return {\n    kind: parts[0],\n    port: parseInt(parts[1], 10),\n    protocol: parts[2],\n    fmt: parts.slice(3).join(' '),\n  };\n};\n\nSDPUtils.parseOLine = function(mediaSection) {\n  const line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n  const parts = line.substr(2).split(' ');\n  return {\n    username: parts[0],\n    sessionId: parts[1],\n    sessionVersion: parseInt(parts[2], 10),\n    netType: parts[3],\n    addressType: parts[4],\n    address: parts[5],\n  };\n};\n\n// a very naive interpretation of a valid SDP.\nSDPUtils.isValidSDP = function(blob) {\n  if (typeof blob !== 'string' || blob.length === 0) {\n    return false;\n  }\n  const lines = SDPUtils.splitLines(blob);\n  for (let i = 0; i < lines.length; i++) {\n    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\n      return false;\n    }\n    // TODO: check the modifier a bit more.\n  }\n  return true;\n};\n\n// Expose public methods.\nif (typeof module === 'object') {\n  module.exports = SDPUtils;\n}\n","/**\n * The events for the media devices.\n */\n\n/**\n * Indicates that the list of available media devices has been changed. The\n * event provides the following parameters to its listeners:\n *\n * @param {MediaDeviceInfo[]} devices - array of MediaDeviceInfo or\n *  MediaDeviceInfo-like objects that are currently connected.\n *  @see https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo\n */\nexport const DEVICE_LIST_CHANGED = 'mediaDevices.devicechange';\n\n/**\n * Event emitted when the user granted/blocked a permission for the camera / mic.\n * Used to keep track of the granted permissions on browsers which don't\n * support the Permissions API.\n */\nexport const PERMISSIONS_CHANGED = 'rtc.permissions_changed';\n\n/**\n * Indicates that the environment is currently showing permission prompt to\n * access camera and/or microphone. The event provides the following\n * parameters to its listeners:\n *\n * @param {'chrome'|'opera'|'firefox'|'safari'|'nwjs'\n *  |'react-native'|'android'} environmentType - type of browser or\n *  other execution environment.\n */\nexport const PERMISSION_PROMPT_IS_SHOWN\n    = 'mediaDevices.permissionPromptIsShown';\n\nexport const SLOW_GET_USER_MEDIA = 'mediaDevices.slowGetUserMedia';\n","const currentExecutingScript = require('current-executing-script');\n\n/* eslint-disable max-params */\n\n/**\n * Implements utility functions which facilitate the dealing with scripts such\n * as the download and execution of a JavaScript file.\n */\nconst ScriptUtil = {\n    /**\n     * Loads a script from a specific source.\n     *\n     * @param src the source from the which the script is to be (down)loaded\n     * @param async true to asynchronously load the script or false to\n     * synchronously load the script\n     * @param prepend true to schedule the loading of the script as soon as\n     * possible or false to schedule the loading of the script at the end of the\n     * scripts known at the time\n     * @param relativeURL whether we need load the library from url relative\n     * to the url that lib-jitsi-meet was loaded. Useful when sourcing the\n     * library from different location than the app that is using it\n     * @param loadCallback on load callback function\n     * @param errorCallback callback to be called on error loading the script\n     */\n    loadScript(\n            src,\n            async,\n            prepend,\n            relativeURL,\n            loadCallback,\n            errorCallback) {\n        const d = document;\n        const tagName = 'script';\n        const script = d.createElement(tagName);\n        const referenceNode = d.getElementsByTagName(tagName)[0];\n\n        script.async = async;\n\n        if (relativeURL) {\n            // finds the src url of the current loaded script\n            // and use it as base of the src supplied argument\n            const scriptEl = currentExecutingScript();\n\n            if (scriptEl) {\n                const scriptSrc = scriptEl.src;\n                const baseScriptSrc\n                    = scriptSrc.substring(0, scriptSrc.lastIndexOf('/') + 1);\n\n                if (scriptSrc && baseScriptSrc) {\n                    // eslint-disable-next-line no-param-reassign\n                    src = baseScriptSrc + src;\n                }\n            }\n        }\n\n        if (loadCallback) {\n            script.onload = loadCallback;\n        }\n        if (errorCallback) {\n            script.onerror = errorCallback;\n        }\n\n        script.src = src;\n        if (prepend) {\n            referenceNode.parentNode.insertBefore(script, referenceNode);\n        } else {\n            referenceNode.parentNode.appendChild(script);\n        }\n    }\n};\n\n/* eslint-enable max-params */\n\nmodule.exports = ScriptUtil;\n","/* global __filename */\nimport { getLogger } from 'jitsi-meet-logger';\n\nimport * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\nimport * as JitsiTrackEvents from '../../JitsiTrackEvents';\nimport * as MediaType from '../../service/RTC/MediaType';\nimport RTCEvents from '../../service/RTC/RTCEvents';\nimport { createParticipantConnectionStatusEvent } from '../../service/statistics/AnalyticsEvents';\nimport browser from '../browser';\nimport Statistics from '../statistics/statistics';\n\nconst logger = getLogger(__filename);\n\n/**\n * Default value of 500 milliseconds for\n * {@link ParticipantConnectionStatus.outOfLastNTimeout}.\n *\n * @type {number}\n */\nconst DEFAULT_NOT_IN_LAST_N_TIMEOUT = 500;\n\n/**\n * Default value of 2000 milliseconds for\n * {@link ParticipantConnectionStatus.rtcMuteTimeout}.\n *\n * @type {number}\n */\nconst DEFAULT_RTC_MUTE_TIMEOUT = 10000;\n\n/**\n * The time to wait a track to be restored. Track which was out of lastN\n * should be inactive and when entering lastN it becomes restoring and when\n * data is received from bridge it will become active, but if no data is\n * received for some time we set status of that participant connection to\n * interrupted.\n * @type {number}\n */\nconst DEFAULT_RESTORING_TIMEOUT = 10000;\n\n/**\n * Participant connection statuses.\n *\n * @type {{\n *      ACTIVE: string,\n *      INACTIVE: string,\n *      INTERRUPTED: string,\n *      RESTORING: string\n * }}\n */\nexport const ParticipantConnectionStatus = {\n    /**\n     * Status indicating that connection is currently active.\n     */\n    ACTIVE: 'active',\n\n    /**\n     * Status indicating that connection is currently inactive.\n     * Inactive means the connection was stopped on purpose from the bridge,\n     * like exiting lastN or adaptivity decided to drop video because of not\n     * enough bandwidth.\n     */\n    INACTIVE: 'inactive',\n\n    /**\n     * Status indicating that connection is currently interrupted.\n     */\n    INTERRUPTED: 'interrupted',\n\n    /**\n     * Status indicating that connection is currently restoring.\n     */\n    RESTORING: 'restoring'\n};\n\n/**\n * Class is responsible for emitting\n * JitsiConferenceEvents.PARTICIPANT_CONN_STATUS_CHANGED events.\n */\nexport default class ParticipantConnectionStatusHandler {\n    /* eslint-disable max-params*/\n    /**\n     * Calculates the new {@link ParticipantConnectionStatus} based on\n     * the values given for some specific remote user. It is assumed that\n     * the conference is currently in the JVB mode (in contrary to the P2P mode)\n     * @param {boolean} isConnectionActiveByJvb true if the JVB did not get any\n     * data from the user for the last 15 seconds.\n     * @param {boolean} isInLastN indicates whether the user is in the last N\n     * set. When set to false it means that JVB is not sending any video for\n     * the user.\n     * @param {boolean} isRestoringTimedout if true it means that the user has\n     * been outside of last N too long to be considered\n     * {@link ParticipantConnectionStatus.RESTORING}.\n     * @param {boolean} isVideoMuted true if the user is video muted and we\n     * should not expect to receive any video.\n     * @param {boolean} isVideoTrackFrozen if the current browser support video\n     * frozen detection then it will be set to true when the video track is\n     * frozen. If the current browser does not support frozen detection the it's\n     * always false.\n     * @return {ParticipantConnectionStatus} the new connection status for\n     * the user for whom the values above were provided.\n     * @private\n     */\n    static _getNewStateForJvbMode(\n            isConnectionActiveByJvb,\n            isInLastN,\n            isRestoringTimedout,\n            isVideoMuted,\n            isVideoTrackFrozen) {\n        if (!isConnectionActiveByJvb) {\n            // when there is a connection problem signaled from jvb\n            // it means no media was flowing for at least 15secs, so both audio\n            // and video are most likely interrupted\n            return ParticipantConnectionStatus.INTERRUPTED;\n        } else if (isVideoMuted) {\n            // If the connection is active according to JVB and the user is\n            // video muted there is no way for the connection to be inactive,\n            // because the detection logic below only makes sense for video.\n            return ParticipantConnectionStatus.ACTIVE;\n        }\n\n        // Logic when isVideoTrackFrozen is supported\n        if (browser.supportsVideoMuteOnConnInterrupted()) {\n            if (!isVideoTrackFrozen) {\n                // If the video is playing we're good\n                return ParticipantConnectionStatus.ACTIVE;\n            } else if (isInLastN) {\n                return isRestoringTimedout\n                    ? ParticipantConnectionStatus.INTERRUPTED\n                    : ParticipantConnectionStatus.RESTORING;\n            }\n\n            return ParticipantConnectionStatus.INACTIVE;\n        }\n\n        // Because this browser is incapable of detecting frozen video we must\n        // rely on the lastN value\n        return isInLastN\n            ? ParticipantConnectionStatus.ACTIVE\n            : ParticipantConnectionStatus.INACTIVE;\n    }\n\n    /* eslint-enable max-params*/\n\n    /**\n     * In P2P mode we don't care about any values coming from the JVB and\n     * the connection status can be only active or interrupted.\n     * @param {boolean} isVideoMuted the user if video muted\n     * @param {boolean} isVideoTrackFrozen true if the video track for\n     * the remote user is currently frozen. If the current browser does not\n     * support video frozen detection then it's always false.\n     * @return {ParticipantConnectionStatus}\n     * @private\n     */\n    static _getNewStateForP2PMode(isVideoMuted, isVideoTrackFrozen) {\n        if (!browser.supportsVideoMuteOnConnInterrupted()) {\n            // There's no way to detect problems in P2P when there's no video\n            // track frozen detection...\n            return ParticipantConnectionStatus.ACTIVE;\n        }\n\n        return isVideoMuted || !isVideoTrackFrozen\n            ? ParticipantConnectionStatus.ACTIVE\n            : ParticipantConnectionStatus.INTERRUPTED;\n    }\n\n    /**\n     * Creates new instance of <tt>ParticipantConnectionStatus</tt>.\n     *\n     * @constructor\n     * @param {RTC} rtc the RTC service instance\n     * @param {JitsiConference} conference parent conference instance\n     * @param {Object} options\n     * @param {number} [options.rtcMuteTimeout=2000] custom value for\n     * {@link ParticipantConnectionStatus.rtcMuteTimeout}.\n     * @param {number} [options.outOfLastNTimeout=500] custom value for\n     * {@link ParticipantConnectionStatus.outOfLastNTimeout}.\n     */\n    constructor(rtc, conference, options) {\n        this.rtc = rtc;\n        this.conference = conference;\n\n        /**\n         * A map of the \"endpoint ID\"(which corresponds to the resource part\n         * of MUC JID(nickname)) to the timeout callback IDs scheduled using\n         * window.setTimeout.\n         * @type {Object.<string, number>}\n         */\n        this.trackTimers = {};\n\n        /**\n         * This map holds the endpoint connection status received from the JVB\n         * (as it might be different than the one stored in JitsiParticipant).\n         * Required for getting back in sync when remote video track is removed.\n         * @type {Object.<string, boolean>}\n         */\n        this.connStatusFromJvb = { };\n\n        /**\n         * If video track frozen detection through RTC mute event is supported,\n         * we wait some time until video track is considered frozen. But because\n         * when the user falls out of last N it is expected for the video to\n         * freeze this timeout must be significantly reduced in \"out of last N\"\n         * case.\n         *\n         * Basically this value is used instead of {@link rtcMuteTimeout} when\n         * user is not in last N.\n         * @type {number}\n         */\n        this.outOfLastNTimeout\n            = typeof options.outOfLastNTimeout === 'number'\n                ? options.outOfLastNTimeout : DEFAULT_NOT_IN_LAST_N_TIMEOUT;\n\n        /**\n         * How long we're going to wait after the RTC video track muted event\n         * for the corresponding signalling mute event, before the connection\n         * interrupted is fired. The default value is\n         * {@link DEFAULT_RTC_MUTE_TIMEOUT}.\n         *\n         * @type {number} amount of time in milliseconds\n         */\n        this.rtcMuteTimeout\n            = typeof options.rtcMuteTimeout === 'number'\n                ? options.rtcMuteTimeout : DEFAULT_RTC_MUTE_TIMEOUT;\n\n        /**\n         * This map holds a timestamp indicating  when participant's video track\n         * was RTC muted (it is assumed that each participant can have only 1\n         * video track at a time). The purpose of storing the timestamp is to\n         * avoid the transition to disconnected status in case of legitimate\n         * video mute operation where the signalling video muted event can\n         * arrive shortly after RTC muted event.\n         *\n         * The key is participant's ID which is the same as endpoint id in\n         * the Colibri conference allocated on the JVB.\n         *\n         * The value is a timestamp measured in milliseconds obtained with\n         * <tt>Date.now()</tt>.\n         *\n         * FIXME merge this logic with NO_DATA_FROM_SOURCE event\n         *       implemented in JitsiLocalTrack by extending the event to\n         *       the remote track and allowing to set different timeout for\n         *       local and remote tracks.\n         *\n         * @type {Object.<string, number>}\n         */\n        this.rtcMutedTimestamp = { };\n        logger.info(`RtcMuteTimeout set to: ${this.rtcMuteTimeout}`);\n\n        /**\n         * This map holds the timestamps indicating when participant's video\n         * entered lastN set. Participants entering lastN will have connection\n         * status restoring and when we start receiving video will become\n         * active, but if video is not received for certain time\n         * {@link DEFAULT_RESTORING_TIMEOUT} that participant connection status\n         * will become interrupted.\n         *\n         * @type {Map<string, number>}\n         */\n        this.enteredLastNTimestamp = new Map();\n\n        /**\n         * A map of the \"endpoint ID\"(which corresponds to the resource part\n         * of MUC JID(nickname)) to the restoring timeout callback IDs\n         * scheduled using window.setTimeout.\n         *\n         * @type {Map<string, number>}\n         */\n        this.restoringTimers = new Map();\n\n        /**\n         * A map that holds the current connection status (along with all the internal events that happen\n         * while in that state).\n         *\n         * The goal is to send this information to the analytics backend for post-mortem analysis.\n         */\n        this.connectionStatusMap = new Map();\n    }\n\n    /**\n     * Gets the video frozen timeout for given user.\n     * @param {string} id endpoint/participant ID\n     * @return {number} how long are we going to wait since RTC video muted\n     * even, before a video track is considered frozen.\n     * @private\n     */\n    _getVideoFrozenTimeout(id) {\n        return this.rtc.isInLastN(id)\n            ? this.rtcMuteTimeout : this.outOfLastNTimeout;\n    }\n\n    /**\n     * Initializes <tt>ParticipantConnectionStatus</tt> and bind required event\n     * listeners.\n     */\n    init() {\n\n        this._onEndpointConnStatusChanged\n            = this.onEndpointConnStatusChanged.bind(this);\n\n        this.rtc.addListener(\n            RTCEvents.ENDPOINT_CONN_STATUS_CHANGED,\n            this._onEndpointConnStatusChanged);\n\n        // Handles P2P status changes\n        this._onP2PStatus = this.refreshConnectionStatusForAll.bind(this);\n        this.conference.on(JitsiConferenceEvents.P2P_STATUS, this._onP2PStatus);\n\n        // Used to send analytics events for the participant that left the call.\n        this._onUserLeft = this.onUserLeft.bind(this);\n        this.conference.on(JitsiConferenceEvents.USER_LEFT, this._onUserLeft);\n\n        // On some browsers MediaStreamTrack trigger \"onmute\"/\"onunmute\"\n        // events for video type tracks when they stop receiving data which is\n        // often a sign that remote user is having connectivity issues\n        if (browser.supportsVideoMuteOnConnInterrupted()) {\n\n            this._onTrackRtcMuted = this.onTrackRtcMuted.bind(this);\n            this.rtc.addListener(\n                RTCEvents.REMOTE_TRACK_MUTE, this._onTrackRtcMuted);\n\n            this._onTrackRtcUnmuted = this.onTrackRtcUnmuted.bind(this);\n            this.rtc.addListener(\n                RTCEvents.REMOTE_TRACK_UNMUTE, this._onTrackRtcUnmuted);\n\n            // Track added/removed listeners are used to bind \"mute\"/\"unmute\"\n            // event handlers\n            this._onRemoteTrackAdded = this.onRemoteTrackAdded.bind(this);\n            this.conference.on(\n                JitsiConferenceEvents.TRACK_ADDED,\n                this._onRemoteTrackAdded);\n\n            this._onRemoteTrackRemoved = this.onRemoteTrackRemoved.bind(this);\n            this.conference.on(\n                JitsiConferenceEvents.TRACK_REMOVED,\n                this._onRemoteTrackRemoved);\n\n            // Listened which will be bound to JitsiRemoteTrack to listen for\n            // signalling mute/unmute events.\n            this._onSignallingMuteChanged\n                = this.onSignallingMuteChanged.bind(this);\n\n            // Used to send an analytics event when the video type changes.\n            this._onTrackVideoTypeChanged\n                = this.onTrackVideoTypeChanged.bind(this);\n        }\n\n        this._onLastNChanged = this._onLastNChanged.bind(this);\n        this.conference.on(\n            JitsiConferenceEvents.LAST_N_ENDPOINTS_CHANGED,\n            this._onLastNChanged);\n\n        this._onLastNValueChanged\n            = this.refreshConnectionStatusForAll.bind(this);\n        this.rtc.on(\n            RTCEvents.LASTN_VALUE_CHANGED, this._onLastNValueChanged);\n    }\n\n    /**\n     * Removes all event listeners and disposes of all resources held by this\n     * instance.\n     */\n    dispose() {\n\n        this.rtc.removeListener(\n            RTCEvents.ENDPOINT_CONN_STATUS_CHANGED,\n            this._onEndpointConnStatusChanged);\n\n        if (browser.supportsVideoMuteOnConnInterrupted()) {\n            this.rtc.removeListener(\n                RTCEvents.REMOTE_TRACK_MUTE,\n                this._onTrackRtcMuted);\n            this.rtc.removeListener(\n                RTCEvents.REMOTE_TRACK_UNMUTE,\n                this._onTrackRtcUnmuted);\n\n            this.conference.off(\n                JitsiConferenceEvents.TRACK_ADDED,\n                this._onRemoteTrackAdded);\n            this.conference.off(\n                JitsiConferenceEvents.TRACK_REMOVED,\n                this._onRemoteTrackRemoved);\n        }\n\n        this.conference.off(\n            JitsiConferenceEvents.LAST_N_ENDPOINTS_CHANGED,\n            this._onLastNChanged);\n\n        this.rtc.removeListener(\n            RTCEvents.LASTN_VALUE_CHANGED, this._onLastNValueChanged);\n\n        this.conference.off(\n            JitsiConferenceEvents.P2P_STATUS, this._onP2PStatus);\n\n        this.conference.off(\n            JitsiConferenceEvents.USER_LEFT, this._onUserLeft);\n\n        const participantIds = Object.keys(this.trackTimers);\n\n        for (const participantId of participantIds) {\n            this.clearTimeout(participantId);\n            this.clearRtcMutedTimestamp(participantId);\n        }\n\n        for (const id in this.connectionStatusMap) {\n            if (this.connectionStatusMap.hasOwnProperty(id)) {\n                this.onUserLeft(id);\n            }\n        }\n\n        // Clear RTC connection status cache\n        this.connStatusFromJvb = {};\n    }\n\n    /**\n     * Handles RTCEvents.ENDPOINT_CONN_STATUS_CHANGED triggered when we receive\n     * notification over the data channel from the bridge about endpoint's\n     * connection status update.\n     * @param {string} endpointId - The endpoint ID(MUC nickname/resource JID).\n     * @param {boolean} isActive - true if the connection is OK or false otherwise.\n     */\n    onEndpointConnStatusChanged(endpointId, isActive) {\n\n        logger.debug(\n            `Detector RTCEvents.ENDPOINT_CONN_STATUS_CHANGED(${Date.now()}): ${\n                endpointId}: ${isActive}`);\n\n        // Filter out events for the local JID for now\n        if (endpointId !== this.conference.myUserId()) {\n            // Store the status received over the data channels\n            this.connStatusFromJvb[endpointId] = isActive;\n            this.figureOutConnectionStatus(endpointId);\n        }\n    }\n\n    /**\n     * Changes connection status.\n     * @param {JitsiParticipant} participant\n     * @param newStatus\n     */\n    _changeConnectionStatus(participant, newStatus) {\n        if (participant.getConnectionStatus() !== newStatus) {\n\n            const endpointId = participant.getId();\n\n            participant._setConnectionStatus(newStatus);\n\n            logger.debug(\n                `Emit endpoint conn status(${Date.now()}) ${endpointId}: ${\n                    newStatus}`);\n\n            // Log the event on CallStats\n            Statistics.sendLog(\n                JSON.stringify({\n                    id: 'peer.conn.status',\n                    participant: endpointId,\n                    status: newStatus\n                }));\n\n\n            this.conference.eventEmitter.emit(\n                JitsiConferenceEvents.PARTICIPANT_CONN_STATUS_CHANGED,\n                endpointId, newStatus);\n        }\n    }\n\n    /**\n     * Reset the postponed \"connection interrupted\" event which was previously\n     * scheduled as a timeout on RTC 'onmute' event.\n     *\n     * @param {string} participantId - The participant for which the \"connection\n     * interrupted\" timeout was scheduled.\n     */\n    clearTimeout(participantId) {\n        if (this.trackTimers[participantId]) {\n            window.clearTimeout(this.trackTimers[participantId]);\n            this.trackTimers[participantId] = null;\n        }\n    }\n\n    /**\n     * Clears the timestamp of the RTC muted event for participant's video track\n     * @param {string} participantId the id of the conference participant which\n     * is the same as the Colibri endpoint ID of the video channel allocated for\n     * the user on the videobridge.\n     */\n    clearRtcMutedTimestamp(participantId) {\n        this.rtcMutedTimestamp[participantId] = null;\n    }\n\n    /**\n     * Bind signalling mute event listeners for video {JitsiRemoteTrack} when\n     * a new one is added to the conference.\n     *\n     * @param {JitsiTrack} remoteTrack - The {JitsiTrack} which is being added to\n     * the conference.\n     */\n    onRemoteTrackAdded(remoteTrack) {\n        if (!remoteTrack.isLocal()\n                && remoteTrack.getType() === MediaType.VIDEO) {\n\n            logger.debug(\n                `Detector on remote track added for: ${\n                    remoteTrack.getParticipantId()}`);\n\n            remoteTrack.on(\n                JitsiTrackEvents.TRACK_MUTE_CHANGED,\n                this._onSignallingMuteChanged);\n            remoteTrack.on(\n                JitsiTrackEvents.TRACK_VIDEOTYPE_CHANGED,\n                videoType => this._onTrackVideoTypeChanged(remoteTrack, videoType));\n        }\n    }\n\n    /**\n     * Removes all event listeners bound to the remote video track and clears\n     * any related timeouts.\n     *\n     * @param {JitsiRemoteTrack} remoteTrack - The remote track which is being\n     * removed from the conference.\n     */\n    onRemoteTrackRemoved(remoteTrack) {\n        if (!remoteTrack.isLocal()\n                && remoteTrack.getType() === MediaType.VIDEO) {\n\n            const endpointId = remoteTrack.getParticipantId();\n\n            logger.debug(`Detector on remote track removed: ${endpointId}`);\n\n            remoteTrack.off(\n                JitsiTrackEvents.TRACK_MUTE_CHANGED,\n                this._onSignallingMuteChanged);\n\n            this.clearTimeout(endpointId);\n            this.clearRtcMutedTimestamp(endpointId);\n\n            this.figureOutConnectionStatus(endpointId);\n        }\n    }\n\n    /**\n     * Checks if given participant's video is considered frozen.\n     * @param {JitsiParticipant} participant - The participant.\n     * @return {boolean} <tt>true</tt> if the video has frozen for given\n     * participant or <tt>false</tt> when it's either not considered frozen\n     * (yet) or if freeze detection is not supported by the current browser.\n     *\n     * FIXME merge this logic with NO_DATA_FROM_SOURCE event\n     *       implemented in JitsiLocalTrack by extending the event to\n     *       the remote track and allowing to set different timeout for\n     *       local and remote tracks.\n     *\n     */\n    isVideoTrackFrozen(participant) {\n        if (!browser.supportsVideoMuteOnConnInterrupted()) {\n            return false;\n        }\n\n        const id = participant.getId();\n        const hasAnyVideoRTCMuted = participant.hasAnyVideoTrackWebRTCMuted();\n        const rtcMutedTimestamp = this.rtcMutedTimestamp[id];\n        const timeout = this._getVideoFrozenTimeout(id);\n\n        return hasAnyVideoRTCMuted\n            && typeof rtcMutedTimestamp === 'number'\n            && (Date.now() - rtcMutedTimestamp) >= timeout;\n    }\n\n    /**\n     * Goes over every participant and updates connectivity status.\n     * Should be called when a parameter which affects all of the participants\n     * is changed (P2P for example).\n     */\n    refreshConnectionStatusForAll() {\n        const participants = this.conference.getParticipants();\n\n        for (const participant of participants) {\n            this.figureOutConnectionStatus(participant.getId());\n        }\n    }\n\n    /**\n     * Figures out (and updates) the current connectivity status for\n     * the participant identified by the given id.\n     *\n     * @param {string} id - The participant's id (MUC nickname or Colibri endpoint ID).\n     */\n    figureOutConnectionStatus(id) {\n        const participant = this.conference.getParticipantById(id);\n\n        if (!participant) {\n            // Probably the participant is no longer in the conference\n            // (at the time of writing this code, participant is\n            // detached from the conference and TRACK_REMOVED events are\n            // fired),\n            // so we don't care, but let's print a log message for debugging purposes.\n            logger.debug(`figure out conn status - no participant for: ${id}`);\n\n            return;\n        }\n\n        const inP2PMode = this.conference.isP2PActive();\n        const isRestoringTimedOut = this._isRestoringTimedout(id);\n        const audioOnlyMode = this.conference.getLastN() === 0;\n\n        // NOTE Overriding videoMuted to true for audioOnlyMode should disable\n        // any detection based on video playback or the last N.\n        const isVideoMuted = participant.isVideoMuted() || audioOnlyMode;\n        const isVideoTrackFrozen = this.isVideoTrackFrozen(participant);\n        const isInLastN = this.rtc.isInLastN(id);\n        let isConnActiveByJvb = this.connStatusFromJvb[id];\n\n        if (typeof isConnActiveByJvb !== 'boolean') {\n            // If no status was received from the JVB it means that it's active\n            // (the bridge does not send notification unless there is a problem)\n            isConnActiveByJvb = true;\n        }\n\n        const newState\n            = inP2PMode\n                ? ParticipantConnectionStatusHandler._getNewStateForP2PMode(\n                    isVideoMuted,\n                    isVideoTrackFrozen)\n                : ParticipantConnectionStatusHandler._getNewStateForJvbMode(\n                    isConnActiveByJvb,\n                    isInLastN,\n                    isRestoringTimedOut,\n                    isVideoMuted,\n                    isVideoTrackFrozen);\n\n        // if the new state is not restoring clear timers and timestamps\n        // that we use to track the restoring state\n        if (newState !== ParticipantConnectionStatus.RESTORING) {\n            this._clearRestoringTimer(id);\n        }\n\n        logger.debug(\n            `Figure out conn status for ${id}, is video muted: ${\n                isVideoMuted} is active(jvb): ${\n                isConnActiveByJvb} video track frozen: ${\n                isVideoTrackFrozen} p2p mode: ${\n                inP2PMode} is in last N: ${\n                isInLastN} currentStatus => newStatus: ${\n                participant.getConnectionStatus()} => ${newState}`);\n\n        const oldConnectionStatus = this.connectionStatusMap[id] || {};\n\n        // Send an analytics event (guard on either the p2p flag or the connection status has changed\n        // since the last time this code block run).\n        if (!('p2p' in oldConnectionStatus)\n            || !('connectionStatus' in oldConnectionStatus)\n            || oldConnectionStatus.p2p !== inP2PMode\n            || oldConnectionStatus.connectionStatus !== newState) {\n\n            const nowMs = Date.now();\n\n            this.maybeSendParticipantConnectionStatusEvent(id, nowMs);\n\n            this.connectionStatusMap[id] = {\n                ...oldConnectionStatus,\n                connectionStatus: newState,\n                p2p: inP2PMode,\n                startedMs: nowMs\n            };\n\n            // sometimes (always?) we're late to hook the TRACK_VIDEOTYPE_CHANGED event and the\n            // video type is not in oldConnectionStatus.\n            if (!('videoType' in this.connectionStatusMap[id])) {\n                const videoTracks = participant.getTracksByMediaType(MediaType.VIDEO);\n\n                if (Array.isArray(videoTracks) && videoTracks.length !== 0) {\n                    this.connectionStatusMap[id].videoType = videoTracks[0].videoType;\n                }\n            }\n        }\n        this._changeConnectionStatus(participant, newState);\n    }\n\n    /**\n     * Computes the duration of the current connection status for the participant with the specified id (i.e. 15 seconds\n     * in the INTERRUPTED state) and sends a participant connection status event.\n     * @param {string} id - The jid of the participant.\n     * @param {Number} nowMs - The current time (in millis).\n     * @returns {void}\n     */\n    maybeSendParticipantConnectionStatusEvent(id, nowMs) {\n        const participantConnectionStatus = this.connectionStatusMap[id];\n\n        if (participantConnectionStatus\n            && 'startedMs' in participantConnectionStatus\n            && 'videoType' in participantConnectionStatus\n            && 'connectionStatus' in participantConnectionStatus\n            && 'p2p' in participantConnectionStatus) {\n            participantConnectionStatus.value = nowMs - participantConnectionStatus.startedMs;\n            Statistics.sendAnalytics(\n                createParticipantConnectionStatusEvent(participantConnectionStatus));\n        }\n    }\n\n    /**\n     * On change in Last N set check all leaving and entering participants to\n     * change their corresponding statuses.\n     *\n     * @param {Array<string>} leavingLastN - The array of ids leaving lastN.\n     * @param {Array<string>} enteringLastN - The array of ids entering lastN.\n     * @private\n     */\n    _onLastNChanged(leavingLastN = [], enteringLastN = []) {\n        const now = Date.now();\n\n        logger.debug(`LastN endpoints changed leaving=${leavingLastN}, entering=${enteringLastN} at ${now}`);\n\n        // If the browser doesn't fire the mute/onmute events when the remote peer stops/starts sending media,\n        // calculate the connection status for all the endpoints since it won't get triggered automatically on\n        // the endpoint that has started/stopped receiving media.\n        if (!browser.supportsVideoMuteOnConnInterrupted()) {\n            this.refreshConnectionStatusForAll();\n        }\n\n        for (const id of leavingLastN) {\n            this.enteredLastNTimestamp.delete(id);\n            this._clearRestoringTimer(id);\n            browser.supportsVideoMuteOnConnInterrupted() && this.figureOutConnectionStatus(id);\n        }\n        for (const id of enteringLastN) {\n            // store the timestamp this id is entering lastN\n            this.enteredLastNTimestamp.set(id, now);\n            browser.supportsVideoMuteOnConnInterrupted() && this.figureOutConnectionStatus(id);\n        }\n    }\n\n    /**\n     * Clears the restoring timer for participant's video track and the\n     * timestamp for entering lastN.\n     *\n     * @param {string} participantId - The id of the conference participant which\n     * is the same as the Colibri endpoint ID of the video channel allocated for\n     * the user on the videobridge.\n     */\n    _clearRestoringTimer(participantId) {\n        const rTimer = this.restoringTimers.get(participantId);\n\n        if (rTimer) {\n            clearTimeout(rTimer);\n            this.restoringTimers.delete(participantId);\n        }\n    }\n\n    /**\n     * Checks whether a track had stayed enough in restoring state, compares\n     * current time and the time the track entered in lastN. If it hasn't\n     * timedout and there is no timer added, add new timer in order to give it\n     * more time to become active or mark it as interrupted on next check.\n     *\n     * @param {string} participantId - The id of the conference participant which\n     * is the same as the Colibri endpoint ID of the video channel allocated for\n     * the user on the videobridge.\n     * @returns {boolean} <tt>true</tt> if the track was in restoring state\n     * more than the timeout ({@link DEFAULT_RESTORING_TIMEOUT}.) in order to\n     * set its status to interrupted.\n     * @private\n     */\n    _isRestoringTimedout(participantId) {\n        const enteredLastNTimestamp\n            = this.enteredLastNTimestamp.get(participantId);\n\n        if (enteredLastNTimestamp\n            && (Date.now() - enteredLastNTimestamp)\n                >= DEFAULT_RESTORING_TIMEOUT) {\n            return true;\n        }\n\n        // still haven't reached timeout, if there is no timer scheduled,\n        // schedule one so we can track the restoring state and change it after\n        // reaching the timeout\n        const rTimer = this.restoringTimers.get(participantId);\n\n        if (!rTimer) {\n            this.restoringTimers.set(participantId, setTimeout(\n                () => this.figureOutConnectionStatus(participantId),\n                DEFAULT_RESTORING_TIMEOUT));\n        }\n\n        return false;\n    }\n\n    /**\n     * Sends a last/final participant connection status event for the participant that left the conference.\n     * @param {string} id - The id of the participant that left the conference.\n     * @returns {void}\n     */\n    onUserLeft(id) {\n        this.maybeSendParticipantConnectionStatusEvent(id, Date.now());\n        delete this.connectionStatusMap[id];\n    }\n\n    /**\n     * Handles RTC 'onmute' event for the video track.\n     *\n     * @param {JitsiRemoteTrack} track - The video track for which 'onmute' event\n     * will be processed.\n     */\n    onTrackRtcMuted(track) {\n        const participantId = track.getParticipantId();\n        const participant = this.conference.getParticipantById(participantId);\n\n        logger.debug(`Detector track RTC muted: ${participantId}`, Date.now());\n        if (!participant) {\n            logger.error(`No participant for id: ${participantId}`);\n\n            return;\n        }\n        this.rtcMutedTimestamp[participantId] = Date.now();\n        if (!participant.isVideoMuted()) {\n            // If the user is not muted according to the signalling we'll give\n            // it some time, before the connection interrupted event is\n            // triggered.\n            this.clearTimeout(participantId);\n\n            // The timeout is reduced when user is not in the last N\n            const timeout = this._getVideoFrozenTimeout(participantId);\n\n            this.trackTimers[participantId] = window.setTimeout(() => {\n                logger.debug(\n                    `Set RTC mute timeout for: ${participantId}\\\n                     of ${timeout} ms`);\n                this.clearTimeout(participantId);\n                this.figureOutConnectionStatus(participantId);\n            }, timeout);\n        }\n    }\n\n    /**\n     * Handles RTC 'onunmute' event for the video track.\n     *\n     * @param {JitsiRemoteTrack} track - The video track for which 'onunmute'\n     * event will be processed.\n     */\n    onTrackRtcUnmuted(track) {\n        const participantId = track.getParticipantId();\n\n        logger.debug(\n            `Detector track RTC unmuted: ${participantId}`, Date.now());\n\n        this.clearTimeout(participantId);\n        this.clearRtcMutedTimestamp(participantId);\n\n        this.figureOutConnectionStatus(participantId);\n    }\n\n    /**\n     * Here the signalling \"mute\"/\"unmute\" events are processed.\n     *\n     * @param {JitsiRemoteTrack} track - The remote video track for which\n     * the signalling mute/unmute event will be processed.\n     */\n    onSignallingMuteChanged(track) {\n        const participantId = track.getParticipantId();\n\n        logger.debug(\n            `Detector on track signalling mute changed: ${participantId}`,\n            track.isMuted());\n\n        this.figureOutConnectionStatus(participantId);\n    }\n\n    /**\n     * Sends a participant connection status event as a result of the video type\n     * changing.\n     * @param {JitsiRemoteTrack} track - The track.\n     * @param {VideoType} type - The video type.\n     * @returns {void}\n     */\n    onTrackVideoTypeChanged(track, type) {\n        const id = track.getParticipantId();\n        const nowMs = Date.now();\n\n        this.maybeSendParticipantConnectionStatusEvent(id, nowMs);\n\n        this.connectionStatusMap[id] = {\n            ...this.connectionStatusMap[id] || {},\n            videoType: type,\n            startedMs: nowMs\n        };\n    }\n}\n","import { getLogger } from 'jitsi-meet-logger';\n\nimport Listenable from '../util/Listenable';\n\nexport const NETWORK_INFO_EVENT = 'NETWORK_INFO_CHANGED';\n\nconst logger = getLogger(__filename);\n\n/**\n * Module provides information about the current status of the internet\n * connection. Lib-jitsi-meet doesn't have any logic for detecting internet\n * online/offline, but rather it relies on the information supplied by the app\n * that uses it. By default the online state is assumed and the lib acts as if\n * it was connected. See {@link JitsiMeetJS.setNetworkInfo}.\n */\nexport class NetworkInfo extends Listenable {\n    /**\n     * Creates new {@link NetworkInfo} instance.\n     */\n    constructor() {\n        super();\n        this._current = {\n            isOnline: true\n        };\n    }\n\n    /**\n     * Updates the network info state.\n     * @param {boolean} isOnline - {@code true} if internet is online or {@code false} otherwise.\n     */\n    updateNetworkInfo({ isOnline }) {\n        logger.debug('updateNetworkInfo', { isOnline });\n        this._current = {\n            isOnline: isOnline === true\n        };\n        this.eventEmitter.emit(NETWORK_INFO_EVENT, this._current);\n    }\n\n    /**\n     * Returns the online/offline internet status. By default the value is {@code true} and changes only if\n     * the lib's user wires the state through {@link JitsiMeetJS.setNetworkInfo} like the jitsi-meet does. Because of\n     * that any logic should still assume that the internet may be offline and should handle the failure gracefully.\n     * It's only a good hint in the other way around: to pause internet operations until it comes back online.\n     * @returns {boolean}\n     */\n    isOnline() {\n        return this._current.isOnline === true;\n    }\n}\n\nconst networkInfo = new NetworkInfo();\n\nexport default networkInfo;\n","/**\n * A collection of utility functions for taking in XML and parsing it to return\n * certain values.\n */\nexport default {\n    /**\n     * Parses the presence update of the focus and returns an object with the\n     * statuses related to recording.\n     *\n     * @param {Node} presence - An XMPP presence update.\n     * @returns {Object} The current presence values related to recording.\n     */\n    getFocusRecordingUpdate(presence) {\n        const jibriStatus = presence\n            && presence.getElementsByTagName('jibri-recording-status')[0];\n\n        if (!jibriStatus) {\n            return;\n        }\n\n        return {\n            error: jibriStatus.getAttribute('failure_reason'),\n            initiator: jibriStatus.getAttribute('initiator'),\n            recordingMode: jibriStatus.getAttribute('recording_mode'),\n            sessionID: jibriStatus.getAttribute('session_id'),\n            status: jibriStatus.getAttribute('status')\n        };\n    },\n\n    /**\n     * Parses the presence update from a hidden domain participant and returns\n     * an object with the statuses related to recording.\n     *\n     * @param {Node} presence - An XMPP presence update.\n     * @returns {Object} The current presence values related to recording.\n     */\n    getHiddenDomainUpdate(presence) {\n        const liveStreamViewURLContainer\n            = presence.getElementsByTagName('live-stream-view-url')[0];\n        const liveStreamViewURL = liveStreamViewURLContainer\n            && liveStreamViewURLContainer.textContent;\n        const modeContainer\n            = presence.getElementsByTagName('mode')[0];\n        const mode = modeContainer\n            && modeContainer.textContent\n            && modeContainer.textContent.toLowerCase();\n        const sessionIDContainer\n            = presence.getElementsByTagName('session_id')[0];\n        const sessionID\n            = sessionIDContainer && sessionIDContainer.textContent;\n\n        return {\n            liveStreamViewURL,\n            mode,\n            sessionID\n        };\n    },\n\n    /**\n     * Returns the recording session ID from a successful IQ.\n     *\n     * @param {Node} response - The response from the IQ.\n     * @returns {string} The session ID of the recording session.\n     */\n    getSessionIdFromIq(response) {\n        const jibri = response && response.getElementsByTagName('jibri')[0];\n\n        return jibri && jibri.getAttribute('session_id');\n    },\n\n    /**\n     * Returns the recording session ID from a presence, if it exists.\n     *\n     * @param {Node} presence - An XMPP presence update.\n     * @returns {string|undefined} The session ID of the recording session.\n     */\n    getSessionId(presence) {\n        const sessionIdContainer\n            = presence.getElementsByTagName('session_id')[0];\n        const sessionId = sessionIdContainer && sessionIdContainer.textContent;\n\n        return sessionId;\n    },\n\n    /**\n     * Returns whether or not a presence is from the focus.\n     *\n     * @param {Node} presence - An XMPP presence update.\n     * @returns {boolean} True if the presence is from the focus.\n     */\n    isFromFocus(presence) {\n        return presence.getAttribute('from').includes('focus');\n    }\n};\n","/* global __filename, Olm */\n\nimport base64js from 'base64-js';\nimport { getLogger } from 'jitsi-meet-logger';\nimport isEqual from 'lodash.isequal';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\nimport Deferred from '../util/Deferred';\nimport Listenable from '../util/Listenable';\nimport { FEATURE_E2EE, JITSI_MEET_MUC_TYPE } from '../xmpp/xmpp';\n\nconst logger = getLogger(__filename);\n\nconst REQ_TIMEOUT = 5 * 1000;\nconst OLM_MESSAGE_TYPE = 'olm';\nconst OLM_MESSAGE_TYPES = {\n    ERROR: 'error',\n    KEY_INFO: 'key-info',\n    KEY_INFO_ACK: 'key-info-ack',\n    SESSION_ACK: 'session-ack',\n    SESSION_INIT: 'session-init'\n};\n\nconst kOlmData = Symbol('OlmData');\n\nconst OlmAdapterEvents = {\n    OLM_ID_KEY_READY: 'olm.id_key_ready',\n    PARTICIPANT_E2EE_CHANNEL_READY: 'olm.participant_e2ee_channel_ready',\n    PARTICIPANT_KEY_UPDATED: 'olm.partitipant_key_updated'\n};\n\n/**\n * This class implements an End-to-End Encrypted communication channel between every two peers\n * in the conference. This channel uses libolm to achieve E2EE.\n *\n * The created channel is then used to exchange the secret key that each participant will use\n * to encrypt the actual media (see {@link E2EEContext}).\n *\n * A simple JSON message based protocol is implemented, which follows a request - response model:\n * - session-init: Initiates an olm session establishment procedure. This message will be sent\n *                 by the participant who just joined, to everyone else.\n * - session-ack: Completes the olm session etablishment. This messsage may contain ancilliary\n *                encrypted data, more specifically the sender's current key.\n * - key-info: Includes the sender's most up to date key information.\n * - key-info-ack: Acknowledges the reception of a key-info request. In addition, it may contain\n *                 the sender's key information, if available.\n * - error: Indicates a request processing error has occurred.\n *\n * These requessts and responses are transport independent. Currently they are sent using XMPP\n * MUC private messages.\n */\nexport class OlmAdapter extends Listenable {\n    /**\n     * Creates an adapter instance for the given conference.\n     */\n    constructor(conference) {\n        super();\n\n        this._conf = conference;\n        this._init = new Deferred();\n        this._key = undefined;\n        this._keyIndex = -1;\n        this._reqs = new Map();\n        this._sessionInitialization = undefined;\n\n        if (OlmAdapter.isSupported()) {\n            this._bootstrapOlm();\n\n            this._conf.on(JitsiConferenceEvents.ENDPOINT_MESSAGE_RECEIVED, this._onEndpointMessageReceived.bind(this));\n            this._conf.on(JitsiConferenceEvents.CONFERENCE_LEFT, this._onConferenceLeft.bind(this));\n            this._conf.on(JitsiConferenceEvents.USER_LEFT, this._onParticipantLeft.bind(this));\n            this._conf.on(JitsiConferenceEvents.PARTICIPANT_PROPERTY_CHANGED,\n                this._onParticipantPropertyChanged.bind(this));\n        } else {\n            this._init.reject(new Error('Olm not supported'));\n        }\n    }\n\n    /**\n     * Starts new olm sessions with every other participant that has the participantId \"smaller\" the localParticipantId.\n     */\n    async initSessions() {\n        if (this._sessionInitialization) {\n            throw new Error('OlmAdapter initSessions called multiple times');\n        } else {\n            this._sessionInitialization = new Deferred();\n\n            await this._init;\n\n            const promises = [];\n            const localParticipantId = this._conf.myUserId();\n\n            for (const participant of this._conf.getParticipants()) {\n                const participantFeatures = await participant.getFeatures();\n\n                if (participantFeatures.has(FEATURE_E2EE) && localParticipantId < participant.getId()) {\n                    promises.push(this._sendSessionInit(participant));\n                }\n            }\n\n            await Promise.allSettled(promises);\n\n            // TODO: retry failed ones.\n\n            this._sessionInitialization.resolve();\n            this._sessionInitialization = undefined;\n        }\n    }\n\n    /**\n     * Indicates if olm is supported on the current platform.\n     *\n     * @returns {boolean}\n     */\n    static isSupported() {\n        return typeof window.Olm !== 'undefined';\n    }\n\n    /**\n     * Updates the current participant key and distributes it to all participants in the conference\n     * by sending a key-info message.\n     *\n     * @param {Uint8Array|boolean} key - The new key.\n     * @retrns {Promise<Number>}\n     */\n    async updateKey(key) {\n        // Store it locally for new sessions.\n        this._key = key;\n        this._keyIndex++;\n\n        // Broadcast it.\n        const promises = [];\n\n        for (const participant of this._conf.getParticipants()) {\n            const pId = participant.getId();\n            const olmData = this._getParticipantOlmData(participant);\n\n            // TODO: skip those who don't support E2EE.\n            if (!olmData.session) {\n                logger.warn(`Tried to send key to participant ${pId} but we have no session`);\n\n                // eslint-disable-next-line no-continue\n                continue;\n            }\n\n            const uuid = uuidv4();\n            const data = {\n                [JITSI_MEET_MUC_TYPE]: OLM_MESSAGE_TYPE,\n                olm: {\n                    type: OLM_MESSAGE_TYPES.KEY_INFO,\n                    data: {\n                        ciphertext: this._encryptKeyInfo(olmData.session),\n                        uuid\n                    }\n                }\n            };\n            const d = new Deferred();\n\n            d.setRejectTimeout(REQ_TIMEOUT);\n            d.catch(() => {\n                this._reqs.delete(uuid);\n            });\n            this._reqs.set(uuid, d);\n            promises.push(d);\n\n            this._sendMessage(data, pId);\n        }\n\n        await Promise.allSettled(promises);\n\n        // TODO: retry failed ones?\n\n        return this._keyIndex;\n    }\n\n    /**\n     * Updates the current participant key.\n     * @param {Uint8Array|boolean} key - The new key.\n     * @returns {number}\n    */\n    updateCurrentKey(key) {\n        this._key = key;\n\n        return this._keyIndex;\n    }\n\n    /**\n     * Frees the olmData session for the given participant.\n     *\n     */\n    clearParticipantSession(participant) {\n        const olmData = this._getParticipantOlmData(participant);\n\n        if (olmData.session) {\n            olmData.session.free();\n            olmData.session = undefined;\n        }\n    }\n\n\n    /**\n     * Frees the olmData sessions for all participants.\n     *\n     */\n    clearAllParticipantsSessions() {\n        for (const participant of this._conf.getParticipants()) {\n            this.clearParticipantSession(participant);\n        }\n    }\n\n    /**\n     * Internal helper to bootstrap the olm library.\n     *\n     * @returns {Promise<void>}\n     * @private\n     */\n    async _bootstrapOlm() {\n        logger.debug('Initializing Olm...');\n\n        try {\n            await Olm.init();\n\n            this._olmAccount = new Olm.Account();\n            this._olmAccount.create();\n\n            const idKeys = JSON.parse(this._olmAccount.identity_keys());\n\n            this._idKey = idKeys.curve25519;\n\n            logger.debug(`Olm ${Olm.get_library_version().join('.')} initialized`);\n            this._init.resolve();\n            this.eventEmitter.emit(OlmAdapterEvents.OLM_ID_KEY_READY, this._idKey);\n        } catch (e) {\n            logger.error('Failed to initialize Olm', e);\n            this._init.reject(e);\n        }\n\n    }\n\n    /**\n     * Internal helper for encrypting the current key information for a given participant.\n     *\n     * @param {Olm.Session} session - Participant's session.\n     * @returns {string} - The encrypted text with the key information.\n     * @private\n     */\n    _encryptKeyInfo(session) {\n        const keyInfo = {};\n\n        if (this._key !== undefined) {\n            keyInfo.key = this._key ? base64js.fromByteArray(this._key) : false;\n            keyInfo.keyIndex = this._keyIndex;\n        }\n\n        return session.encrypt(JSON.stringify(keyInfo));\n    }\n\n    /**\n     * Internal helper for getting the olm related data associated with a participant.\n     *\n     * @param {JitsiParticipant} participant - Participant whose data wants to be extracted.\n     * @returns {Object}\n     * @private\n     */\n    _getParticipantOlmData(participant) {\n        participant[kOlmData] = participant[kOlmData] || {};\n\n        return participant[kOlmData];\n    }\n\n    /**\n     * Handles leaving the conference, cleaning up olm sessions.\n     *\n     * @private\n     */\n    async _onConferenceLeft() {\n        logger.debug('Conference left');\n\n        await this._init;\n\n        for (const participant of this._conf.getParticipants()) {\n            this._onParticipantLeft(participant.getId(), participant);\n        }\n\n        if (this._olmAccount) {\n            this._olmAccount.free();\n            this._olmAccount = undefined;\n        }\n    }\n\n    /**\n     * Main message handler. Handles 1-to-1 messages received from other participants\n     * and send the appropriate replies.\n     *\n     * @private\n     */\n    async _onEndpointMessageReceived(participant, payload) {\n        if (payload[JITSI_MEET_MUC_TYPE] !== OLM_MESSAGE_TYPE) {\n            return;\n        }\n\n        if (!payload.olm) {\n            logger.warn('Incorrectly formatted message');\n\n            return;\n        }\n\n        await this._init;\n\n        const msg = payload.olm;\n        const pId = participant.getId();\n        const olmData = this._getParticipantOlmData(participant);\n\n        switch (msg.type) {\n        case OLM_MESSAGE_TYPES.SESSION_INIT: {\n            if (olmData.session) {\n                logger.warn(`Participant ${pId} already has a session`);\n\n                this._sendError(participant, 'Session already established');\n            } else {\n                // Create a session for communicating with this participant.\n\n                const session = new Olm.Session();\n\n                session.create_outbound(this._olmAccount, msg.data.idKey, msg.data.otKey);\n                olmData.session = session;\n\n                // Send ACK\n                const ack = {\n                    [JITSI_MEET_MUC_TYPE]: OLM_MESSAGE_TYPE,\n                    olm: {\n                        type: OLM_MESSAGE_TYPES.SESSION_ACK,\n                        data: {\n                            ciphertext: this._encryptKeyInfo(session),\n                            uuid: msg.data.uuid\n                        }\n                    }\n                };\n\n                this._sendMessage(ack, pId);\n                this.eventEmitter.emit(OlmAdapterEvents.PARTICIPANT_E2EE_CHANNEL_READY, pId);\n            }\n            break;\n        }\n        case OLM_MESSAGE_TYPES.SESSION_ACK: {\n            if (olmData.session) {\n                logger.warn(`Participant ${pId} already has a session`);\n\n                this._sendError(participant, 'No session found');\n            } else if (msg.data.uuid === olmData.pendingSessionUuid) {\n                const { ciphertext } = msg.data;\n                const d = this._reqs.get(msg.data.uuid);\n                const session = new Olm.Session();\n\n                session.create_inbound(this._olmAccount, ciphertext.body);\n\n                // Remove OT keys that have been used to setup this session.\n                this._olmAccount.remove_one_time_keys(session);\n\n                // Decrypt first message.\n                const data = session.decrypt(ciphertext.type, ciphertext.body);\n\n                olmData.session = session;\n                olmData.pendingSessionUuid = undefined;\n\n                this.eventEmitter.emit(OlmAdapterEvents.PARTICIPANT_E2EE_CHANNEL_READY, pId);\n\n                this._reqs.delete(msg.data.uuid);\n                d.resolve();\n\n                const json = safeJsonParse(data);\n\n                if (json.key) {\n                    const key = base64js.toByteArray(json.key);\n                    const keyIndex = json.keyIndex;\n\n                    olmData.lastKey = key;\n                    this.eventEmitter.emit(OlmAdapterEvents.PARTICIPANT_KEY_UPDATED, pId, key, keyIndex);\n                }\n            } else {\n                logger.warn('Received ACK with the wrong UUID');\n\n                this._sendError(participant, 'Invalid UUID');\n            }\n            break;\n        }\n        case OLM_MESSAGE_TYPES.ERROR: {\n            logger.error(msg.data.error);\n\n            break;\n        }\n        case OLM_MESSAGE_TYPES.KEY_INFO: {\n            if (olmData.session) {\n                const { ciphertext } = msg.data;\n                const data = olmData.session.decrypt(ciphertext.type, ciphertext.body);\n                const json = safeJsonParse(data);\n\n                if (json.key !== undefined && json.keyIndex !== undefined) {\n                    const key = json.key ? base64js.toByteArray(json.key) : false;\n                    const keyIndex = json.keyIndex;\n\n                    if (!isEqual(olmData.lastKey, key)) {\n                        olmData.lastKey = key;\n                        this.eventEmitter.emit(OlmAdapterEvents.PARTICIPANT_KEY_UPDATED, pId, key, keyIndex);\n                    }\n\n                    // Send ACK.\n                    const ack = {\n                        [JITSI_MEET_MUC_TYPE]: OLM_MESSAGE_TYPE,\n                        olm: {\n                            type: OLM_MESSAGE_TYPES.KEY_INFO_ACK,\n                            data: {\n                                ciphertext: this._encryptKeyInfo(olmData.session),\n                                uuid: msg.data.uuid\n                            }\n                        }\n                    };\n\n                    this._sendMessage(ack, pId);\n                }\n            } else {\n                logger.debug(`Received key info message from ${pId} but we have no session for them!`);\n\n                this._sendError(participant, 'No session found while processing key-info');\n            }\n            break;\n        }\n        case OLM_MESSAGE_TYPES.KEY_INFO_ACK: {\n            if (olmData.session) {\n                const { ciphertext } = msg.data;\n                const data = olmData.session.decrypt(ciphertext.type, ciphertext.body);\n                const json = safeJsonParse(data);\n\n                if (json.key !== undefined && json.keyIndex !== undefined) {\n                    const key = json.key ? base64js.toByteArray(json.key) : false;\n                    const keyIndex = json.keyIndex;\n\n                    if (!isEqual(olmData.lastKey, key)) {\n                        olmData.lastKey = key;\n                        this.eventEmitter.emit(OlmAdapterEvents.PARTICIPANT_KEY_UPDATED, pId, key, keyIndex);\n                    }\n                }\n\n                const d = this._reqs.get(msg.data.uuid);\n\n                this._reqs.delete(msg.data.uuid);\n                d.resolve();\n            } else {\n                logger.debug(`Received key info ack message from ${pId} but we have no session for them!`);\n\n                this._sendError(participant, 'No session found while processing key-info-ack');\n            }\n            break;\n        }\n        }\n    }\n\n    /**\n     * Handles a participant leaving. When a participant leaves their olm session is destroyed.\n     *\n     * @private\n     */\n    _onParticipantLeft(id, participant) {\n        logger.debug(`Participant ${id} left`);\n\n        this.clearParticipantSession(participant);\n    }\n\n    /**\n    * Handles an update in a participant's presence property.\n    *\n    * @param {JitsiParticipant} participant - The participant.\n    * @param {string} name - The name of the property that changed.\n    * @param {*} oldValue - The property's previous value.\n    * @param {*} newValue - The property's new value.\n    * @private\n    */\n    async _onParticipantPropertyChanged(participant, name, oldValue, newValue) {\n        switch (name) {\n        case 'e2ee.enabled':\n            if (newValue && this._conf.isE2EEEnabled()) {\n                const localParticipantId = this._conf.myUserId();\n                const participantId = participant.getId();\n                const participantFeatures = await participant.getFeatures();\n\n                if (participantFeatures.has(FEATURE_E2EE) && localParticipantId < participantId) {\n                    if (this._sessionInitialization) {\n                        await this._sessionInitialization;\n                    }\n                    await this._sendSessionInit(participant);\n\n                    const olmData = this._getParticipantOlmData(participant);\n                    const uuid = uuidv4();\n                    const data = {\n                        [JITSI_MEET_MUC_TYPE]: OLM_MESSAGE_TYPE,\n                        olm: {\n                            type: OLM_MESSAGE_TYPES.KEY_INFO,\n                            data: {\n                                ciphertext: this._encryptKeyInfo(olmData.session),\n                                uuid\n                            }\n                        }\n                    };\n\n                    this._sendMessage(data, participantId);\n                }\n            }\n            break;\n        }\n    }\n\n    /**\n     * Builds and sends an error message to the target participant.\n     *\n     * @param {JitsiParticipant} participant - The target participant.\n     * @param {string} error - The error message.\n     * @returns {void}\n     */\n    _sendError(participant, error) {\n        const pId = participant.getId();\n        const err = {\n            [JITSI_MEET_MUC_TYPE]: OLM_MESSAGE_TYPE,\n            olm: {\n                type: OLM_MESSAGE_TYPES.ERROR,\n                data: {\n                    error\n                }\n            }\n        };\n\n        this._sendMessage(err, pId);\n    }\n\n    /**\n     * Internal helper to send the given object to the given participant ID.\n     * This function merely exists so the transport can be easily swapped.\n     * Currently messages are transmitted via XMPP MUC private messages.\n     *\n     * @param {object} data - The data that will be sent to the target participant.\n     * @param {string} participantId - ID of the target participant.\n     */\n    _sendMessage(data, participantId) {\n        this._conf.sendMessage(data, participantId);\n    }\n\n    /**\n     * Builds and sends the session-init request to the target participant.\n     *\n     * @param {JitsiParticipant} participant - Participant to whom we'll send the request.\n     * @returns {Promise} - The promise will be resolved when the session-ack is received.\n     * @private\n     */\n    _sendSessionInit(participant) {\n        const pId = participant.getId();\n        const olmData = this._getParticipantOlmData(participant);\n\n        if (olmData.session) {\n            logger.warn(`Tried to send session-init to ${pId} but we already have a session`);\n\n            return Promise.reject();\n        }\n\n        if (olmData.pendingSessionUuid !== undefined) {\n            logger.warn(`Tried to send session-init to ${pId} but we already have a pending session`);\n\n            return Promise.reject();\n        }\n\n        // Generate a One Time Key.\n        this._olmAccount.generate_one_time_keys(1);\n\n        const otKeys = JSON.parse(this._olmAccount.one_time_keys());\n        const otKey = Object.values(otKeys.curve25519)[0];\n\n        if (!otKey) {\n            return Promise.reject(new Error('No one-time-keys generated'));\n        }\n\n        // Mark the OT keys (one really) as published so they are not reused.\n        this._olmAccount.mark_keys_as_published();\n\n        const uuid = uuidv4();\n        const init = {\n            [JITSI_MEET_MUC_TYPE]: OLM_MESSAGE_TYPE,\n            olm: {\n                type: OLM_MESSAGE_TYPES.SESSION_INIT,\n                data: {\n                    idKey: this._idKey,\n                    otKey,\n                    uuid\n                }\n            }\n        };\n\n        const d = new Deferred();\n\n        d.setRejectTimeout(REQ_TIMEOUT);\n        d.catch(() => {\n            this._reqs.delete(uuid);\n            olmData.pendingSessionUuid = undefined;\n        });\n        this._reqs.set(uuid, d);\n\n        this._sendMessage(init, pId);\n\n        // Store the UUID for matching with the ACK.\n        olmData.pendingSessionUuid = uuid;\n\n        return d;\n    }\n}\n\nOlmAdapter.events = OlmAdapterEvents;\n\n/**\n * Helper to ensure JSON parsing always returns an object.\n *\n * @param {string} data - The data that needs to be parsed.\n * @returns {object} - Parsed data or empty object in case of failure.\n */\nfunction safeJsonParse(data) {\n    try {\n        return JSON.parse(data);\n    } catch (e) {\n        return {};\n    }\n}\n","/* global __filename */\n\nimport { getLogger } from 'jitsi-meet-logger';\nimport debounce from 'lodash.debounce';\n\nimport * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\nimport RTCEvents from '../../service/RTC/RTCEvents';\nimport browser from '../browser';\nimport Deferred from '../util/Deferred';\n\nimport E2EEContext from './E2EEContext';\nimport { OlmAdapter } from './OlmAdapter';\nimport { importKey, ratchet } from './crypto-utils';\n\nconst logger = getLogger(__filename);\n\n// Period which we'll wait before updating / rotating our keys when a participant\n// joins or leaves.\nconst DEBOUNCE_PERIOD = 5000;\n\n/**\n * This module integrates {@link E2EEContext} with {@link JitsiConference} in order to enable E2E encryption.\n */\nexport class E2EEncryption {\n    /**\n     * A constructor.\n     * @param {JitsiConference} conference - The conference instance for which E2E encryption is to be enabled.\n     */\n    constructor(conference) {\n        this.conference = conference;\n\n        this._conferenceJoined = false;\n        this._enabled = false;\n        this._key = undefined;\n        this._enabling = undefined;\n\n        this._e2eeCtx = new E2EEContext();\n        this._olmAdapter = new OlmAdapter(conference);\n\n        // Debounce key rotation / ratcheting to avoid a storm of messages.\n        this._ratchetKey = debounce(this._ratchetKeyImpl, DEBOUNCE_PERIOD);\n        this._rotateKey = debounce(this._rotateKeyImpl, DEBOUNCE_PERIOD);\n\n        // Participant join / leave operations. Used for key advancement / rotation.\n        //\n\n        this.conference.on(\n            JitsiConferenceEvents.CONFERENCE_JOINED,\n            () => {\n                this._conferenceJoined = true;\n            });\n        this.conference.on(\n            JitsiConferenceEvents.PARTICIPANT_PROPERTY_CHANGED,\n            this._onParticipantPropertyChanged.bind(this));\n        this.conference.on(\n            JitsiConferenceEvents.USER_JOINED,\n            this._onParticipantJoined.bind(this));\n        this.conference.on(\n            JitsiConferenceEvents.USER_LEFT,\n            this._onParticipantLeft.bind(this));\n\n        // Conference media events in order to attach the encryptor / decryptor.\n        // FIXME add events to TraceablePeerConnection which will allow to see when there's new receiver or sender\n        // added instead of shenanigans around conference track events and track muted.\n        //\n\n        this.conference.on(\n            JitsiConferenceEvents._MEDIA_SESSION_STARTED,\n            this._onMediaSessionStarted.bind(this));\n        this.conference.on(\n            JitsiConferenceEvents.TRACK_ADDED,\n            track => track.isLocal() && this._onLocalTrackAdded(track));\n        this.conference.rtc.on(\n            RTCEvents.REMOTE_TRACK_ADDED,\n            (track, tpc) => this._setupReceiverE2EEForTrack(tpc, track));\n        this.conference.on(\n            JitsiConferenceEvents.TRACK_MUTE_CHANGED,\n            this._trackMuteChanged.bind(this));\n\n        // Olm signalling events.\n        this._olmAdapter.on(\n            OlmAdapter.events.OLM_ID_KEY_READY,\n            this._onOlmIdKeyReady.bind(this));\n        this._olmAdapter.on(\n            OlmAdapter.events.PARTICIPANT_E2EE_CHANNEL_READY,\n            this._onParticipantE2EEChannelReady.bind(this));\n        this._olmAdapter.on(\n            OlmAdapter.events.PARTICIPANT_KEY_UPDATED,\n            this._onParticipantKeyUpdated.bind(this));\n    }\n\n    /**\n     * Indicates if E2EE is supported in the current platform.\n     *\n     * @param {object} config - Global configuration.\n     * @returns {boolean}\n     */\n    static isSupported(config) {\n        return browser.supportsInsertableStreams()\n            && OlmAdapter.isSupported()\n            && !(config.testing && config.testing.disableE2EE);\n    }\n\n    /**\n     * Indicates whether E2EE is currently enabled or not.\n     *\n     * @returns {boolean}\n     */\n    isEnabled() {\n        return this._enabled;\n    }\n\n    /**\n     * Enables / disables End-To-End encryption.\n     *\n     * @param {boolean} enabled - whether E2EE should be enabled or not.\n     * @returns {void}\n     */\n    async setEnabled(enabled) {\n        if (enabled === this._enabled) {\n            return;\n        }\n\n        this._enabling && await this._enabling;\n\n        this._enabling = new Deferred();\n\n        this._enabled = enabled;\n\n        if (enabled) {\n            await this._olmAdapter.initSessions();\n        } else {\n            for (const participant of this.conference.getParticipants()) {\n                this._e2eeCtx.cleanup(participant.getId());\n            }\n            this._olmAdapter.clearAllParticipantsSessions();\n        }\n\n        this.conference.setLocalParticipantProperty('e2ee.enabled', enabled);\n\n        this.conference._restartMediaSessions();\n\n        // Generate a random key in case we are enabling.\n        this._key = enabled ? this._generateKey() : false;\n\n        // Send it to others using the E2EE olm channel.\n        const index = await this._olmAdapter.updateKey(this._key);\n\n        // Set our key so we begin encrypting.\n        this._e2eeCtx.setKey(this.conference.myUserId(), this._key, index);\n\n        this._enabling.resolve();\n    }\n\n    /**\n     * Generates a new 256 bit random key.\n     *\n     * @returns {Uint8Array}\n     * @private\n     */\n    _generateKey() {\n        return window.crypto.getRandomValues(new Uint8Array(32));\n    }\n\n    /**\n     * Setup E2EE on the new track that has been added to the conference, apply it on all the open peerconnections.\n     * @param {JitsiLocalTrack} track - the new track that's being added to the conference.\n     * @private\n     */\n    _onLocalTrackAdded(track) {\n        for (const session of this.conference._getMediaSessions()) {\n            this._setupSenderE2EEForTrack(session, track);\n        }\n    }\n\n    /**\n     * Setups E2E encryption for the new session.\n     * @param {JingleSessionPC} session - the new media session.\n     * @private\n     */\n    _onMediaSessionStarted(session) {\n        const localTracks = this.conference.getLocalTracks();\n\n        for (const track of localTracks) {\n            this._setupSenderE2EEForTrack(session, track);\n        }\n    }\n\n    /**\n     * Publushes our own Olmn id key in presence.\n     * @private\n     */\n    _onOlmIdKeyReady(idKey) {\n        logger.debug(`Olm id key ready: ${idKey}`);\n\n        // Publish it in presence.\n        this.conference.setLocalParticipantProperty('e2ee.idKey', idKey);\n    }\n\n    /**\n     * Advances (using ratcheting) the current key when a new participant joins the conference.\n     * @private\n     */\n    _onParticipantJoined() {\n        if (this._conferenceJoined && this._enabled) {\n            this._ratchetKey();\n        }\n    }\n\n    /**\n     * Rotates the current key when a participant leaves the conference.\n     * @private\n     */\n    _onParticipantLeft(id) {\n        this._e2eeCtx.cleanup(id);\n\n        if (this._enabled) {\n            this._rotateKey();\n        }\n    }\n\n    /**\n     * Event posted when the E2EE signalling channel has been established with the given participant.\n     * @private\n     */\n    _onParticipantE2EEChannelReady(id) {\n        logger.debug(`E2EE channel with participant ${id} is ready`);\n    }\n\n    /**\n     * Handles an update in a participant's key.\n     *\n     * @param {string} id - The participant ID.\n     * @param {Uint8Array | boolean} key - The new key for the participant.\n     * @param {Number} index - The new key's index.\n     * @private\n     */\n    _onParticipantKeyUpdated(id, key, index) {\n        logger.debug(`Participant ${id} updated their key`);\n\n        this._e2eeCtx.setKey(id, key, index);\n    }\n\n    /**\n     * Handles an update in a participant's presence property.\n     *\n     * @param {JitsiParticipant} participant - The participant.\n     * @param {string} name - The name of the property that changed.\n     * @param {*} oldValue - The property's previous value.\n     * @param {*} newValue - The property's new value.\n     * @private\n     */\n    async _onParticipantPropertyChanged(participant, name, oldValue, newValue) {\n        switch (name) {\n        case 'e2ee.idKey':\n            logger.debug(`Participant ${participant.getId()} updated their id key: ${newValue}`);\n            break;\n        case 'e2ee.enabled':\n            if (!newValue && this._enabled) {\n                this._olmAdapter.clearParticipantSession(participant);\n\n                this._rotateKey();\n            }\n            break;\n        }\n    }\n\n    /**\n     * Advances the current key by using ratcheting.\n     *\n     * @private\n     */\n    async _ratchetKeyImpl() {\n        logger.debug('Ratchetting key');\n\n        const material = await importKey(this._key);\n        const newKey = await ratchet(material);\n\n        this._key = new Uint8Array(newKey);\n\n        const index = this._olmAdapter.updateCurrentKey(this._key);\n\n        this._e2eeCtx.setKey(this.conference.myUserId(), this._key, index);\n    }\n\n    /**\n     * Rotates the local key. Rotating the key implies creating a new one, then distributing it\n     * to all participants and once they all received it, start using it.\n     *\n     * @private\n     */\n    async _rotateKeyImpl() {\n        logger.debug('Rotating key');\n\n        this._key = this._generateKey();\n        const index = await this._olmAdapter.updateKey(this._key);\n\n        this._e2eeCtx.setKey(this.conference.myUserId(), this._key, index);\n    }\n\n    /**\n     * Setup E2EE for the receiving side.\n     *\n     * @private\n     */\n    _setupReceiverE2EEForTrack(tpc, track) {\n        if (!this._enabled) {\n            return;\n        }\n\n        const receiver = tpc.findReceiverForTrack(track.track);\n\n        if (receiver) {\n            this._e2eeCtx.handleReceiver(receiver, track.getType(), track.getParticipantId());\n        } else {\n            logger.warn(`Could not handle E2EE for ${track}: receiver not found in: ${tpc}`);\n        }\n    }\n\n    /**\n     * Setup E2EE for the sending side.\n     *\n     * @param {JingleSessionPC} session - the session which sends the media produced by the track.\n     * @param {JitsiLocalTrack} track - the local track for which e2e encoder will be configured.\n     * @private\n     */\n    _setupSenderE2EEForTrack(session, track) {\n        if (!this._enabled) {\n            return;\n        }\n\n        const pc = session.peerconnection;\n        const sender = pc && pc.findSenderForTrack(track.track);\n\n        if (sender) {\n            this._e2eeCtx.handleSender(sender, track.getType(), track.getParticipantId());\n        } else {\n            logger.warn(`Could not handle E2EE for ${track}: sender not found in ${pc}`);\n        }\n    }\n\n    /**\n     * Setup E2EE on the sender that is created for the unmuted local video track.\n     * @param {JitsiLocalTrack} track - the track for which muted status has changed.\n     * @private\n     */\n    _trackMuteChanged(track) {\n        if (browser.doesVideoMuteByStreamRemove() && track.isLocal() && track.isVideoTrack() && !track.isMuted()) {\n            for (const session of this.conference._getMediaSessions()) {\n                this._setupSenderE2EEForTrack(session, track);\n            }\n        }\n    }\n}\n","/* global __filename, $ */\n\nimport { getLogger } from 'jitsi-meet-logger';\nimport { $iq, Strophe } from 'strophe.js';\n\nimport * as CodecMimeType from '../../service/RTC/CodecMimeType';\nimport MediaDirection from '../../service/RTC/MediaDirection';\nimport {\n    ICE_DURATION,\n    ICE_STATE_CHANGED\n} from '../../service/statistics/AnalyticsEvents';\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\nimport { SS_DEFAULT_FRAME_RATE } from '../RTC/ScreenObtainer';\nimport SDP from '../sdp/SDP';\nimport SDPDiffer from '../sdp/SDPDiffer';\nimport SDPUtil from '../sdp/SDPUtil';\nimport Statistics from '../statistics/statistics';\nimport AsyncQueue from '../util/AsyncQueue';\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\nimport { integerHash } from '../util/StringUtils';\n\nimport browser from './../browser';\nimport JingleSession from './JingleSession';\nimport * as JingleSessionState from './JingleSessionState';\nimport MediaSessionEvents from './MediaSessionEvents';\nimport SignalingLayerImpl from './SignalingLayerImpl';\nimport XmppConnection from './XmppConnection';\n\nconst logger = getLogger(__filename);\n\n/**\n * Constant tells how long we're going to wait for IQ response, before timeout\n * error is  triggered.\n * @type {number}\n */\nconst IQ_TIMEOUT = 10000;\n\n/*\n * The default number of samples (per stat) to keep when webrtc stats gathering\n * is enabled in TraceablePeerConnection.\n */\nconst DEFAULT_MAX_STATS = 300;\n\n/**\n * The time duration for which the client keeps gathering ICE candidates to be sent out in a single IQ.\n * @type {number} timeout in ms.\n */\nconst ICE_CAND_GATHERING_TIMEOUT = 150;\n\n/**\n * @typedef {Object} JingleSessionPCOptions\n * @property {Object} abTesting - A/B testing related options (ask George).\n * @property {boolean} abTesting.enableSuspendVideoTest - enables the suspend\n * video test ?(ask George).\n * @property {boolean} disableH264 - Described in the config.js[1].\n * @property {boolean} disableRtx - Described in the config.js[1].\n * @property {boolean} disableSimulcast - Described in the config.js[1].\n * @property {boolean} enableInsertableStreams - Set to true when the insertable streams constraints is to be enabled\n * on the PeerConnection.\n * @property {boolean} enableLayerSuspension - Described in the config.js[1].\n * @property {boolean} failICE - it's an option used in the tests. Set to\n * <tt>true</tt> to block any real candidates and make the ICE fail.\n * @property {boolean} gatherStats - Described in the config.js[1].\n * @property {object} p2p - Peer to peer related options (FIXME those could be\n * fetched from config.p2p on the upper level).\n * @property {boolean} preferH264 - Described in the config.js[1].\n * @property {Object} testing - Testing and/or experimental options.\n * @property {boolean} webrtcIceUdpDisable - Described in the config.js[1].\n * @property {boolean} webrtcIceTcpDisable - Described in the config.js[1].\n *\n * [1]: https://github.com/jitsi/jitsi-meet/blob/master/config.js\n */\n/**\n *\n */\nexport default class JingleSessionPC extends JingleSession {\n    /**\n     * Parses 'senders' attribute of the video content.\n     * @param {jQuery} jingleContents\n     * @return {string|null} one of the values of content \"senders\" attribute\n     * defined by Jingle. If there is no \"senders\" attribute or if the value is\n     * invalid then <tt>null</tt> will be returned.\n     * @private\n     */\n    static parseVideoSenders(jingleContents) {\n        const videoContents = jingleContents.find('>content[name=\"video\"]');\n\n        if (videoContents.length) {\n            const senders = videoContents[0].getAttribute('senders');\n\n            if (senders === 'both'\n                || senders === 'initiator'\n                || senders === 'responder'\n                || senders === 'none') {\n                return senders;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Parses the video max frame height value out of the 'content-modify' IQ.\n     *\n     * @param {jQuery} jingleContents - A jQuery selector pointing to the '>jingle' element.\n     * @returns {Number|null}\n     */\n    static parseMaxFrameHeight(jingleContents) {\n        const maxFrameHeightSel = jingleContents.find('>content[name=\"video\"]>max-frame-height');\n\n        return maxFrameHeightSel.length ? Number(maxFrameHeightSel.text()) : null;\n    }\n\n    /* eslint-disable max-params */\n\n    /**\n     * Creates new <tt>JingleSessionPC</tt>\n     * @param {string} sid the Jingle Session ID - random string which identifies the session\n     * @param {string} localJid our JID\n     * @param {string} remoteJid remote peer JID\n     * @param {XmppConnection} connection - The XMPP connection instance.\n     * @param mediaConstraints the media constraints object passed to createOffer/Answer, as defined\n     * by the WebRTC standard\n     * @param iceConfig the ICE servers config object as defined by the WebRTC standard.\n     * @param {boolean} isP2P indicates whether this instance is meant to be used in a direct, peer to\n     * peer connection or <tt>false</tt> if it's a JVB connection.\n     * @param {boolean} isInitiator indicates if it will be the side which initiates the session.\n     * @constructor\n     *\n     * @implements {SignalingLayer}\n     */\n    constructor(\n            sid,\n            localJid,\n            remoteJid,\n            connection,\n            mediaConstraints,\n            iceConfig,\n            isP2P,\n            isInitiator) {\n        super(\n            sid,\n            localJid,\n            remoteJid, connection, mediaConstraints, iceConfig, isInitiator);\n\n        /**\n         * The bridge session's identifier. One Jingle session can during\n         * it's lifetime participate in multiple bridge sessions managed by\n         * Jicofo. A new bridge session is started whenever Jicofo sends\n         * 'session-initiate' or 'transport-replace'.\n         *\n         * @type {?string}\n         * @private\n         */\n        this._bridgeSessionId = null;\n\n        /**\n         * The oldest SDP passed to {@link notifyMySSRCUpdate} while the XMPP connection was offline that will be\n         * used to update Jicofo once the XMPP connection goes back online.\n         * @type {SDP|undefined}\n         * @private\n         */\n        this._cachedOldLocalSdp = undefined;\n\n        /**\n         * The latest SDP passed to {@link notifyMySSRCUpdate} while the XMPP connection was offline that will be\n         * used to update Jicofo once the XMPP connection goes back online.\n         * @type {SDP|undefined}\n         * @private\n         */\n        this._cachedNewLocalSdp = undefined;\n\n        /**\n         * Stores result of {@link window.performance.now()} at the time when\n         * ICE enters 'checking' state.\n         * @type {number|null} null if no value has been stored yet\n         * @private\n         */\n        this._iceCheckingStartedTimestamp = null;\n\n        /**\n         * Stores result of {@link window.performance.now()} at the time when\n         * first ICE candidate is spawned by the peerconnection to mark when\n         * ICE gathering started. That's, because ICE gathering state changed\n         * events are not supported by most of the browsers, so we try something\n         * that will work everywhere. It may not be as accurate, but given that\n         * 'host' candidate usually comes first, the delay should be minimal.\n         * @type {number|null} null if no value has been stored yet\n         * @private\n         */\n        this._gatheringStartedTimestamp = null;\n\n        /**\n         * Local preference for the receive video max frame height.\n         *\n         * @type {Number|undefined}\n         */\n        this.localRecvMaxFrameHeight = undefined;\n\n        /**\n         * Indicates whether or not this session is willing to send/receive\n         * video media. When set to <tt>false</tt> the underlying peer\n         * connection will disable local video transfer and the remote peer will\n         * be will be asked to stop sending video via 'content-modify' IQ\n         * (the senders attribute of video contents will be adjusted\n         * accordingly). Note that this notification is sent only in P2P\n         * session, because Jicofo does not support it yet. Obviously when\n         * the value is changed from <tt>false</tt> to <tt>true</tt> another\n         * notification will be sent to resume video transfer on the remote\n         * side.\n         * @type {boolean}\n         * @private\n         */\n        this._localVideoActive = true;\n\n        /**\n         * Indicates whether or not the remote peer has video transfer active.\n         * When set to <tt>true</tt> it means that remote peer is neither\n         * sending nor willing to receive video. In such case we'll ask\n         * our peerconnection to stop sending video by calling\n         * {@link TraceablePeerConnection.setVideoTransferActive} with\n         * <tt>false</tt>.\n         * @type {boolean}\n         * @private\n         */\n        this._remoteVideoActive = true;\n\n        /**\n         * Marks that ICE gathering duration has been reported already. That\n         * prevents reporting it again, after eventual 'transport-replace' (JVB\n         * conference migration/ICE restart).\n         * @type {boolean}\n         * @private\n         */\n        this._gatheringReported = false;\n\n        this.lasticecandidate = false;\n        this.closed = false;\n\n        /**\n         * Indicates whether or not this <tt>JingleSessionPC</tt> is used in\n         * a peer to peer type of session.\n         * @type {boolean} <tt>true</tt> if it's a peer to peer\n         * session or <tt>false</tt> if it's a JVB session\n         */\n        this.isP2P = isP2P;\n\n        /**\n         * Remote preference for the receive video max frame height.\n         *\n         * @type {Number|undefined}\n         */\n        this.remoteRecvMaxFrameHeight = undefined;\n\n        /**\n         * The signaling layer implementation.\n         * @type {SignalingLayerImpl}\n         */\n        this.signalingLayer = new SignalingLayerImpl();\n\n        /**\n         * The queue used to serialize operations done on the peerconnection.\n         *\n         * @type {AsyncQueue}\n         */\n        this.modificationQueue = new AsyncQueue();\n\n        /**\n         * Flag used to guarantee that the connection established event is\n         * triggered just once.\n         * @type {boolean}\n         */\n        this.wasConnected = false;\n\n        /**\n         * Keeps track of how long (in ms) it took from ICE start to ICE\n         * connect.\n         *\n         * @type {number}\n         */\n        this.establishmentDuration = undefined;\n\n        this._xmppListeners = [];\n        this._xmppListeners.push(\n            connection.addEventListener(\n                XmppConnection.Events.CONN_STATUS_CHANGED,\n                this.onXmppStatusChanged.bind(this))\n        );\n\n        this._removeSenderVideoConstraintsChangeListener = undefined;\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     * Checks whether or not this session instance is still operational.\n     * @private\n     * @returns {boolean} {@code true} if operation or {@code false} otherwise.\n     */\n    _assertNotEnded() {\n        return this.state !== JingleSessionState.ENDED;\n    }\n\n    /**\n     * @inheritDoc\n     * @param {JingleSessionPCOptions} options  - a set of config options.\n     */\n    doInitialize(options) {\n        this.failICE = Boolean(options.failICE);\n        this.lasticecandidate = false;\n        this.options = options;\n\n        /**\n         * {@code true} if reconnect is in progress.\n         * @type {boolean}\n         */\n        this.isReconnect = false;\n\n        /**\n         * Set to {@code true} if the connection was ever stable\n         * @type {boolean}\n         */\n        this.wasstable = false;\n        this.webrtcIceUdpDisable = Boolean(options.webrtcIceUdpDisable);\n        this.webrtcIceTcpDisable = Boolean(options.webrtcIceTcpDisable);\n\n        const pcOptions = { disableRtx: options.disableRtx };\n\n        if (options.gatherStats) {\n            pcOptions.maxstats = DEFAULT_MAX_STATS;\n        }\n        pcOptions.capScreenshareBitrate = false;\n        pcOptions.enableInsertableStreams = options.enableInsertableStreams;\n        pcOptions.videoQuality = options.videoQuality;\n        pcOptions.forceTurnRelay = options.forceTurnRelay;\n        pcOptions.audioQuality = options.audioQuality;\n        pcOptions.usesUnifiedPlan = this.usesUnifiedPlan\n            = browser.supportsUnifiedPlan()\n                && (browser.isFirefox()\n                    || browser.isWebKitBased()\n                    || (browser.isChromiumBased()\n\n                        // Provide a way to control the behavior for jvb and p2p connections independently.\n                        && this.isP2P\n                        ? options.p2p?.enableUnifiedOnChrome ?? true\n                        : options.enableUnifiedOnChrome ?? true));\n\n        if (this.isP2P) {\n            // simulcast needs to be disabled for P2P (121) calls\n            pcOptions.disableSimulcast = true;\n            const abtestSuspendVideo = this._abtestSuspendVideoEnabled(options);\n\n            if (typeof abtestSuspendVideo !== 'undefined') {\n                pcOptions.abtestSuspendVideo = abtestSuspendVideo;\n            }\n        } else {\n            // H264 does not support simulcast, so it needs to be disabled.\n            pcOptions.disableSimulcast\n                = options.disableSimulcast\n                    || (options.preferH264 && !options.disableH264)\n                    || (options.videoQuality && options.videoQuality.preferredCodec === CodecMimeType.H264);\n\n            // Disable simulcast for low fps screenshare and enable it for high fps screenshare.\n            // testing.capScreenshareBitrate config.js setting has now been deprecated.\n            pcOptions.capScreenshareBitrate = pcOptions.disableSimulcast\n                || !(typeof options.desktopSharingFrameRate?.max === 'number'\n                    && options.desktopSharingFrameRate?.max > SS_DEFAULT_FRAME_RATE);\n\n            // add the capScreenshareBitrate to the permanent properties so that it's included with every event that we\n            // send to the analytics backend.\n            Statistics.analytics.addPermanentProperties({ capScreenshareBitrate: pcOptions.capScreenshareBitrate });\n        }\n\n        if (options.startSilent) {\n            pcOptions.startSilent = true;\n        }\n\n        this.peerconnection\n            = this.rtc.createPeerConnection(\n                    this.signalingLayer,\n                    this.iceConfig,\n                    this.isP2P,\n                    pcOptions);\n\n        this.peerconnection.onicecandidate = ev => {\n            if (!ev) {\n                // There was an incomplete check for ev before which left\n                // the last line of the function unprotected from a potential\n                // throw of an exception. Consequently, it may be argued that\n                // the check is unnecessary. Anyway, I'm leaving it and making\n                // the check complete.\n                return;\n            }\n\n            // XXX this is broken, candidate is not parsed.\n            const candidate = ev.candidate;\n            const now = window.performance.now();\n\n            if (candidate) {\n                if (this._gatheringStartedTimestamp === null) {\n                    this._gatheringStartedTimestamp = now;\n                }\n\n                // Discard candidates of disabled protocols.\n                let protocol = candidate.protocol;\n\n                if (typeof protocol === 'string') {\n                    protocol = protocol.toLowerCase();\n                    if (protocol === 'tcp' || protocol === 'ssltcp') {\n                        if (this.webrtcIceTcpDisable) {\n                            return;\n                        }\n                    } else if (protocol === 'udp') {\n                        if (this.webrtcIceUdpDisable) {\n                            return;\n                        }\n                    }\n                }\n            } else if (!this._gatheringReported) {\n                // End of gathering\n                Statistics.sendAnalytics(\n                    ICE_DURATION,\n                    {\n                        phase: 'gathering',\n                        value: now - this._gatheringStartedTimestamp,\n                        p2p: this.isP2P,\n                        initiator: this.isInitiator\n                    });\n                this._gatheringReported = true;\n            }\n            this.sendIceCandidate(candidate);\n        };\n\n        // Note there is a change in the spec about closed:\n        // This value moved into the RTCPeerConnectionState enum in\n        // the May 13, 2016 draft of the specification, as it reflects the state\n        // of the RTCPeerConnection, not the signaling connection. You now\n        // detect a closed connection by checking for connectionState to be\n        // \"closed\" instead.\n        // I suppose at some point this will be moved to onconnectionstatechange\n        this.peerconnection.onsignalingstatechange = () => {\n            if (this.peerconnection.signalingState === 'stable') {\n                this.wasstable = true;\n            } else if (this.peerconnection.signalingState === 'closed'\n                || this.peerconnection.connectionState === 'closed') {\n                this.room.eventEmitter.emit(XMPPEvents.SUSPEND_DETECTED, this);\n            }\n        };\n\n        /**\n         * The oniceconnectionstatechange event handler contains the code to\n         * execute when the iceconnectionstatechange event, of type Event,\n         * is received by this RTCPeerConnection. Such an event is sent when\n         * the value of RTCPeerConnection.iceConnectionState changes.\n         */\n        this.peerconnection.oniceconnectionstatechange = () => {\n            const now = window.performance.now();\n            let isStable = false;\n\n            if (!this.isP2P) {\n                this.room.connectionTimes[\n                    `ice.state.${this.peerconnection.iceConnectionState}`]\n                    = now;\n            }\n            logger.log(`(TIME) ICE ${this.peerconnection.iceConnectionState} ${this.isP2P ? 'P2P' : 'JVB'}:\\t`, now);\n\n            Statistics.sendAnalytics(\n                ICE_STATE_CHANGED,\n                {\n                    p2p: this.isP2P,\n                    state: this.peerconnection.iceConnectionState,\n                    'signaling_state': this.peerconnection.signalingState,\n                    reconnect: this.isReconnect,\n                    value: now\n                });\n\n            this.room.eventEmitter.emit(\n                XMPPEvents.ICE_CONNECTION_STATE_CHANGED,\n                this,\n                this.peerconnection.iceConnectionState);\n            switch (this.peerconnection.iceConnectionState) {\n            case 'checking':\n                this._iceCheckingStartedTimestamp = now;\n                break;\n            case 'connected':\n                // Informs interested parties that the connection has been restored. This includes the case when\n                // media connection to the bridge has been restored after an ICE failure by using session-terminate.\n                if (this.peerconnection.signalingState === 'stable') {\n                    isStable = true;\n                    const usesTerminateForRestart = !this.options.enableIceRestart\n                        && this.room.supportsRestartByTerminate();\n\n                    if (this.isReconnect || usesTerminateForRestart) {\n                        this.room.eventEmitter.emit(\n                            XMPPEvents.CONNECTION_RESTORED, this);\n                    }\n                }\n\n                // Add a workaround for an issue on chrome in Unified plan when the local endpoint is the offerer.\n                // The 'signalingstatechange' event for 'stable' is handled after the 'iceconnectionstatechange' event\n                // for 'completed' is handled by the client. This prevents the client from firing a\n                // CONNECTION_ESTABLISHED event for the p2p session. As a result, the offerer continues to stay on the\n                // jvb connection while the remote peer switches to the p2p connection breaking the media flow between\n                // the endpoints.\n                // TODO - file a chromium bug and add the information here.\n                if (!this.wasConnected\n                    && (this.wasstable\n                        || isStable\n                        || (this.usesUnifiedPlan && this.isInitiator && browser.isChromiumBased()))) {\n\n                    Statistics.sendAnalytics(\n                        ICE_DURATION,\n                        {\n                            phase: 'checking',\n                            value: now - this._iceCheckingStartedTimestamp,\n                            p2p: this.isP2P,\n                            initiator: this.isInitiator\n                        });\n\n                    // Switch between ICE gathering and ICE checking whichever\n                    // started first (scenarios are different for initiator\n                    // vs responder)\n                    const iceStarted\n                        = Math.min(\n                            this._iceCheckingStartedTimestamp,\n                            this._gatheringStartedTimestamp);\n\n                    this.establishmentDuration = now - iceStarted;\n\n                    Statistics.sendAnalytics(\n                        ICE_DURATION,\n                        {\n                            phase: 'establishment',\n                            value: this.establishmentDuration,\n                            p2p: this.isP2P,\n                            initiator: this.isInitiator\n                        });\n\n                    this.wasConnected = true;\n                    this.room.eventEmitter.emit(\n                        XMPPEvents.CONNECTION_ESTABLISHED, this);\n                }\n                this.isReconnect = false;\n                break;\n            case 'disconnected':\n                this.isReconnect = true;\n\n                // Informs interested parties that the connection has been\n                // interrupted.\n                if (this.wasstable) {\n                    this.room.eventEmitter.emit(\n                        XMPPEvents.CONNECTION_INTERRUPTED, this);\n                }\n                break;\n            case 'failed':\n                this.room.eventEmitter.emit(\n                    XMPPEvents.CONNECTION_ICE_FAILED, this);\n                break;\n            }\n        };\n\n        /**\n         * The negotiationneeded event is fired whenever we shake the media on the\n         * RTCPeerConnection object.\n         */\n        this.peerconnection.onnegotiationneeded = () => {\n            const state = this.peerconnection.signalingState;\n            const remoteDescription = this.peerconnection.remoteDescription;\n\n            if (this.usesUnifiedPlan && state === 'stable'\n                && remoteDescription && typeof remoteDescription.sdp === 'string') {\n                logger.debug(`${this} onnegotiationneeded fired on ${this.peerconnection} in state: ${state}`);\n                const workFunction = finishedCallback => {\n                    const oldSdp = new SDP(this.peerconnection.localDescription.sdp);\n\n                    this._renegotiate()\n                        .then(() => {\n                            const newSdp = new SDP(this.peerconnection.localDescription.sdp);\n\n                            this.notifyMySSRCUpdate(oldSdp, newSdp);\n                            finishedCallback();\n                        },\n                        finishedCallback /* will be called with en error */);\n                };\n\n                this.modificationQueue.push(\n                    workFunction,\n                    error => {\n                        if (error) {\n                            logger.error(`${this} onnegotiationneeded error`, error);\n                        } else {\n                            logger.debug(`${this} onnegotiationneeded executed - OK`);\n                        }\n                    });\n            }\n        };\n\n        // The signaling layer will bind it's listeners at this point\n        this.signalingLayer.setChatRoom(this.room);\n    }\n\n    /**\n     * Remote preference for receive video max frame height.\n     *\n     * @returns {Number|undefined}\n     */\n    getRemoteRecvMaxFrameHeight() {\n        if (this.isP2P) {\n            return this.remoteRecvMaxFrameHeight;\n        }\n\n        return undefined;\n    }\n\n    /**\n     * Sends given candidate in Jingle 'transport-info' message.\n     * @param {RTCIceCandidate} candidate the WebRTC ICE candidate instance\n     * @private\n     */\n    sendIceCandidate(candidate) {\n        const localSDP = new SDP(this.peerconnection.localDescription.sdp);\n\n        if (candidate && candidate.candidate.length && !this.lasticecandidate) {\n            const ice = SDPUtil.iceparams(localSDP.media[candidate.sdpMLineIndex], localSDP.session);\n            const jcand = SDPUtil.candidateToJingle(candidate.candidate);\n\n            if (!(ice && jcand)) {\n                const errorMesssage = 'failed to get ice && jcand';\n\n                GlobalOnErrorHandler.callErrorHandler(new Error(errorMesssage));\n                logger.error(errorMesssage);\n\n                return;\n            }\n            ice.xmlns = 'urn:xmpp:jingle:transports:ice-udp:1';\n\n            if (this.usedrip) {\n                if (this.dripContainer.length === 0) {\n                    setTimeout(() => {\n                        if (this.dripContainer.length === 0) {\n                            return;\n                        }\n                        this.sendIceCandidates(this.dripContainer);\n                        this.dripContainer = [];\n                    }, ICE_CAND_GATHERING_TIMEOUT);\n                }\n                this.dripContainer.push(candidate);\n            } else {\n                this.sendIceCandidates([ candidate ]);\n            }\n        } else {\n            logger.log(`${this} sendIceCandidate: last candidate`);\n\n            // FIXME: remember to re-think in ICE-restart\n            this.lasticecandidate = true;\n        }\n    }\n\n    /**\n     * Sends given candidates in Jingle 'transport-info' message.\n     * @param {Array<RTCIceCandidate>} candidates an array of the WebRTC ICE\n     * candidate instances\n     * @private\n     */\n    sendIceCandidates(candidates) {\n        if (!this._assertNotEnded('sendIceCandidates')) {\n\n            return;\n        }\n\n        logger.log(`${this} sendIceCandidates ${JSON.stringify(candidates)}`);\n        const cand = $iq({ to: this.remoteJid,\n            type: 'set' })\n            .c('jingle', { xmlns: 'urn:xmpp:jingle:1',\n                action: 'transport-info',\n                initiator: this.initiatorJid,\n                sid: this.sid });\n\n        const localSDP = new SDP(this.peerconnection.localDescription.sdp);\n\n        for (let mid = 0; mid < localSDP.media.length; mid++) {\n            const cands = candidates.filter(el => el.sdpMLineIndex === mid);\n            const mline\n                = SDPUtil.parseMLine(localSDP.media[mid].split('\\r\\n')[0]);\n\n            if (cands.length > 0) {\n                const ice\n                    = SDPUtil.iceparams(localSDP.media[mid], localSDP.session);\n\n                ice.xmlns = 'urn:xmpp:jingle:transports:ice-udp:1';\n                cand.c('content', {\n                    creator: this.initiatorJid === this.localJid\n                        ? 'initiator' : 'responder',\n                    name: cands[0].sdpMid ? cands[0].sdpMid : mline.media\n                }).c('transport', ice);\n                for (let i = 0; i < cands.length; i++) {\n                    const candidate\n                        = SDPUtil.candidateToJingle(cands[i].candidate);\n\n                    // Mangle ICE candidate if 'failICE' test option is enabled\n\n                    if (this.failICE) {\n                        candidate.ip = '1.1.1.1';\n                    }\n                    cand.c('candidate', candidate).up();\n                }\n\n                // add fingerprint\n                const fingerprintLine\n                    = SDPUtil.findLine(\n                        localSDP.media[mid],\n                        'a=fingerprint:', localSDP.session);\n\n                if (fingerprintLine) {\n                    const tmp = SDPUtil.parseFingerprint(fingerprintLine);\n\n                    tmp.required = true;\n                    cand.c(\n                        'fingerprint',\n                        { xmlns: 'urn:xmpp:jingle:apps:dtls:0' })\n                        .t(tmp.fingerprint);\n                    delete tmp.fingerprint;\n                    cand.attrs(tmp);\n                    cand.up();\n                }\n                cand.up(); // transport\n                cand.up(); // content\n            }\n        }\n\n        // might merge last-candidate notification into this, but it is called\n        // a lot later. See webrtc issue #2340\n        // logger.log('was this the last candidate', this.lasticecandidate);\n        this.connection.sendIQ(\n            cand, null, this.newJingleErrorHandler(cand), IQ_TIMEOUT);\n    }\n\n    /**\n     * Sends Jingle 'session-info' message which includes custom Jitsi Meet\n     * 'ice-state' element with the text value 'failed' to let Jicofo know\n     * that the ICE connection has entered the failed state. It can then\n     * choose to re-create JVB channels and send 'transport-replace' to\n     * retry the connection.\n     */\n    sendIceFailedNotification() {\n        const sessionInfo\n            = $iq({\n                to: this.remoteJid,\n                type: 'set' })\n            .c('jingle', { xmlns: 'urn:xmpp:jingle:1',\n                action: 'session-info',\n                initiator: this.initiatorJid,\n                sid: this.sid })\n            .c('ice-state', { xmlns: 'http://jitsi.org/protocol/focus' })\n            .t('failed')\n            .up();\n\n        this._bridgeSessionId\n            && sessionInfo.c(\n                'bridge-session', {\n                    xmlns: 'http://jitsi.org/protocol/focus',\n                    id: this._bridgeSessionId\n                });\n\n        this.connection.sendIQ2(\n            sessionInfo, {\n                /*\n                 * This message will be often sent when there are connectivity\n                 * issues, so make it slightly longer than Prosody's default BOSH\n                 * inactivity timeout of 60 seconds.\n                 */\n                timeout: 65\n            })\n            .catch(this.newJingleErrorHandler(sessionInfo));\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    addIceCandidates(elem) {\n        if (this.peerconnection.signalingState === 'closed') {\n            logger.warn(`${this} Ignored add ICE candidate when in closed state`);\n\n            return;\n        }\n\n        const iceCandidates = [];\n\n        elem.find('>content>transport>candidate')\n            .each((idx, candidate) => {\n                let line = SDPUtil.candidateFromJingle(candidate);\n\n                line = line.replace('\\r\\n', '').replace('a=', '');\n\n                // FIXME this code does not care to handle\n                // non-bundle transport\n                const rtcCandidate = new RTCIceCandidate({\n                    sdpMLineIndex: 0,\n\n                    // FF comes up with more complex names like audio-23423,\n                    // Given that it works on both Chrome and FF without\n                    // providing it, let's leave it like this for the time\n                    // being...\n                    // sdpMid: 'audio',\n                    sdpMid: '',\n                    candidate: line\n                });\n\n                iceCandidates.push(rtcCandidate);\n            });\n\n        if (!iceCandidates.length) {\n            logger.error(`${this} No ICE candidates to add ?`, elem[0] && elem[0].outerHTML);\n\n            return;\n        }\n\n        // We want to have this task queued, so that we know it is executed,\n        // after the initial sRD/sLD offer/answer cycle was done (based on\n        // the assumption that candidates are spawned after the offer/answer\n        // and XMPP preserves order).\n        const workFunction = finishedCallback => {\n            for (const iceCandidate of iceCandidates) {\n                this.peerconnection.addIceCandidate(iceCandidate)\n                    .then(\n                        () => logger.debug(`${this} addIceCandidate ok!`),\n                        err => logger.error(`${this} addIceCandidate failed!`, err));\n            }\n\n            finishedCallback();\n            logger.debug(`${this} ICE candidates task finished`);\n        };\n\n        logger.debug(`${this} Queued add (${iceCandidates.length}) ICE candidates task`);\n        this.modificationQueue.push(workFunction);\n    }\n\n    /**\n     *\n     * @param contents\n     */\n    readSsrcInfo(contents) {\n        const ssrcs\n            = $(contents).find(\n                '>description>'\n                    + 'source[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]');\n\n        ssrcs.each((i, ssrcElement) => {\n            const ssrc = Number(ssrcElement.getAttribute('ssrc'));\n\n            if (this.isP2P) {\n                // In P2P all SSRCs are owner by the remote peer\n                this.signalingLayer.setSSRCOwner(\n                    ssrc, Strophe.getResourceFromJid(this.remoteJid));\n            } else {\n                $(ssrcElement)\n                    .find('>ssrc-info[xmlns=\"http://jitsi.org/jitmeet\"]')\n                    .each((i3, ssrcInfoElement) => {\n                        const owner = ssrcInfoElement.getAttribute('owner');\n\n                        if (owner && owner.length) {\n                            if (isNaN(ssrc) || ssrc < 0) {\n                                logger.warn(`${this} Invalid SSRC ${ssrc} value received for ${owner}`);\n                            } else {\n                                this.signalingLayer.setSSRCOwner(\n                                    ssrc,\n                                    Strophe.getResourceFromJid(owner));\n                            }\n                        }\n                    });\n            }\n        });\n    }\n\n    /**\n     * Makes the underlying TraceablePeerConnection generate new SSRC for\n     * the recvonly video stream.\n     * @deprecated\n     */\n    generateRecvonlySsrc() {\n        if (this.peerconnection) {\n            this.peerconnection.generateRecvonlySsrc();\n        } else {\n            logger.error(`${this} Unable to generate recvonly SSRC - no peerconnection`);\n        }\n    }\n\n    /**\n     * Returns the video codec configured as the preferred codec on the peerconnection.\n     */\n    getConfiguredVideoCodec() {\n        return this.peerconnection.getConfiguredVideoCodec();\n    }\n\n    /* eslint-disable max-params */\n    /**\n     * Accepts incoming Jingle 'session-initiate' and should send\n     * 'session-accept' in result.\n     * @param jingleOffer jQuery selector pointing to the jingle element of\n     * the offer IQ\n     * @param success callback called when we accept incoming session\n     * successfully and receive RESULT packet to 'session-accept' sent.\n     * @param failure function(error) called if for any reason we fail to accept\n     * the incoming offer. 'error' argument can be used to log some details\n     * about the error.\n     * @param {Array<JitsiLocalTrack>} [localTracks] the optional list of\n     * the local tracks that will be added, before the offer/answer cycle\n     * executes. We allow the localTracks to optionally be passed in so that\n     * the addition of the local tracks and the processing of the initial offer\n     * can all be done atomically. We want to make sure that any other\n     * operations which originate in the XMPP Jingle messages related with\n     * this session to be executed with an assumption that the initial\n     * offer/answer cycle has been executed already.\n     */\n    acceptOffer(jingleOffer, success, failure, localTracks) {\n        this.setOfferAnswerCycle(\n            jingleOffer,\n            () => {\n                // FIXME we may not care about RESULT packet for session-accept\n                // then we should either call 'success' here immediately or\n                // modify sendSessionAccept method to do that\n                this.sendSessionAccept(success, failure);\n            },\n            failure,\n            localTracks);\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     * Creates an offer and sends Jingle 'session-initiate' to the remote peer.\n     * @param {Array<JitsiLocalTrack>} localTracks the local tracks that will be\n     * added, before the offer/answer cycle executes (for the local track\n     * addition to be an atomic operation together with the offer/answer).\n     */\n    invite(localTracks = []) {\n        if (!this.isInitiator) {\n            throw new Error('Trying to invite from the responder session');\n        }\n        const workFunction = finishedCallback => {\n            const addTracks = [];\n\n            for (const localTrack of localTracks) {\n                addTracks.push(this.peerconnection.addTrack(localTrack, this.isInitiator));\n            }\n\n            Promise.all(addTracks)\n                .then(() => this.peerconnection.createOffer(this.mediaConstraints))\n                .then(offerSdp => this.peerconnection.setLocalDescription(offerSdp))\n                .then(() => {\n                    // NOTE that the offer is obtained from the localDescription getter as it needs to go though\n                    // the transformation chain.\n                    this.sendSessionInitiate(this.peerconnection.localDescription.sdp);\n                })\n                .then(() => finishedCallback(), error => finishedCallback(error));\n        };\n\n        logger.debug(`${this} Queued invite task`);\n        this.modificationQueue.push(\n            workFunction,\n            error => {\n                if (error) {\n                    logger.error(`${this} invite error`, error);\n                } else {\n                    logger.debug(`${this} invite executed - OK`);\n                }\n            });\n    }\n\n    /**\n     * Sends 'session-initiate' to the remote peer.\n     *\n     * NOTE this method is synchronous and we're not waiting for the RESULT\n     * response which would delay the startup process.\n     *\n     * @param {string} offerSdp  - The local session description which will be\n     * used to generate an offer.\n     * @private\n     */\n    sendSessionInitiate(offerSdp) {\n        let init = $iq({\n            to: this.remoteJid,\n            type: 'set'\n        }).c('jingle', {\n            xmlns: 'urn:xmpp:jingle:1',\n            action: 'session-initiate',\n            initiator: this.initiatorJid,\n            sid: this.sid\n        });\n\n        new SDP(offerSdp).toJingle(\n            init,\n            this.isInitiator ? 'initiator' : 'responder');\n        init = init.tree();\n        logger.debug(`${this} Session-initiate: `, init);\n        this.connection.sendIQ(init,\n            () => {\n                logger.info(`${this} Got RESULT for \"session-initiate\"`);\n            },\n            error => {\n                logger.error(`${this} \"session-initiate\" error`, error);\n            },\n            IQ_TIMEOUT);\n    }\n\n    /**\n     * Sets the answer received from the remote peer.\n     * @param jingleAnswer\n     */\n    setAnswer(jingleAnswer) {\n        if (!this.isInitiator) {\n            throw new Error('Trying to set an answer on the responder session');\n        }\n        this.setOfferAnswerCycle(\n            jingleAnswer,\n            () => {\n                logger.info(`${this} setAnswer - succeeded`);\n                if (this.usesUnifiedPlan && browser.isChromiumBased()) {\n                    // This hack is needed for Chrome to create a decoder for the ssrcs in the remote SDP when\n                    // the local endpoint is the offerer and starts muted.\n                    const remoteSdp = this.peerconnection.remoteDescription.sdp;\n                    const remoteDescription = new RTCSessionDescription({\n                        type: 'offer',\n                        sdp: remoteSdp\n                    });\n\n                    this._responderRenegotiate(remoteDescription);\n                }\n            },\n            error => {\n                logger.error(`${this} setAnswer failed: `, error);\n            });\n    }\n\n    /* eslint-disable max-params */\n    /**\n     * This is a setRemoteDescription/setLocalDescription cycle which starts at\n     * converting Strophe Jingle IQ into remote offer SDP. Once converted\n     * setRemoteDescription, createAnswer and setLocalDescription calls follow.\n     * @param jingleOfferAnswerIq jQuery selector pointing to the jingle element\n     *        of the offer (or answer) IQ\n     * @param success callback called when sRD/sLD cycle finishes successfully.\n     * @param failure callback called with an error object as an argument if we\n     *        fail at any point during setRD, createAnswer, setLD.\n     * @param {Array<JitsiLocalTrack>} [localTracks] the optional list of\n     * the local tracks that will be added, before the offer/answer cycle\n     * executes (for the local track addition to be an atomic operation together\n     * with the offer/answer).\n     */\n    setOfferAnswerCycle(jingleOfferAnswerIq, success, failure, localTracks = []) {\n        const workFunction = finishedCallback => {\n            const addTracks = [];\n\n            for (const track of localTracks) {\n                addTracks.push(this.peerconnection.addTrack(track, this.isInitiator));\n            }\n\n            const newRemoteSdp\n                = this._processNewJingleOfferIq(jingleOfferAnswerIq);\n            const oldLocalSdp\n                = this.peerconnection.localDescription.sdp;\n\n            const bridgeSession\n                = $(jingleOfferAnswerIq)\n                    .find('>bridge-session['\n                        + 'xmlns=\"http://jitsi.org/protocol/focus\"]');\n            const bridgeSessionId = bridgeSession.attr('id');\n\n            if (bridgeSessionId !== this._bridgeSessionId) {\n                this._bridgeSessionId = bridgeSessionId;\n            }\n\n            Promise.all(addTracks)\n                .then(() => this._renegotiate(newRemoteSdp.raw))\n                .then(() => {\n                    if (this.state === JingleSessionState.PENDING) {\n                        this.state = JingleSessionState.ACTIVE;\n\n                        // #1 Sync up video transfer active/inactive only after\n                        // the initial O/A cycle. We want to adjust the video\n                        // media direction only in the local SDP and the Jingle\n                        // contents direction included in the initial\n                        // offer/answer is mapped to the remote SDP. Jingle\n                        // 'content-modify' IQ is processed in a way that it\n                        // will only modify local SDP when remote peer is no\n                        // longer interested in receiving video content.\n                        // Changing media direction in the remote SDP will mess\n                        // up our SDP translation chain (simulcast, video mute,\n                        // RTX etc.)\n                        //\n                        // #2 Sends the max frame height if it was set, before the session-initiate/accept\n                        if (this.isP2P\n                            && (!this._localVideoActive || this.localRecvMaxFrameHeight)) {\n                            this.sendContentModify();\n                        }\n                    }\n\n                    // Old local SDP will be available when we're setting answer\n                    // for the first time, but not when offer and it's fine\n                    // since we're generating an answer now it will contain all\n                    // our SSRCs\n                    if (oldLocalSdp) {\n                        const newLocalSdp\n                            = new SDP(this.peerconnection.localDescription.sdp);\n\n                        this.notifyMySSRCUpdate(\n                            new SDP(oldLocalSdp), newLocalSdp);\n                    }\n                })\n                .then(() => finishedCallback(), error => finishedCallback(error));\n        };\n\n        logger.debug(`${this} Queued setOfferAnswerCycle task`);\n        this.modificationQueue.push(\n            workFunction,\n            error => {\n                if (error) {\n                    logger.error(`${this} setOfferAnswerCycle task failed: ${error}`);\n                    failure(error);\n                } else {\n                    logger.debug(`${this} setOfferAnswerCycle task done`);\n                    success();\n                }\n            });\n    }\n\n    /**\n     * Updates the codecs on the peerconnection and initiates a renegotiation for the\n     * new codec config to take effect.\n     *\n     * @param {CodecMimeType} preferred the preferred codec.\n     * @param {CodecMimeType} disabled the codec that needs to be disabled.\n     */\n    setVideoCodecs(preferred = null, disabled = null) {\n        const current = this.peerconnection.getConfiguredVideoCodec();\n\n        if (this._assertNotEnded() && preferred !== current) {\n            logger.info(`${this} Switching video codec from ${current} to ${preferred}`);\n            this.peerconnection.setVideoCodecs(preferred, disabled);\n\n            // Initiate a renegotiate for the codec setting to take effect.\n            const workFunction = finishedCallback => {\n                this._renegotiate().then(\n                    () => {\n                        logger.debug(`${this} setVideoCodecs task is done`);\n\n                        return finishedCallback();\n                    }, error => {\n                        logger.error(`${this} setVideoCodecs task failed: ${error}`);\n\n                        return finishedCallback(error);\n                    });\n            };\n\n            logger.debug(`${this} Queued setVideoCodecs task`);\n\n            // Queue and execute\n            this.modificationQueue.push(workFunction);\n        }\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     * Although it states \"replace transport\" it does accept full Jingle offer\n     * which should contain new ICE transport details.\n     * @param jingleOfferElem an element Jingle IQ that contains new offer and\n     *        transport info.\n     * @param success callback called when we succeed to accept new offer.\n     * @param failure function(error) called when we fail to accept new offer.\n     */\n    replaceTransport(jingleOfferElem, success, failure) {\n        if (this.options.enableForcedReload) {\n            const sdp = new SDP(this.peerconnection.localDescription.sdp);\n\n            this.sendTransportAccept(sdp, success, failure);\n            this.room.eventEmitter.emit(XMPPEvents.CONNECTION_RESTARTED, this);\n\n            return;\n        }\n        this.room.eventEmitter.emit(XMPPEvents.ICE_RESTARTING, this);\n\n        // We need to first reject the 'data' section to have the SCTP stack\n        // cleaned up to signal the known data channel is now invalid. After\n        // that the original offer is set to have the SCTP connection\n        // established with the new bridge.\n        const originalOffer = jingleOfferElem.clone();\n\n        jingleOfferElem\n            .find('>content[name=\\'data\\']')\n            .attr('senders', 'rejected');\n\n        // Remove all remote sources in order to reset the client's state\n        // for the remote MediaStreams. When a conference is moved to\n        // another bridge it will start streaming with a sequence number\n        // that is not in sync with the most recently seen by the client.\n        // The symptoms include frozen or black video and lots of \"failed to\n        // unprotect SRTP packets\" in Chrome logs.\n        jingleOfferElem\n            .find('>content>description>source')\n            .remove();\n        jingleOfferElem\n            .find('>content>description>ssrc-group')\n            .remove();\n\n        // On the JVB it's not a real ICE restart and all layers are re-initialized from scratch as Jicofo does\n        // the restart by re-allocating new channels. Chrome (or WebRTC stack) needs to have the DTLS transport layer\n        // reset to start a new handshake with fresh DTLS transport on the bridge. Make it think that the DTLS\n        // fingerprint has changed by setting an all zeros key.\n        const newFingerprint = jingleOfferElem.find('>content>transport>fingerprint');\n\n        newFingerprint.attr('hash', 'sha-1');\n        newFingerprint.text('00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00');\n\n        // First set an offer with a rejected 'data' section\n        this.setOfferAnswerCycle(\n            jingleOfferElem,\n            () => {\n                // Now set the original offer(with the 'data' section)\n                this.setOfferAnswerCycle(\n                    originalOffer,\n                    () => {\n                        const localSDP\n                            = new SDP(this.peerconnection.localDescription.sdp);\n\n                        this.sendTransportAccept(localSDP, success, failure);\n\n                        this.room.eventEmitter.emit(\n                            XMPPEvents.ICE_RESTART_SUCCESS,\n                            this,\n                            originalOffer);\n                    },\n                    failure);\n            },\n            failure\n        );\n    }\n\n    /**\n     * Sends Jingle 'session-accept' message.\n     * @param {function()} success callback called when we receive 'RESULT'\n     *        packet for the 'session-accept'\n     * @param {function(error)} failure called when we receive an error response\n     *        or when the request has timed out.\n     * @private\n     */\n    sendSessionAccept(success, failure) {\n        // NOTE: since we're just reading from it, we don't need to be within\n        //  the modification queue to access the local description\n        const localSDP = new SDP(this.peerconnection.localDescription.sdp);\n        let accept = $iq({ to: this.remoteJid,\n            type: 'set' })\n            .c('jingle', { xmlns: 'urn:xmpp:jingle:1',\n                action: 'session-accept',\n                initiator: this.initiatorJid,\n                responder: this.responderJid,\n                sid: this.sid });\n\n        if (this.webrtcIceTcpDisable) {\n            localSDP.removeTcpCandidates = true;\n        }\n        if (this.webrtcIceUdpDisable) {\n            localSDP.removeUdpCandidates = true;\n        }\n        if (this.failICE) {\n            localSDP.failICE = true;\n        }\n        localSDP.toJingle(\n            accept,\n            this.initiatorJid === this.localJid ? 'initiator' : 'responder');\n\n        // Calling tree() to print something useful\n        accept = accept.tree();\n        logger.debug(`${this} Sending session-accept`, accept);\n        this.connection.sendIQ(accept,\n            success,\n            this.newJingleErrorHandler(accept, error => {\n                failure(error);\n\n                // 'session-accept' is a critical timeout and we'll\n                // have to restart\n                this.room.eventEmitter.emit(\n                    XMPPEvents.SESSION_ACCEPT_TIMEOUT, this);\n            }),\n            IQ_TIMEOUT);\n\n        // XXX Videobridge needs WebRTC's answer (ICE ufrag and pwd, DTLS\n        // fingerprint and setup) ASAP in order to start the connection\n        // establishment.\n        //\n        // FIXME Flushing the connection at this point triggers an issue with\n        // BOSH request handling in Prosody on slow connections.\n        //\n        // The problem is that this request will be quite large and it may take\n        // time before it reaches Prosody. In the meantime Strophe may decide\n        // to send the next one. And it was observed that a small request with\n        // 'transport-info' usually follows this one. It does reach Prosody\n        // before the previous one was completely received. 'rid' on the server\n        // is increased and Prosody ignores the request with 'session-accept'.\n        // It will never reach Jicofo and everything in the request table is\n        // lost. Removing the flush does not guarantee it will never happen, but\n        // makes it much less likely('transport-info' is bundled with\n        // 'session-accept' and any immediate requests).\n        //\n        // this.connection.flush();\n    }\n\n    /**\n     * Will send 'content-modify' IQ in order to ask the remote peer to\n     * either stop or resume sending video media or to adjust sender's video constraints.\n     * @private\n     */\n    sendContentModify() {\n        const maxFrameHeight = this.localRecvMaxFrameHeight;\n        const senders = this._localVideoActive ? 'both' : 'none';\n\n        let sessionModify\n            = $iq({\n                to: this.remoteJid,\n                type: 'set'\n            })\n                .c('jingle', {\n                    xmlns: 'urn:xmpp:jingle:1',\n                    action: 'content-modify',\n                    initiator: this.initiatorJid,\n                    sid: this.sid\n                })\n                .c('content', {\n                    name: 'video',\n                    senders\n                });\n\n        if (typeof maxFrameHeight !== 'undefined') {\n            sessionModify = sessionModify\n                .c('max-frame-height', { xmlns: 'http://jitsi.org/jitmeet/video' })\n                .t(maxFrameHeight);\n        }\n\n        logger.info(`${this} sending content-modify, video senders: ${senders}, max frame height: ${maxFrameHeight}`);\n\n        this.connection.sendIQ(\n            sessionModify,\n            null,\n            this.newJingleErrorHandler(sessionModify),\n            IQ_TIMEOUT);\n    }\n\n    /**\n     * Adjust the preference for max video frame height that the local party is willing to receive. Signals\n     * the remote party.\n     *\n     * @param {Number} maxFrameHeight - the new value to set.\n     */\n    setReceiverVideoConstraint(maxFrameHeight) {\n        logger.info(`${this} setReceiverVideoConstraint - max frame height: ${maxFrameHeight}`);\n\n        this.localRecvMaxFrameHeight = maxFrameHeight;\n\n        if (this.isP2P) {\n            // Tell the remote peer about our receive constraint. If Jingle session is not yet active the state will\n            // be synced after offer/answer.\n            if (this.state === JingleSessionState.ACTIVE) {\n                this.sendContentModify();\n            }\n        } else {\n            this.rtc.setReceiverVideoConstraint(maxFrameHeight);\n        }\n    }\n\n    /**\n     * Sends Jingle 'transport-accept' message which is a response to\n     * 'transport-replace'.\n     * @param localSDP the 'SDP' object with local session description\n     * @param success callback called when we receive 'RESULT' packet for\n     *        'transport-replace'\n     * @param failure function(error) called when we receive an error response\n     *        or when the request has timed out.\n     * @private\n     */\n    sendTransportAccept(localSDP, success, failure) {\n        let transportAccept = $iq({ to: this.remoteJid,\n            type: 'set' })\n            .c('jingle', {\n                xmlns: 'urn:xmpp:jingle:1',\n                action: 'transport-accept',\n                initiator: this.initiatorJid,\n                sid: this.sid\n            });\n\n        localSDP.media.forEach((medialines, idx) => {\n            const mline = SDPUtil.parseMLine(medialines.split('\\r\\n')[0]);\n\n            transportAccept.c('content',\n                {\n                    creator:\n                        this.initiatorJid === this.localJid\n                            ? 'initiator'\n                            : 'responder',\n                    name: mline.media\n                }\n            );\n            localSDP.transportToJingle(idx, transportAccept);\n            transportAccept.up();\n        });\n\n        // Calling tree() to print something useful to the logger\n        transportAccept = transportAccept.tree();\n        logger.info(`${this} Sending transport-accept: `, transportAccept);\n\n        this.connection.sendIQ(transportAccept,\n            success,\n            this.newJingleErrorHandler(transportAccept, failure),\n            IQ_TIMEOUT);\n    }\n\n    /**\n     * Sends Jingle 'transport-reject' message which is a response to\n     * 'transport-replace'.\n     * @param success callback called when we receive 'RESULT' packet for\n     *        'transport-replace'\n     * @param failure function(error) called when we receive an error response\n     *        or when the request has timed out.\n     *\n     * FIXME method should be marked as private, but there's some spaghetti that\n     *       needs to be fixed prior doing that\n     */\n    sendTransportReject(success, failure) {\n        // Send 'transport-reject', so that the focus will\n        // know that we've failed\n        let transportReject = $iq({ to: this.remoteJid,\n            type: 'set' })\n            .c('jingle', {\n                xmlns: 'urn:xmpp:jingle:1',\n                action: 'transport-reject',\n                initiator: this.initiatorJid,\n                sid: this.sid\n            });\n\n        transportReject = transportReject.tree();\n        logger.info(`${this} Sending 'transport-reject'`, transportReject);\n\n        this.connection.sendIQ(transportReject,\n            success,\n            this.newJingleErrorHandler(transportReject, failure),\n            IQ_TIMEOUT);\n    }\n\n    /**\n     * Sets the maximum bitrates on the local video track. Bitrate values from\n     * videoQuality settings in config.js will be used for configuring the sender.\n     * @returns {Promise<void>} promise that will be resolved when the operation is\n     * successful and rejected otherwise.\n     */\n    setSenderMaxBitrates() {\n        if (this._assertNotEnded()) {\n            return this.peerconnection.setMaxBitRate();\n        }\n\n        return Promise.resolve();\n    }\n\n    /**\n     * Sets the resolution constraint on the local camera track.\n     * @param {number} maxFrameHeight - The user preferred max frame height.\n     * @returns {Promise} promise that will be resolved when the operation is\n     * successful and rejected otherwise.\n     */\n    setSenderVideoConstraint(maxFrameHeight) {\n        if (this._assertNotEnded()) {\n            logger.info(`${this} setSenderVideoConstraint: ${maxFrameHeight}`);\n\n            // RN doesn't support RTCRtpSenders yet, aggresive layer suspension on RN is implemented\n            // by changing the media direction in the SDP. This is applicable to jvb sessions only.\n            if (!this.isP2P && browser.isReactNative() && typeof maxFrameHeight !== 'undefined') {\n                const videoActive = maxFrameHeight > 0;\n\n                return this.setMediaTransferActive(true, videoActive);\n            }\n\n            return this.peerconnection.setSenderVideoConstraint(maxFrameHeight);\n        }\n\n        return Promise.resolve();\n    }\n\n    /**\n     * Sets the degradation preference on the video sender. This setting determines if\n     * resolution or framerate will be preferred when bandwidth or cpu is constrained.\n     * @returns {Promise<void>} promise that will be resolved when the operation is\n     * successful and rejected otherwise.\n     */\n    setSenderVideoDegradationPreference() {\n        if (this._assertNotEnded()) {\n            return this.peerconnection.setSenderVideoDegradationPreference();\n        }\n\n        return Promise.resolve();\n    }\n\n    /**\n     * @inheritDoc\n     */\n    terminate(success, failure, options) {\n        if (this.state === JingleSessionState.ENDED) {\n            return;\n        }\n\n        if (!options || Boolean(options.sendSessionTerminate)) {\n            let sessionTerminate\n                = $iq({\n                    to: this.remoteJid,\n                    type: 'set'\n                })\n                    .c('jingle', {\n                        xmlns: 'urn:xmpp:jingle:1',\n                        action: 'session-terminate',\n                        initiator: this.initiatorJid,\n                        sid: this.sid\n                    })\n                    .c('reason')\n                    .c((options && options.reason) || 'success')\n                    .up();\n\n            if (options && options.reasonDescription) {\n                sessionTerminate\n                    .c('text')\n                    .t(options.reasonDescription)\n                    .up()\n                    .up();\n            } else {\n                sessionTerminate.up();\n            }\n\n            this._bridgeSessionId\n                && sessionTerminate.c(\n                    'bridge-session', {\n                        xmlns: 'http://jitsi.org/protocol/focus',\n                        id: this._bridgeSessionId,\n                        restart: options && options.requestRestart === true\n                    }).up();\n\n            // Calling tree() to print something useful\n            sessionTerminate = sessionTerminate.tree();\n            logger.info(`${this} Sending session-terminate`, sessionTerminate);\n            this.connection.sendIQ(\n                sessionTerminate,\n                success,\n                this.newJingleErrorHandler(sessionTerminate, failure),\n                IQ_TIMEOUT);\n        } else {\n            logger.info(`${this} Skipped sending session-terminate`);\n        }\n\n        // this should result in 'onTerminated' being called by strope.jingle.js\n        this.connection.jingle.terminate(this.sid);\n    }\n\n    /**\n     *\n     * @param reasonCondition\n     * @param reasonText\n     */\n    onTerminated(reasonCondition, reasonText) {\n        // Do something with reason and reasonCondition when we start to care\n        // this.reasonCondition = reasonCondition;\n        // this.reasonText = reasonText;\n        logger.info(`${this} Session terminated`, reasonCondition, reasonText);\n\n        this._xmppListeners.forEach(removeListener => removeListener());\n        this._xmppListeners = [];\n\n        if (this._removeSenderVideoConstraintsChangeListener) {\n            this._removeSenderVideoConstraintsChangeListener();\n        }\n\n        this.close();\n    }\n\n    /**\n     * Handles XMPP connection state changes.\n     *\n     * @param {XmppConnection.Status} status - The new status.\n     */\n    onXmppStatusChanged(status) {\n        if (status === XmppConnection.Status.CONNECTED && this._cachedOldLocalSdp) {\n            logger.info(`${this} Sending SSRC update on reconnect`);\n            this.notifyMySSRCUpdate(\n                this._cachedOldLocalSdp,\n                this._cachedNewLocalSdp);\n        }\n    }\n\n    /**\n     * Parse the information from the xml sourceAddElem and translate it\n     *  into sdp lines\n     * @param {jquery xml element} sourceAddElem the source-add\n     *  element from jingle\n     * @param {SDP object} currentRemoteSdp the current remote\n     *  sdp (as of this new source-add)\n     * @returns {list} a list of SDP line strings that should\n     *  be added to the remote SDP\n     */\n    _parseSsrcInfoFromSourceAdd(sourceAddElem, currentRemoteSdp) {\n        const addSsrcInfo = [];\n        const self = this;\n\n        $(sourceAddElem).each((i1, content) => {\n            const name = $(content).attr('name');\n            let lines = '';\n\n            $(content)\n                .find('ssrc-group[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]')\n                .each(function() {\n                    // eslint-disable-next-line no-invalid-this\n                    const semantics = this.getAttribute('semantics');\n                    const ssrcs\n                        = $(this) // eslint-disable-line no-invalid-this\n                            .find('>source')\n                            .map(function() {\n                                // eslint-disable-next-line no-invalid-this\n                                return this.getAttribute('ssrc');\n                            })\n                            .get();\n\n                    if (ssrcs.length) {\n                        lines += `a=ssrc-group:${semantics} ${ssrcs.join(' ')}\\r\\n`;\n                    }\n                });\n\n            // handles both >source and >description>source\n            const tmp\n                = $(content).find(\n                    'source[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]');\n\n            /* eslint-disable no-invalid-this */\n            tmp.each(function() {\n                const ssrc = $(this).attr('ssrc');\n\n                if (currentRemoteSdp.containsSSRC(ssrc)) {\n\n                    // Do not print the warning for unified plan p2p case since ssrcs are never removed from the SDP.\n                    !(self.usesUnifiedPlan && self.isP2P)\n                        && logger.warn(`${self} Source-add request for existing SSRC: ${ssrc}`);\n\n                    return;\n                }\n\n                // eslint-disable-next-line newline-per-chained-call\n                $(this).find('>parameter').each(function() {\n                    lines += `a=ssrc:${ssrc} ${$(this).attr('name')}`;\n                    if ($(this).attr('value') && $(this).attr('value').length) {\n                        lines += `:${$(this).attr('value')}`;\n                    }\n                    lines += '\\r\\n';\n                });\n            });\n\n            /* eslint-enable no-invalid-this */\n            currentRemoteSdp.media.forEach((media, i2) => {\n                if (!SDPUtil.findLine(media, `a=mid:${name}`)) {\n                    return;\n                }\n                if (!addSsrcInfo[i2]) {\n                    addSsrcInfo[i2] = '';\n                }\n                addSsrcInfo[i2] += lines;\n            });\n        });\n\n        return addSsrcInfo;\n    }\n\n    /**\n     * Handles a Jingle source-add message for this Jingle session.\n     * @param elem An array of Jingle \"content\" elements.\n     */\n    addRemoteStream(elem) {\n        this._addOrRemoveRemoteStream(true /* add */, elem);\n    }\n\n    /**\n     * Handles a Jingle source-remove message for this Jingle session.\n     * @param elem An array of Jingle \"content\" elements.\n     */\n    removeRemoteStream(elem) {\n        this._addOrRemoveRemoteStream(false /* remove */, elem);\n    }\n\n    /**\n     * Handles the deletion of the remote tracks and SSRCs associated with a remote endpoint.\n     *\n     * @param {string} id Endpoint id of the participant that has left the call.\n     * @returns {Promise<JitsiRemoteTrack>} Promise that resolves with the tracks that are removed or error if the\n     * operation fails.\n     */\n    removeRemoteStreamsOnLeave(id) {\n        let remoteTracks = [];\n\n        const workFunction = finishCallback => {\n            const removeSsrcInfo = this.peerconnection.getRemoteSourceInfoByParticipant(id);\n\n            if (removeSsrcInfo.length) {\n                const oldLocalSdp = new SDP(this.peerconnection.localDescription.sdp);\n                const newRemoteSdp = this._processRemoteRemoveSource(removeSsrcInfo);\n\n                remoteTracks = this.peerconnection.removeRemoteTracks(id);\n                this._renegotiate(newRemoteSdp.raw)\n                    .then(() => {\n                        const newLocalSDP = new SDP(this.peerconnection.localDescription.sdp);\n\n                        this.notifyMySSRCUpdate(oldLocalSdp, newLocalSDP);\n                        finishCallback();\n                    })\n                    .catch(err => finishCallback(err));\n            } else {\n                finishCallback();\n            }\n        };\n\n        return new Promise((resolve, reject) => {\n            logger.debug(`${this} Queued removeRemoteStreamsOnLeave task for participant ${id}`);\n\n            this.modificationQueue.push(\n                workFunction,\n                error => {\n                    if (error) {\n                        logger.error(`${this} removeRemoteStreamsOnLeave error:`, error);\n                        reject(error);\n                    } else {\n                        logger.info(`${this} removeRemoteStreamsOnLeave done!`);\n                        resolve(remoteTracks);\n                    }\n                });\n        });\n    }\n\n    /**\n     * Handles either Jingle 'source-add' or 'source-remove' message for this\n     * Jingle session.\n     * @param {boolean} isAdd <tt>true</tt> for 'source-add' or <tt>false</tt>\n     * otherwise.\n     * @param {Array<Element>} elem an array of Jingle \"content\" elements.\n     * @private\n     */\n    _addOrRemoveRemoteStream(isAdd, elem) {\n        const logPrefix = isAdd ? 'addRemoteStream' : 'removeRemoteStream';\n\n        if (isAdd) {\n            this.readSsrcInfo(elem);\n        }\n\n        const workFunction = finishedCallback => {\n            if (!this.peerconnection.localDescription\n                || !this.peerconnection.localDescription.sdp) {\n                const errMsg = `${logPrefix} - localDescription not ready yet`;\n\n                logger.error(errMsg);\n                finishedCallback(errMsg);\n\n                return;\n            }\n\n            logger.log(`${this} Processing ${logPrefix}`);\n\n            const oldLocalSdp = new SDP(this.peerconnection.localDescription.sdp);\n            const sdp = new SDP(this.peerconnection.remoteDescription.sdp);\n            const addOrRemoveSsrcInfo\n                = isAdd\n                    ? this._parseSsrcInfoFromSourceAdd(elem, sdp)\n                    : this._parseSsrcInfoFromSourceRemove(elem, sdp);\n            const newRemoteSdp\n                = isAdd\n                    ? this._processRemoteAddSource(addOrRemoveSsrcInfo)\n                    : this._processRemoteRemoveSource(addOrRemoveSsrcInfo);\n\n            // Add a workaround for a bug in Chrome (unified plan) for p2p connection. When the media direction on\n            // the transceiver goes from \"inactive\" (both users join muted) to \"recvonly\" (peer unmutes), the browser\n            // doesn't seem to create a decoder if the signaling state changes from \"have-local-offer\" to \"stable\".\n            // Therefore, initiate a responder renegotiate even if the endpoint is the offerer to workaround this issue.\n            // TODO - open a chrome bug and update the comments.\n            const remoteDescription = new RTCSessionDescription({\n                type: 'offer',\n                sdp: newRemoteSdp.raw\n            });\n            const promise = isAdd && this.usesUnifiedPlan && this.isP2P && browser.isChromiumBased()\n                ? this._responderRenegotiate(remoteDescription)\n                : this._renegotiate(newRemoteSdp.raw);\n\n            promise.then(() => {\n                const newLocalSdp = new SDP(this.peerconnection.localDescription.sdp);\n\n                logger.log(`${this} ${logPrefix} - OK`);\n                this.notifyMySSRCUpdate(oldLocalSdp, newLocalSdp);\n                finishedCallback();\n            }, error => {\n                logger.error(`${this} ${logPrefix} failed:`, error);\n                finishedCallback(error);\n            });\n        };\n\n        logger.debug(`${this} Queued ${logPrefix} task`);\n\n        // Queue and execute\n        this.modificationQueue.push(workFunction);\n    }\n\n    /**\n     * Takes in a jingle offer iq, returns the new sdp offer\n     * @param {jquery xml element} offerIq the incoming offer\n     * @returns {SDP object} the jingle offer translated to SDP\n     */\n    _processNewJingleOfferIq(offerIq) {\n        const remoteSdp = new SDP('');\n\n        if (this.webrtcIceTcpDisable) {\n            remoteSdp.removeTcpCandidates = true;\n        }\n        if (this.webrtcIceUdpDisable) {\n            remoteSdp.removeUdpCandidates = true;\n        }\n        if (this.failICE) {\n            remoteSdp.failICE = true;\n        }\n\n        remoteSdp.fromJingle(offerIq);\n        this.readSsrcInfo($(offerIq).find('>content'));\n\n        return remoteSdp;\n    }\n\n    /**\n     * Remove the given ssrc lines from the current remote sdp\n     * @param {list} removeSsrcInfo a list of SDP line strings that\n     *  should be removed from the remote SDP\n     * @returns type {SDP Object} the new remote SDP (after removing the lines\n     *  in removeSsrcInfo\n     */\n    _processRemoteRemoveSource(removeSsrcInfo) {\n        const remoteSdp = this.usesUnifiedPlan\n            ? new SDP(this.peerconnection.peerconnection.remoteDescription.sdp)\n            : new SDP(this.peerconnection.remoteDescription.sdp);\n\n        removeSsrcInfo.forEach((lines, idx) => {\n            // eslint-disable-next-line no-param-reassign\n            lines = lines.split('\\r\\n');\n            lines.pop(); // remove empty last element;\n            if (this.usesUnifiedPlan) {\n                lines.forEach(line => {\n                    const mid = remoteSdp.media.findIndex(mLine => mLine.includes(line));\n\n                    if (mid > -1) {\n                        // Remove the ssrcs from the m-line in\n                        // 1. Plan-b mode always.\n                        // 2. Unified mode but only for jvb connection. In p2p mode if the ssrc is removed and added\n                        // back to the same m-line, Chrome/Safari do not render the media even if it being received\n                        // and decoded from the remote peer. The webrtc spec is not clear about m-line re-use and\n                        // the browser vendors have implemented this differently. Currently workaround this by changing\n                        // the media direction, that should be enough for the browser to fire the \"removetrack\" event\n                        // on the associated MediaStream.\n                        if (!this.usesUnifiedPlan || (this.usesUnifiedPlan && !this.isP2P)) {\n                            remoteSdp.media[mid] = remoteSdp.media[mid].replace(`${line}\\r\\n`, '');\n                        }\n\n                        // The current direction of the transceiver for p2p will depend on whether a local sources is\n                        // added or not. It will be 'sendrecv' if the local source is present, 'sendonly' otherwise.\n                        if (this.isP2P) {\n                            const mediaType = SDPUtil.parseMLine(remoteSdp.media[mid].split('\\r\\n')[0])?.media;\n                            const desiredDirection = this.peerconnection.getDesiredMediaDirection(mediaType, false);\n\n                            [ MediaDirection.SENDRECV, MediaDirection.SENDONLY ].forEach(direction => {\n                                remoteSdp.media[mid] = remoteSdp.media[mid]\n                                    .replace(`a=${direction}`, `a=${desiredDirection}`);\n                            });\n\n                        // Jvb connections will have direction set to 'sendonly' when the remote ssrc is present.\n                        } else {\n                            // Change the direction to \"inactive\" always for jvb connection.\n                            remoteSdp.media[mid] = remoteSdp.media[mid]\n                                .replace(`a=${MediaDirection.SENDONLY}`, `a=${MediaDirection.INACTIVE}`);\n                        }\n                    }\n                });\n            } else {\n                lines.forEach(line => {\n                    remoteSdp.media[idx]\n                        = remoteSdp.media[idx].replace(`${line}\\r\\n`, '');\n                });\n            }\n        });\n        remoteSdp.raw = remoteSdp.session + remoteSdp.media.join('');\n\n        return remoteSdp;\n    }\n\n    /**\n     * Add the given ssrc lines to the current remote sdp\n     * @param {list} addSsrcInfo a list of SDP line strings that\n     *  should be added to the remote SDP\n     * @returns type {SDP Object} the new remote SDP (after removing the lines\n     *  in removeSsrcInfo\n     */\n    _processRemoteAddSource(addSsrcInfo) {\n        const remoteSdp = new SDP(this.peerconnection.remoteDescription.sdp);\n\n        addSsrcInfo.forEach((lines, idx) => {\n            remoteSdp.media[idx] += lines;\n\n            // Make sure to change the direction to 'sendrecv/sendonly' only for p2p connections. For jvb connections,\n            // a new m-line is added for the new remote sources.\n            if (this.isP2P && this.usesUnifiedPlan) {\n                const mediaType = SDPUtil.parseMLine(remoteSdp.media[idx].split('\\r\\n')[0])?.media;\n                const desiredDirection = this.peerconnection.getDesiredMediaDirection(mediaType, true);\n\n                [ MediaDirection.RECVONLY, MediaDirection.INACTIVE ].forEach(direction => {\n                    remoteSdp.media[idx] = remoteSdp.media[idx]\n                        .replace(`a=${direction}`, `a=${desiredDirection}`);\n                });\n            }\n        });\n        remoteSdp.raw = remoteSdp.session + remoteSdp.media.join('');\n\n        return remoteSdp;\n    }\n\n    /**\n     * Do a new o/a flow using the existing remote description\n     * @param {string} [optionalRemoteSdp] optional, raw remote sdp\n     *  to use.  If not provided, the remote sdp from the\n     *  peerconnection will be used\n     * @returns {Promise} promise which resolves when the\n     *  o/a flow is complete with no arguments or\n     *  rejects with an error {string}\n     */\n    _renegotiate(optionalRemoteSdp) {\n        if (this.peerconnection.signalingState === 'closed') {\n            const error = new Error('Attempted to renegotiate in state closed');\n\n            this.room.eventEmitter.emit(XMPPEvents.RENEGOTIATION_FAILED, error, this);\n\n            return Promise.reject(error);\n        }\n\n        const remoteSdp\n            = optionalRemoteSdp || this.peerconnection.remoteDescription.sdp;\n\n        if (!remoteSdp) {\n            const error = new Error(`Can not renegotiate without remote description, current state: ${this.state}`);\n\n            this.room.eventEmitter.emit(XMPPEvents.RENEGOTIATION_FAILED, error, this);\n\n            return Promise.reject(error);\n        }\n\n        const remoteDescription = new RTCSessionDescription({\n            type: this.isInitiator ? 'answer' : 'offer',\n            sdp: remoteSdp\n        });\n\n        if (this.isInitiator) {\n            return this._initiatorRenegotiate(remoteDescription);\n        }\n\n        return this._responderRenegotiate(remoteDescription);\n    }\n\n    /**\n     * Renegotiate cycle implementation for the responder case.\n     * @param {object} remoteDescription the SDP object as defined by the WebRTC\n     * which will be used as remote description in the cycle.\n     * @private\n     */\n    _responderRenegotiate(remoteDescription) {\n        logger.debug(`${this} Renegotiate: setting remote description`);\n\n        return this.peerconnection.setRemoteDescription(remoteDescription)\n            .then(() => {\n                logger.debug(`${this} Renegotiate: creating answer`);\n\n                return this.peerconnection.createAnswer(this.mediaConstraints)\n                    .then(answer => {\n                        logger.debug(`${this} Renegotiate: setting local description`);\n\n                        return this.peerconnection.setLocalDescription(answer);\n                    });\n            });\n    }\n\n    /**\n     * Renegotiate cycle implementation for the initiator's case.\n     * @param {object} remoteDescription the SDP object as defined by the WebRTC\n     * which will be used as remote description in the cycle.\n     * @private\n     */\n    _initiatorRenegotiate(remoteDescription) {\n        logger.debug(`${this} Renegotiate: creating offer`);\n\n        return this.peerconnection.createOffer(this.mediaConstraints)\n            .then(offer => {\n                logger.debug(`${this} Renegotiate: setting local description`);\n\n                return this.peerconnection.setLocalDescription(offer)\n                    .then(() => {\n                        logger.debug(`${this} Renegotiate: setting remote description`);\n\n                        // eslint-disable-next-line max-len\n                        return this.peerconnection.setRemoteDescription(remoteDescription);\n                    });\n            });\n    }\n\n    /**\n     * Replaces <tt>oldTrack</tt> with <tt>newTrack</tt> and performs a single\n     * offer/answer cycle after both operations are done. Either\n     * <tt>oldTrack</tt> or <tt>newTrack</tt> can be null; replacing a valid\n     * <tt>oldTrack</tt> with a null <tt>newTrack</tt> effectively just removes\n     * <tt>oldTrack</tt>\n     * @param {JitsiLocalTrack|null} oldTrack the current track in use to be\n     * replaced\n     * @param {JitsiLocalTrack|null} newTrack the new track to use\n     * @returns {Promise} which resolves once the replacement is complete\n     *  with no arguments or rejects with an error {string}\n     */\n    replaceTrack(oldTrack, newTrack) {\n        const workFunction = finishedCallback => {\n            logger.debug(`${this} replaceTrack worker started. oldTrack = ${oldTrack}, newTrack = ${newTrack}`);\n\n            const oldLocalSdp = this.peerconnection.localDescription.sdp;\n\n            if (!this.usesUnifiedPlan) {\n                // NOTE the code below assumes that no more than 1 video track\n                // can be added to the peer connection.\n                // Transition from camera to desktop share\n                // or transition from one camera source to another.\n                if (this.peerconnection.options.capScreenshareBitrate\n                    && oldTrack && newTrack && newTrack.isVideoTrack()) {\n                    // Clearing current primary SSRC will make\n                    // the SdpConsistency generate a new one which will result\n                    // with:\n                    // 1. source-remove for the old video stream.\n                    // 2. source-add for the new video stream.\n                    this.peerconnection.clearRecvonlySsrc();\n                }\n\n                // Transition from no video to video (unmute).\n                if (!oldTrack && newTrack && newTrack.isVideoTrack()) {\n                    // Clearing current primary SSRC will make\n                    // the SdpConsistency generate a new one which will result\n                    // with:\n                    // 1. source-remove for the recvonly\n                    // 2. source-add for the new video stream\n                    this.peerconnection.clearRecvonlySsrc();\n\n                // Transition from video to no video\n                } else if (oldTrack && oldTrack.isVideoTrack() && !newTrack) {\n                    // Clearing current primary SSRC and generating the recvonly\n                    // will result in:\n                    // 1. source-remove for the old video stream\n                    // 2. source-add for the recvonly stream\n                    this.peerconnection.clearRecvonlySsrc();\n                    this.peerconnection.generateRecvonlySsrc();\n                }\n            }\n\n            this.peerconnection.replaceTrack(oldTrack, newTrack)\n                .then(shouldRenegotiate => {\n                    let promise = Promise.resolve();\n\n                    logger.debug(`${this} TPC.replaceTrack finished. shouldRenegotiate = ${\n                        shouldRenegotiate}, JingleSessionState = ${this.state}`);\n\n                    if (shouldRenegotiate\n                        && (oldTrack || newTrack)\n                        && this.state === JingleSessionState.ACTIVE) {\n                        promise = this._renegotiate().then(() => {\n                            const newLocalSDP = new SDP(this.peerconnection.localDescription.sdp);\n\n                            this.notifyMySSRCUpdate(new SDP(oldLocalSdp), newLocalSDP);\n                        });\n                    }\n\n                    return promise.then(() => {\n                        if (newTrack && newTrack.isVideoTrack()) {\n                            logger.debug(`${this} replaceTrack worker: configuring video stream`);\n\n                            // FIXME set all sender parameters in one go?\n                            // Set the degradation preference on the new video sender.\n                            return this.peerconnection.setSenderVideoDegradationPreference()\n                                .then(() => this.peerconnection.setSenderVideoConstraint())\n                                .then(() => this.peerconnection.setMaxBitRate());\n                        }\n                    });\n                })\n                .then(() => finishedCallback(), error => finishedCallback(error));\n        };\n\n        return new Promise((resolve, reject) => {\n            logger.debug(`${this} Queued replaceTrack task. Old track = ${oldTrack}, new track = ${newTrack}`);\n\n            this.modificationQueue.push(\n                workFunction,\n                error => {\n                    if (error) {\n                        logger.error(`${this} Replace track error:`, error);\n                        reject(error);\n                    } else {\n                        logger.info(`${this}  Replace track done!`);\n                        resolve();\n                    }\n                });\n        });\n    }\n\n    /**\n     * Parse the information from the xml sourceRemoveElem and translate it\n     *  into sdp lines\n     * @param {jquery xml element} sourceRemoveElem the source-remove\n     *  element from jingle\n     * @param {SDP object} currentRemoteSdp the current remote\n     *  sdp (as of this new source-remove)\n     * @returns {list} a list of SDP line strings that should\n     *  be removed from the remote SDP\n     */\n    _parseSsrcInfoFromSourceRemove(sourceRemoveElem, currentRemoteSdp) {\n        const removeSsrcInfo = [];\n\n        $(sourceRemoveElem).each((i1, content) => {\n            const name = $(content).attr('name');\n            let lines = '';\n\n            $(content)\n                .find('ssrc-group[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]')\n                .each(function() {\n                    /* eslint-disable no-invalid-this */\n                    const semantics = this.getAttribute('semantics');\n                    const ssrcs\n                        = $(this)\n                            .find('>source')\n                            .map(function() {\n                                return this.getAttribute('ssrc');\n                            })\n                            .get();\n\n                    if (ssrcs.length) {\n                        lines\n                            += `a=ssrc-group:${semantics} ${\n                                ssrcs.join(' ')}\\r\\n`;\n                    }\n\n                    /* eslint-enable no-invalid-this */\n                });\n            const ssrcs = [];\n\n            // handles both >source and >description>source versions\n            const tmp\n                = $(content).find(\n                    'source[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]');\n\n            tmp.each(function() {\n                // eslint-disable-next-line no-invalid-this\n                const ssrc = $(this).attr('ssrc');\n\n                ssrcs.push(ssrc);\n            });\n            currentRemoteSdp.media.forEach((media, i2) => {\n                if (!SDPUtil.findLine(media, `a=mid:${name}`)) {\n                    return;\n                }\n                if (!removeSsrcInfo[i2]) {\n                    removeSsrcInfo[i2] = '';\n                }\n                ssrcs.forEach(ssrc => {\n                    const ssrcLines\n                        = SDPUtil.findLines(media, `a=ssrc:${ssrc}`);\n\n                    if (ssrcLines.length) {\n                        removeSsrcInfo[i2] += `${ssrcLines.join('\\r\\n')}\\r\\n`;\n                    }\n                });\n                removeSsrcInfo[i2] += lines;\n            });\n        });\n\n        return removeSsrcInfo;\n    }\n\n    /**\n     * Will print an error if there is any difference, between the SSRCs given\n     * in the <tt>oldSDP</tt> and the ones currently described in\n     * the peerconnection's local description.\n     * @param {string} operationName the operation's name which will be printed\n     * in the error message.\n     * @param {SDP} oldSDP the old local SDP which will be compared with\n     * the current one.\n     * @return {boolean} <tt>true</tt> if there was any change or <tt>false</tt>\n     * otherwise.\n     * @private\n     */\n    _verifyNoSSRCChanged(operationName, oldSDP) {\n        const currentLocalSDP\n            = new SDP(this.peerconnection.localDescription.sdp);\n        let sdpDiff = new SDPDiffer(oldSDP, currentLocalSDP);\n        const addedMedia = sdpDiff.getNewMedia();\n\n        if (Object.keys(addedMedia).length) {\n            logger.error(`${this} - some SSRC were added on ${operationName}`, addedMedia);\n\n            return false;\n        }\n\n        sdpDiff = new SDPDiffer(currentLocalSDP, oldSDP);\n        const removedMedia = sdpDiff.getNewMedia();\n\n        if (Object.keys(removedMedia).length) {\n            logger.error(`${this} - some SSRCs were removed on ${operationName}`, removedMedia);\n\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Adds local track back to this session, as part of the unmute operation.\n     * @param {JitsiLocalTrack} track\n     * @return {Promise} a promise that will resolve once the local track is\n     * added back to this session and renegotiation succeeds. Will be rejected\n     * with a <tt>string</tt> that provides some error details in case something\n     * goes wrong.\n     */\n    addTrackAsUnmute(track) {\n        return this._addRemoveTrackAsMuteUnmute(\n            false /* add as unmute */, track)\n            .then(() => {\n                // Apply the video constraints, max bitrates and degradation preference on\n                // the video sender if needed.\n                if (track.isVideoTrack() && browser.doesVideoMuteByStreamRemove()) {\n                    return this.setSenderMaxBitrates()\n                        .then(() => this.setSenderVideoDegradationPreference())\n                        .then(() => this.setSenderVideoConstraint());\n                }\n            });\n    }\n\n    /**\n     * Remove local track as part of the mute operation.\n     * @param {JitsiLocalTrack} track the local track to be removed\n     * @return {Promise} a promise which will be resolved once the local track\n     * is removed from this session and the renegotiation is performed.\n     * The promise will be rejected with a <tt>string</tt> that the describes\n     * the error if anything goes wrong.\n     */\n    removeTrackAsMute(track) {\n        return this._addRemoveTrackAsMuteUnmute(\n            true /* remove as mute */, track);\n    }\n\n    /**\n     * See {@link addTrackAsUnmute} and {@link removeTrackAsMute}.\n     * @param {boolean} isMute <tt>true</tt> for \"remove as mute\" or\n     * <tt>false</tt> for \"add as unmute\".\n     * @param {JitsiLocalTrack} track the track that will be added/removed\n     * @private\n     */\n    _addRemoveTrackAsMuteUnmute(isMute, track) {\n        if (!track) {\n            return Promise.reject('invalid \"track\" argument value');\n        }\n        const operationName = isMute ? 'removeTrackMute' : 'addTrackUnmute';\n        const workFunction = finishedCallback => {\n            const tpc = this.peerconnection;\n\n            if (!tpc) {\n                finishedCallback(\n                    `Error:  tried ${operationName} track with no active peer`\n                        + 'connection');\n\n                return;\n            }\n            const oldLocalSDP = tpc.localDescription.sdp;\n            const operationPromise\n                = isMute\n                    ? tpc.removeTrackMute(track)\n                    : tpc.addTrackUnmute(track);\n\n            operationPromise\n                .then(shouldRenegotiate => {\n                    if (shouldRenegotiate && oldLocalSDP && tpc.remoteDescription.sdp) {\n                        this._renegotiate()\n                            .then(() => {\n                                // The results are ignored, as this check failure is not\n                                // enough to fail the whole operation. It will log\n                                // an error inside.\n                                this._verifyNoSSRCChanged(\n                                    operationName, new SDP(oldLocalSDP));\n                                finishedCallback();\n                            });\n                    } else {\n                        finishedCallback();\n                    }\n                },\n                finishedCallback /* will be called with an error */);\n        };\n\n        logger.debug(`${this} Queued ${operationName} task`);\n\n        return new Promise((resolve, reject) => {\n            this.modificationQueue.push(\n                workFunction,\n                error => {\n                    if (error) {\n                        logger.error(`${this} ${operationName} failed`);\n                        reject(error);\n                    } else {\n                        logger.debug(`${this} ${operationName} done`);\n                        resolve();\n                    }\n                });\n        });\n    }\n\n    /**\n     * Resumes or suspends media transfer over the underlying peer connection.\n     * @param {boolean} audioActive <tt>true</tt> to enable audio media\n     * transfer or <tt>false</tt> to suspend audio media transmission.\n     * @param {boolean} videoActive <tt>true</tt> to enable video media\n     * transfer or <tt>false</tt> to suspend video media transmission.\n     * @return {Promise} a <tt>Promise</tt> which will resolve once\n     * the operation is done. It will be rejected with an error description as\n     * a string in case anything goes wrong.\n     */\n    setMediaTransferActive(audioActive, videoActive) {\n        if (!this.peerconnection) {\n            return Promise.reject(\n                'Can not modify transfer active state,'\n                    + ' before \"initialize\" is called');\n        }\n\n        const logAudioStr = audioActive ? 'audio active' : 'audio inactive';\n        const logVideoStr = videoActive ? 'video active' : 'video inactive';\n\n        logger.info(`${this} Queued make ${logVideoStr}, ${logAudioStr} task`);\n\n        const workFunction = finishedCallback => {\n            const isSessionActive = this.state === JingleSessionState.ACTIVE;\n\n            // Because the value is modified on the queue it's impossible to\n            // check it's final value reliably prior to submitting the task.\n            // The rule here is that the last submitted state counts.\n            // Check the values here to avoid unnecessary renegotiation cycle.\n            const audioActiveChanged\n                = this.peerconnection.setAudioTransferActive(audioActive);\n\n            if (this._localVideoActive !== videoActive) {\n                this._localVideoActive = videoActive;\n\n                // Do only for P2P - Jicofo will reply with 'bad-request'\n                // We don't want to send 'content-modify', before the initial\n                // O/A (state === JingleSessionState.ACTIVE), because that will\n                // mess up video media direction in the remote SDP.\n                // 'content-modify' when processed only affects the media\n                // direction in the local SDP. We're doing that, because setting\n                // 'inactive' on video media in remote SDP will mess up our SDP\n                // translation chain (simulcast, RTX, video mute etc.).\n                if (this.isP2P && isSessionActive) {\n                    this.sendContentModify();\n                }\n            }\n\n            const pcVideoActiveChanged\n                = this.peerconnection.setVideoTransferActive(\n                    this._localVideoActive && this._remoteVideoActive);\n\n            // Will do the sRD/sLD cycle to update SDPs and adjust the media\n            // direction\n            if (isSessionActive\n                    && (audioActiveChanged || pcVideoActiveChanged)) {\n                this._renegotiate()\n                    .then(\n                        finishedCallback,\n                        finishedCallback /* will be called with an error */);\n            } else {\n                finishedCallback();\n            }\n        };\n\n        return new Promise((resolve, reject) => {\n            this.modificationQueue.push(\n                workFunction,\n                error => {\n                    if (error) {\n                        logger.error(`${this} Make ${logVideoStr}, ${logAudioStr} task failed!`);\n                        reject(error);\n                    } else {\n                        logger.debug(`${this} Make ${logVideoStr}, ${logAudioStr} task done!`);\n                        resolve();\n                    }\n                });\n        });\n    }\n\n    /**\n     * Will put and execute on the queue a session modify task. Currently it\n     * only checks the senders attribute of the video content in order to figure\n     * out if the remote peer has video in the inactive state (stored locally\n     * in {@link _remoteVideoActive} - see field description for more info).\n     * @param {jQuery} jingleContents jQuery selector pointing to the jingle\n     * element of the session modify IQ.\n     * @see {@link _remoteVideoActive}\n     * @see {@link _localVideoActive}\n     */\n    modifyContents(jingleContents) {\n        const newVideoSenders\n            = JingleSessionPC.parseVideoSenders(jingleContents);\n        const newMaxFrameHeight\n            = JingleSessionPC.parseMaxFrameHeight(jingleContents);\n\n        // frame height is optional in our content-modify protocol\n        if (newMaxFrameHeight) {\n            logger.info(`${this} received remote max frame height: ${newMaxFrameHeight}`);\n            this.remoteRecvMaxFrameHeight = newMaxFrameHeight;\n            this.eventEmitter.emit(\n                MediaSessionEvents.REMOTE_VIDEO_CONSTRAINTS_CHANGED, this);\n        }\n\n        if (newVideoSenders === null) {\n            logger.error(\n                `${this} - failed to parse video \"senders\" attribute in`\n                    + '\"content-modify\" action');\n\n            return;\n        }\n\n        const workFunction = finishedCallback => {\n            if (this._assertNotEnded('content-modify')\n                    && this._modifyRemoteVideoActive(newVideoSenders)) {\n                // Will do the sRD/sLD cycle to update SDPs and adjust\n                // the media direction\n                this._renegotiate()\n                    .then(finishedCallback, finishedCallback /* (error) */);\n            } else {\n                finishedCallback();\n            }\n        };\n\n        logger.debug(`${this} queued \"content-modify\" task(video senders=\"${newVideoSenders}\")`);\n\n        this.modificationQueue.push(\n            workFunction,\n            error => {\n                if (error) {\n                    logger.error(`${this} \"content-modify\" failed`, error);\n                } else {\n                    logger.debug(`${this} \"content-modify\" task(video senders=\"${newVideoSenders}\") done`);\n                }\n            });\n    }\n\n    /**\n     * Processes new value of remote video \"senders\" Jingle attribute and tries\n     * to apply it for {@link _remoteVideoActive}.\n     * @param {string} remoteVideoSenders the value of \"senders\" attribute of\n     * Jingle video content element advertised by remote peer.\n     * @return {boolean} <tt>true</tt> if the change affected state of\n     * the underlying peerconnection and renegotiation is required for\n     * the changes to take effect.\n     * @private\n     */\n    _modifyRemoteVideoActive(remoteVideoSenders) {\n        const isRemoteVideoActive\n            = remoteVideoSenders === 'both'\n                || (remoteVideoSenders === 'initiator' && this.isInitiator)\n                || (remoteVideoSenders === 'responder' && !this.isInitiator);\n\n        if (isRemoteVideoActive !== this._remoteVideoActive) {\n            logger.debug(`${this} new remote video active: ${isRemoteVideoActive}`);\n            this._remoteVideoActive = isRemoteVideoActive;\n        }\n\n        return this.peerconnection.setVideoTransferActive(\n            this._localVideoActive && this._remoteVideoActive);\n    }\n\n    /**\n     * Figures out added/removed ssrcs and send update IQs.\n     * @param oldSDP SDP object for old description.\n     * @param newSDP SDP object for new description.\n     */\n    notifyMySSRCUpdate(oldSDP, newSDP) {\n\n        if (this.state !== JingleSessionState.ACTIVE) {\n            logger.warn(`${this} Skipping SSRC update in '${this.state} ' state.`);\n\n            return;\n        }\n\n        if (!this.connection.connected) {\n            // The goal is to compare the oldest SDP with the latest one upon reconnect\n            if (!this._cachedOldLocalSdp) {\n                this._cachedOldLocalSdp = oldSDP;\n            }\n            this._cachedNewLocalSdp = newSDP;\n            logger.warn(`${this} Not sending SSRC update while the signaling is disconnected`);\n\n            return;\n        }\n\n        this._cachedOldLocalSdp = undefined;\n        this._cachedNewLocalSdp = undefined;\n\n        // send source-remove IQ.\n        let sdpDiffer = new SDPDiffer(newSDP, oldSDP);\n        const remove = $iq({ to: this.remoteJid,\n            type: 'set' })\n            .c('jingle', {\n                xmlns: 'urn:xmpp:jingle:1',\n                action: 'source-remove',\n                initiator: this.initiatorJid,\n                sid: this.sid\n            }\n            );\n        const removedAnySSRCs = sdpDiffer.toJingle(remove);\n\n        if (removedAnySSRCs) {\n            logger.info(`${this} Sending source-remove`, remove.tree());\n            this.connection.sendIQ(\n                remove, null,\n                this.newJingleErrorHandler(remove), IQ_TIMEOUT);\n        }\n\n        // send source-add IQ.\n        sdpDiffer = new SDPDiffer(oldSDP, newSDP);\n        const add = $iq({ to: this.remoteJid,\n            type: 'set' })\n            .c('jingle', {\n                xmlns: 'urn:xmpp:jingle:1',\n                action: 'source-add',\n                initiator: this.initiatorJid,\n                sid: this.sid\n            }\n            );\n\n        const containsNewSSRCs = sdpDiffer.toJingle(add);\n\n        if (containsNewSSRCs) {\n            logger.info(`${this} Sending source-add`, add.tree());\n            this.connection.sendIQ(\n                add, null, this.newJingleErrorHandler(add), IQ_TIMEOUT);\n        }\n    }\n\n    /**\n     * Method returns function(errorResponse) which is a callback to be passed\n     * to Strophe connection.sendIQ method. An 'error' structure is created that\n     * is passed as 1st argument to given <tt>failureCb</tt>. The format of this\n     * structure is as follows:\n     * {\n     *  code: {XMPP error response code}\n     *  reason: {the name of XMPP error reason element or 'timeout' if the\n      *          request has timed out within <tt>IQ_TIMEOUT</tt> milliseconds}\n     *  source: {request.tree() that provides original request}\n     *  session: {this JingleSessionPC.toString()}\n     * }\n     * @param request Strophe IQ instance which is the request to be dumped into\n     *        the error structure\n     * @param failureCb function(error) called when error response was returned\n     *        or when a timeout has occurred.\n     * @returns {function(this:JingleSessionPC)}\n     */\n    newJingleErrorHandler(request, failureCb) {\n        return errResponse => {\n\n            const error = {};\n\n            // Get XMPP error code and condition(reason)\n            const errorElSel = $(errResponse).find('error');\n\n            if (errorElSel.length) {\n                error.code = errorElSel.attr('code');\n                const errorReasonSel = $(errResponse).find('error :first');\n\n                if (errorReasonSel.length) {\n                    error.reason = errorReasonSel[0].tagName;\n                }\n\n                const errorMsgSel = errorElSel.find('>text');\n\n                if (errorMsgSel.length) {\n                    error.msg = errorMsgSel.text();\n                }\n            }\n\n            if (!errResponse) {\n                error.reason = 'timeout';\n            }\n\n            error.session = this.toString();\n\n            if (failureCb) {\n                failureCb(error);\n            } else if (this.state === JingleSessionState.ENDED\n                        && error.reason === 'item-not-found') {\n                // When remote peer decides to terminate the session, but it\n                // still have few messages on the queue for processing,\n                // it will first send us 'session-terminate' (we enter ENDED)\n                // and then follow with 'item-not-found' for the queued requests\n                // We don't want to have that logged on error level.\n                logger.debug(`${this} Jingle error: ${JSON.stringify(error)}`);\n            } else {\n                GlobalOnErrorHandler.callErrorHandler(\n                    new Error(\n                        `Jingle error: ${JSON.stringify(error)}`));\n            }\n        };\n    }\n\n    /**\n     * Returns the ice connection state for the peer connection.\n     * @returns the ice connection state for the peer connection.\n     */\n    getIceConnectionState() {\n        return this.peerconnection.getConnectionState();\n    }\n\n    /**\n     * Closes the peerconnection.\n     */\n    close() {\n        this.state = JingleSessionState.ENDED;\n        this.establishmentDuration = undefined;\n\n        if (this.peerconnection) {\n            this.peerconnection.onicecandidate = null;\n            this.peerconnection.oniceconnectionstatechange = null;\n            this.peerconnection.onnegotiationneeded = null;\n            this.peerconnection.onsignalingstatechange = null;\n        }\n\n        logger.debug(`${this} Clearing modificationQueue`);\n\n        // Remove any pending tasks from the queue\n        this.modificationQueue.clear();\n\n        logger.debug(`${this} Queued PC close task`);\n        this.modificationQueue.push(finishCallback => {\n            // The signaling layer will remove it's listeners\n            this.signalingLayer.setChatRoom(null);\n\n            // do not try to close if already closed.\n            this.peerconnection && this.peerconnection.close();\n            finishCallback();\n            logger.debug(`${this} PC close task done!`);\n        });\n\n        logger.debug(`${this} Shutdown modificationQueue!`);\n\n        // No more tasks can go in after the close task\n        this.modificationQueue.shutdown();\n    }\n\n    /**\n     * Converts to string with minor summary.\n     * @return {string}\n     */\n    toString() {\n        return `JingleSessionPC[session=${this.isP2P ? 'P2P' : 'JVB'},initiator=${this.isInitiator},sid=${this.sid}]`;\n    }\n\n    /**\n     * If the A/B test for suspend video is disabled according to the room's\n     * configuration, returns undefined. Otherwise returns a boolean which\n     * indicates whether the suspend video option should be enabled or disabled.\n     * @param {JingleSessionPCOptions} options - The config options.\n     */\n    _abtestSuspendVideoEnabled({ abTesting }) {\n        if (!abTesting || !abTesting.enableSuspendVideoTest) {\n            return;\n        }\n\n        // We want the two participants in a P2P call to agree on the value of\n        // the \"suspend\" option. We use the JID of the initiator, because it is\n        // both randomly selected and agreed upon by both participants.\n        const jid = this._getInitiatorJid();\n\n        return integerHash(jid) % 2 === 0;\n    }\n}\n","// TODO: Maybe fix the values to 'Chrome', 'Internet Explorer', etc. Currently\n// this values needs to be as they are becuse they are going to analytics,\n// callstats, etc.\n\nexport const CHROME = 'chrome';\n\nexport const OPERA = 'opera';\n\nexport const FIREFOX = 'firefox';\n\nexport const INTERNET_EXPLORER = 'iexplorer';\n\nexport const SAFARI = 'safari';\n\nexport const NWJS = 'nwjs';\n\nexport const ELECTRON = 'electron';\n\nexport const REACT_NATIVE = 'react-native';\n\nexport const UNKNOWN = 'unknown';\n","import Bowser from 'bowser';\n\nimport {\n    CHROME,\n    OPERA,\n    FIREFOX,\n    INTERNET_EXPLORER,\n    SAFARI,\n    NWJS,\n    ELECTRON,\n    REACT_NATIVE,\n    UNKNOWN\n} from './browsers';\n\n/**\n * Maps the names of the browsers from bowser to the internal names defined in\n * ./browsers.js\n */\nconst bowserNameToJitsiName = {\n    'Chrome': CHROME,\n    'Chromium': CHROME,\n    'Opera': OPERA,\n    'Firefox': FIREFOX,\n    'Internet Explorer': INTERNET_EXPLORER,\n    'Safari': SAFARI\n};\n\n/**\n * Detects a Chromium based environent.\n *\n * NOTE: Here we cannot check solely for \"Chrome\" in the UA, because Edge has\n * it too. We need to check explicitly for chromium based Edge first and then\n * detect other chromium based browsers.\n *\n * @returns {Object|undefined} - The name (CHROME) and version.\n */\nfunction _detectChromiumBased() {\n    const userAgent = navigator.userAgent;\n    const browserInfo = {\n        name: UNKNOWN,\n        version: undefined\n    };\n\n    if (userAgent.match(/Chrome/) && !userAgent.match(/Edge/)) {\n        // Edge is currenly supported only on desktop and android.\n        if (userAgent.match(/Edg(A?)/)) {\n            // Compare the underlying chromium version.\n            const version = userAgent.match(/Chrome\\/([\\d.]+)/)[1];\n\n            if (Number.parseInt(version, 10) > 72) {\n                browserInfo.name = CHROME;\n                browserInfo.version = version;\n            }\n        } else {\n            browserInfo.name = CHROME;\n            browserInfo.version = userAgent.match(/Chrome\\/([\\d.]+)/)[1];\n        }\n    }\n\n    return browserInfo;\n}\n\n/**\n * Detects Electron environment.\n *\n * @returns {Object|undefined} - The name (ELECTRON) and version.\n */\nfunction _detectElectron() {\n    const userAgent = navigator.userAgent;\n\n    if (userAgent.match(/Electron/)) {\n        const version = userAgent.match(/Electron(?:\\s|\\/)([\\d.]+)/)[1];\n\n        return {\n            name: ELECTRON,\n            version\n        };\n    }\n}\n\n/**\n * Detects NWJS environment.\n *\n * @returns {Object|undefined} - The name (NWJS) and version.\n */\nfunction _detectNWJS() {\n    const userAgent = navigator.userAgent;\n\n    if (userAgent.match(/JitsiMeetNW/)) {\n        const version = userAgent.match(/JitsiMeetNW\\/([\\d.]+)/)[1];\n\n        return {\n            name: NWJS,\n            version\n        };\n    }\n}\n\n/**\n * Detects React Native environment.\n * @returns {Object|undefined} - The name (REACT_NATIVE) and version.\n */\nfunction _detectReactNative() {\n    const match\n        = navigator.userAgent.match(/\\b(react[ \\t_-]*native)(?:\\/(\\S+))?/i);\n    let version;\n\n    // If we're remote debugging a React Native app, it may be treated as\n    // Chrome. Check navigator.product as well and always return some version\n    // even if we can't get the real one.\n\n    if (match || navigator.product === 'ReactNative') {\n        let name;\n\n        if (match && match.length > 2) {\n            name = match[1];\n            version = match[2];\n        }\n        name || (name = 'react-native');\n        version || (version = 'unknown');\n\n        return {\n            name: REACT_NATIVE,\n            version\n        };\n    }\n}\n\n/**\n * Returns information about the current browser.\n * @param {Object} - The bowser instance.\n * @returns {Object} - The name and version of the browser.\n */\nfunction _detect(bowser) {\n    let browserInfo;\n    const detectors = [\n        _detectReactNative,\n        _detectElectron,\n        _detectNWJS\n    ];\n\n    // Try all browser detectors\n    for (let i = 0; i < detectors.length; i++) {\n        browserInfo = detectors[i]();\n        if (browserInfo) {\n            return browserInfo;\n        }\n    }\n\n    const name = bowser.getBrowserName();\n\n    if (name in bowserNameToJitsiName) {\n        return {\n            name: bowserNameToJitsiName[name],\n            version: bowser.getBrowserVersion()\n        };\n    }\n\n    // Detect other browsers with the Chrome engine, such as Vivaldi and Brave.\n    browserInfo = _detectChromiumBased();\n    if (browserInfo) {\n        return browserInfo;\n    }\n\n    return {\n        name: UNKNOWN,\n        version: undefined\n    };\n}\n\n/**\n * Implements browser detection.\n */\nexport default class BrowserDetection {\n    /**\n     * Creates new BrowserDetection instance.\n     *\n     * @param {Object} [browserInfo] - Information about the browser.\n     * @param {string} browserInfo.name - The name of the browser.\n     * @param {string} browserInfo.version - The version of the browser.\n     */\n    constructor(browserInfo) {\n        let name, version;\n\n        this._bowser = Bowser.getParser(navigator.userAgent);\n        if (typeof browserInfo === 'undefined') {\n            const detectedBrowserInfo = _detect(this._bowser);\n\n            name = detectedBrowserInfo.name;\n            version = detectedBrowserInfo.version;\n        } else if (browserInfo.name in bowserNameToJitsiName) {\n            name = bowserNameToJitsiName[browserInfo.name];\n            version = browserInfo.version;\n        } else {\n            name = UNKNOWN;\n            version = undefined;\n        }\n\n        this._name = name;\n        this._version = version;\n    }\n\n    /**\n     * Gets current browser name.\n     * @returns {string}\n     */\n    getName() {\n        return this._name;\n    }\n\n    /**\n     * Checks if current browser is Chrome.\n     * @returns {boolean}\n     */\n    isChrome() {\n        return this._name === CHROME;\n    }\n\n    /**\n     * Checks if current browser is Opera.\n     * @returns {boolean}\n     */\n    isOpera() {\n        return this._name === OPERA;\n    }\n\n    /**\n     * Checks if current browser is Firefox.\n     * @returns {boolean}\n     */\n    isFirefox() {\n        return this._name === FIREFOX;\n    }\n\n    /**\n     * Checks if current browser is Internet Explorer.\n     * @returns {boolean}\n     */\n    isIExplorer() {\n        return this._name === INTERNET_EXPLORER;\n    }\n\n    /**\n     * Checks if current browser is Safari.\n     * @returns {boolean}\n     */\n    isSafari() {\n        return this._name === SAFARI;\n    }\n\n    /**\n     * Checks if current environment is NWJS.\n     * @returns {boolean}\n     */\n    isNWJS() {\n        return this._name === NWJS;\n    }\n\n    /**\n     * Checks if current environment is Electron.\n     * @returns {boolean}\n     */\n    isElectron() {\n        return this._name === ELECTRON;\n    }\n\n    /**\n     * Checks if current environment is React Native.\n     * @returns {boolean}\n     */\n    isReactNative() {\n        return this._name === REACT_NATIVE;\n    }\n\n    /**\n     * Returns the version of the current browser.\n     * @returns {string}\n     */\n    getVersion() {\n        return this._version;\n    }\n\n    /**\n     * Check if the parsed browser matches the passed condition.\n     *\n     * @param {Object} checkTree - It's one or two layered object, which can include a\n     * platform or an OS on the first layer and should have browsers specs on the\n     * bottom layer.\n     * Eg. { chrome: '>71.1.0' }\n     *     { windows: { chrome: '<70.2' } }\n     * @returns {boolean | undefined} - Returns true if the browser satisfies the set\n     * conditions, false if not and undefined when the browser is not defined in the\n     * checktree object or when the current browser's version is unknown.\n     * @private\n     */\n    _checkCondition(checkTree) {\n        if (this._version) {\n            return this._bowser.satisfies(checkTree);\n        }\n    }\n\n    /**\n     * Compares the passed version with the current browser version.\n     *\n     * @param {*} version - The version to compare with. Anything different\n     * than string will be converted to string.\n     * @returns {boolean|undefined} - Returns true if the current version is\n     * greater than the passed version and false otherwise. Returns undefined if\n     * the current browser version is unknown.\n     */\n    isVersionGreaterThan(version) {\n        return this._checkCondition({ [this._name]: `>${version}` });\n    }\n\n    /**\n     * Compares the passed version with the current browser version.\n     *\n     * @param {*} version - The version to compare with. Anything different\n     * than string will be converted to string.\n     * @returns {boolean|undefined} - Returns true if the current version is\n     * lower than the passed version and false otherwise. Returns undefined if\n     * the current browser version is unknown.\n     */\n    isVersionLessThan(version) {\n        return this._checkCondition({ [this._name]: `<${version}` });\n    }\n\n    /**\n     * Compares the passed version with the current browser version.\n     *\n     * @param {*} version - The version to compare with. Anything different\n     * than string will be converted to string.\n     * @returns {boolean|undefined} - Returns true if the current version is\n     * equal to the passed version and false otherwise. Returns undefined if\n     * the current browser version is unknown.\n     * A loose-equality operator is used here so that it matches the sub-versions as well.\n     */\n    isVersionEqualTo(version) {\n        return this._checkCondition({ [this._name]: `~${version}` });\n    }\n}\n","import EventEmitter from 'events';\n\n/**\n * Dummy implementation of Storage interface.\n */\nclass DummyLocalStorage extends EventEmitter {\n\n    /**\n     * The object used for storage.\n     */\n    _storage = {};\n\n    /**\n     * Empties all keys out of the storage.\n     *\n     * @returns {void}\n     */\n    clear() {\n        this._storage = {};\n    }\n\n    /**\n     * Returns the number of data items stored in the Storage object.\n     *\n     * @returns {number} - The number of data items stored in the Storage object.\n     */\n    get length() {\n        return Object.keys(this._storage).length;\n    }\n\n    /**\n     * Will return that key's value associated to the passed key name.\n     *\n     * @param {string} keyName - The key name.\n     * @returns {*} - The key value.\n     */\n    getItem(keyName) {\n        return this._storage[keyName];\n    }\n\n    /**\n     * When passed a key name and value, will add that key to the storage,\n     * or update that key's value if it already exists.\n     *\n     * @param {string} keyName - The key name.\n     * @param {*} keyValue - The key value.\n     * @returns {void}\n     */\n    setItem(keyName, keyValue) {\n        this._storage[keyName] = keyValue;\n    }\n\n    /**\n     * When passed a key name, will remove that key from the storage.\n     *\n     * @param {string} keyName - The key name.\n     * @returns {void}\n     */\n    removeItem(keyName) {\n        delete this._storage[keyName];\n    }\n\n    /**\n     * When passed a number n, this method will return the name of the nth key in the storage.\n     *\n     * @param {number} idx - The index of the key.\n     * @returns {string} - The nth key name.\n     */\n    key(n) {\n        const keys = Object.keys(this._storage);\n\n        if (keys.length <= n) {\n            return undefined;\n        }\n\n        return keys[n];\n    }\n\n    /**\n     * Serializes the content of the storage.\n     *\n     * @returns {string} - The serialized content.\n     */\n    serialize() {\n        return JSON.stringify(this._storage);\n    }\n}\n\n/**\n * Wrapper class for browser's local storage object.\n */\nclass JitsiLocalStorage extends EventEmitter {\n    /**\n     * @constructor\n     * @param {Storage} storage browser's local storage object.\n     */\n    constructor() {\n        super();\n\n        try {\n            this._storage = window.localStorage;\n            this._localStorageDisabled = false;\n        } catch (ignore) {\n            // localStorage throws an exception.\n        }\n\n        if (!this._storage) { // Handles the case when window.localStorage is undefined or throws an exception.\n            console.warn('Local storage is disabled.');\n            this._storage = new DummyLocalStorage();\n            this._localStorageDisabled = true;\n        }\n    }\n\n    /**\n     * Returns true if window.localStorage is disabled and false otherwise.\n     *\n     * @returns {boolean} - True if window.localStorage is disabled and false otherwise.\n     */\n    isLocalStorageDisabled() {\n        return this._localStorageDisabled;\n    }\n\n    /**\n     * Empties all keys out of the storage.\n     *\n     * @returns {void}\n     */\n    clear() {\n        this._storage.clear();\n        this.emit('changed');\n    }\n\n    /**\n     * Returns the number of data items stored in the Storage object.\n     *\n     * @returns {number} - The number of data items stored in the Storage object.\n     */\n    get length() {\n        return this._storage.length;\n    }\n\n    /**\n     * Returns that passed key's value.\n     * @param {string} keyName the name of the key you want to retrieve\n     * the value of.\n     * @returns {String|null} the value of the key. If the key does not exist,\n     * null is returned.\n     */\n    getItem(keyName) {\n        return this._storage.getItem(keyName);\n    }\n\n    /**\n     * Adds a key to the storage, or update key's value if it already exists.\n     * @param {string} keyName - the name of the key you want to create/update.\n     * @param {string} keyValue - the value you want to give the key you are\n     * creating/updating.\n     * @param {boolean} dontEmitChangedEvent - If true a changed event won't be emitted.\n     */\n    setItem(keyName, keyValue, dontEmitChangedEvent = false) {\n        this._storage.setItem(keyName, keyValue);\n\n        if (!dontEmitChangedEvent) {\n            this.emit('changed');\n        }\n    }\n\n    /**\n     * Remove a key from the storage.\n     * @param {string} keyName the name of the key you want to remove.\n     */\n    removeItem(keyName) {\n        this._storage.removeItem(keyName);\n        this.emit('changed');\n    }\n\n    /**\n     * Returns the name of the nth key in the list, or null if n is greater\n     * than or equal to the number of key/value pairs in the object.\n     *\n     * @param {number} i - The index of the key in the list.\n     * @returns {string}\n     */\n    key(i) {\n        return this._storage.key(i);\n    }\n\n    /**\n     * Serializes the content of the storage.\n     *\n     * @returns {string} - The serialized content.\n     */\n    serialize() {\n        if (this.isLocalStorageDisabled()) {\n            return this._storage.serialize();\n        }\n\n        const length = this._storage.length;\n        const localStorageContent = {};\n\n        for (let i = 0; i < length; i++) {\n            const key = this._storage.key(i);\n\n            localStorageContent[key] = this._storage.getItem(key);\n        }\n\n        return JSON.stringify(localStorageContent);\n    }\n}\n\nexport const jitsiLocalStorage = new JitsiLocalStorage();\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","import SDPUtil from './SDPUtil';\n\n// this could be useful in Array.prototype.\n/**\n *\n * @param array1\n * @param array2\n */\nfunction arrayEquals(array1, array2) {\n    // if the other array is a falsy value, return\n    if (!array2) {\n        return false;\n    }\n\n    // compare lengths - can save a lot of time\n    if (array1.length !== array2.length) {\n        return false;\n    }\n\n    for (let i = 0, l = array1.length; i < l; i++) {\n        // Check if we have nested arrays\n        if (array1[i] instanceof Array && array2[i] instanceof Array) {\n            // recurse into the nested arrays\n            if (!array1[i].equals(array2[i])) {\n                return false;\n            }\n        } else if (array1[i] !== array2[i]) {\n            // Warning - two different object instances will never be\n            // equal: {x:20} != {x:20}\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n *\n * @param mySDP\n * @param otherSDP\n */\nexport default function SDPDiffer(mySDP, otherSDP) {\n    this.mySDP = mySDP;\n    this.otherSDP = otherSDP;\n    if (!mySDP) {\n        throw new Error('\"mySDP\" is undefined!');\n    } else if (!otherSDP) {\n        throw new Error('\"otherSDP\" is undefined!');\n    }\n}\n\n/**\n * Returns map of MediaChannel that contains media contained in\n * 'mySDP', but not contained in 'otherSdp'. Mapped by channel idx.\n */\nSDPDiffer.prototype.getNewMedia = function() {\n\n    const myMedias = this.mySDP.getMediaSsrcMap();\n    const othersMedias = this.otherSDP.getMediaSsrcMap();\n    const newMedia = {};\n\n    Object.keys(othersMedias).forEach(othersMediaIdx => {\n        const myMedia = myMedias[othersMediaIdx];\n        const othersMedia = othersMedias[othersMediaIdx];\n\n        if (!myMedia && othersMedia) {\n            // Add whole channel\n            newMedia[othersMediaIdx] = othersMedia;\n\n            return;\n        }\n\n        // Look for new ssrcs across the channel\n        Object.keys(othersMedia.ssrcs).forEach(ssrc => {\n            if (Object.keys(myMedia.ssrcs).indexOf(ssrc) === -1) {\n                // Allocate channel if we've found ssrc that doesn't exist in\n                // our channel\n                if (!newMedia[othersMediaIdx]) {\n                    newMedia[othersMediaIdx] = {\n                        mediaindex: othersMedia.mediaindex,\n                        mid: othersMedia.mid,\n                        ssrcs: {},\n                        ssrcGroups: []\n                    };\n                }\n                newMedia[othersMediaIdx].ssrcs[ssrc] = othersMedia.ssrcs[ssrc];\n            } else if (othersMedia.ssrcs[ssrc].lines\n                        && myMedia.ssrcs[ssrc].lines) {\n                // we want to detect just changes in adding/removing msid\n                const myContainMsid = myMedia.ssrcs[ssrc].lines.find(\n                    line => line.indexOf('msid') !== -1) !== undefined;\n                const newContainMsid = othersMedia.ssrcs[ssrc].lines.find(\n                    line => line.indexOf('msid') !== -1) !== undefined;\n\n                if (myContainMsid !== newContainMsid) {\n                    if (!newMedia[othersMediaIdx]) {\n                        newMedia[othersMediaIdx] = {\n                            mediaindex: othersMedia.mediaindex,\n                            mid: othersMedia.mid,\n                            ssrcs: {},\n                            ssrcGroups: []\n                        };\n                    }\n                    newMedia[othersMediaIdx].ssrcs[ssrc]\n                        = othersMedia.ssrcs[ssrc];\n                }\n            }\n        });\n\n        // Look for new ssrc groups across the channels\n        othersMedia.ssrcGroups.forEach(otherSsrcGroup => {\n\n            // try to match the other ssrc-group with an ssrc-group of ours\n            let matched = false;\n\n            for (let i = 0; i < myMedia.ssrcGroups.length; i++) {\n                const mySsrcGroup = myMedia.ssrcGroups[i];\n\n                if (otherSsrcGroup.semantics === mySsrcGroup.semantics\n                    && arrayEquals(otherSsrcGroup.ssrcs, mySsrcGroup.ssrcs)) {\n\n                    matched = true;\n                    break;\n                }\n            }\n\n            if (!matched) {\n                // Allocate channel if we've found an ssrc-group that doesn't\n                // exist in our channel\n\n                if (!newMedia[othersMediaIdx]) {\n                    newMedia[othersMediaIdx] = {\n                        mediaindex: othersMedia.mediaindex,\n                        mid: othersMedia.mid,\n                        ssrcs: {},\n                        ssrcGroups: []\n                    };\n                }\n                newMedia[othersMediaIdx].ssrcGroups.push(otherSsrcGroup);\n            }\n        });\n    });\n\n    return newMedia;\n};\n\n/**\n * TODO: document!\n */\nSDPDiffer.prototype.toJingle = function(modify) {\n    const sdpMediaSsrcs = this.getNewMedia();\n\n    let modified = false;\n\n    Object.keys(sdpMediaSsrcs).forEach(mediaindex => {\n        modified = true;\n        const media = sdpMediaSsrcs[mediaindex];\n\n        modify.c('content', { name: media.mid });\n\n        modify.c('description',\n            { xmlns: 'urn:xmpp:jingle:apps:rtp:1',\n                media: media.mid });\n\n        // FIXME: not completely sure this operates on blocks and / or handles\n        // different ssrcs correctly\n        // generate sources from lines\n        Object.keys(media.ssrcs).forEach(ssrcNum => {\n            const mediaSsrc = media.ssrcs[ssrcNum];\n\n            modify.c('source', { xmlns: 'urn:xmpp:jingle:apps:rtp:ssma:0' });\n            modify.attrs({ ssrc: mediaSsrc.ssrc });\n\n            // iterate over ssrc lines\n            mediaSsrc.lines.forEach(line => {\n                const idx = line.indexOf(' ');\n                const kv = line.substr(idx + 1);\n\n                modify.c('parameter');\n                if (kv.indexOf(':') === -1) {\n                    modify.attrs({ name: kv });\n                } else {\n                    const nv = kv.split(':', 2);\n                    const name = nv[0];\n                    const value = SDPUtil.filterSpecialChars(nv[1]);\n\n                    modify.attrs({ name });\n                    modify.attrs({ value });\n                }\n                modify.up(); // end of parameter\n            });\n            modify.up(); // end of source\n        });\n\n        // generate source groups from lines\n        media.ssrcGroups.forEach(ssrcGroup => {\n            if (ssrcGroup.ssrcs.length) {\n\n                modify.c('ssrc-group', {\n                    semantics: ssrcGroup.semantics,\n                    xmlns: 'urn:xmpp:jingle:apps:rtp:ssma:0'\n                });\n\n                ssrcGroup.ssrcs.forEach(ssrc => {\n                    modify.c('source', { ssrc })\n                        .up(); // end of source\n                });\n                modify.up(); // end of ssrc-group\n            }\n        });\n\n        modify.up(); // end of description\n        modify.up(); // end of content\n    });\n\n    return modified;\n};\n","import { getLogger } from 'jitsi-meet-logger';\nimport transform from 'sdp-transform';\n\nimport MediaDirection from '../../service/RTC/MediaDirection';\nimport * as MediaType from '../../service/RTC/MediaType';\nimport browser from '../browser';\n\nconst logger = getLogger(__filename);\nconst SIM_LAYER_1_RID = '1';\nconst SIM_LAYER_2_RID = '2';\nconst SIM_LAYER_3_RID = '3';\n\nexport const SIM_LAYER_RIDS = [ SIM_LAYER_1_RID, SIM_LAYER_2_RID, SIM_LAYER_3_RID ];\n\n/**\n * Handles track related operations on TraceablePeerConnection when browser is\n * running in unified plan mode.\n */\nexport class TPCUtils {\n    /**\n     * Creates a new instance for a given TraceablePeerConnection\n     *\n     * @param peerconnection - the tpc instance for which we have utility functions.\n     * @param videoBitrates - the bitrates to be configured on the video senders for\n     * different resolutions both in unicast and simulcast mode.\n     */\n    constructor(peerconnection, videoBitrates) {\n        this.pc = peerconnection;\n        this.videoBitrates = videoBitrates.VP8 || videoBitrates;\n\n        /**\n         * The startup configuration for the stream encodings that are applicable to\n         * the video stream when a new sender is created on the peerconnection. The initial\n         * config takes into account the differences in browser's simulcast implementation.\n         *\n         * Encoding parameters:\n         * active - determine the on/off state of a particular encoding.\n         * maxBitrate - max. bitrate value to be applied to that particular encoding\n         *  based on the encoding's resolution and config.js videoQuality settings if applicable.\n         * rid - Rtp Stream ID that is configured for a particular simulcast stream.\n         * scaleResolutionDownBy - the factor by which the encoding is scaled down from the\n         *  original resolution of the captured video.\n         */\n        this.localStreamEncodingsConfig = [\n            {\n                active: true,\n                maxBitrate: browser.isFirefox() ? this.videoBitrates.high : this.videoBitrates.low,\n                rid: SIM_LAYER_1_RID,\n                scaleResolutionDownBy: browser.isFirefox() ? 1.0 : 4.0\n            },\n            {\n                active: true,\n                maxBitrate: this.videoBitrates.standard,\n                rid: SIM_LAYER_2_RID,\n                scaleResolutionDownBy: 2.0\n            },\n            {\n                active: true,\n                maxBitrate: browser.isFirefox() ? this.videoBitrates.low : this.videoBitrates.high,\n                rid: SIM_LAYER_3_RID,\n                scaleResolutionDownBy: browser.isFirefox() ? 4.0 : 1.0\n            }\n        ];\n    }\n\n    /**\n     * Returns the transceiver associated with a given RTCRtpSender/RTCRtpReceiver.\n     *\n     * @param {string} mediaType - type of track associated with the transceiver 'audio' or 'video'.\n     * @param {JitsiLocalTrack} localTrack - local track to be used for lookup.\n     * @returns {RTCRtpTransceiver}\n     */\n    _findTransceiver(mediaType, localTrack = null) {\n        let transceiver = null;\n\n        // Check if the local track has been removed from the peerconnection already.\n        const trackRemoved = !localTrack\n            || (localTrack\n                && browser.doesVideoMuteByStreamRemove()\n                && localTrack.isVideoTrack()\n                && localTrack.isMuted());\n\n        if (trackRemoved) {\n            transceiver = this.pc.peerconnection.getTransceivers()\n                .find(t => t.receiver?.track?.kind === mediaType);\n        } else if (localTrack) {\n            transceiver = this.pc.peerconnection.getTransceivers()\n                .find(t => t.sender?.track?.id === localTrack.getTrackId());\n        }\n\n        return transceiver;\n    }\n\n    /**\n     * Obtains stream encodings that need to be configured on the given track based\n     * on the track media type and the simulcast setting.\n     * @param {JitsiLocalTrack} localTrack\n     */\n    _getStreamEncodings(localTrack) {\n        if (this.pc.isSimulcastOn() && localTrack.isVideoTrack()) {\n            return this.localStreamEncodingsConfig;\n        }\n\n        return localTrack.isVideoTrack()\n            ? [ {\n                active: true,\n                maxBitrate: this.videoBitrates.high\n            } ]\n            : [ { active: true } ];\n    }\n\n    /**\n     * Ensures that the ssrcs associated with a FID ssrc-group appear in the correct order, i.e.,\n     * the primary ssrc first and the secondary rtx ssrc later. This is important for unified\n     * plan since we have only one FID group per media description.\n     * @param {Object} description the webRTC session description instance for the remote\n     * description.\n     * @private\n     */\n    ensureCorrectOrderOfSsrcs(description) {\n        const parsedSdp = transform.parse(description.sdp);\n\n        parsedSdp.media.forEach(mLine => {\n            if (mLine.type === MediaType.AUDIO) {\n                return;\n            }\n            if (!mLine.ssrcGroups || !mLine.ssrcGroups.length) {\n                return;\n            }\n            let reorderedSsrcs = [];\n\n            const ssrcs = new Set();\n\n            mLine.ssrcGroups.map(group =>\n                group.ssrcs\n                    .split(' ')\n                    .filter(Boolean)\n                    .forEach(ssrc => ssrcs.add(ssrc)),\n            );\n\n            ssrcs.forEach(ssrc => {\n                const sources = mLine.ssrcs.filter(source => source.id.toString() === ssrc);\n\n                reorderedSsrcs = reorderedSsrcs.concat(sources);\n            });\n            mLine.ssrcs = reorderedSsrcs;\n        });\n\n        return new RTCSessionDescription({\n            type: description.type,\n            sdp: transform.write(parsedSdp)\n        });\n    }\n\n    /**\n     * Takes in a *unified plan* offer and inserts the appropriate\n     * parameters for adding simulcast receive support.\n     * @param {Object} desc - A session description object\n     * @param {String} desc.type - the type (offer/answer)\n     * @param {String} desc.sdp - the sdp content\n     *\n     * @return {Object} A session description (same format as above) object\n     * with its sdp field modified to advertise simulcast receive support\n     */\n    insertUnifiedPlanSimulcastReceive(desc) {\n        // a=simulcast line is not needed on browsers where we SDP munging is used for enabling on simulcast.\n        // Remove this check when the client switches to RID/MID based simulcast on all browsers.\n        if (browser.usesSdpMungingForSimulcast()) {\n            return desc;\n        }\n        const sdp = transform.parse(desc.sdp);\n        const idx = sdp.media.findIndex(mline => mline.type === MediaType.VIDEO);\n\n        if (sdp.media[idx].rids && (sdp.media[idx].simulcast_03 || sdp.media[idx].simulcast)) {\n            // Make sure we don't have the simulcast recv line on video descriptions other than\n            // the first video description.\n            sdp.media.forEach((mline, i) => {\n                if (mline.type === MediaType.VIDEO && i !== idx) {\n                    sdp.media[i].rids = undefined;\n                    sdp.media[i].simulcast = undefined;\n\n                    // eslint-disable-next-line camelcase\n                    sdp.media[i].simulcast_03 = undefined;\n                }\n            });\n\n            return new RTCSessionDescription({\n                type: desc.type,\n                sdp: transform.write(sdp)\n            });\n        }\n\n        // In order of highest to lowest spatial quality\n        sdp.media[idx].rids = [\n            {\n                id: SIM_LAYER_1_RID,\n                direction: 'recv'\n            },\n            {\n                id: SIM_LAYER_2_RID,\n                direction: 'recv'\n            },\n            {\n                id: SIM_LAYER_3_RID,\n                direction: 'recv'\n            }\n        ];\n\n        // Firefox 72 has stopped parsing the legacy rid= parameters in simulcast attributes.\n        // eslint-disable-next-line max-len\n        // https://www.fxsitecompat.dev/en-CA/docs/2019/pt-and-rid-in-webrtc-simulcast-attributes-are-no-longer-supported/\n        const simulcastLine = browser.isFirefox() && browser.isVersionGreaterThan(71)\n            ? `recv ${SIM_LAYER_RIDS.join(';')}`\n            : `recv rid=${SIM_LAYER_RIDS.join(';')}`;\n\n        // eslint-disable-next-line camelcase\n        sdp.media[idx].simulcast_03 = {\n            value: simulcastLine\n        };\n\n        return new RTCSessionDescription({\n            type: desc.type,\n            sdp: transform.write(sdp)\n        });\n    }\n\n    /**\n    * Adds {@link JitsiLocalTrack} to the WebRTC peerconnection for the first time.\n    * @param {JitsiLocalTrack} track - track to be added to the peerconnection.\n    * @param {boolean} isInitiator - boolean that indicates if the endpoint is offerer in a p2p connection.\n    * @returns {void}\n    */\n    addTrack(localTrack, isInitiator) {\n        const track = localTrack.getTrack();\n\n        if (isInitiator) {\n            // Use pc.addTransceiver() for the initiator case when local tracks are getting added\n            // to the peerconnection before a session-initiate is sent over to the peer.\n            const transceiverInit = {\n                direction: MediaDirection.SENDRECV,\n                streams: [ localTrack.getOriginalStream() ],\n                sendEncodings: []\n            };\n\n            if (!browser.isFirefox()) {\n                transceiverInit.sendEncodings = this._getStreamEncodings(localTrack);\n            }\n            this.pc.peerconnection.addTransceiver(track, transceiverInit);\n        } else {\n            // Use pc.addTrack() for responder case so that we can re-use the m-lines that were created\n            // when setRemoteDescription was called. pc.addTrack() automatically  attaches to any existing\n            // unused \"recv-only\" transceiver.\n            this.pc.peerconnection.addTrack(track);\n        }\n    }\n\n    /**\n     * Adds a track on the RTCRtpSender as part of the unmute operation.\n     * @param {JitsiLocalTrack} localTrack - track to be unmuted.\n     * @returns {Promise<void>} - resolved when done.\n     */\n    addTrackUnmute(localTrack) {\n        const mediaType = localTrack.getType();\n        const track = localTrack.getTrack();\n        const transceiver = this._findTransceiver(mediaType);\n\n        if (!transceiver) {\n            return Promise.reject(new Error(`RTCRtpTransceiver for ${mediaType} not found`));\n        }\n        logger.debug(`${this.pc} Adding ${localTrack}`);\n\n        return transceiver.sender.replaceTrack(track);\n    }\n\n    /**\n     * Obtains the current local video track's height constraints based on the\n     * initial stream encodings configuration on the sender and the resolution\n     * of the current local track added to the peerconnection.\n     * @param {MediaStreamTrack} localTrack local video track\n     * @returns {Array[number]} an array containing the resolution heights of\n     * simulcast streams configured on the video sender.\n     */\n    getLocalStreamHeightConstraints(localTrack) {\n        // React-native hasn't implemented MediaStreamTrack getSettings yet.\n        if (browser.isReactNative()) {\n            return null;\n        }\n\n        const localVideoHeightConstraints = [];\n\n        // Firefox doesn't return the height of the desktop track, assume a min. height of 720.\n        const { height = 720 } = localTrack.getSettings();\n\n        for (const encoding of this.localStreamEncodingsConfig) {\n            localVideoHeightConstraints.push(height / encoding.scaleResolutionDownBy);\n        }\n\n        return localVideoHeightConstraints;\n    }\n\n    /**\n     * Removes the track from the RTCRtpSender as part of the mute operation.\n     * @param {JitsiLocalTrack} localTrack - track to be removed.\n     * @returns {Promise<void>} - resolved when done.\n     */\n    removeTrackMute(localTrack) {\n        const mediaType = localTrack.getType();\n        const transceiver = this._findTransceiver(mediaType, localTrack);\n\n        if (!transceiver) {\n            return Promise.reject(new Error(`RTCRtpTransceiver for ${mediaType} not found`));\n        }\n\n        logger.debug(`${this.pc} Removing ${localTrack}`);\n\n        return transceiver.sender.replaceTrack(null);\n    }\n\n    /**\n     * Replaces the existing track on a RTCRtpSender with the given track.\n     * @param {JitsiLocalTrack} oldTrack - existing track on the sender that needs to be removed.\n     * @param {JitsiLocalTrack} newTrack - new track that needs to be added to the sender.\n     * @returns {Promise<void>} - resolved when done.\n     */\n    replaceTrack(oldTrack, newTrack) {\n        if (oldTrack && newTrack) {\n            const mediaType = newTrack.getType();\n            const stream = newTrack.getOriginalStream();\n\n            // Ignore cases when the track is replaced while the device is in a muted state,like\n            // replacing camera when video muted or replacing mic when audio muted. These JitsiLocalTracks\n            // do not have a mediastream attached. Replace track will be called again when the device is\n            // unmuted and the track will be replaced on the peerconnection then.\n            if (!stream) {\n                this.pc.localTracks.delete(oldTrack.rtcId);\n                this.pc.localTracks.set(newTrack.rtcId, newTrack);\n\n                return Promise.resolve();\n            }\n\n            const transceiver = this._findTransceiver(mediaType, oldTrack);\n            const track = newTrack.getTrack();\n\n            if (!transceiver) {\n                return Promise.reject(new Error('replace track failed'));\n            }\n            logger.debug(`${this.pc} Replacing ${oldTrack} with ${newTrack}`);\n\n            return transceiver.sender.replaceTrack(track)\n                .then(() => {\n                    const ssrc = this.pc.localSSRCs.get(oldTrack.rtcId);\n\n                    this.pc.localTracks.delete(oldTrack.rtcId);\n                    this.pc.localSSRCs.delete(oldTrack.rtcId);\n                    this.pc._addedStreams = this.pc._addedStreams.filter(s => s !== stream);\n                    this.pc.localTracks.set(newTrack.rtcId, newTrack);\n\n                    this.pc._addedStreams.push(stream);\n                    this.pc.localSSRCs.set(newTrack.rtcId, ssrc);\n                });\n        } else if (oldTrack && !newTrack) {\n            return this.removeTrackMute(oldTrack)\n                .then(() => {\n                    const mediaType = oldTrack.getType();\n                    const transceiver = this._findTransceiver(mediaType);\n\n                    // Change the direction on the transceiver to 'recvonly' so that a 'removetrack'\n                    // is fired on the associated media stream on the remote peer.\n                    if (transceiver) {\n                        transceiver.direction = MediaDirection.RECVONLY;\n                    }\n\n                    // Remove the old track from the list of local tracks.\n                    this.pc.localTracks.delete(oldTrack.rtcId);\n                    this.pc.localSSRCs.delete(oldTrack.rtcId);\n                });\n        } else if (newTrack && !oldTrack) {\n            return this.addTrackUnmute(newTrack)\n                .then(() => {\n                    const mediaType = newTrack.getType();\n                    const transceiver = this._findTransceiver(mediaType, newTrack);\n\n                    // Change the direction on the transceiver back to 'sendrecv' so that a 'track'\n                    // event is fired on the remote peer.\n                    if (transceiver) {\n                        transceiver.direction = MediaDirection.SENDRECV;\n                    }\n\n                    // Avoid configuring the encodings on Chromium/Safari until simulcast is configured\n                    // for the newly added track using SDP munging which happens during the renegotiation.\n                    const promise = browser.usesSdpMungingForSimulcast()\n                        ? Promise.resolve()\n                        : this.setEncodings(newTrack);\n\n                    return promise\n                        .then(() => {\n                            // Add the new track to the list of local tracks.\n                            this.pc.localTracks.set(newTrack.rtcId, newTrack);\n                        });\n                });\n        }\n\n        logger.info(`${this.pc} TPCUtils.replaceTrack called with no new track and no old track`);\n\n        return Promise.resolve();\n    }\n\n    /**\n    * Enables/disables audio transmission on the peer connection. When\n    * disabled the audio transceiver direction will be set to 'inactive'\n    * which means that no data will be sent nor accepted, but\n    * the connection should be kept alive.\n    * @param {boolean} active - true to enable audio media transmission or\n    * false to disable.\n    * @returns {void}\n    */\n    setAudioTransferActive(active) {\n        this.setMediaTransferActive(MediaType.AUDIO, active);\n    }\n\n    /**\n     * Set the simulcast stream encoding properties on the RTCRtpSender.\n     * @param {JitsiLocalTrack} track - the current track in use for which\n     * the encodings are to be set.\n     * @returns {Promise<void>} - resolved when done.\n     */\n    setEncodings(track) {\n        const mediaType = track.getType();\n        const transceiver = this._findTransceiver(mediaType, track);\n        const parameters = transceiver?.sender?.getParameters();\n\n        // Resolve if the encodings are not available yet. This happens immediately after the track is added to the\n        // peerconnection on chrome in unified-plan. It is ok to ignore and not report the error here since the\n        // action that triggers 'addTrack' (like unmute) will also configure the encodings and set bitrates after that.\n        if (!parameters?.encodings?.length) {\n            return Promise.resolve();\n        }\n        parameters.encodings = this._getStreamEncodings(track);\n\n        return transceiver.sender.setParameters(parameters);\n    }\n\n    /**\n     * Enables/disables media transmission on the peerconnection by changing the direction\n     * on the transceiver for the specified media type.\n     * @param {String} mediaType - 'audio' or 'video'\n     * @param {boolean} active - true to enable media transmission or false\n     * to disable.\n     * @returns {void}\n     */\n    setMediaTransferActive(mediaType, active) {\n        const transceivers = this.pc.peerconnection.getTransceivers()\n            .filter(t => t.receiver && t.receiver.track && t.receiver.track.kind === mediaType);\n        const localTracks = this.pc.getLocalTracks(mediaType);\n\n        logger.info(`${this.pc} ${active ? 'Enabling' : 'Suspending'} ${mediaType} media transfer.`);\n        transceivers.forEach((transceiver, idx) => {\n            if (active) {\n                // The first transceiver is for the local track and only this one can be set to 'sendrecv'\n                if (idx === 0 && localTracks.length) {\n                    transceiver.direction = MediaDirection.SENDRECV;\n                } else {\n                    transceiver.direction = MediaDirection.RECVONLY;\n                }\n            } else {\n                transceiver.direction = MediaDirection.INACTIVE;\n            }\n        });\n    }\n\n    /**\n    * Enables/disables video media transmission on the peer connection. When\n    * disabled the SDP video media direction in the local SDP will be adjusted to\n    * 'inactive' which means that no data will be sent nor accepted, but\n    * the connection should be kept alive.\n    * @param {boolean} active - true to enable video media transmission or\n    * false to disable.\n    * @returns {void}\n    */\n    setVideoTransferActive(active) {\n        this.setMediaTransferActive(MediaType.VIDEO, active);\n    }\n\n    /**\n     * Ensures that the resolution of the stream encodings are consistent with the values\n     * that were configured on the RTCRtpSender when the source was added to the peerconnection.\n     * This should prevent us from overriding the default values if the browser returns\n     * erroneous values when RTCRtpSender.getParameters is used for getting the encodings info.\n     * @param {Object} parameters - the RTCRtpEncodingParameters obtained from the browser.\n     * @returns {void}\n     */\n    updateEncodingsResolution(parameters) {\n        if (!(browser.isWebKitBased() && parameters.encodings && Array.isArray(parameters.encodings))) {\n            return;\n        }\n        const allEqualEncodings\n            = encodings => encodings.every(encoding => typeof encoding.scaleResolutionDownBy !== 'undefined'\n                && encoding.scaleResolutionDownBy === encodings[0].scaleResolutionDownBy);\n\n        // Implement the workaround only when all the encodings report the same resolution.\n        if (allEqualEncodings(parameters.encodings)) {\n            parameters.encodings.forEach((encoding, idx) => {\n                encoding.scaleResolutionDownBy = this.localStreamEncodingsConfig[idx].scaleResolutionDownBy;\n            });\n        }\n    }\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * Provides statistics for the local stream.\n */\n\n/**\n * Size of the webaudio analyzer buffer.\n * @type {number}\n */\nconst WEBAUDIO_ANALYZER_FFT_SIZE = 2048;\n\n/**\n * Value of the webaudio analyzer smoothing time parameter.\n * @type {number}\n */\nconst WEBAUDIO_ANALYZER_SMOOTING_TIME = 0.8;\n\nwindow.AudioContext = window.AudioContext || window.webkitAudioContext;\n\nlet context = null;\n\nif (window.AudioContext) {\n    context = new AudioContext();\n\n    // XXX Not all browsers define a suspend method on AudioContext. As the\n    // invocation is at the (ES6 module) global execution level, it breaks the\n    // loading of the lib-jitsi-meet library in such browsers and, consequently,\n    // the loading of the very Web app that uses the lib-jitsi-meet library. For\n    // example, Google Chrome 40 on Android does not define the method but we\n    // still want to be able to load the lib-jitsi-meet library there and\n    // display a page which notifies the user that the Web app is not supported\n    // there.\n    context.suspend && context.suspend();\n}\n\n/**\n * Converts time domain data array to audio level.\n * @param samples the time domain data array.\n * @returns {number} the audio level\n */\nfunction timeDomainDataToAudioLevel(samples) {\n\n    let maxVolume = 0;\n\n    const length = samples.length;\n\n    for (let i = 0; i < length; i++) {\n        if (maxVolume < samples[i]) {\n            maxVolume = samples[i];\n        }\n    }\n\n    return parseFloat(((maxVolume - 127) / 128).toFixed(3));\n}\n\n/**\n * Animates audio level change\n * @param newLevel the new audio level\n * @param lastLevel the last audio level\n * @returns {Number} the audio level to be set\n */\nfunction animateLevel(newLevel, lastLevel) {\n    let value = 0;\n    const diff = lastLevel - newLevel;\n\n    if (diff > 0.2) {\n        value = lastLevel - 0.2;\n    } else if (diff < -0.4) {\n        value = lastLevel + 0.4;\n    } else {\n        value = newLevel;\n    }\n\n    return parseFloat(value.toFixed(3));\n}\n\n\n/**\n * <tt>LocalStatsCollector</tt> calculates statistics for the local stream.\n *\n * @param stream the local stream\n * @param interval stats refresh interval given in ms.\n * @param callback function that receives the audio levels.\n * @constructor\n */\nexport default function LocalStatsCollector(stream, interval, callback) {\n    this.stream = stream;\n    this.intervalId = null;\n    this.intervalMilis = interval;\n    this.audioLevel = 0;\n    this.callback = callback;\n}\n\n/**\n * Starts the collecting the statistics.\n */\nLocalStatsCollector.prototype.start = function() {\n    if (!LocalStatsCollector.isLocalStatsSupported()) {\n        return;\n    }\n    context.resume();\n    const analyser = context.createAnalyser();\n\n    analyser.smoothingTimeConstant = WEBAUDIO_ANALYZER_SMOOTING_TIME;\n    analyser.fftSize = WEBAUDIO_ANALYZER_FFT_SIZE;\n\n    const source = context.createMediaStreamSource(this.stream);\n\n    source.connect(analyser);\n\n    this.intervalId = setInterval(\n        () => {\n            const array = new Uint8Array(analyser.frequencyBinCount);\n\n            analyser.getByteTimeDomainData(array);\n            const audioLevel = timeDomainDataToAudioLevel(array);\n\n            // Set the audio levels always as NoAudioSignalDetection now\n            // uses audio levels from LocalStatsCollector and waits for\n            // atleast 4 secs for a no audio signal before displaying the\n            // notification on the UI.\n            this.audioLevel = animateLevel(audioLevel, this.audioLevel);\n            this.callback(this.audioLevel);\n        },\n        this.intervalMilis\n    );\n};\n\n/**\n * Stops collecting the statistics.\n */\nLocalStatsCollector.prototype.stop = function() {\n    if (this.intervalId) {\n        clearInterval(this.intervalId);\n        this.intervalId = null;\n    }\n};\n\n/**\n * Checks if the environment has the necessary conditions to support\n * collecting stats from local streams.\n *\n * @returns {boolean}\n */\nLocalStatsCollector.isLocalStatsSupported = function() {\n    return Boolean(context);\n};\n","/**\n * The transciption is on.\n *\n * @type {String}\n */\nexport const ON = 'on';\n\n/**\n * The transciption is off.\n *\n * @type {String}\n */\nexport const OFF = 'off';\n","export default {\n    /**\n     * Event triggered when the remote party signals it's receive video max frame height.\n     */\n    REMOTE_VIDEO_CONSTRAINTS_CHANGED: 'media_session.REMOTE_VIDEO_CONSTRAINTS_CHANGED'\n};\n","/* global __filename, module */\nimport EventEmitter from 'events';\nimport { getLogger } from 'jitsi-meet-logger';\n\nimport * as JitsiTrackEvents from '../../JitsiTrackEvents';\nimport * as MediaType from '../../service/RTC/MediaType';\nimport browser from '../browser';\n\nimport RTCUtils from './RTCUtils';\n\nconst logger = getLogger(__filename);\n\n/**\n * Maps our handler types to MediaStreamTrack properties.\n */\nconst trackHandler2Prop = {\n    'track_mute': 'onmute', // Not supported on FF\n    'track_unmute': 'onunmute',\n    'track_ended': 'onended'\n};\n\n/**\n * Represents a single media track (either audio or video).\n */\nexport default class JitsiTrack extends EventEmitter {\n    /* eslint-disable max-params */\n    /**\n     * Represents a single media track (either audio or video).\n     * @constructor\n     * @param conference the rtc instance\n     * @param stream the WebRTC MediaStream instance\n     * @param track the WebRTC MediaStreamTrack instance, must be part of\n     * the given <tt>stream</tt>.\n     * @param streamInactiveHandler the function that will handle\n     *        onended/oninactive events of the stream.\n     * @param trackMediaType the media type of the JitsiTrack\n     * @param videoType the VideoType for this track if any\n     */\n    constructor(\n            conference,\n            stream,\n            track,\n            streamInactiveHandler,\n            trackMediaType,\n            videoType) {\n        super();\n\n        // aliases for addListener/removeListener\n        this.addEventListener = this.addListener;\n        this.removeEventListener = this.off = this.removeListener;\n\n        /**\n         * Array with the HTML elements that are displaying the streams.\n         * @type {Array}\n         */\n        this.containers = [];\n        this.conference = conference;\n        this.audioLevel = -1;\n        this.type = trackMediaType;\n        this.track = track;\n        this.videoType = videoType;\n        this.handlers = new Map();\n\n        /**\n         * Indicates whether this JitsiTrack has been disposed. If true, this\n         * JitsiTrack is to be considered unusable and operations involving it\n         * are to fail (e.g. {@link JitsiConference#addTrack(JitsiTrack)},\n         * {@link JitsiConference#removeTrack(JitsiTrack)}).\n         * @type {boolean}\n         */\n        this.disposed = false;\n\n        /**\n         * The inactive handler which will be triggered when the underlying\n         * <tt>MediaStream</tt> ends.\n         *\n         * @private\n         * @type {Function}\n         */\n        this._streamInactiveHandler = streamInactiveHandler;\n\n        this._setStream(stream);\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     * Adds onended/oninactive handler to a MediaStream or a MediaStreamTrack.\n     * Firefox doesn't fire a inactive event on the MediaStream, instead it fires\n     * a onended event on the MediaStreamTrack.\n     * @param {Function} handler the handler\n     */\n    _addMediaStreamInactiveHandler(handler) {\n        if (browser.isFirefox()) {\n            this.track.onended = handler;\n        } else {\n            this.stream.oninactive = handler;\n        }\n    }\n\n    /**\n     * Sets handler to the WebRTC MediaStream or MediaStreamTrack object\n     * depending on the passed type.\n     * @param {string} type the type of the handler that is going to be set\n     * @param {Function} handler the handler.\n     */\n    _setHandler(type, handler) {\n        if (!trackHandler2Prop.hasOwnProperty(type)) {\n            logger.error(`Invalid handler type ${type}`);\n\n            return;\n        }\n        if (handler) {\n            this.handlers.set(type, handler);\n        } else {\n            this.handlers.delete(type);\n        }\n\n        if (this.stream) {\n            for (const track of this.stream.getTracks()) {\n                track[trackHandler2Prop[type]] = handler;\n            }\n        }\n    }\n\n    /**\n     * Unregisters all event handlers bound to the underlying media stream/track\n     * @private\n     */\n    _unregisterHandlers() {\n        if (!this.stream) {\n            logger.warn(\n                `${this}: unable to unregister handlers - no stream object`);\n\n            return;\n        }\n\n        for (const type of this.handlers.keys()) {\n            // FIXME Why only video tracks?\n            for (const videoTrack of this.stream.getVideoTracks()) {\n                videoTrack[trackHandler2Prop[type]] = undefined;\n            }\n        }\n        if (this._streamInactiveHandler) {\n            this._addMediaStreamInactiveHandler(undefined);\n        }\n    }\n\n    /**\n     * Sets the stream property of JitsiTrack object and sets all stored\n     * handlers to it.\n     *\n     * @param {MediaStream} stream the new stream.\n     * @protected\n     */\n    _setStream(stream) {\n        if (this.stream === stream) {\n            return;\n        }\n\n        this.stream = stream;\n\n        // TODO Practically, that's like the opposite of _unregisterHandlers\n        // i.e. may be abstracted into a function/method called\n        // _registerHandlers for clarity and easing the maintenance of the two\n        // pieces of source code.\n        if (this.stream) {\n            for (const type of this.handlers.keys()) {\n                this._setHandler(type, this.handlers.get(type));\n            }\n            if (this._streamInactiveHandler) {\n                this._addMediaStreamInactiveHandler(this._streamInactiveHandler);\n            }\n        }\n    }\n\n    /**\n     * Returns the video type (camera or desktop) of this track.\n     */\n    getVideoType() {\n        return this.videoType;\n    }\n\n    /**\n     * Returns the type (audio or video) of this track.\n     */\n    getType() {\n        return this.type;\n    }\n\n    /**\n     * Check if this is an audio track.\n     */\n    isAudioTrack() {\n        return this.getType() === MediaType.AUDIO;\n    }\n\n    /**\n     * Checks whether the underlying WebRTC <tt>MediaStreamTrack</tt> is muted\n     * according to it's 'muted' field status.\n     * @return {boolean} <tt>true</tt> if the underlying\n     * <tt>MediaStreamTrack</tt> is muted or <tt>false</tt> otherwise.\n     */\n    isWebRTCTrackMuted() {\n        return this.track && this.track.muted;\n    }\n\n    /**\n     * Check if this is a video track.\n     */\n    isVideoTrack() {\n        return this.getType() === MediaType.VIDEO;\n    }\n\n    /**\n     * Checks whether this is a local track.\n     * @abstract\n     * @return {boolean} 'true' if it's a local track or 'false' otherwise.\n     */\n    isLocal() {\n        throw new Error('Not implemented by subclass');\n    }\n\n    /**\n     * Check whether this is a local audio track.\n     *\n     * @return {boolean} -  true if track represents a local audio track, false otherwise.\n     */\n    isLocalAudioTrack() {\n        return this.isAudioTrack() && this.isLocal();\n    }\n\n    /**\n     * Returns the WebRTC MediaStream instance.\n     */\n    getOriginalStream() {\n        return this.stream;\n    }\n\n    /**\n     * Returns the ID of the underlying WebRTC Media Stream(if any)\n     * @returns {String|null}\n     */\n    getStreamId() {\n        return this.stream ? this.stream.id : null;\n    }\n\n    /**\n     * Return the underlying WebRTC MediaStreamTrack\n     * @returns {MediaStreamTrack}\n     */\n    getTrack() {\n        return this.track;\n    }\n\n    /**\n     * Return the underlying WebRTC MediaStreamTrack label\n     * @returns {string}\n     */\n    getTrackLabel() {\n        return this.track.label;\n    }\n\n    /**\n     * Returns the ID of the underlying WebRTC MediaStreamTrack(if any)\n     * @returns {String|null}\n     */\n    getTrackId() {\n        return this.track ? this.track.id : null;\n    }\n\n    /**\n     * Return meaningful usage label for this track depending on it's media and\n     * eventual video type.\n     * @returns {string}\n     */\n    getUsageLabel() {\n        if (this.isAudioTrack()) {\n            return 'mic';\n        }\n\n        return this.videoType ? this.videoType : 'default';\n    }\n\n    /**\n     * Eventually will trigger RTCEvents.TRACK_ATTACHED event.\n     * @param container the video/audio container to which this stream is\n     *        attached and for which event will be fired.\n     * @private\n     */\n    _maybeFireTrackAttached(container) {\n        if (this.conference && container) {\n            this.conference._onTrackAttach(this, container);\n        }\n    }\n\n    /**\n     * Attaches the MediaStream of this track to an HTML container.\n     * Adds the container to the list of containers that are displaying the\n     * track.\n     *\n     * @param container the HTML container which can be 'video' or 'audio'\n     * element.\n     *\n     * @returns {void}\n     */\n    attach(container) {\n        if (this.stream) {\n            this._onTrackAttach(container);\n            RTCUtils.attachMediaStream(container, this.stream);\n        }\n        this.containers.push(container);\n        this._maybeFireTrackAttached(container);\n        this._attachTTFMTracker(container);\n    }\n\n    /**\n     * Removes this JitsiTrack from the passed HTML container.\n     *\n     * @param container the HTML container to detach from this JitsiTrack. If\n     * <tt>null</tt> or <tt>undefined</tt>, all containers are removed. A\n     * container can be a 'video', 'audio' or 'object' HTML element instance to\n     * which this JitsiTrack is currently attached.\n     */\n    detach(container) {\n        for (let cs = this.containers, i = cs.length - 1; i >= 0; --i) {\n            const c = cs[i];\n\n            if (!container) {\n                this._onTrackDetach(c);\n                RTCUtils.attachMediaStream(c, null);\n            }\n            if (!container || c === container) {\n                cs.splice(i, 1);\n            }\n        }\n\n        if (container) {\n            this._onTrackDetach(container);\n            RTCUtils.attachMediaStream(container, null);\n        }\n    }\n\n    /**\n     * Called when the track has been attached to a new container.\n     *\n     * @param {HTMLElement} container the HTML container which can be 'video' or\n     * 'audio' element.\n     * @private\n     */\n    _onTrackAttach(container) { // eslint-disable-line no-unused-vars\n        // Should be defined by the classes that are extending JitsiTrack\n    }\n\n    /**\n     * Called when the track has been detached from a container.\n     *\n     * @param {HTMLElement} container the HTML container which can be 'video' or\n     * 'audio' element.\n     * @private\n     */\n    _onTrackDetach(container) { // eslint-disable-line no-unused-vars\n        // Should be defined by the classes that are extending JitsiTrack\n    }\n\n    /**\n     * Attach time to first media tracker only if there is conference and only\n     * for the first element.\n     *\n     * @param {HTMLElement} container the HTML container which can be 'video' or\n     * 'audio' element.\n     * @private\n     */\n    _attachTTFMTracker(container) { // eslint-disable-line no-unused-vars\n        // Should be defined by the classes that are extending JitsiTrack\n    }\n\n    /**\n     * Removes attached event listeners.\n     *\n     * @returns {Promise}\n     */\n    dispose() {\n        this.removeAllListeners();\n\n        this.disposed = true;\n\n        return Promise.resolve();\n    }\n\n    /**\n     * Returns true if this is a video track and the source of the video is a\n     * screen capture as opposed to a camera.\n     */\n    isScreenSharing() {\n        // FIXME: Should be fixed or removed.\n    }\n\n    /**\n     * Returns id of the track.\n     * @returns {string|null} id of the track or null if this is fake track.\n     */\n    getId() {\n        if (this.stream) {\n            return RTCUtils.getStreamID(this.stream);\n        }\n\n        return null;\n    }\n\n    /**\n     * Checks whether the MediaStream is active/not ended.\n     * When there is no check for active we don't have information and so\n     * will return that stream is active (in case of FF).\n     * @returns {boolean} whether MediaStream is active.\n     */\n    isActive() {\n        if (typeof this.stream.active !== 'undefined') {\n            return this.stream.active;\n        }\n\n        return true;\n    }\n\n    /**\n     * Sets the audio level for the stream\n     * @param {number} audioLevel value between 0 and 1\n     * @param {TraceablePeerConnection} [tpc] the peerconnection instance which\n     * is source for the audio level. It can be <tt>undefined</tt> for\n     * a local track if the audio level was measured outside of the\n     * peerconnection (see /modules/statistics/LocalStatsCollector.js).\n     */\n    setAudioLevel(audioLevel, tpc) {\n        let newAudioLevel = audioLevel;\n\n        // When using getSynchornizationSources on the audio receiver to gather audio levels for\n        // remote tracks, browser reports last known audio levels even when the remote user is\n        // audio muted, we need to reset the value to zero here so that the audio levels are cleared.\n        // Remote tracks have the tpc info present while local tracks do not.\n        if (browser.supportsReceiverStats() && typeof tpc !== 'undefined' && this.isMuted()) {\n            newAudioLevel = 0;\n        }\n\n        if (this.audioLevel !== newAudioLevel) {\n            this.audioLevel = newAudioLevel;\n            this.emit(\n                JitsiTrackEvents.TRACK_AUDIO_LEVEL_CHANGED,\n                newAudioLevel,\n                tpc);\n\n        // LocalStatsCollector reports a value of 0.008 for muted mics\n        // and a value of 0 when there is no audio input.\n        } else if (this.audioLevel === 0\n            && newAudioLevel === 0\n            && this.isLocal()\n            && !this.isWebRTCTrackMuted()) {\n            this.emit(\n                JitsiTrackEvents.NO_AUDIO_INPUT,\n                newAudioLevel);\n        }\n    }\n\n    /**\n     * Returns the msid of the stream attached to the JitsiTrack object or null\n     * if no stream is attached.\n     */\n    getMSID() {\n        const streamId = this.getStreamId();\n        const trackId = this.getTrackId();\n\n        return streamId && trackId ? `${streamId} ${trackId}` : null;\n    }\n\n    /**\n     * Sets new audio output device for track's DOM elements. Video tracks are\n     * ignored.\n     * @param {string} audioOutputDeviceId - id of 'audiooutput' device from\n     *      navigator.mediaDevices.enumerateDevices(), '' for default device\n     * @emits JitsiTrackEvents.TRACK_AUDIO_OUTPUT_CHANGED\n     * @returns {Promise}\n     */\n    setAudioOutput(audioOutputDeviceId) {\n        if (!RTCUtils.isDeviceChangeAvailable('output')) {\n            return Promise.reject(\n                new Error('Audio output device change is not supported'));\n        }\n\n        // All audio communication is done through audio tracks, so ignore\n        // changing audio output for video tracks at all.\n        if (this.isVideoTrack()) {\n            return Promise.resolve();\n        }\n\n        return (\n            Promise.all(\n                this.containers.map(\n                    element =>\n                        element.setSinkId(audioOutputDeviceId)\n                            .catch(error => {\n                                logger.warn(\n                                    'Failed to change audio output device on'\n                                        + ' element. Default or previously set'\n                                        + ' audio output device will be used.',\n                                    element,\n                                    error);\n                                throw error;\n                            }))\n            )\n                .then(() => {\n                    this.emit(\n                        JitsiTrackEvents.TRACK_AUDIO_OUTPUT_CHANGED,\n                        audioOutputDeviceId);\n                }));\n    }\n}\n","const Resolutions = {\n    '2160': {\n        width: 3840,\n        height: 2160\n    },\n    '4k': {\n        width: 3840,\n        height: 2160\n    },\n    '1080': {\n        width: 1920,\n        height: 1080\n    },\n    'fullhd': {\n        width: 1920,\n        height: 1080\n    },\n    '720': {\n        width: 1280,\n        height: 720\n    },\n    'hd': {\n        width: 1280,\n        height: 720\n    },\n    '540': {\n        width: 960,\n        height: 540\n    },\n    'qhd': {\n        width: 960,\n        height: 540\n    },\n    '480': {\n        width: 640,\n        height: 480\n    },\n    'vga': {\n        width: 640,\n        height: 480\n    },\n    '360': {\n        width: 640,\n        height: 360\n    },\n    '240': {\n        width: 320,\n        height: 240\n    },\n    '180': {\n        width: 320,\n        height: 180\n    }\n};\n\nmodule.exports = Resolutions;\n","import EventEmitter from 'events';\n\nimport RTC from '../RTC/RTC';\nimport { createAudioContext } from '../webaudio/WebAudioUtils';\n\nimport { VAD_SCORE_PUBLISHED } from './DetectionEvents';\n\n/**\n * Connects an audio JitsiLocalTrack to a vadProcessor using WebAudio ScriptProcessorNode.\n * Once an object is created audio from the local track flows through the ScriptProcessorNode as raw PCM.\n * The PCM is processed by the injected vad module and a voice activity detection score is obtained, the\n * score is published to consumers via an EventEmitter.\n * After work is done with this service the destroy method needs to be called for a proper cleanup.\n *\n * @fires VAD_SCORE_PUBLISHED\n */\nexport default class TrackVADEmitter extends EventEmitter {\n    /**\n     * Constructor.\n     *\n     * @param {number} procNodeSampleRate - Sample rate of the ScriptProcessorNode. Possible values  256, 512, 1024,\n     *  2048, 4096, 8192, 16384. Passing other values will default to closes neighbor.\n     * @param {Object} vadProcessor - VAD processor that allows us to calculate VAD score for PCM samples.\n     * @param {JitsiLocalTrack} jitsiLocalTrack - JitsiLocalTrack corresponding to micDeviceId.\n     */\n    constructor(procNodeSampleRate, vadProcessor, jitsiLocalTrack) {\n        super();\n\n        /**\n         * Sample rate of the ScriptProcessorNode.\n         */\n        this._procNodeSampleRate = procNodeSampleRate;\n\n        /**\n         * VAD Processor that allows us to calculate VAD score for PCM samples\n         */\n        this._vadProcessor = vadProcessor;\n\n        /**\n         * The JitsiLocalTrack instance.\n         */\n        this._localTrack = jitsiLocalTrack;\n\n        /**\n         * Buffer to hold residue PCM resulting after a ScriptProcessorNode callback\n         */\n        this._bufferResidue = new Float32Array([]);\n\n        /**\n         * The AudioContext instance with the preferred sample frequency.\n         */\n        this._audioContext = createAudioContext({ sampleRate: vadProcessor.getRequiredPCMFrequency() });\n\n        /**\n         * PCM Sample size expected by the VAD Processor instance. We cache it here as this value is used extensively,\n         * saves a couple of function calls.\n         */\n        this._vadSampleSize = vadProcessor.getSampleLength();\n\n        /**\n         * Event listener function that will be called by the ScriptProcessNode with raw PCM data, depending on the set\n         * sample rate.\n         */\n        this._onAudioProcess = this._onAudioProcess.bind(this);\n\n        this._initializeAudioContext();\n    }\n\n    /**\n     * Factory method that sets up all the necessary components for the creation of the TrackVADEmitter.\n     *\n     * @param {string} micDeviceId - Target microphone device id.\n     * @param {number} procNodeSampleRate - Sample rate of the proc node.\n     * @param {Object} vadProcessor -Module that calculates the voice activity score for a certain audio PCM sample.\n     * The processor needs to implement the following functions:\n     * - <tt>getSampleLength()</tt> - Returns the sample size accepted by getSampleLength.\n     * - <tt>getRequiredPCMFrequency()</tt> - Returns the PCM frequency at which the processor operates.\n     * - <tt>calculateAudioFrameVAD(pcmSample)</tt> - Process a 32 float pcm sample of getSampleLength size.\n     * @returns {Promise<TrackVADEmitter>} - Promise resolving in a new instance of TrackVADEmitter.\n     */\n    static create(micDeviceId, procNodeSampleRate, vadProcessor) {\n        return RTC.obtainAudioAndVideoPermissions({\n            devices: [ 'audio' ],\n            micDeviceId\n        }).then(localTrack => {\n            // We only expect one audio track when specifying a device id.\n            if (!localTrack[0]) {\n                throw new Error(`Failed to create jitsi local track for device id: ${micDeviceId}`);\n            }\n\n            return new TrackVADEmitter(procNodeSampleRate, vadProcessor, localTrack[0]);\n\n            // We have no exception handling at this point as there is nothing to clean up, the vadProcessor\n            // life cycle is handled by whoever created this instance.\n        });\n    }\n\n    /**\n     * Sets up the audio graph in the AudioContext.\n     *\n     * @returns {void}\n     */\n    _initializeAudioContext() {\n        this._audioSource = this._audioContext.createMediaStreamSource(this._localTrack.stream);\n\n        // TODO AudioProcessingNode is deprecated in the web audio specifications and the recommended replacement\n        // is audio worklet, however at the point of implementation AudioProcessingNode was still de de facto way\n        // of achieving this functionality and supported in all major browsers as opposed to audio worklet which\n        // was only available in Chrome. This todo is just a reminder that we should replace AudioProcessingNode\n        // with audio worklet when it's mature enough and has more browser support.\n        // We don't need stereo for determining the VAD score so we create a single channel processing node.\n        this._audioProcessingNode = this._audioContext.createScriptProcessor(this._procNodeSampleRate, 1, 1);\n    }\n\n    /**\n     * ScriptProcessorNode callback, the input parameters contains the PCM audio that is then sent to rnnoise.\n     * Rnnoise only accepts PCM samples of 480 bytes whereas the webaudio processor node can't sample at a multiple\n     * of 480 thus after each _onAudioProcess callback there will remain and PCM buffer residue equal\n     * to _procNodeSampleRate / 480 which will be added to the next sample buffer and so on.\\\n     *\n     *\n     * @param {AudioProcessingEvent} audioEvent - Audio event.\n     * @returns {void}\n     * @fires VAD_SCORE_PUBLISHED\n     */\n    _onAudioProcess(audioEvent) {\n        // Prepend the residue PCM buffer from the previous process callback.\n        const inData = audioEvent.inputBuffer.getChannelData(0);\n        const completeInData = [ ...this._bufferResidue, ...inData ];\n        const sampleTimestamp = Date.now();\n\n        let i = 0;\n\n        for (; i + this._vadSampleSize < completeInData.length; i += this._vadSampleSize) {\n            const pcmSample = completeInData.slice(i, i + this._vadSampleSize);\n\n            // The VAD processor might change the values inside the array so we make a copy.\n            const vadScore = this._vadProcessor.calculateAudioFrameVAD(pcmSample.slice());\n\n            this.emit(VAD_SCORE_PUBLISHED, {\n                timestamp: sampleTimestamp,\n                score: vadScore,\n                pcmData: pcmSample,\n                deviceId: this._localTrack.getDeviceId()\n            });\n        }\n\n        this._bufferResidue = completeInData.slice(i, completeInData.length);\n    }\n\n    /**\n     * Connects the nodes in the AudioContext to start the flow of audio data.\n     *\n     * @returns {void}\n     */\n    _connectAudioGraph() {\n        this._audioProcessingNode.onaudioprocess = this._onAudioProcess;\n        this._audioSource.connect(this._audioProcessingNode);\n        this._audioProcessingNode.connect(this._audioContext.destination);\n    }\n\n    /**\n     * Disconnects the nodes in the AudioContext.\n     *\n     * @returns {void}\n     */\n    _disconnectAudioGraph() {\n        // Even thought we disconnect the processing node it seems that some callbacks remain queued,\n        // resulting in calls with and uninitialized context.\n        // eslint-disable-next-line no-empty-function\n        this._audioProcessingNode.onaudioprocess = () => {};\n        this._audioProcessingNode.disconnect();\n        this._audioSource.disconnect();\n    }\n\n    /**\n     * Cleanup potentially acquired resources.\n     *\n     * @returns {void}\n     */\n    _cleanupResources() {\n        this._disconnectAudioGraph();\n        this._localTrack.stopStream();\n    }\n\n    /**\n     * Get the associated track device ID.\n     *\n     * @returns {string}\n     */\n    getDeviceId() {\n        return this._localTrack.getDeviceId();\n    }\n\n\n    /**\n     * Get the associated track label.\n     *\n     * @returns {string}\n     */\n    getTrackLabel() {\n        return this._localTrack.getDeviceLabel();\n    }\n\n    /**\n     * Start the emitter by connecting the audio graph.\n     *\n     * @returns {void}\n     */\n    start() {\n        this._connectAudioGraph();\n    }\n\n    /**\n     * Stops the emitter by disconnecting the audio graph.\n     *\n     * @returns {void}\n     */\n    stop() {\n        this._disconnectAudioGraph();\n        this._bufferResidue = [];\n    }\n\n    /**\n     * Destroy TrackVADEmitter instance (release resources and stop callbacks).\n     *\n     * @returns {void}\n     */\n    destroy() {\n        if (this._destroyed) {\n            return;\n        }\n\n        this._cleanupResources();\n        this._destroyed = true;\n    }\n}\n","/**\n * Adapter that creates AudioContext objects depending on the browser.\n *\n * @returns {AudioContext} - Return a new AudioContext or undefined if the browser does not support it.\n */\nexport function createAudioContext(options) {\n    const AudioContextImpl = window.AudioContext || window.webkitAudioContext;\n\n    if (!AudioContextImpl) {\n        return undefined;\n    }\n\n    return new AudioContextImpl(options);\n}\n","/**\n * Indicates that the end-to-end round-trip-time for a participant has changed.\n */\nexport const E2E_RTT_CHANGED = 'e2eping.e2e_rtt_changed';\n","/**\n * A model for keeping track of each user's total\n * time as a dominant speaker. The model also\n * keeps track of the user's last known name\n * in case the user has left the meeting,\n * which is also tracked.\n */\nclass SpeakerStats {\n    /**\n     * Initializes a new SpeakerStats instance.\n     *\n     * @constructor\n     * @param {string} userId - The id of the user being tracked.\n     * @param {string} displayName - The name of the user being tracked.\n     * @param {boolean} isLocalStats - True if the stats model tracks\n     * the local user.\n     * @returns {void}\n     */\n    constructor(userId, displayName, isLocalStats) {\n        this._userId = userId;\n        this.setDisplayName(displayName);\n        this._isLocalStats = isLocalStats || false;\n        this.setDominantSpeaker(false);\n        this.totalDominantSpeakerTime = 0;\n        this._dominantSpeakerStart = 0;\n        this._hasLeft = false;\n    }\n\n    /**\n     * Get the user id being tracked.\n     *\n     * @returns {string} The user id.\n     */\n    getUserId() {\n        return this._userId;\n    }\n\n    /**\n     * Get the name of the user being tracked.\n     *\n     * @returns {string} The user name.\n     */\n    getDisplayName() {\n        return this.displayName;\n    }\n\n    /**\n     * Updates the last known name of the user being tracked.\n     *\n     * @param {string} - The user name.\n     * @returns {void}\n     */\n    setDisplayName(newName) {\n        this.displayName = newName;\n    }\n\n    /**\n     * Returns true if the stats are tracking the local user.\n     *\n     * @returns {boolean}\n     */\n    isLocalStats() {\n        return this._isLocalStats;\n    }\n\n    /**\n     * Returns true if the tracked user is currently a dominant speaker.\n     *\n     * @returns {boolean}\n     */\n    isDominantSpeaker() {\n        return this._dominantSpeakerStart > 0;\n    }\n\n    /**\n     * Returns true if the tracked user is currently a dominant speaker.\n     *\n     * @param {boolean} - If true, the user will being accumulating time\n     * as dominant speaker. If false, the user will not accumulate time\n     * and will record any time accumulated since starting as dominant speaker.\n     * @returns {void}\n     */\n    setDominantSpeaker(isNowDominantSpeaker) {\n        if (!this.isDominantSpeaker() && isNowDominantSpeaker) {\n            this._dominantSpeakerStart = Date.now();\n        } else if (this.isDominantSpeaker() && !isNowDominantSpeaker) {\n            const now = Date.now();\n            const timeElapsed = now - this._dominantSpeakerStart;\n\n            this.totalDominantSpeakerTime += timeElapsed;\n            this._dominantSpeakerStart = 0;\n        }\n    }\n\n    /**\n     * Get how long the tracked user has been dominant speaker.\n     *\n     * @returns {number} - The speaker time in milliseconds.\n     */\n    getTotalDominantSpeakerTime() {\n        let total = this.totalDominantSpeakerTime;\n\n        if (this.isDominantSpeaker()) {\n            total += Date.now() - this._dominantSpeakerStart;\n        }\n\n        return total;\n    }\n\n    /**\n     * Get whether or not the user is still in the meeting.\n     *\n     * @returns {boolean} True if the user is no longer in the meeting.\n     */\n    hasLeft() {\n        return this._hasLeft;\n    }\n\n    /**\n     * Set the user as having left the meeting.\n     *\n     * @returns {void}\n     */\n    markAsHasLeft() {\n        this._hasLeft = true;\n        this.setDominantSpeaker(false);\n    }\n}\n\nmodule.exports = SpeakerStats;\n","import EventEmitter from 'events';\n\nimport * as JitsiMediaDevicesEvents from './JitsiMediaDevicesEvents';\nimport RTC from './modules/RTC/RTC';\nimport browser from './modules/browser';\nimport Statistics from './modules/statistics/statistics';\nimport * as MediaType from './service/RTC/MediaType';\nimport RTCEvents from './service/RTC/RTCEvents';\n\nconst AUDIO_PERMISSION_NAME = 'microphone';\nconst PERMISSION_GRANTED_STATUS = 'granted';\nconst VIDEO_PERMISSION_NAME = 'camera';\n\n/**\n * Media devices utilities for Jitsi.\n */\nclass JitsiMediaDevices {\n    /**\n     * Initializes a {@code JitsiMediaDevices} object. There will be a single\n     * instance of this class.\n     */\n    constructor() {\n        this._eventEmitter = new EventEmitter();\n        this._permissions = {};\n\n        RTC.addListener(\n            RTCEvents.DEVICE_LIST_CHANGED,\n            devices =>\n                this._eventEmitter.emit(\n                    JitsiMediaDevicesEvents.DEVICE_LIST_CHANGED,\n                    devices));\n        RTC.addListener(\n            RTCEvents.DEVICE_LIST_AVAILABLE,\n            devices =>\n                this._logOutputDevice(\n                    this.getAudioOutputDevice(),\n                    devices));\n\n        // We would still want to update the permissions cache in case the permissions API is not supported.\n        RTC.addListener(\n            RTCEvents.PERMISSIONS_CHANGED,\n            permissions => this._handlePermissionsChange(permissions));\n\n        // Test if the W3C Permissions API is implemented and the 'camera' and 'microphone' permissions are\n        // implemented. If supported add onchange listeners.\n        this._permissionsApiSupported = new Promise(resolve => {\n            if (!navigator.permissions) {\n                resolve(false);\n\n                return;\n            }\n\n            const self = this;\n\n            const promises = [];\n\n            promises.push(navigator.permissions.query({ name: VIDEO_PERMISSION_NAME })\n                .then(status => {\n                    this._handlePermissionsChange({\n                        [MediaType.VIDEO]: this._parsePermissionState(status)\n                    });\n                    status.onchange = function() {\n                        try {\n                            self._handlePermissionsChange({\n                                [MediaType.VIDEO]: self._parsePermissionState(this)\n                            });\n                        } catch (error) {\n                            // Nothing to do.\n                        }\n                    };\n\n                    return true;\n                })\n                .catch(() => false));\n\n            promises.push(navigator.permissions.query({ name: AUDIO_PERMISSION_NAME })\n                .then(status => {\n                    this._handlePermissionsChange({\n                        [MediaType.AUDIO]: this._parsePermissionState(status)\n                    });\n                    status.onchange = function() {\n                        try {\n                            self._handlePermissionsChange({\n                                [MediaType.AUDIO]: self._parsePermissionState(this)\n                            });\n                        } catch (error) {\n                            // Nothing to do.\n                        }\n                    };\n\n                    return true;\n                })\n                .catch(() => false));\n\n            Promise.all(promises).then(results => resolve(results.every(supported => supported)));\n\n        });\n    }\n\n\n    /**\n     * Parses a PermissionState object and returns true for granted and false otherwise.\n     *\n     * @param {PermissionState} permissionStatus - The PermissionState object retrieved from the Permissions API.\n     * @returns {boolean} - True for granted and false for denied.\n     * @throws {TypeError}\n     */\n    _parsePermissionState(permissionStatus = {}) {\n        // The status attribute is deprecated, and state\n        // should be used instead, but check both for now\n        // for backwards compatibility.\n        const status = permissionStatus.state || permissionStatus.status;\n\n        if (typeof status !== 'string') {\n            throw new TypeError();\n        }\n\n        return status === PERMISSION_GRANTED_STATUS;\n    }\n\n    /**\n     * Updates the local granted/denied permissions cache. A permissions might be\n     * granted, denied, or undefined. This is represented by having its media\n     * type key set to {@code true} or {@code false} respectively.\n     *\n     * @param {Object} permissions - Object with the permissions.\n     */\n    _handlePermissionsChange(permissions) {\n        const hasPermissionsChanged\n            = [ MediaType.AUDIO, MediaType.VIDEO ]\n                .some(type => type in permissions && permissions[type] !== this._permissions[type]);\n\n        if (hasPermissionsChanged) {\n            this._permissions = {\n                ...this._permissions,\n                ...permissions\n            };\n            this._eventEmitter.emit(JitsiMediaDevicesEvents.PERMISSIONS_CHANGED, this._permissions);\n\n            if (this._permissions[MediaType.AUDIO] || this._permissions[MediaType.VIDEO]) {\n                // Triggering device list update when the permissiions are granted in order to update\n                // the labels the devices.\n                // eslint-disable-next-line no-empty-function\n                this.enumerateDevices(() => {});\n            }\n        }\n    }\n\n    /**\n     * Gathers data and sends it to statistics.\n     * @param deviceID the device id to log\n     * @param devices list of devices\n     */\n    _logOutputDevice(deviceID, devices) {\n        const device\n            = devices.find(\n                d => d.kind === 'audiooutput' && d.deviceId === deviceID);\n\n        if (device) {\n            Statistics.sendActiveDeviceListEvent(\n                RTC.getEventDataForActiveDevice(device));\n        }\n    }\n\n    /**\n     * Executes callback with list of media devices connected.\n     * @param {function} callback\n     */\n    enumerateDevices(callback) {\n        RTC.enumerateDevices(callback);\n    }\n\n    /**\n     * Checks if its possible to enumerate available cameras/micropones.\n     * @returns {Promise<boolean>} a Promise which will be resolved only once\n     * the WebRTC stack is ready, either with true if the device listing is\n     * available available or with false otherwise.\n     */\n    isDeviceListAvailable() {\n        return RTC.isDeviceListAvailable();\n    }\n\n    /**\n     * Returns true if changing the input (camera / microphone) or output\n     * (audio) device is supported and false if not.\n     * @param {string} [deviceType] - type of device to change. Default is\n     *      undefined or 'input', 'output' - for audio output device change.\n     * @returns {boolean} true if available, false otherwise.\n     */\n    isDeviceChangeAvailable(deviceType) {\n        return RTC.isDeviceChangeAvailable(deviceType);\n    }\n\n    /**\n     * Checks if the permission for the given device was granted.\n     *\n     * @param {'audio'|'video'} [type] - type of devices to check,\n     *      undefined stands for both 'audio' and 'video' together\n     * @returns {Promise<boolean>}\n     */\n    isDevicePermissionGranted(type) {\n        return new Promise(resolve => {\n            // Shortcut: first check if we already know the permission was\n            // granted.\n            if (type in this._permissions) {\n                resolve(this._permissions[type]);\n\n                return;\n            }\n\n            // Check using the Permissions API.\n            this._permissionsApiSupported.then(supported => {\n                if (!supported) {\n                    resolve(false);\n\n                    return;\n                }\n\n                const promises = [];\n\n                switch (type) {\n                case MediaType.VIDEO:\n                    promises.push(\n                        navigator.permissions.query({\n                            name: VIDEO_PERMISSION_NAME\n                        }));\n                    break;\n                case MediaType.AUDIO:\n                    promises.push(\n                        navigator.permissions.query({\n                            name: AUDIO_PERMISSION_NAME\n                        }));\n                    break;\n                default:\n                    promises.push(\n                        navigator.permissions.query({\n                            name: VIDEO_PERMISSION_NAME\n                        }));\n                    promises.push(\n                        navigator.permissions.query({\n                            name: AUDIO_PERMISSION_NAME\n                        }));\n                }\n\n                Promise.all(promises).then(\n                    results => resolve(results.every(permissionStatus => {\n                        try {\n                            return this._parsePermissionState(permissionStatus);\n                        } catch {\n                            return false;\n                        }\n                    })),\n                    () => resolve(false)\n                );\n            });\n        });\n    }\n\n    /**\n     * Returns true if it is possible to be simultaneously capturing audio\n     * from more than one device.\n     *\n     * @returns {boolean}\n     */\n    isMultipleAudioInputSupported() {\n        return !browser.isFirefox();\n    }\n\n    /**\n     * Returns currently used audio output device id, 'default' stands\n     * for default device\n     * @returns {string}\n     */\n    getAudioOutputDevice() {\n        return RTC.getAudioOutputDevice();\n    }\n\n    /**\n     * Sets current audio output device.\n     * @param {string} deviceId - id of 'audiooutput' device from\n     *      navigator.mediaDevices.enumerateDevices(), 'default' is for\n     *      default device\n     * @returns {Promise} - resolves when audio output is changed, is rejected\n     *      otherwise\n     */\n    setAudioOutputDevice(deviceId) {\n        const availableDevices = RTC.getCurrentlyAvailableMediaDevices();\n\n        if (availableDevices.length > 0) {\n            // if we have devices info report device to stats\n            // normally this will not happen on startup as this method is called\n            // too early. This will happen only on user selection of new device\n            this._logOutputDevice(\n                deviceId, RTC.getCurrentlyAvailableMediaDevices());\n        }\n\n        return RTC.setAudioOutputDevice(deviceId);\n    }\n\n    /**\n     * Adds an event handler.\n     * @param {string} event - event name\n     * @param {function} handler - event handler\n     */\n    addEventListener(event, handler) {\n        this._eventEmitter.addListener(event, handler);\n    }\n\n    /**\n     * Removes event handler.\n     * @param {string} event - event name\n     * @param {function} handler - event handler\n     */\n    removeEventListener(event, handler) {\n        this._eventEmitter.removeListener(event, handler);\n    }\n\n    /**\n     * Emits an event.\n     * @param {string} event - event name\n     */\n    emitEvent(event, ...args) {\n        this._eventEmitter.emit(event, ...args);\n    }\n}\n\nexport default new JitsiMediaDevices();\n","const AuthenticationEvents = {\n    /**\n     * Event callback arguments:\n     * function(authenticationEnabled, userIdentity)\n     * authenticationEnabled - indicates whether authentication has been enabled\n     *                         in this session\n     * userIdentity - if user has been logged in then it contains user name. If\n     *                contains 'null' or 'undefined' then user is not logged in.\n     */\n    IDENTITY_UPDATED: 'authentication.identity_updated'\n};\n\nmodule.exports = AuthenticationEvents;\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n","/**\n * Derives a set of keys from the master key.\n * @param {CryptoKey} material - master key to derive from\n *\n * See https://tools.ietf.org/html/draft-omara-sframe-00#section-4.3.1\n */\nexport async function deriveKeys(material) {\n    const info = new ArrayBuffer();\n    const textEncoder = new TextEncoder();\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/deriveKey#HKDF\n    // https://developer.mozilla.org/en-US/docs/Web/API/HkdfParams\n    const encryptionKey = await crypto.subtle.deriveKey({\n        name: 'HKDF',\n        salt: textEncoder.encode('JFrameEncryptionKey'),\n        hash: 'SHA-256',\n        info\n    }, material, {\n        name: 'AES-GCM',\n        length: 128\n    }, false, [ 'encrypt', 'decrypt' ]);\n\n    return {\n        material,\n        encryptionKey\n    };\n}\n\n/**\n * Ratchets a key. See\n * https://tools.ietf.org/html/draft-omara-sframe-00#section-4.3.5.1\n * @param {CryptoKey} material - base key material\n * @returns {ArrayBuffer} - ratcheted key material\n */\nexport async function ratchet(material) {\n    const textEncoder = new TextEncoder();\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/deriveBits\n    return crypto.subtle.deriveBits({\n        name: 'HKDF',\n        salt: textEncoder.encode('JFrameRatchetKey'),\n        hash: 'SHA-256',\n        info: new ArrayBuffer()\n    }, material, 256);\n}\n\n/**\n * Converts a raw key into a WebCrypto key object with default options\n * suitable for our usage.\n * @param {ArrayBuffer} keyBytes - raw key\n * @param {Array} keyUsages - key usages, see importKey documentation\n * @returns {CryptoKey} - the WebCrypto key.\n */\nexport async function importKey(keyBytes) {\n    // https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/importKey\n    return crypto.subtle.importKey('raw', keyBytes, 'HKDF', false, [ 'deriveBits', 'deriveKey' ]);\n}\n","/* global $ */\n\nimport { b64_sha1, Strophe } from 'strophe.js'; // eslint-disable-line camelcase\n\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\nimport Listenable from '../util/Listenable';\n\n/**\n * The property\n */\nconst IDENTITY_PROPERTIES = [ 'category', 'type', 'lang', 'name' ];\nconst IDENTITY_PROPERTIES_FOR_COMPARE = [ 'category', 'type', 'lang' ];\nconst HASH = 'sha-1';\n\n/**\n *\n * @param a\n * @param b\n */\nfunction compareIdentities(a, b) {\n    let res = 0;\n\n    IDENTITY_PROPERTIES_FOR_COMPARE.some(key =>\n        (res = ((a[key] > b[key]) && 1) || ((a[key] < b[key]) && -1)) !== 0\n    );\n\n    return res;\n}\n\n/**\n * Produces a sha-1 from provided identity and features values.\n *\n * @param {Array<Object>} identities - The identity objects.\n * @param {Array<string>} features - The features.\n * @returns {string}\n */\nfunction generateSha(identities, features) {\n    const sortedIdentities = identities.sort(compareIdentities).reduce(\n        (accumulatedValue, identity) => `${\n            IDENTITY_PROPERTIES.reduce(\n                (tmp, key, idx) =>\n                    tmp\n                        + (idx === 0 ? '' : '/')\n                        + (identity[key] ? identity[key] : ''),\n                '')\n        }<`, '');\n    const sortedFeatures = features.sort().reduce(\n        (tmp, feature) => `${tmp + feature}<`, '');\n\n    return b64_sha1(sortedIdentities + sortedFeatures);\n}\n\n/**\n * Parses the disco-info node and returns the sets of features and identities.\n * @param {String} node The node with results to parse.\n * @returns {{features: Set<any>, identities: Set<any>}}\n */\nexport function parseDiscoInfo(node) {\n    const features = new Set();\n    const identities = new Set();\n\n    $(node).find('>query>feature')\n        .each((_, el) => features.add(el.getAttribute('var')));\n    $(node).find('>query>identity')\n        .each((_, el) => identities.add({\n            type: el.getAttribute('type'),\n            name: el.getAttribute('name'),\n            category: el.getAttribute('category')\n        }));\n\n    return {\n        features,\n        identities\n    };\n}\n\n/**\n * Implements xep-0115 ( http://xmpp.org/extensions/xep-0115.html )\n */\nexport default class Caps extends Listenable {\n    /**\n     * Constructs new Caps instance.\n     * @param {Strophe.Connection} connection the strophe connection object\n     * @param {String} node the value of the node attribute of the \"c\" xml node\n     * that will be sent to the other participants\n     */\n    constructor(connection = {}, node = 'http://jitsi.org/jitsimeet') {\n        super();\n        this.node = node;\n        this.disco = connection.disco;\n        if (!this.disco) {\n            throw new Error(\n                'Missing strophe-plugins '\n                + '(disco plugin is required)!');\n        }\n\n        this.version = '';\n        this.rooms = new Set();\n\n        // We keep track of features added outside the library and we publish them\n        // in the presence of the participant for simplicity, avoiding the disco info request-response.\n        this.externalFeatures = new Set();\n\n        const emuc = connection.emuc;\n\n        emuc.addListener(XMPPEvents.EMUC_ROOM_ADDED,\n            room => this._addChatRoom(room));\n        emuc.addListener(XMPPEvents.EMUC_ROOM_REMOVED,\n            room => this._removeChatRoom(room));\n        Object.keys(emuc.rooms).forEach(jid => {\n            this._addChatRoom(emuc.rooms[jid]);\n        });\n\n        Strophe.addNamespace('CAPS', 'http://jabber.org/protocol/caps');\n        this.disco.addFeature(Strophe.NS.CAPS);\n    }\n\n    /**\n     * Adds new feature to the list of supported features for the local\n     * participant\n     * @param {String} feature the name of the feature.\n     * @param {boolean} submit if true - new presence with updated \"c\" node\n     * will be sent.\n     * @param {boolean} external whether this feature was added externally to the library.\n     * We put features used directly by the clients (is jibri, remote-control enabled etc.) in the presence\n     * to avoid additional disco-info queries by those clients.\n     */\n    addFeature(feature, submit = false, external = false) {\n        this.disco.addFeature(feature);\n        this._generateVersion();\n\n        if (external && !this.externalFeatures.has(feature)) {\n            this.externalFeatures.add(feature);\n            this.rooms.forEach(room => this._updateRoomWithExternalFeatures(room));\n        }\n\n        if (submit) {\n            this.submit();\n        }\n    }\n\n    /**\n     * Removes a feature from the list of supported features for the local\n     * participant\n     * @param {String} feature the name of the feature.\n     * @param {boolean} submit if true - new presence with updated \"c\" node\n     * will be sent.\n     * @param {boolean} external whether this feature was added externally to the library.\n     */\n    removeFeature(feature, submit = false, external = false) {\n        this.disco.removeFeature(feature);\n        this._generateVersion();\n\n        if (external && this.externalFeatures.has(feature)) {\n            this.externalFeatures.delete(feature);\n            this.rooms.forEach(room => this._updateRoomWithExternalFeatures(room));\n        }\n\n        if (submit) {\n            this.submit();\n        }\n    }\n\n    /**\n     * Sends new presence stanza for every room from the list of rooms.\n     */\n    submit() {\n        this.rooms.forEach(room => room.sendPresence());\n    }\n\n    /**\n     * Updates the presences in the room based on the current values in externalFeatures.\n     * @param {ChatRoom} room the room to update.\n     * @private\n     */\n    _updateRoomWithExternalFeatures(room) {\n        if (this.externalFeatures.size === 0) {\n            room.removeFromPresence('features');\n        } else {\n            const children = [];\n\n            this.externalFeatures.forEach(f => {\n                children.push({\n                    'tagName': 'feature',\n                    attributes: { 'var': f }\n                });\n            });\n\n            room.addOrReplaceInPresence('features', { children });\n        }\n    }\n\n    /**\n     * Returns a set with the features for a host.\n     * @param {String} jid the jid of the host\n     * @param {int} timeout the timeout in ms for reply from the host.\n     * @returns {Promise<Set<String>, Error>}\n     */\n    getFeaturesAndIdentities(jid, node, timeout = 5000) {\n        return this._getDiscoInfo(jid, node, timeout);\n    }\n\n    /**\n     * Returns a set with the features and identities for a host.\n     * @param {String} jid the jid of the host\n     * @param {String|null} node the node to query\n     * @param {int} timeout the timeout in ms for reply from the host.\n     * @returns {Promise<Object>}\n     * @private\n     */\n    _getDiscoInfo(jid, node, timeout) {\n        return new Promise((resolve, reject) =>\n            this.disco.info(jid, node, response => {\n                resolve(parseDiscoInfo(response));\n            }, reject, timeout)\n        );\n    }\n\n    /**\n     * Adds ChatRoom instance to the list of rooms. Adds listeners to the room\n     * and adds \"c\" element to the presences of the room.\n     * @param {ChatRoom} room the room.\n     */\n    _addChatRoom(room) {\n        this.rooms.add(room);\n        this._fixChatRoomPresenceMap(room);\n\n        this._updateRoomWithExternalFeatures(room);\n    }\n\n    /**\n     * Removes ChatRoom instance from the list of rooms. Removes listeners\n     * added from the Caps class.\n     * @param {ChatRoom} room the room.\n     */\n    _removeChatRoom(room) {\n        this.rooms.delete(room);\n    }\n\n    /**\n     * Creates/updates the \"c\" xml node into the presence of the passed room.\n     * @param {ChatRoom} room the room.\n     */\n    _fixChatRoomPresenceMap(room) {\n        room.addOrReplaceInPresence('c', {\n            attributes: {\n                xmlns: Strophe.NS.CAPS,\n                hash: HASH,\n                node: this.node,\n                ver: this.version\n            }\n        });\n    }\n\n    /**\n     * Handles this.version changes.\n     */\n    _notifyVersionChanged() {\n        // update the version for all rooms\n        this.rooms.forEach(room => this._fixChatRoomPresenceMap(room));\n    }\n\n    /**\n     * Generates the value for the \"ver\" attribute.\n     */\n    _generateVersion() {\n        this.version\n            = generateSha(this.disco._identities, this.disco._features);\n\n        this._notifyVersionChanged();\n    }\n}\n","import { EventEmitter } from 'events';\nimport { getLogger } from 'jitsi-meet-logger';\n\nimport * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\n\nimport { VAD_SCORE_PUBLISHED, DETECTOR_STATE_CHANGE } from './DetectionEvents';\nimport TrackVADEmitter from './TrackVADEmitter';\n\nconst logger = getLogger(__filename);\n\n/**\n * Sample rate of TrackVADEmitter, it defines how many audio samples are processed at a time.\n * @type {number}\n */\nconst VAD_EMITTER_SAMPLE_RATE = 4096;\n\n/**\n * Connects a TrackVADEmitter to the target conference local audio track and manages various services that use\n * the data to produce audio analytics (VADTalkMutedDetection and VADNoiseDetection).\n */\nexport default class VADAudioAnalyser extends EventEmitter {\n    /**\n     * Creates <tt>VADAudioAnalyser</tt>\n     * @param {JitsiConference} conference - JitsiConference instance that created us.\n     * @param {Object} createVADProcessor - Function that creates a Voice activity detection processor. The processor\n     * needs to implement the following functions:\n     * - <tt>getSampleLength()</tt> - Returns the sample size accepted by getSampleLength.\n     * - <tt>getRequiredPCMFrequency()</tt> - Returns the PCM frequency at which the processor operates.\n     * - <tt>calculateAudioFrameVAD(pcmSample)</tt> - Process a 32 float pcm sample of getSampleLength size.\n     * @constructor\n     */\n    constructor(conference, createVADProcessor) {\n        super();\n\n        /**\n         * Member function that instantiates a VAD processor.\n         */\n        this._createVADProcessor = createVADProcessor;\n\n        /**\n         * Current {@link TrackVADEmitter}. VAD Emitter uses a {@link JitsiLocalTrack} and VAD processor to generate\n         * period voice probability scores.\n         */\n        this._vadEmitter = null;\n\n        /**\n         * Current state of the _vadEmitter\n         */\n        this._isVADEmitterRunning = false;\n\n        /**\n         * Array of currently attached VAD processing services.\n         */\n        this._detectionServices = [];\n\n        /**\n         * Promise used to chain create and destroy operations associated with TRACK_ADDED and TRACK_REMOVED events\n         * coming from the conference.\n         * Because we have an async created component (VAD Processor) we need to make sure that it's initialized before\n         * we destroy it ( when changing the device for instance), or when we use it from an external point of entry\n         * i.e. (TRACK_MUTE_CHANGED event callback).\n         */\n        this._vadInitTracker = Promise.resolve();\n\n        /**\n         * Listens for {@link TrackVADEmitter} events and processes them.\n         */\n        this._processVADScore = this._processVADScore.bind(this);\n\n        conference.on(JitsiConferenceEvents.TRACK_ADDED, this._trackAdded.bind(this));\n        conference.on(JitsiConferenceEvents.TRACK_REMOVED, this._trackRemoved.bind(this));\n        conference.on(JitsiConferenceEvents.TRACK_MUTE_CHANGED, this._trackMuteChanged.bind(this));\n    }\n\n    /**\n     * Attach a VAD detector service to the analyser and handle it's state changes.\n     *\n     * @param {Object} vadTMDetector\n     */\n    addVADDetectionService(vadService) {\n        this._detectionServices.push(vadService);\n        vadService.on(DETECTOR_STATE_CHANGE, () => {\n            // When the state of a detector changes check if there are any active detectors attached so that\n            // the _vadEmitter doesn't run needlessly.\n            const activeDetector = this._detectionServices.filter(detector => detector.isActive() === true);\n\n            // If there are no active detectors running and the vadEmitter is running then stop the emitter as it is\n            // uses a considerable amount of CPU. Otherwise start the service if it's stopped and there is a detector\n            // that needs it.\n            if (!activeDetector.length && this._isVADEmitterRunning) {\n                this._stopVADEmitter();\n            } else if (!this._isVADEmitterRunning) {\n                this._startVADEmitter();\n            }\n        });\n    }\n\n    /**\n     * Start the {@link TrackVADEmitter} and attach the event listener.\n     * @returns {void}\n     */\n    _startVADEmitter() {\n        if (this._vadEmitter) {\n            this._vadEmitter.on(VAD_SCORE_PUBLISHED, this._processVADScore);\n            this._vadEmitter.start();\n            this._isVADEmitterRunning = true;\n        }\n    }\n\n    /**\n     * Stop the {@link TrackVADEmitter} and detach the event listener.\n     * @returns {void}\n     */\n    _stopVADEmitter() {\n        if (this._vadEmitter) {\n            this._vadEmitter.removeListener(VAD_SCORE_PUBLISHED, this._processVADScore);\n            this._vadEmitter.stop();\n        }\n        this._isVADEmitterRunning = false;\n    }\n\n    /**\n     * Listens for {@link TrackVADEmitter} events and directs them to attached services as needed.\n     *\n     * @param {Object} vadScore -VAD score emitted by {@link TrackVADEmitter}\n     * @param {Date}   vadScore.timestamp - Exact time at which processed PCM sample was generated.\n     * @param {number} vadScore.score - VAD score on a scale from 0 to 1 (i.e. 0.7)\n     * @param {Float32Array} pcmData - Raw PCM data with which the VAD score was calculated.\n     * @param {string} vadScore.deviceId - Device id of the associated track.\n     * @listens VAD_SCORE_PUBLISHED\n     */\n    _processVADScore(vadScore) {\n        for (const detector of this._detectionServices) {\n            detector.processVADScore(vadScore);\n        }\n    }\n\n    /**\n     * Change the isMuted state of all attached detection services.\n     *\n     * @param {boolean} isMuted\n     */\n    _changeDetectorsMuteState(isMuted) {\n        for (const detector of this._detectionServices) {\n            detector.changeMuteState(isMuted);\n        }\n    }\n\n    /**\n     * Notifies the detector that a track was added to the associated {@link JitsiConference}.\n     * Only take into account local audio tracks.\n     * @param {JitsiTrack} track - The added track.\n     * @returns {void}\n     * @listens TRACK_ADDED\n     */\n    _trackAdded(track) {\n        if (track.isLocalAudioTrack()) {\n            // Keep a track promise so we take into account successive TRACK_ADD events being generated so that we\n            // destroy/create the processing context in the proper order.\n            this._vadInitTracker = this._vadInitTracker.then(() => this._createVADProcessor())\n                .then(vadProcessor =>\n                    TrackVADEmitter.create(track.getDeviceId(), VAD_EMITTER_SAMPLE_RATE, vadProcessor)\n                )\n                .then(vadEmitter => {\n                    logger.debug('Created VAD emitter for track: ', track.getTrackLabel());\n\n                    this._vadEmitter = vadEmitter;\n\n                    // Iterate through the detection services and set their appropriate mute state, depending on\n                    // service this will trigger a DETECTOR_STATE_CHANGE which in turn might start the _vadEmitter.\n                    this._changeDetectorsMuteState(track.isMuted());\n                })\n                .catch(error => {\n                    logger.warn('Failed to start VADAudioAnalyser', error);\n                });\n        }\n    }\n\n    /**\n     * Notifies the detector that the mute state of a {@link JitsiConference} track has changed. Only takes into account\n     * local audio tracks.\n     * @param {JitsiTrack} track - The track whose mute state has changed.\n     * @returns {void}\n     * @listens TRACK_MUTE_CHANGED\n     */\n    _trackMuteChanged(track) {\n        if (track.isLocalAudioTrack()) {\n            // On a mute toggle reset the state.\n            this._vadInitTracker = this._vadInitTracker.then(() => {\n                // Set mute status for the attached detection services.\n                this._changeDetectorsMuteState(track.isMuted());\n            });\n        }\n    }\n\n    /**\n     * Notifies the detector that a track associated with the {@link JitsiConference} was removed. Only takes into\n     * account local audio tracks. Cleans up resources associated with the track and resets the processing context.\n     *\n     * @param {JitsiTrack} track - The removed track.\n     * @returns {void}\n     * @listens TRACK_REMOVED\n     */\n    _trackRemoved(track) {\n        if (track.isLocalAudioTrack()) {\n            // Use the promise to make sure operations are in sequence.\n            this._vadInitTracker = this._vadInitTracker.then(() => {\n                logger.debug('Removing track from VAD detection - ', track.getTrackLabel());\n\n                // Track was removed, clean up and set appropriate states.\n                if (this._vadEmitter) {\n                    this._stopVADEmitter();\n                    this._vadEmitter.destroy();\n                    this._vadEmitter = null;\n                }\n\n                // Reset state of detectors when active track is removed.\n                for (const detector of this._detectionServices) {\n                    detector.reset();\n                }\n            });\n        }\n    }\n\n\n}\n","import { $iq } from 'strophe.js';\n\nimport recordingXMLUtils from './recordingXMLUtils';\n\n/**\n * Represents a recording session.\n */\nexport default class JibriSession {\n    /**\n     * Initializes a new JibriSession instance.\n     *\n     * @constructor\n     */\n    constructor(options = {}) {\n        this._connection = options.connection;\n        this._mode = options.mode;\n\n        this._setSessionID(options.sessionID);\n        this.setStatus(options.status);\n    }\n\n    /**\n     * Returns the error related to the session instance, if any.\n     *\n     * @returns {string|undefined}\n     */\n    getError() {\n        return this._error;\n    }\n\n    /**\n     * Returns the session ID of the session instance.\n     *\n     * @returns {string|undefined}\n     */\n    getID() {\n        return this._sessionID;\n    }\n\n    /**\n     * Returns the initiator of the session instance.\n     *\n     * @returns {JitsiParticipant|string} The participant that started the session.\n     */\n    getInitiator() {\n        return this._initiator;\n    }\n\n    /**\n     * Returns the streaming URL of the session.\n     *\n     * @returns {string|undefined}\n     */\n    getLiveStreamViewURL() {\n        return this._liveStreamViewURL;\n    }\n\n    /**\n     * Returns the current status of the session.\n     *\n     * @returns {string|undefined}\n     */\n    getStatus() {\n        return this._status;\n    }\n\n    /**\n     * Returns the jid of the participant that stopped the session.\n     *\n     * @returns {JitsiParticipant|string} The participant that stopped the session.\n     */\n    getTerminator() {\n        return this._terminator;\n    }\n\n    /**\n     * Returns the current recording mode of the session, such as \"file\".\n     *\n     * @returns {string}\n     */\n    getMode() {\n        return this._mode;\n    }\n\n    /**\n     * Sets the last known error message related to the session.\n     *\n     * @param {string} error - The error string explaining why the session\n     * entered an error state.\n     * @returns {void}\n     */\n    setError(error) {\n        this._error = error;\n    }\n\n    /**\n     * Sets the last live stream URL for the session instance. Usually this is\n     * a YouTube URL and usually this is only set for \"stream\" sessions.\n     *\n     * @param {string} url - The live stream URL associated with the session.\n     * @returns {void}\n     */\n    setLiveStreamViewURL(url) {\n        this._liveStreamViewURL = url;\n    }\n\n    /**\n     * Sets the last known status for this recording session.\n     *\n     * @param {string} status - The new status to set.\n     * @returns {void}\n     */\n    setStatus(status) {\n        this._status = status;\n    }\n\n    /**\n     * Sets the participant that started the session.\n     * @param {JitsiParticipant | string} participant - The participant or resource id\n     * if local participant.\n     */\n    setInitiator(participant) {\n        this._initiator = participant;\n    }\n\n    /**\n     * Sets the participant that stopped the session.\n     * @param {JitsiParticipant | string} participant - The participant or the resource id\n     * if local participant.\n     */\n    setTerminator(participant) {\n        this._terminator = participant;\n    }\n\n    /**\n     * Sends a message to start the actual recording.\n     *\n     * @param {Object} options - Additional arguments for starting the\n     * recording.\n     * @param {string} [options.appData] - Data specific to the app/service that\n     * the result file will be uploaded.\n     * @param {string} [options.broadcastId] - The broadcast ID of an\n     * associated YouTube stream, used for knowing the URL from which the stream\n     * can be viewed.\n     * @param {string} options.focusMucJid - The JID of the focus participant\n     * that controls recording.\n     * @param {streamId} options.streamId - Necessary for live streaming, this\n     * is the stream key needed to start a live streaming session with the\n     * streaming service provider.\n     * @returns Promise\n     */\n    start({ appData, broadcastId, focusMucJid, streamId }) {\n        return new Promise((resolve, reject) => {\n            this._connection.sendIQ(\n                this._createIQ({\n                    action: 'start',\n                    appData,\n                    focusMucJid,\n                    broadcastId,\n                    streamId\n                }),\n                result => {\n                    // All users will eventually receive the 'pending' status\n                    // from the backend, but for the user initiating the session\n                    // it's better to give some instant feedback that recording\n                    // is starting so fire 'pending' here manually.\n                    this.setStatus('pending');\n                    this._setSessionID(\n                        recordingXMLUtils.getSessionIdFromIq(result));\n\n                    resolve();\n                },\n                error => {\n                    this._setErrorFromIq(error);\n\n                    reject(error);\n                });\n        });\n    }\n\n    /**\n     * Sends a message to actually stop the recording session.\n     *\n     * @param {Object} options - Additional arguments for stopping the\n     * recording.\n     * @param {Object} options.focusMucJid - The JID of the focus participant\n     * that controls recording.\n     * @returns Promise\n     */\n    stop({ focusMucJid }) {\n        return new Promise((resolve, reject) => {\n            this._connection.sendIQ(\n                this._createIQ({\n                    action: 'stop',\n                    focusMucJid\n                }),\n                resolve,\n                reject);\n        });\n    }\n\n    /**\n     * Generates the message to change the status of the recording session.\n     *\n     * @param {string} status - The new status to which the recording session\n     * should transition.\n     * @param {string} [options.appData] - Data specific to the app/service that\n     * the result file will be uploaded.\n     * @param {string} [options.broadcastId] - The broadcast ID of an\n     * associated YouTube stream, used for knowing the URL from which the stream\n     * can be viewed.\n     * @param {string} options.focusMucJid - The JID of the focus participant\n     * that controls recording.\n     * @param {streamId} options.streamId - Necessary for live streaming, this\n     * is the stream key needed to start a live streaming session with the\n     * streaming service provider.\n     * @returns Object - The XMPP IQ message.\n     */\n    _createIQ({ action, appData, broadcastId, focusMucJid, streamId }) {\n        return $iq({\n            to: focusMucJid,\n            type: 'set'\n        })\n        .c('jibri', {\n            'xmlns': 'http://jitsi.org/protocol/jibri',\n            'action': action,\n            'app_data': appData,\n            'recording_mode': this._mode,\n            'streamid': streamId,\n            'you_tube_broadcast_id': broadcastId\n        })\n        .up();\n    }\n\n    /**\n     * Handles the error from an iq and stores the error.\n     *\n     * @param {Node} errorIq - The error response from an Iq.\n     * @private\n     * @returns {void}\n     */\n    _setErrorFromIq(errorIq) {\n        const error = errorIq.getElementsByTagName('error')[0];\n\n        this.setError(error.children[0].tagName);\n    }\n\n    /**\n     * Sets the known session ID for this recording session.\n     *\n     * @param {string} sessionID\n     * @private\n     * @returns {void}\n     */\n    _setSessionID(sessionID) {\n        this._sessionID = sessionID;\n    }\n}\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex; // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n\n  return (bth[buf[i + 0]] + bth[buf[i + 1]] + bth[buf[i + 2]] + bth[buf[i + 3]] + '-' + bth[buf[i + 4]] + bth[buf[i + 5]] + '-' + bth[buf[i + 6]] + bth[buf[i + 7]] + '-' + bth[buf[i + 8]] + bth[buf[i + 9]] + '-' + bth[buf[i + 10]] + bth[buf[i + 11]] + bth[buf[i + 12]] + bth[buf[i + 13]] + bth[buf[i + 14]] + bth[buf[i + 15]]).toLowerCase();\n}\n\nexport default bytesToUuid;","import rng from './rng.js';\nimport bytesToUuid from './bytesToUuid.js';\n\nfunction v4(options, buf, offset) {\n  if (typeof options === 'string') {\n    buf = options === 'binary' ? new Uint8Array(16) : null;\n    options = null;\n  }\n\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    var start = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[start + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return bytesToUuid(rnds);\n}\n\nexport default v4;","/* Copyright @ 2015-present 8x8, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/*jslint latedef:false*/\n\n/**\n * Ordered log levels.\n */\nvar levels = {\n    \"trace\": 0,\n    \"debug\": 1,\n    \"info\": 2,\n    \"log\": 3,\n    \"warn\": 4,\n    \"error\": 5\n};\n\n/**\n * The default transport - console\n * @type LoggerTransport\n */\nLogger.consoleTransport = console;\n\n/**\n * The array which stores currently registered global transports.\n * @type {[LoggerTransport]}\n */\nvar globalTransports = [ Logger.consoleTransport ];\n\n/**\n * Adds given {@link LoggerTransport} instance to the list of global\n * transports which means that it'll be used by all {@link Logger}s\n * @param {LoggerTransport} transport\n */\nLogger.addGlobalTransport = function(transport) {\n    if (globalTransports.indexOf(transport) === -1) {\n        globalTransports.push(transport);\n    }\n};\n\n/**\n * Removes given {@link LoggerTransport} instance from the list of global\n * transports\n * @param {LoggerTransport} transport\n */\nLogger.removeGlobalTransport = function(transport) {\n    var transportIdx = globalTransports.indexOf(transport);\n    if (transportIdx !== -1) {\n        globalTransports.splice(transportIdx, 1);\n    }\n};\n\n/**\n * The global configuration options.\n */\nvar globalOptions = {};\n\n/**\n * Sets global options which will be used by all loggers. Changing these works\n * even after other loggers are created.\n */\nLogger.setGlobalOptions = function(options) {\n    globalOptions = options || {};\n};\n\n/**\n * Parses Error's object stack trace and extracts information about the last\n * caller before the log method was called.\n * @returns JS object with info about the caller - method name, file location,\n * line and column.\n */\nfunction getCallerInfo() {\n    var callerInfo = {\n        methodName: \"\",\n        fileLocation: \"\",\n        line: null,\n        column: null\n    };\n    //gets the part of the stack without the logger wrappers\n    var error = new Error();\n    var stack = error.stack? error.stack.split(\"\\n\") : [];\n    if(!stack || stack.length < 3) {\n        return callerInfo;\n    }\n    var m = null;\n    if(stack[3]) {\n        m = stack[3].match(/\\s*at\\s*(.+?)\\s*\\((\\S*)\\s*:(\\d*)\\s*:(\\d*)\\)/);\n    }\n    if(!m || m.length <= 4) {\n        //Firefox && Safari\n        if(stack[2].indexOf(\"log@\") === 0){\n            //Safari\n            callerInfo.methodName = stack[3].substr(0, stack[3].indexOf(\"@\"));\n        } else {\n            //Firefox\n            callerInfo.methodName = stack[2].substr(0, stack[2].indexOf(\"@\"));\n        }\n        return callerInfo;\n    }\n\n    callerInfo.methodName = m[1];\n    callerInfo.fileLocation = m[2];\n    callerInfo.line = m[3];\n    callerInfo.column = m[4];\n    return callerInfo;\n}\n\n/**\n * Logs messages using the transports and level from the logger.\n * @param logger a logger instance.\n * @param level the log level of the message. See the levels variable.\n * @param arguments array with arguments that will be logged.\n */\nfunction log() {\n    var logger = arguments[0], level = arguments[1],\n        args = Array.prototype.slice.call(arguments, 2);\n    if(levels[level] < logger.level) {\n        return;\n    }\n\n    var callerInfo\n        = !(logger.options.disableCallerInfo || globalOptions.disableCallerInfo) &&\n            getCallerInfo();\n    var transports = globalTransports.concat(logger.transports);\n    for(var i = 0; i < transports.length; i++) {\n        var t = transports[i];\n        var l = t[level];\n        if(l && typeof(l) === \"function\") {\n            var logPrefixes = [];\n\n            logPrefixes.push(new Date().toISOString());\n\n            if (logger.id) {\n                logPrefixes.push(\"[\" + logger.id + \"]\");\n            }\n\n            if (callerInfo && callerInfo.methodName.length > 1) {\n                logPrefixes.push(\"<\" + callerInfo.methodName + \">: \");\n            }\n\n            var fullLogParts = logPrefixes.concat(args);\n\n            l.bind(t).apply(t, fullLogParts);\n        }\n    }\n}\n\n/**\n *\n * Constructs new logger object.\n * @param level the logging level for the new logger\n * @param id optional identifier for the logger instance.\n * @param {LoggerTransport} transports optional list of handlers(objects) for\n * the logs. The handlers must support - log, warn, error, debug, info, trace.\n * @param options optional configuration file for how the logger should behave.\n * @param {boolean} options.disableCallerInfo Whether the call site of a logger\n * method invocation should be included in the log. Defaults to false, so the\n * call site will be included.\n */\nfunction Logger(level, id, transports, options) {\n    this.id = id;\n    this.options = options || {};\n    this.transports = transports;\n    if(!this.transports) {\n        this.transports = [];\n    }\n    this.level = levels[level];\n    var methods = Object.keys(levels);\n    for(var i = 0; i < methods.length; i++){\n        this[methods[i]] =\n            log.bind(null, this, methods[i]);\n    }\n}\n\n/**\n * Sets the log level for the logger.\n * @param level the new log level.\n */\nLogger.prototype.setLevel = function (level) {\n    this.level = levels[level];\n};\nmodule.exports = Logger;\n\n/**\n * Enum for the supported log levels.\n */\nLogger.levels = {\n    TRACE: \"trace\",\n    DEBUG: \"debug\",\n    INFO: \"info\",\n    LOG: \"log\",\n    WARN: \"warn\",\n    ERROR: \"error\"\n};\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","var grammar = module.exports = {\n  v: [{\n    name: 'version',\n    reg: /^(\\d*)$/\n  }],\n  o: [{ //o=- 20518 0 IN IP4 203.0.113.1\n    // NB: sessionId will be a String in most cases because it is huge\n    name: 'origin',\n    reg: /^(\\S*) (\\d*) (\\d*) (\\S*) IP(\\d) (\\S*)/,\n    names: ['username', 'sessionId', 'sessionVersion', 'netType', 'ipVer', 'address'],\n    format: '%s %s %d %s IP%d %s'\n  }],\n  // default parsing of these only (though some of these feel outdated)\n  s: [{ name: 'name' }],\n  i: [{ name: 'description' }],\n  u: [{ name: 'uri' }],\n  e: [{ name: 'email' }],\n  p: [{ name: 'phone' }],\n  z: [{ name: 'timezones' }], // TODO: this one can actually be parsed properly..\n  r: [{ name: 'repeats' }],   // TODO: this one can also be parsed properly\n  //k: [{}], // outdated thing ignored\n  t: [{ //t=0 0\n    name: 'timing',\n    reg: /^(\\d*) (\\d*)/,\n    names: ['start', 'stop'],\n    format: '%d %d'\n  }],\n  c: [{ //c=IN IP4 10.47.197.26\n    name: 'connection',\n    reg: /^IN IP(\\d) (\\S*)/,\n    names: ['version', 'ip'],\n    format: 'IN IP%d %s'\n  }],\n  b: [{ //b=AS:4000\n    push: 'bandwidth',\n    reg: /^(TIAS|AS|CT|RR|RS):(\\d*)/,\n    names: ['type', 'limit'],\n    format: '%s:%s'\n  }],\n  m: [{ //m=video 51744 RTP/AVP 126 97 98 34 31\n    // NB: special - pushes to session\n    // TODO: rtp/fmtp should be filtered by the payloads found here?\n    reg: /^(\\w*) (\\d*) ([\\w\\/]*)(?: (.*))?/,\n    names: ['type', 'port', 'protocol', 'payloads'],\n    format: '%s %d %s %s'\n  }],\n  a: [\n    { //a=rtpmap:110 opus/48000/2\n      push: 'rtp',\n      reg: /^rtpmap:(\\d*) ([\\w\\-\\.]*)(?:\\s*\\/(\\d*)(?:\\s*\\/(\\S*))?)?/,\n      names: ['payload', 'codec', 'rate', 'encoding'],\n      format: function (o) {\n        return (o.encoding) ?\n          'rtpmap:%d %s/%s/%s':\n          o.rate ?\n          'rtpmap:%d %s/%s':\n          'rtpmap:%d %s';\n      }\n    },\n    { //a=fmtp:108 profile-level-id=24;object=23;bitrate=64000\n      //a=fmtp:111 minptime=10; useinbandfec=1\n      push: 'fmtp',\n      reg: /^fmtp:(\\d*) ([\\S| ]*)/,\n      names: ['payload', 'config'],\n      format: 'fmtp:%d %s'\n    },\n    { //a=control:streamid=0\n      name: 'control',\n      reg: /^control:(.*)/,\n      format: 'control:%s'\n    },\n    { //a=rtcp:65179 IN IP4 193.84.77.194\n      name: 'rtcp',\n      reg: /^rtcp:(\\d*)(?: (\\S*) IP(\\d) (\\S*))?/,\n      names: ['port', 'netType', 'ipVer', 'address'],\n      format: function (o) {\n        return (o.address != null) ?\n          'rtcp:%d %s IP%d %s':\n          'rtcp:%d';\n      }\n    },\n    { //a=rtcp-fb:98 trr-int 100\n      push: 'rtcpFbTrrInt',\n      reg: /^rtcp-fb:(\\*|\\d*) trr-int (\\d*)/,\n      names: ['payload', 'value'],\n      format: 'rtcp-fb:%d trr-int %d'\n    },\n    { //a=rtcp-fb:98 nack rpsi\n      push: 'rtcpFb',\n      reg: /^rtcp-fb:(\\*|\\d*) ([\\w-_]*)(?: ([\\w-_]*))?/,\n      names: ['payload', 'type', 'subtype'],\n      format: function (o) {\n        return (o.subtype != null) ?\n          'rtcp-fb:%s %s %s':\n          'rtcp-fb:%s %s';\n      }\n    },\n    { //a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n      //a=extmap:1/recvonly URI-gps-string\n      push: 'ext',\n      reg: /^extmap:(\\d+)(?:\\/(\\w+))? (\\S*)(?: (\\S*))?/,\n      names: ['value', 'direction', 'uri', 'config'],\n      format: function (o) {\n        return 'extmap:%d' + (o.direction ? '/%s' : '%v') + ' %s' + (o.config ? ' %s' : '');\n      }\n    },\n    { //a=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:PS1uQCVeeCFCanVmcjkpPywjNWhcYD0mXXtxaVBR|2^20|1:32\n      push: 'crypto',\n      reg: /^crypto:(\\d*) ([\\w_]*) (\\S*)(?: (\\S*))?/,\n      names: ['id', 'suite', 'config', 'sessionConfig'],\n      format: function (o) {\n        return (o.sessionConfig != null) ?\n          'crypto:%d %s %s %s':\n          'crypto:%d %s %s';\n      }\n    },\n    { //a=setup:actpass\n      name: 'setup',\n      reg: /^setup:(\\w*)/,\n      format: 'setup:%s'\n    },\n    { //a=mid:1\n      name: 'mid',\n      reg: /^mid:([^\\s]*)/,\n      format: 'mid:%s'\n    },\n    { //a=msid:0c8b064d-d807-43b4-b434-f92a889d8587 98178685-d409-46e0-8e16-7ef0db0db64a\n      name: 'msid',\n      reg: /^msid:(.*)/,\n      format: 'msid:%s'\n    },\n    { //a=ptime:20\n      name: 'ptime',\n      reg: /^ptime:(\\d*)/,\n      format: 'ptime:%d'\n    },\n    { //a=maxptime:60\n      name: 'maxptime',\n      reg: /^maxptime:(\\d*)/,\n      format: 'maxptime:%d'\n    },\n    { //a=sendrecv\n      name: 'direction',\n      reg: /^(sendrecv|recvonly|sendonly|inactive)/\n    },\n    { //a=ice-lite\n      name: 'icelite',\n      reg: /^(ice-lite)/\n    },\n    { //a=ice-ufrag:F7gI\n      name: 'iceUfrag',\n      reg: /^ice-ufrag:(\\S*)/,\n      format: 'ice-ufrag:%s'\n    },\n    { //a=ice-pwd:x9cml/YzichV2+XlhiMu8g\n      name: 'icePwd',\n      reg: /^ice-pwd:(\\S*)/,\n      format: 'ice-pwd:%s'\n    },\n    { //a=fingerprint:SHA-1 00:11:22:33:44:55:66:77:88:99:AA:BB:CC:DD:EE:FF:00:11:22:33\n      name: 'fingerprint',\n      reg: /^fingerprint:(\\S*) (\\S*)/,\n      names: ['type', 'hash'],\n      format: 'fingerprint:%s %s'\n    },\n    { //a=candidate:0 1 UDP 2113667327 203.0.113.1 54400 typ host\n      //a=candidate:1162875081 1 udp 2113937151 192.168.34.75 60017 typ host generation 0 network-id 3 network-cost 10\n      //a=candidate:3289912957 2 udp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 generation 0 network-id 3 network-cost 10\n      //a=candidate:229815620 1 tcp 1518280447 192.168.150.19 60017 typ host tcptype active generation 0 network-id 3 network-cost 10\n      //a=candidate:3289912957 2 tcp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 tcptype passive generation 0 network-id 3 network-cost 10\n      push:'candidates',\n      reg: /^candidate:(\\S*) (\\d*) (\\S*) (\\d*) (\\S*) (\\d*) typ (\\S*)(?: raddr (\\S*) rport (\\d*))?(?: tcptype (\\S*))?(?: generation (\\d*))?(?: network-id (\\d*))?(?: network-cost (\\d*))?/,\n      names: ['foundation', 'component', 'transport', 'priority', 'ip', 'port', 'type', 'raddr', 'rport', 'tcptype', 'generation', 'network-id', 'network-cost'],\n      format: function (o) {\n        var str = 'candidate:%s %d %s %d %s %d typ %s';\n\n        str += (o.raddr != null) ? ' raddr %s rport %d' : '%v%v';\n\n        // NB: candidate has three optional chunks, so %void middles one if it's missing\n        str += (o.tcptype != null) ? ' tcptype %s' : '%v';\n\n        if (o.generation != null) {\n          str += ' generation %d';\n        }\n\n        str += (o['network-id'] != null) ? ' network-id %d' : '%v';\n        str += (o['network-cost'] != null) ? ' network-cost %d' : '%v';\n        return str;\n      }\n    },\n    { //a=end-of-candidates (keep after the candidates line for readability)\n      name: 'endOfCandidates',\n      reg: /^(end-of-candidates)/\n    },\n    { //a=remote-candidates:1 203.0.113.1 54400 2 203.0.113.1 54401 ...\n      name: 'remoteCandidates',\n      reg: /^remote-candidates:(.*)/,\n      format: 'remote-candidates:%s'\n    },\n    { //a=ice-options:google-ice\n      name: 'iceOptions',\n      reg: /^ice-options:(\\S*)/,\n      format: 'ice-options:%s'\n    },\n    { //a=ssrc:2566107569 cname:t9YU8M1UxTF8Y1A1\n      push: 'ssrcs',\n      reg: /^ssrc:(\\d*) ([\\w_]*)(?::(.*))?/,\n      names: ['id', 'attribute', 'value'],\n      format: function (o) {\n        var str = 'ssrc:%d';\n        if (o.attribute != null) {\n          str += ' %s';\n          if (o.value != null) {\n            str += ':%s';\n          }\n        }\n        return str;\n      }\n    },\n    { //a=ssrc-group:FEC 1 2\n      //a=ssrc-group:FEC-FR 3004364195 1080772241\n      push: 'ssrcGroups',\n      // token-char = %x21 / %x23-27 / %x2A-2B / %x2D-2E / %x30-39 / %x41-5A / %x5E-7E\n      reg: /^ssrc-group:([\\x21\\x23\\x24\\x25\\x26\\x27\\x2A\\x2B\\x2D\\x2E\\w]*) (.*)/,\n      names: ['semantics', 'ssrcs'],\n      format: 'ssrc-group:%s %s'\n    },\n    { //a=msid-semantic: WMS Jvlam5X3SX1OP6pn20zWogvaKJz5Hjf9OnlV\n      name: 'msidSemantic',\n      reg: /^msid-semantic:\\s?(\\w*) (\\S*)/,\n      names: ['semantic', 'token'],\n      format: 'msid-semantic: %s %s' // space after ':' is not accidental\n    },\n    { //a=group:BUNDLE audio video\n      push: 'groups',\n      reg: /^group:(\\w*) (.*)/,\n      names: ['type', 'mids'],\n      format: 'group:%s %s'\n    },\n    { //a=rtcp-mux\n      name: 'rtcpMux',\n      reg: /^(rtcp-mux)/\n    },\n    { //a=rtcp-rsize\n      name: 'rtcpRsize',\n      reg: /^(rtcp-rsize)/\n    },\n    { //a=sctpmap:5000 webrtc-datachannel 1024\n      name: 'sctpmap',\n      reg: /^sctpmap:([\\w_\\/]*) (\\S*)(?: (\\S*))?/,\n      names: ['sctpmapNumber', 'app', 'maxMessageSize'],\n      format: function (o) {\n        return (o.maxMessageSize != null) ?\n          'sctpmap:%s %s %s' :\n          'sctpmap:%s %s';\n      }\n    },\n    { //a=x-google-flag:conference\n      name: 'xGoogleFlag',\n      reg: /^x-google-flag:([^\\s]*)/,\n      format: 'x-google-flag:%s'\n    },\n    { //a=rid:1 send max-width=1280;max-height=720;max-fps=30;depend=0\n      push: 'rids',\n      reg: /^rid:([\\d\\w]+) (\\w+)(?: ([\\S| ]*))?/,\n      names: ['id', 'direction', 'params'],\n      format: function (o) {\n        return (o.params) ? 'rid:%s %s %s' : 'rid:%s %s';\n      }\n    },\n    { //a=imageattr:97 send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320] recv [x=330,y=250]\n      //a=imageattr:* send [x=800,y=640] recv *\n      //a=imageattr:100 recv [x=320,y=240]\n      push: 'imageattrs',\n      reg: new RegExp(\n        //a=imageattr:97\n        '^imageattr:(\\\\d+|\\\\*)' +\n        //send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320]\n        '[\\\\s\\\\t]+(send|recv)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*)' +\n        //recv [x=330,y=250]\n        '(?:[\\\\s\\\\t]+(recv|send)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*))?'\n      ),\n      names: ['pt', 'dir1', 'attrs1', 'dir2', 'attrs2'],\n      format: function (o) {\n        return 'imageattr:%s %s %s' + (o.dir2 ? ' %s %s' : '');\n      }\n    },\n    { //a=simulcast:send 1,2,3;~4,~5 recv 6;~7,~8\n      //a=simulcast:recv 1;4,5 send 6;7\n      name: 'simulcast',\n      reg: new RegExp(\n        //a=simulcast:\n        '^simulcast:' +\n        //send 1,2,3;~4,~5\n        '(send|recv) ([a-zA-Z0-9\\\\-_~;,]+)' +\n        //space + recv 6;~7,~8\n        '(?:\\\\s?(send|recv) ([a-zA-Z0-9\\\\-_~;,]+))?' +\n        //end\n        '$'\n      ),\n      names: ['dir1', 'list1', 'dir2', 'list2'],\n      format: function (o) {\n        return 'simulcast:%s %s' + (o.dir2 ? ' %s %s' : '');\n      }\n    },\n    { //Old simulcast draft 03 (implemented by Firefox)\n      //  https://tools.ietf.org/html/draft-ietf-mmusic-sdp-simulcast-03\n      //a=simulcast: recv pt=97;98 send pt=97\n      //a=simulcast: send rid=5;6;7 paused=6,7\n      name: 'simulcast_03',\n      reg: /^simulcast:[\\s\\t]+([\\S+\\s\\t]+)$/,\n      names: ['value'],\n      format: 'simulcast: %s'\n    },\n    {\n      //a=framerate:25\n      //a=framerate:29.97\n      name: 'framerate',\n      reg: /^framerate:(\\d+(?:$|\\.\\d+))/,\n      format: 'framerate:%s'\n    },\n    { // any a= that we don't understand is kepts verbatim on media.invalid\n      push: 'invalid',\n      names: ['value']\n    }\n  ]\n};\n\n// set sensible defaults to avoid polluting the grammar with boring details\nObject.keys(grammar).forEach(function (key) {\n  var objs = grammar[key];\n  objs.forEach(function (obj) {\n    if (!obj.reg) {\n      obj.reg = /(.*)/;\n    }\n    if (!obj.format) {\n      obj.format = '%s';\n    }\n  });\n});\n","/* global MediaRecorder, MediaStream */\n\nconst RecordingResult = require('./recordingResult');\n\n/**\n * Possible audio formats MIME types\n */\nconst AUDIO_WEBM = 'audio/webm'; // Supported in chrome\nconst AUDIO_OGG = 'audio/ogg'; // Supported in firefox\n\n/**\n * A TrackRecorder object holds all the information needed for recording a\n * single JitsiTrack (either remote or local)\n * @param track The JitsiTrack the object is going to hold\n */\nconst TrackRecorder = function(track) {\n    // The JitsiTrack holding the stream\n    this.track = track;\n\n    // The MediaRecorder recording the stream\n    this.recorder = null;\n\n    // The array of data chunks recorded from the stream\n    // acts as a buffer until the data is stored on disk\n    this.data = null;\n\n    // the name of the person of the JitsiTrack. This can be undefined and/or\n    // not unique\n    this.name = null;\n\n    // the time of the start of the recording\n    this.startTime = null;\n};\n\n/**\n * Starts the recording of a JitsiTrack in a TrackRecorder object.\n * This will also define the timestamp and try to update the name\n * @param trackRecorder the TrackRecorder to start\n */\nfunction startRecorder(trackRecorder) {\n    if (trackRecorder.recorder === undefined) {\n        throw new Error('Passed an object to startRecorder which is not a '\n            + 'TrackRecorder object');\n    }\n    trackRecorder.recorder.start();\n    trackRecorder.startTime = new Date();\n}\n\n/**\n * Stops the recording of a JitsiTrack in a TrackRecorder object.\n * This will also try to update the name\n * @param trackRecorder the TrackRecorder to stop\n */\nfunction stopRecorder(trackRecorder) {\n    if (trackRecorder.recorder === undefined) {\n        throw new Error('Passed an object to stopRecorder which is not a '\n            + 'TrackRecorder object');\n    }\n    trackRecorder.recorder.stop();\n}\n\n/**\n * Determines which kind of audio recording the browser supports\n * chrome supports \"audio/webm\" and firefox supports \"audio/ogg\"\n */\nfunction determineCorrectFileType() {\n    if (MediaRecorder.isTypeSupported(AUDIO_WEBM)) {\n        return AUDIO_WEBM;\n    } else if (MediaRecorder.isTypeSupported(AUDIO_OGG)) {\n        return AUDIO_OGG;\n    }\n    throw new Error(\n        'unable to create a MediaRecorder with the right mimetype!');\n}\n\n/**\n * main exported object of the file, holding all\n * relevant functions and variables for the outside world\n * @param jitsiConference the jitsiConference which this object\n * is going to record\n */\nfunction AudioRecorder(jitsiConference) {\n    // array of TrackRecorders, where each trackRecorder\n    // holds the JitsiTrack, MediaRecorder and recorder data\n    this.recorders = [];\n\n    // get which file type is supported by the current browser\n    this.fileType = determineCorrectFileType();\n\n    // boolean flag for active recording\n    this.isRecording = false;\n\n    // the jitsiconference the object is recording\n    this.jitsiConference = jitsiConference;\n}\n\n/**\n * Add the exported module so that it can be accessed by other files\n */\nAudioRecorder.determineCorrectFileType = determineCorrectFileType;\n\n/**\n * Adds a new TrackRecorder object to the array.\n *\n * @param track the track potentially holding an audio stream\n */\nAudioRecorder.prototype.addTrack = function(track) {\n    if (track.isAudioTrack()) {\n        // create the track recorder\n        const trackRecorder = this.instantiateTrackRecorder(track);\n\n        // push it to the local array of all recorders\n\n        this.recorders.push(trackRecorder);\n\n        // update the name of the trackRecorders\n        this.updateNames();\n\n        // If we're already recording, immediately start recording this new\n        // track.\n        if (this.isRecording) {\n            startRecorder(trackRecorder);\n        }\n    }\n};\n\n/**\n * Creates a TrackRecorder object. Also creates the MediaRecorder and\n * data array for the trackRecorder.\n * @param track the JitsiTrack holding the audio MediaStream(s)\n */\nAudioRecorder.prototype.instantiateTrackRecorder = function(track) {\n    const trackRecorder = new TrackRecorder(track);\n\n    // Create a new stream which only holds the audio track\n    const originalStream = trackRecorder.track.getOriginalStream();\n    const stream = new MediaStream();\n\n    originalStream.getAudioTracks().forEach(t => stream.addTrack(t));\n\n    // Create the MediaRecorder\n    trackRecorder.recorder = new MediaRecorder(stream,\n        { mimeType: this.fileType });\n\n    // array for holding the recorder data. Resets it when\n    // audio already has been recorder once\n    trackRecorder.data = [];\n\n    // function handling a dataEvent, e.g the stream gets new data\n    trackRecorder.recorder.ondataavailable = function(dataEvent) {\n        if (dataEvent.data.size > 0) {\n            trackRecorder.data.push(dataEvent.data);\n        }\n    };\n\n    return trackRecorder;\n};\n\n/**\n * Notifies the module that a specific track has stopped, e.g participant left\n * the conference.\n * if the recording has not started yet, the TrackRecorder will be removed from\n * the array. If the recording has started, the recorder will stop recording\n * but not removed from the array so that the recorded stream can still be\n * accessed\n *\n * @param {JitsiTrack} track the JitsiTrack to remove from the recording session\n */\nAudioRecorder.prototype.removeTrack = function(track) {\n    if (track.isVideoTrack()) {\n        return;\n    }\n\n    const array = this.recorders;\n    let i;\n\n    for (i = 0; i < array.length; i++) {\n        if (array[i].track.getParticipantId() === track.getParticipantId()) {\n            const recorderToRemove = array[i];\n\n            if (this.isRecording) {\n                stopRecorder(recorderToRemove);\n            } else {\n                // remove the TrackRecorder from the array\n                array.splice(i, 1);\n            }\n        }\n    }\n\n    // make sure the names are up to date\n    this.updateNames();\n};\n\n/**\n * Tries to update the name value of all TrackRecorder in the array.\n * If it hasn't changed,it will keep the exiting name. If it changes to a\n * undefined value, the old value will also be kept.\n */\nAudioRecorder.prototype.updateNames = function() {\n    const conference = this.jitsiConference;\n\n    this.recorders.forEach(trackRecorder => {\n        if (trackRecorder.track.isLocal()) {\n            trackRecorder.name = 'the transcriber';\n        } else {\n            const id = trackRecorder.track.getParticipantId();\n            const participant = conference.getParticipantById(id);\n            const newName = participant.getDisplayName();\n\n            if (newName !== 'undefined') {\n                trackRecorder.name = newName;\n            }\n        }\n    });\n};\n\n/**\n * Starts the audio recording of every local and remote track\n */\nAudioRecorder.prototype.start = function() {\n    if (this.isRecording) {\n        throw new Error('audiorecorder is already recording');\n    }\n\n    // set boolean isRecording flag to true so if new participants join the\n    // conference, that track can instantly start recording as well\n    this.isRecording = true;\n\n    // start all the mediaRecorders\n    this.recorders.forEach(trackRecorder => startRecorder(trackRecorder));\n\n    // log that recording has started\n    console.log(\n        `Started the recording of the audio. There are currently ${\n            this.recorders.length} recorders active.`);\n};\n\n/**\n * Stops the audio recording of every local and remote track\n */\nAudioRecorder.prototype.stop = function() {\n    // set the boolean flag to false\n    this.isRecording = false;\n\n    // stop all recorders\n    this.recorders.forEach(trackRecorder => stopRecorder(trackRecorder));\n    console.log('stopped recording');\n};\n\n/**\n * link hacking to download all recorded audio streams\n */\nAudioRecorder.prototype.download = function() {\n    this.recorders.forEach(trackRecorder => {\n        const blob = new Blob(trackRecorder.data, { type: this.fileType });\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n\n        document.body.appendChild(a);\n        a.style = 'display: none';\n        a.href = url;\n        a.download = `test.${this.fileType.split('/')[1]}`;\n        a.click();\n        window.URL.revokeObjectURL(url);\n    });\n};\n\n/**\n * returns the audio files of all recorders as an array of objects,\n * which include the name of the owner of the track and the starting time stamp\n * @returns {Array} an array of RecordingResult objects\n */\nAudioRecorder.prototype.getRecordingResults = function() {\n    if (this.isRecording) {\n        throw new Error(\n            'cannot get blobs because the AudioRecorder is still recording!');\n    }\n\n    // make sure the names are up to date before sending them off\n    this.updateNames();\n\n    const array = [];\n\n    this.recorders.forEach(\n        recorder =>\n            array.push(\n                new RecordingResult(\n                    new Blob(recorder.data, { type: this.fileType }),\n                    recorder.name,\n                    recorder.startTime)));\n\n    return array;\n};\n\n/**\n * Gets the mime type of the recorder audio\n * @returns {String} the mime type of the recorder audio\n */\nAudioRecorder.prototype.getFileType = function() {\n    return this.fileType;\n};\n\n/**\n * export the main object AudioRecorder\n */\nmodule.exports = AudioRecorder;\n","import JitsiConference from './JitsiConference';\nimport * as JitsiConnectionEvents from './JitsiConnectionEvents';\nimport Statistics from './modules/statistics/statistics';\nimport XMPP from './modules/xmpp/xmpp';\nimport {\n    CONNECTION_DISCONNECTED as ANALYTICS_CONNECTION_DISCONNECTED,\n    createConnectionFailedEvent\n} from './service/statistics/AnalyticsEvents';\n\n/**\n * Creates a new connection object for the Jitsi Meet server side video\n * conferencing service. Provides access to the JitsiConference interface.\n * @param appID identification for the provider of Jitsi Meet video conferencing\n * services.\n * @param token the JWT token used to authenticate with the server(optional)\n * @param options Object with properties / settings related to connection with\n * the server.\n * @constructor\n */\nexport default function JitsiConnection(appID, token, options) {\n    this.appID = appID;\n    this.token = token;\n    this.options = options;\n    this.xmpp = new XMPP(options, token);\n\n    /* eslint-disable max-params */\n    this.addEventListener(JitsiConnectionEvents.CONNECTION_FAILED,\n        (errType, msg, credentials, details) => {\n            Statistics.sendAnalyticsAndLog(\n                createConnectionFailedEvent(errType, msg, details));\n        });\n    /* eslint-enable max-params */\n\n    this.addEventListener(JitsiConnectionEvents.CONNECTION_DISCONNECTED,\n        msg => {\n            // we can see disconnects from normal tab closing of the browser\n            // and then there are no msgs, but we want to log only disconnects\n            // when there is real error\n            // XXX Do we need the difference in handling between the log and\n            // analytics event here?\n            if (msg) {\n                Statistics.sendAnalytics(\n                    ANALYTICS_CONNECTION_DISCONNECTED,\n                    { message: msg });\n            }\n            Statistics.sendLog(\n                JSON.stringify(\n                    {\n                        id: ANALYTICS_CONNECTION_DISCONNECTED,\n                        msg\n                    }));\n        });\n}\n\n/**\n * Connect the client with the server.\n * @param options {object} connecting options\n * (for example authentications parameters).\n */\nJitsiConnection.prototype.connect = function(options = {}) {\n    this.xmpp.connect(options.id, options.password);\n};\n\n/**\n * Attach to existing connection. Can be used for optimizations. For example:\n * if the connection is created on the server we can attach to it and start\n * using it.\n *\n * @param options {object} connecting options - rid, sid and jid.\n */\nJitsiConnection.prototype.attach = function(options) {\n    this.xmpp.attach(options);\n};\n\n/**\n * Disconnect the client from the server.\n * @returns {Promise} - Resolves when the disconnect process is finished or rejects with an error.\n */\nJitsiConnection.prototype.disconnect = function(...args) {\n    // XXX Forward any arguments passed to JitsiConnection.disconnect to\n    // XMPP.disconnect. For example, the caller of JitsiConnection.disconnect\n    // may optionally pass the event which triggered the disconnect in order to\n    // provide the implementation with finer-grained context.\n    return this.xmpp.disconnect(...args);\n};\n\n/**\n * Returns the jid of the participant associated with the XMPP connection.\n *\n * @returns {string} The jid of the participant.\n */\nJitsiConnection.prototype.getJid = function() {\n    return this.xmpp.getJid();\n};\n\n/**\n * This method allows renewal of the tokens if they are expiring.\n * @param token the new token.\n */\nJitsiConnection.prototype.setToken = function(token) {\n    this.token = token;\n};\n\n/**\n * Creates and joins new conference.\n * @param name the name of the conference; if null - a generated name will be\n * provided from the api\n * @param options Object with properties / settings related to the conference\n * that will be created.\n * @returns {JitsiConference} returns the new conference object.\n */\nJitsiConnection.prototype.initJitsiConference = function(name, options) {\n    return new JitsiConference({\n        name,\n        config: options,\n        connection: this\n    });\n};\n\n/**\n * Subscribes the passed listener to the event.\n * @param event {JitsiConnectionEvents} the connection event.\n * @param listener {Function} the function that will receive the event\n */\nJitsiConnection.prototype.addEventListener = function(event, listener) {\n    this.xmpp.addListener(event, listener);\n};\n\n/**\n * Unsubscribes the passed handler.\n * @param event {JitsiConnectionEvents} the connection event.\n * @param listener {Function} the function that will receive the event\n */\nJitsiConnection.prototype.removeEventListener = function(event, listener) {\n    this.xmpp.removeListener(event, listener);\n};\n\n/**\n * Returns measured connectionTimes.\n */\nJitsiConnection.prototype.getConnectionTimes = function() {\n    return this.xmpp.connectionTimes;\n};\n\n/**\n * Adds new feature to the list of supported features for the local\n * participant.\n * @param {String} feature the name of the feature.\n * @param {boolean} submit if true - the new list of features will be\n * immediately submitted to the others.\n */\nJitsiConnection.prototype.addFeature = function(feature, submit = false) {\n    this.xmpp.caps.addFeature(feature, submit, true);\n};\n\n/**\n * Removes a feature from the list of supported features for the local\n * participant\n * @param {String} feature the name of the feature.\n * @param {boolean} submit if true - the new list of features will be\n * immediately submitted to the others.\n */\nJitsiConnection.prototype.removeFeature = function(feature, submit = false) {\n    this.xmpp.caps.removeFeature(feature, submit, true);\n};\n\n/**\n * Get object with internal logs.\n */\nJitsiConnection.prototype.getLogs = function() {\n    const data = this.xmpp.getJingleLog();\n\n    const metadata = {};\n\n    metadata.time = new Date();\n    metadata.url = window.location.href;\n    metadata.ua = navigator.userAgent;\n\n    const log = this.xmpp.getXmppLog();\n\n    if (log) {\n        metadata.xmpp = log;\n    }\n\n    data.metadata = metadata;\n\n    return data;\n};\n","/* global __filename, $, Promise */\n\nimport EventEmitter from 'events';\nimport { getLogger } from 'jitsi-meet-logger';\nimport isEqual from 'lodash.isequal';\nimport { Strophe } from 'strophe.js';\n\nimport * as JitsiConferenceErrors from './JitsiConferenceErrors';\nimport JitsiConferenceEventManager from './JitsiConferenceEventManager';\nimport * as JitsiConferenceEvents from './JitsiConferenceEvents';\nimport JitsiParticipant from './JitsiParticipant';\nimport JitsiTrackError from './JitsiTrackError';\nimport * as JitsiTrackErrors from './JitsiTrackErrors';\nimport * as JitsiTrackEvents from './JitsiTrackEvents';\nimport authenticateAndUpgradeRole from './authenticateAndUpgradeRole';\nimport { CodecSelection } from './modules/RTC/CodecSelection';\nimport RTC from './modules/RTC/RTC';\nimport browser from './modules/browser';\nimport ConnectionQuality from './modules/connectivity/ConnectionQuality';\nimport IceFailedHandling\n    from './modules/connectivity/IceFailedHandling';\nimport ParticipantConnectionStatusHandler\n    from './modules/connectivity/ParticipantConnectionStatus';\nimport * as DetectionEvents from './modules/detection/DetectionEvents';\nimport NoAudioSignalDetection from './modules/detection/NoAudioSignalDetection';\nimport P2PDominantSpeakerDetection from './modules/detection/P2PDominantSpeakerDetection';\nimport VADAudioAnalyser from './modules/detection/VADAudioAnalyser';\nimport VADNoiseDetection from './modules/detection/VADNoiseDetection';\nimport VADTalkMutedDetection from './modules/detection/VADTalkMutedDetection';\nimport { E2EEncryption } from './modules/e2ee/E2EEncryption';\nimport E2ePing from './modules/e2eping/e2eping';\nimport Jvb121EventGenerator from './modules/event/Jvb121EventGenerator';\nimport { ReceiveVideoController } from './modules/qualitycontrol/ReceiveVideoController';\nimport { SendVideoController } from './modules/qualitycontrol/SendVideoController';\nimport RecordingManager from './modules/recording/RecordingManager';\nimport Settings from './modules/settings/Settings';\nimport AudioOutputProblemDetector from './modules/statistics/AudioOutputProblemDetector';\nimport AvgRTPStatsReporter from './modules/statistics/AvgRTPStatsReporter';\nimport SpeakerStatsCollector from './modules/statistics/SpeakerStatsCollector';\nimport Statistics from './modules/statistics/statistics';\nimport Transcriber from './modules/transcription/transcriber';\nimport GlobalOnErrorHandler from './modules/util/GlobalOnErrorHandler';\nimport RandomUtil from './modules/util/RandomUtil';\nimport ComponentsVersions from './modules/version/ComponentsVersions';\nimport VideoSIPGW from './modules/videosipgw/VideoSIPGW';\nimport * as VideoSIPGWConstants from './modules/videosipgw/VideoSIPGWConstants';\nimport {\n    FEATURE_E2EE,\n    FEATURE_JIGASI,\n    JITSI_MEET_MUC_TYPE\n} from './modules/xmpp/xmpp';\nimport CodecMimeType from './service/RTC/CodecMimeType';\nimport * as MediaType from './service/RTC/MediaType';\nimport VideoType from './service/RTC/VideoType';\nimport {\n    ACTION_JINGLE_RESTART,\n    ACTION_JINGLE_SI_RECEIVED,\n    ACTION_JINGLE_SI_TIMEOUT,\n    ACTION_JINGLE_TERMINATE,\n    ACTION_P2P_DECLINED,\n    ACTION_P2P_ESTABLISHED,\n    ACTION_P2P_FAILED,\n    ACTION_P2P_SWITCH_TO_JVB,\n    ICE_ESTABLISHMENT_DURATION_DIFF,\n    createConferenceEvent,\n    createJingleEvent,\n    createP2PEvent\n} from './service/statistics/AnalyticsEvents';\nimport * as XMPPEvents from './service/xmpp/XMPPEvents';\n\nconst logger = getLogger(__filename);\n\n/**\n * How long since Jicofo is supposed to send a session-initiate, before\n * {@link ACTION_JINGLE_SI_TIMEOUT} analytics event is sent (in ms).\n * @type {number}\n */\nconst JINGLE_SI_TIMEOUT = 5000;\n\n/**\n * Creates a JitsiConference object with the given name and properties.\n * Note: this constructor is not a part of the public API (objects should be\n * created using JitsiConnection.createConference).\n * @param options.config properties / settings related to the conference that\n * will be created.\n * @param options.name the name of the conference\n * @param options.connection the JitsiConnection object for this\n * JitsiConference.\n * @param {number} [options.config.avgRtpStatsN=15] how many samples are to be\n * collected by {@link AvgRTPStatsReporter}, before arithmetic mean is\n * calculated and submitted to the analytics module.\n * @param {boolean} [options.config.enableIceRestart=false] - enables the ICE\n * restart logic.\n * @param {boolean} [options.config.p2p.enabled] when set to <tt>true</tt>\n * the peer to peer mode will be enabled. It means that when there are only 2\n * participants in the conference an attempt to make direct connection will be\n * made. If the connection succeeds the conference will stop sending data\n * through the JVB connection and will use the direct one instead.\n * @param {number} [options.config.p2p.backToP2PDelay=5] a delay given in\n * seconds, before the conference switches back to P2P, after the 3rd\n * participant has left the room.\n * @param {number} [options.config.channelLastN=-1] The requested amount of\n * videos are going to be delivered after the value is in effect. Set to -1 for\n * unlimited or all available videos.\n * @param {number} [options.config.forceJVB121Ratio]\n * \"Math.random() < forceJVB121Ratio\" will determine whether a 2 people\n * conference should be moved to the JVB instead of P2P. The decision is made on\n * the responder side, after ICE succeeds on the P2P connection.\n * @constructor\n *\n * FIXME Make all methods which are called from lib-internal classes\n *       to non-public (use _). To name a few:\n *       {@link JitsiConference.onLocalRoleChanged}\n *       {@link JitsiConference.onUserRoleChanged}\n *       {@link JitsiConference.onMemberLeft}\n *       and so on...\n */\nexport default function JitsiConference(options) {\n    if (!options.name || options.name.toLowerCase() !== options.name) {\n        const errmsg\n            = 'Invalid conference name (no conference name passed or it '\n                + 'contains invalid characters like capital letters)!';\n\n        logger.error(errmsg);\n        throw new Error(errmsg);\n    }\n    this.eventEmitter = new EventEmitter();\n    this.options = options;\n    this.eventManager = new JitsiConferenceEventManager(this);\n    this.participants = {};\n    this._init(options);\n    this.componentsVersions = new ComponentsVersions(this);\n\n    /**\n     * Jingle session instance for the JVB connection.\n     * @type {JingleSessionPC}\n     */\n    this.jvbJingleSession = null;\n    this.lastDominantSpeaker = null;\n    this.dtmfManager = null;\n    this.somebodySupportsDTMF = false;\n    this.authEnabled = false;\n    this.startAudioMuted = false;\n    this.startVideoMuted = false;\n    this.startMutedPolicy = {\n        audio: false,\n        video: false\n    };\n    this.isMutedByFocus = false;\n\n    // when muted by focus we receive the jid of the initiator of the mute\n    this.mutedByFocusActor = null;\n\n    this.isVideoMutedByFocus = false;\n\n    // when video muted by focus we receive the jid of the initiator of the mute\n    this.mutedVideoByFocusActor = null;\n\n    // Flag indicates if the 'onCallEnded' method was ever called on this\n    // instance. Used to log extra analytics event for debugging purpose.\n    // We need to know if the potential issue happened before or after\n    // the restart.\n    this.wasStopped = false;\n\n    // Conference properties, maintained by jicofo.\n    this.properties = {};\n\n    /**\n     * The object which monitors local and remote connection statistics (e.g.\n     * sending bitrate) and calculates a number which represents the connection\n     * quality.\n     */\n    this.connectionQuality\n        = new ConnectionQuality(this, this.eventEmitter, options);\n\n    /**\n     * Reports average RTP statistics to the analytics module.\n     * @type {AvgRTPStatsReporter}\n     */\n    this.avgRtpStatsReporter\n        = new AvgRTPStatsReporter(this, options.config.avgRtpStatsN || 15);\n\n    /**\n     * Detects issues with the audio of remote participants.\n     * @type {AudioOutputProblemDetector}\n     */\n    this._audioOutputProblemDetector = new AudioOutputProblemDetector(this);\n\n    /**\n     * Indicates whether the connection is interrupted or not.\n     */\n    this.isJvbConnectionInterrupted = false;\n\n    /**\n     * The object which tracks active speaker times\n     */\n    this.speakerStatsCollector = new SpeakerStatsCollector(this);\n\n    /* P2P related fields below: */\n\n    /**\n     * Stores reference to deferred start P2P task. It's created when 3rd\n     * participant leaves the room in order to avoid ping pong effect (it\n     * could be just a page reload).\n     * @type {number|null}\n     */\n    this.deferredStartP2PTask = null;\n\n    const delay\n        = parseInt(options.config.p2p && options.config.p2p.backToP2PDelay, 10);\n\n    /**\n     * A delay given in seconds, before the conference switches back to P2P\n     * after the 3rd participant has left.\n     * @type {number}\n     */\n    this.backToP2PDelay = isNaN(delay) ? 5 : delay;\n    logger.info(`backToP2PDelay: ${this.backToP2PDelay}`);\n\n    /**\n     * If set to <tt>true</tt> it means the P2P ICE is no longer connected.\n     * When <tt>false</tt> it means that P2P ICE (media) connection is up\n     * and running.\n     * @type {boolean}\n     */\n    this.isP2PConnectionInterrupted = false;\n\n    /**\n     * Flag set to <tt>true</tt> when P2P session has been established\n     * (ICE has been connected) and this conference is currently in the peer to\n     * peer mode (P2P connection is the active one).\n     * @type {boolean}\n     */\n    this.p2p = false;\n\n    /**\n     * A JingleSession for the direct peer to peer connection.\n     * @type {JingleSessionPC}\n     */\n    this.p2pJingleSession = null;\n\n    this.videoSIPGWHandler = new VideoSIPGW(this.room);\n    this.recordingManager = new RecordingManager(this.room);\n\n    /**\n     * If the conference.joined event has been sent this will store the timestamp when it happened.\n     *\n     * @type {undefined|number}\n     * @private\n     */\n    this._conferenceJoinAnalyticsEventSent = undefined;\n\n    /**\n     * End-to-End Encryption. Make it available if supported.\n     */\n    if (this.isE2EESupported()) {\n        logger.info('End-to-End Encryprtion is supported');\n\n        this._e2eEncryption = new E2EEncryption(this);\n    }\n}\n\n// FIXME convert JitsiConference to ES6 - ASAP !\nJitsiConference.prototype.constructor = JitsiConference;\n\n/**\n * Create a resource for the a jid. We use the room nickname (the resource part\n * of the occupant JID, see XEP-0045) as the endpoint ID in colibri. We require\n * endpoint IDs to be 8 hex digits because in some cases they get serialized\n * into a 32bit field.\n *\n * @param {string} jid - The id set onto the XMPP connection.\n * @param {boolean} isAuthenticatedUser - Whether or not the user has connected\n * to the XMPP service with a password.\n * @returns {string}\n * @static\n */\nJitsiConference.resourceCreator = function(jid, isAuthenticatedUser) {\n    let mucNickname;\n\n    if (isAuthenticatedUser) {\n        // For authenticated users generate a random ID.\n        mucNickname = RandomUtil.randomHexString(8).toLowerCase();\n    } else {\n        // We try to use the first part of the node (which for anonymous users\n        // on prosody is a UUID) to match the previous behavior (and maybe make\n        // debugging easier).\n        mucNickname = Strophe.getNodeFromJid(jid).substr(0, 8)\n            .toLowerCase();\n\n        // But if this doesn't have the required format we just generate a new\n        // random nickname.\n        const re = /[0-9a-f]{8}/g;\n\n        if (!re.test(mucNickname)) {\n            mucNickname = RandomUtil.randomHexString(8).toLowerCase();\n        }\n    }\n\n    return mucNickname;\n};\n\n/**\n * Initializes the conference object properties\n * @param options {object}\n * @param options.connection {JitsiConnection} overrides this.connection\n */\nJitsiConference.prototype._init = function(options = {}) {\n    // Override connection and xmpp properties (Useful if the connection\n    // reloaded)\n    if (options.connection) {\n        this.connection = options.connection;\n        this.xmpp = this.connection.xmpp;\n\n        // Setup XMPP events only if we have new connection object.\n        this.eventManager.setupXMPPListeners();\n    }\n\n    const { config } = this.options;\n\n    // Get the codec preference settings from config.js.\n    // 'preferH264' and 'disableH264' settings have been deprecated for a while,\n    // 'preferredCodec' and 'disabledCodec' will have precedence over them.\n    const codecSettings = {\n        disabledCodec: config.videoQuality\n            ? config.videoQuality.disabledCodec\n            : config.p2p && config.p2p.disableH264 && CodecMimeType.H264,\n        enforcePreferredCodec: config.videoQuality && config.videoQuality.enforcePreferredCodec,\n        jvbCodec: (config.videoQuality && config.videoQuality.preferredCodec)\n            || (config.preferH264 && CodecMimeType.H264),\n        p2pCodec: config.p2p\n            ? config.p2p.preferredCodec || (config.p2p.preferH264 && CodecMimeType.H264)\n            : CodecMimeType.VP8\n    };\n\n    this.codecSelection = new CodecSelection(this, codecSettings);\n    this._statsCurrentId = config.statisticsId ? config.statisticsId : Settings.callStatsUserName;\n    this.room = this.xmpp.createRoom(\n        this.options.name, {\n            ...config,\n            statsId: this._statsCurrentId\n        },\n        JitsiConference.resourceCreator\n    );\n\n    // Connection interrupted/restored listeners\n    this._onIceConnectionInterrupted\n        = this._onIceConnectionInterrupted.bind(this);\n    this.room.addListener(\n        XMPPEvents.CONNECTION_INTERRUPTED, this._onIceConnectionInterrupted);\n\n    this._onIceConnectionRestored = this._onIceConnectionRestored.bind(this);\n    this.room.addListener(\n        XMPPEvents.CONNECTION_RESTORED, this._onIceConnectionRestored);\n\n    this._onIceConnectionEstablished\n        = this._onIceConnectionEstablished.bind(this);\n    this.room.addListener(\n        XMPPEvents.CONNECTION_ESTABLISHED, this._onIceConnectionEstablished);\n\n    this._updateProperties = this._updateProperties.bind(this);\n    this.room.addListener(XMPPEvents.CONFERENCE_PROPERTIES_CHANGED,\n        this._updateProperties);\n\n    this._sendConferenceJoinAnalyticsEvent = this._sendConferenceJoinAnalyticsEvent.bind(this);\n    this.room.addListener(XMPPEvents.MEETING_ID_SET, this._sendConferenceJoinAnalyticsEvent);\n\n    this.e2eping = new E2ePing(\n        this,\n        config,\n        (message, to) => {\n            try {\n                this.sendMessage(\n                    message, to, true /* sendThroughVideobridge */);\n            } catch (error) {\n                logger.warn('Failed to send E2E ping request or response.', error && error.msg);\n            }\n        });\n\n    if (!this.rtc) {\n        this.rtc = new RTC(this, options);\n        this.eventManager.setupRTCListeners();\n    }\n\n    this.receiveVideoController = new ReceiveVideoController(this, this.rtc);\n    this.sendVideoController = new SendVideoController(this, this.rtc);\n\n    this.participantConnectionStatus\n        = new ParticipantConnectionStatusHandler(\n            this.rtc,\n            this,\n            {\n                // Both these options are not public API, leaving it here only\n                // as an entry point through config for tuning up purposes.\n                // Default values should be adjusted as soon as optimal values\n                // are discovered.\n                rtcMuteTimeout: config._peerConnStatusRtcMuteTimeout,\n                outOfLastNTimeout: config._peerConnStatusOutOfLastNTimeout\n            });\n    this.participantConnectionStatus.init();\n\n    // Add the ability to enable callStats only on a percentage of users based on config.js settings.\n    let enableCallStats = true;\n\n    if (config.testing && config.testing.callStatsThreshold) {\n        enableCallStats = (Math.random() * 100) <= config.testing.callStatsThreshold;\n    }\n\n    if (!this.statistics) {\n        this.statistics = new Statistics(this.xmpp, {\n            aliasName: this._statsCurrentId,\n            userName: config.statisticsDisplayName ? config.statisticsDisplayName : this.myUserId(),\n            confID: config.confID || `${this.connection.options.hosts.domain}/${this.options.name}`,\n            siteID: config.siteID,\n            customScriptUrl: config.callStatsCustomScriptUrl,\n            callStatsID: config.callStatsID,\n            callStatsSecret: config.callStatsSecret,\n            callStatsApplicationLogsDisabled: config.callStatsApplicationLogsDisabled,\n            enableCallStats,\n            roomName: this.options.name,\n            applicationName: config.applicationName,\n            getWiFiStatsMethod: config.getWiFiStatsMethod\n        });\n        Statistics.analytics.addPermanentProperties({\n            'callstats_name': this._statsCurrentId\n        });\n\n        // Start performance observer for monitoring long tasks\n        if (config.longTasksStatsInterval) {\n            this.statistics.attachLongTasksStats(this);\n        }\n    }\n\n    this.eventManager.setupChatRoomListeners();\n\n    // Always add listeners because on reload we are executing leave and the\n    // listeners are removed from statistics module.\n    this.eventManager.setupStatisticsListeners();\n\n    // Disable VAD processing on Safari since it causes audio input to\n    // fail on some of the mobile devices.\n    if (config.enableTalkWhileMuted && browser.supportsVADDetection()) {\n        // If VAD processor factory method is provided uses VAD based detection, otherwise fallback to audio level\n        // based detection.\n        if (config.createVADProcessor) {\n            logger.info('Using VAD detection for generating talk while muted events');\n\n            if (!this._audioAnalyser) {\n                this._audioAnalyser = new VADAudioAnalyser(this, config.createVADProcessor);\n            }\n\n            const vadTalkMutedDetection = new VADTalkMutedDetection();\n\n            vadTalkMutedDetection.on(DetectionEvents.VAD_TALK_WHILE_MUTED, () =>\n                this.eventEmitter.emit(JitsiConferenceEvents.TALK_WHILE_MUTED));\n\n            this._audioAnalyser.addVADDetectionService(vadTalkMutedDetection);\n        } else {\n            logger.warn('No VAD Processor was provided. Talk while muted detection service was not initialized!');\n        }\n    }\n\n    // Disable noisy mic detection on safari since it causes the audio input to\n    // fail on Safari on iPadOS.\n    if (config.enableNoisyMicDetection && browser.supportsVADDetection()) {\n        if (config.createVADProcessor) {\n            if (!this._audioAnalyser) {\n                this._audioAnalyser = new VADAudioAnalyser(this, config.createVADProcessor);\n            }\n\n            const vadNoiseDetection = new VADNoiseDetection();\n\n            vadNoiseDetection.on(DetectionEvents.VAD_NOISY_DEVICE, () =>\n                this.eventEmitter.emit(JitsiConferenceEvents.NOISY_MIC));\n\n            this._audioAnalyser.addVADDetectionService(vadNoiseDetection);\n        } else {\n            logger.warn('No VAD Processor was provided. Noisy microphone detection service was not initialized!');\n        }\n    }\n\n    // Generates events based on no audio input detector.\n    if (config.enableNoAudioDetection) {\n        this._noAudioSignalDetection = new NoAudioSignalDetection(this);\n        this._noAudioSignalDetection.on(DetectionEvents.NO_AUDIO_INPUT, () => {\n            this.eventEmitter.emit(JitsiConferenceEvents.NO_AUDIO_INPUT);\n        });\n        this._noAudioSignalDetection.on(DetectionEvents.AUDIO_INPUT_STATE_CHANGE, hasAudioSignal => {\n            this.eventEmitter.emit(JitsiConferenceEvents.AUDIO_INPUT_STATE_CHANGE, hasAudioSignal);\n        });\n    }\n\n\n    if ('channelLastN' in config) {\n        this.setLastN(config.channelLastN);\n    }\n\n    /**\n     * Emits {@link JitsiConferenceEvents.JVB121_STATUS}.\n     * @type {Jvb121EventGenerator}\n     */\n    this.jvb121Status = new Jvb121EventGenerator(this);\n\n    // creates dominant speaker detection that works only in p2p mode\n    this.p2pDominantSpeakerDetection = new P2PDominantSpeakerDetection(this);\n\n    if (config && config.deploymentInfo && config.deploymentInfo.userRegion) {\n        this.setLocalParticipantProperty(\n            'region', config.deploymentInfo.userRegion);\n    }\n\n    // Publish the codec type to presence.\n    this.setLocalParticipantProperty('codecType', this.codecSelection.getPreferredCodec());\n};\n\n/**\n * Joins the conference.\n * @param password {string} the password\n * @param replaceParticipant {boolean} whether the current join replaces\n * an existing participant with same jwt from the meeting.\n */\nJitsiConference.prototype.join = function(password, replaceParticipant = false) {\n    if (this.room) {\n        this.room.join(password, replaceParticipant).then(() => this._maybeSetSITimeout());\n    }\n};\n\n/**\n * Authenticates and upgrades the role of the local participant/user.\n *\n * @returns {Object} A <tt>thenable</tt> which (1) settles when the process of\n * authenticating and upgrading the role of the local participant/user finishes\n * and (2) has a <tt>cancel</tt> method that allows the caller to interrupt the\n * process.\n */\nJitsiConference.prototype.authenticateAndUpgradeRole = function(options) {\n    return authenticateAndUpgradeRole.call(this, {\n        ...options,\n        onCreateResource: JitsiConference.resourceCreator\n    });\n};\n\n/**\n * Check if joined to the conference.\n */\nJitsiConference.prototype.isJoined = function() {\n    return this.room && this.room.joined;\n};\n\n/**\n * Tells whether or not the P2P mode is enabled in the configuration.\n * @return {boolean}\n */\nJitsiConference.prototype.isP2PEnabled = function() {\n    return Boolean(this.options.config.p2p && this.options.config.p2p.enabled)\n\n        // FIXME: remove once we have a default config template. -saghul\n        || typeof this.options.config.p2p === 'undefined';\n};\n\n/**\n * When in P2P test mode, the conference will not automatically switch to P2P\n * when there 2 participants.\n * @return {boolean}\n */\nJitsiConference.prototype.isP2PTestModeEnabled = function() {\n    return Boolean(this.options.config.testing\n        && this.options.config.testing.p2pTestMode);\n};\n\n/**\n * Leaves the conference.\n * @returns {Promise}\n */\nJitsiConference.prototype.leave = function() {\n    if (this.participantConnectionStatus) {\n        this.participantConnectionStatus.dispose();\n        this.participantConnectionStatus = null;\n    }\n    if (this.avgRtpStatsReporter) {\n        this.avgRtpStatsReporter.dispose();\n        this.avgRtpStatsReporter = null;\n    }\n\n    if (this._audioOutputProblemDetector) {\n        this._audioOutputProblemDetector.dispose();\n        this._audioOutputProblemDetector = null;\n    }\n\n    if (this.e2eping) {\n        this.e2eping.stop();\n        this.e2eping = null;\n    }\n\n    this.getLocalTracks().forEach(track => this.onLocalTrackRemoved(track));\n\n    this.rtc.closeBridgeChannel();\n\n    this._sendConferenceLeftAnalyticsEvent();\n\n    if (this.statistics) {\n        this.statistics.dispose();\n    }\n\n    this._delayedIceFailed && this._delayedIceFailed.cancel();\n\n    // Close both JVb and P2P JingleSessions\n    if (this.jvbJingleSession) {\n        this.jvbJingleSession.close();\n        this.jvbJingleSession = null;\n    }\n    if (this.p2pJingleSession) {\n        this.p2pJingleSession.close();\n        this.p2pJingleSession = null;\n    }\n\n    // leave the conference\n    if (this.room) {\n        const room = this.room;\n\n        // Unregister connection state listeners\n        room.removeListener(\n            XMPPEvents.CONNECTION_INTERRUPTED,\n            this._onIceConnectionInterrupted);\n        room.removeListener(\n            XMPPEvents.CONNECTION_RESTORED,\n            this._onIceConnectionRestored);\n        room.removeListener(\n            XMPPEvents.CONNECTION_ESTABLISHED,\n            this._onIceConnectionEstablished);\n\n        room.removeListener(\n            XMPPEvents.CONFERENCE_PROPERTIES_CHANGED,\n            this._updateProperties);\n\n        room.removeListener(XMPPEvents.MEETING_ID_SET, this._sendConferenceJoinAnalyticsEvent);\n\n        this.eventManager.removeXMPPListeners();\n\n        this.room = null;\n\n        return room.leave()\n            .then(() => {\n                if (this.rtc) {\n                    this.rtc.destroy();\n                }\n            })\n            .catch(error => {\n                // remove all participants because currently the conference\n                // won't be usable anyway. This is done on success automatically\n                // by the ChatRoom instance.\n                this.getParticipants().forEach(\n                    participant => this.onMemberLeft(participant.getJid()));\n\n                throw error;\n            });\n    }\n\n    // If this.room == null we are calling second time leave().\n    return Promise.reject(\n        new Error('The conference is has been already left'));\n};\n\n/**\n * Returns the currently active media session if any.\n *\n * @returns {JingleSessionPC|undefined}\n * @private\n */\nJitsiConference.prototype._getActiveMediaSession = function() {\n    return this.isP2PActive() ? this.p2pJingleSession : this.jvbJingleSession;\n};\n\n/**\n * Returns an array containing all media sessions existing in this conference.\n *\n * @returns {Array<JingleSessionPC>}\n * @private\n */\nJitsiConference.prototype._getMediaSessions = function() {\n    const sessions = [];\n\n    this.jvbJingleSession && sessions.push(this.jvbJingleSession);\n    this.p2pJingleSession && sessions.push(this.p2pJingleSession);\n\n    return sessions;\n};\n\n/**\n * Returns name of this conference.\n */\nJitsiConference.prototype.getName = function() {\n    return this.options.name;\n};\n\n/**\n * Returns the {@link JitsiConnection} used by this this conference.\n */\nJitsiConference.prototype.getConnection = function() {\n    return this.connection;\n};\n\n/**\n * Check if authentication is enabled for this conference.\n */\nJitsiConference.prototype.isAuthEnabled = function() {\n    return this.authEnabled;\n};\n\n/**\n * Check if user is logged in.\n */\nJitsiConference.prototype.isLoggedIn = function() {\n    return Boolean(this.authIdentity);\n};\n\n/**\n * Get authorized login.\n */\nJitsiConference.prototype.getAuthLogin = function() {\n    return this.authIdentity;\n};\n\n/**\n * Check if external authentication is enabled for this conference.\n */\nJitsiConference.prototype.isExternalAuthEnabled = function() {\n    return this.room && this.room.moderator.isExternalAuthEnabled();\n};\n\n/**\n * Get url for external authentication.\n * @param {boolean} [urlForPopup] if true then return url for login popup,\n *                                else url of login page.\n * @returns {Promise}\n */\nJitsiConference.prototype.getExternalAuthUrl = function(urlForPopup) {\n    return new Promise((resolve, reject) => {\n        if (!this.isExternalAuthEnabled()) {\n            reject();\n\n            return;\n        }\n        if (urlForPopup) {\n            this.room.moderator.getPopupLoginUrl(resolve, reject);\n        } else {\n            this.room.moderator.getLoginUrl(resolve, reject);\n        }\n    });\n};\n\n/**\n * Returns the local tracks of the given media type, or all local tracks if no\n * specific type is given.\n * @param {MediaType} [mediaType] Optional media type (audio or video).\n */\nJitsiConference.prototype.getLocalTracks = function(mediaType) {\n    let tracks = [];\n\n    if (this.rtc) {\n        tracks = this.rtc.getLocalTracks(mediaType);\n    }\n\n    return tracks;\n};\n\n/**\n * Obtains local audio track.\n * @return {JitsiLocalTrack|null}\n */\nJitsiConference.prototype.getLocalAudioTrack = function() {\n    return this.rtc ? this.rtc.getLocalAudioTrack() : null;\n};\n\n/**\n * Obtains local video track.\n * @return {JitsiLocalTrack|null}\n */\nJitsiConference.prototype.getLocalVideoTrack = function() {\n    return this.rtc ? this.rtc.getLocalVideoTrack() : null;\n};\n\n/**\n * Obtains the performance statistics.\n * @returns {Object|null}\n */\nJitsiConference.prototype.getPerformanceStats = function() {\n    return {\n        longTasksStats: this.statistics.getLongTasksStats()\n    };\n};\n\n/**\n * Attaches a handler for events(For example - \"participant joined\".) in the\n * conference. All possible event are defined in JitsiConferenceEvents.\n * @param eventId the event ID.\n * @param handler handler for the event.\n *\n * Note: consider adding eventing functionality by extending an EventEmitter\n * impl, instead of rolling ourselves\n */\nJitsiConference.prototype.on = function(eventId, handler) {\n    if (this.eventEmitter) {\n        this.eventEmitter.on(eventId, handler);\n    }\n};\n\n/**\n * Removes event listener\n * @param eventId the event ID.\n * @param [handler] optional, the specific handler to unbind\n *\n * Note: consider adding eventing functionality by extending an EventEmitter\n * impl, instead of rolling ourselves\n */\nJitsiConference.prototype.off = function(eventId, handler) {\n    if (this.eventEmitter) {\n        this.eventEmitter.removeListener(eventId, handler);\n    }\n};\n\n// Common aliases for event emitter\nJitsiConference.prototype.addEventListener = JitsiConference.prototype.on;\nJitsiConference.prototype.removeEventListener = JitsiConference.prototype.off;\n\n/**\n * Receives notifications from other participants about commands / custom events\n * (sent by sendCommand or sendCommandOnce methods).\n * @param command {String} the name of the command\n * @param handler {Function} handler for the command\n */\nJitsiConference.prototype.addCommandListener = function(command, handler) {\n    if (this.room) {\n        this.room.addPresenceListener(command, handler);\n    }\n};\n\n/**\n  * Removes command  listener\n  * @param command {String} the name of the command\n  * @param handler {Function} handler to remove for the command\n  */\nJitsiConference.prototype.removeCommandListener = function(command, handler) {\n    if (this.room) {\n        this.room.removePresenceListener(command, handler);\n    }\n};\n\n/**\n * Sends text message to the other participants in the conference\n * @param message the text message.\n * @param elementName the element name to encapsulate the message.\n * @deprecated Use 'sendMessage' instead. TODO: this should be private.\n */\nJitsiConference.prototype.sendTextMessage = function(\n        message, elementName = 'body') {\n    if (this.room) {\n        this.room.sendMessage(message, elementName);\n    }\n};\n\n/**\n * Send private text message to another participant of the conference\n * @param id the id of the participant to send a private message.\n * @param message the text message.\n * @param elementName the element name to encapsulate the message.\n * @deprecated Use 'sendMessage' instead. TODO: this should be private.\n */\nJitsiConference.prototype.sendPrivateTextMessage = function(\n        id, message, elementName = 'body') {\n    if (this.room) {\n        this.room.sendPrivateMessage(id, message, elementName);\n    }\n};\n\n/**\n * Send presence command.\n * @param name {String} the name of the command.\n * @param values {Object} with keys and values that will be sent.\n **/\nJitsiConference.prototype.sendCommand = function(name, values) {\n    if (this.room) {\n        this.room.addOrReplaceInPresence(name, values) && this.room.sendPresence();\n    } else {\n        logger.warn('Not sending a command, room not initialized.');\n    }\n\n};\n\n/**\n * Send presence command one time.\n * @param name {String} the name of the command.\n * @param values {Object} with keys and values that will be sent.\n **/\nJitsiConference.prototype.sendCommandOnce = function(name, values) {\n    this.sendCommand(name, values);\n    this.removeCommand(name);\n};\n\n/**\n * Removes presence command.\n * @param name {String} the name of the command.\n **/\nJitsiConference.prototype.removeCommand = function(name) {\n    if (this.room) {\n        this.room.removeFromPresence(name);\n    }\n};\n\n/**\n * Sets the display name for this conference.\n * @param name the display name to set\n */\nJitsiConference.prototype.setDisplayName = function(name) {\n    if (this.room) {\n        this.room.addOrReplaceInPresence('nick', {\n            attributes: { xmlns: 'http://jabber.org/protocol/nick' },\n            value: name\n        }) && this.room.sendPresence();\n    }\n};\n\n/**\n * Set new subject for this conference. (available only for moderator)\n * @param {string} subject new subject\n */\nJitsiConference.prototype.setSubject = function(subject) {\n    if (this.room && this.isModerator()) {\n        this.room.setSubject(subject);\n    } else {\n        logger.warn(`Failed to set subject, ${this.room ? '' : 'not in a room, '}${\n            this.isModerator() ? '' : 'participant is not a moderator'}`);\n    }\n};\n\n/**\n * Get a transcriber object for all current participants in this conference\n * @return {Transcriber} the transcriber object\n */\nJitsiConference.prototype.getTranscriber = function() {\n    if (this.transcriber === undefined) {\n        this.transcriber = new Transcriber();\n\n        // add all existing local audio tracks to the transcriber\n        const localAudioTracks = this.getLocalTracks(MediaType.AUDIO);\n\n        for (const localAudio of localAudioTracks) {\n            this.transcriber.addTrack(localAudio);\n        }\n\n        // and all remote audio tracks\n        const remoteAudioTracks = this.rtc.getRemoteTracks(MediaType.AUDIO);\n\n        for (const remoteTrack of remoteAudioTracks) {\n            this.transcriber.addTrack(remoteTrack);\n        }\n    }\n\n    return this.transcriber;\n};\n\n/**\n * Returns the transcription status.\n *\n * @returns {String} \"on\" or \"off\".\n */\nJitsiConference.prototype.getTranscriptionStatus = function() {\n    return this.room.transcriptionStatus;\n};\n\n/**\n * Adds JitsiLocalTrack object to the conference.\n * @param {JitsiLocalTrack} track the JitsiLocalTrack object.\n * @returns {Promise<JitsiLocalTrack>}\n * @throws {Error} if the specified track is a video track and there is already\n * another video track in the conference.\n */\nJitsiConference.prototype.addTrack = function(track) {\n    const mediaType = track.getType();\n    const localTracks = this.rtc.getLocalTracks(mediaType);\n\n    // Ensure there's exactly 1 local track of each media type in the conference.\n    if (localTracks.length > 0) {\n        // Don't be excessively harsh and severe if the API client happens to attempt to add the same local track twice.\n        if (track === localTracks[0]) {\n            return Promise.resolve(track);\n        }\n\n        return Promise.reject(new Error(`Cannot add second ${mediaType} track to the conference`));\n    }\n\n    return this.replaceTrack(null, track);\n};\n\n/**\n * Fires TRACK_AUDIO_LEVEL_CHANGED change conference event (for local tracks).\n * @param {number} audioLevel the audio level\n * @param {TraceablePeerConnection} [tpc]\n */\nJitsiConference.prototype._fireAudioLevelChangeEvent = function(\n        audioLevel,\n        tpc) {\n    const activeTpc = this.getActivePeerConnection();\n\n    // There will be no TraceablePeerConnection if audio levels do not come from\n    // a peerconnection. LocalStatsCollector.js measures audio levels using Web\n    // Audio Analyser API and emits local audio levels events through\n    // JitsiTrack.setAudioLevel, but does not provide TPC instance which is\n    // optional.\n    if (!tpc || activeTpc === tpc) {\n        this.eventEmitter.emit(\n            JitsiConferenceEvents.TRACK_AUDIO_LEVEL_CHANGED,\n            this.myUserId(), audioLevel);\n    }\n};\n\n/**\n * Fires TRACK_MUTE_CHANGED change conference event.\n * @param track the JitsiTrack object related to the event.\n */\nJitsiConference.prototype._fireMuteChangeEvent = function(track) {\n    // check if track was muted by focus and now is unmuted by user\n    if (this.isMutedByFocus && track.isAudioTrack() && !track.isMuted()) {\n        this.isMutedByFocus = false;\n\n        // unmute local user on server\n        this.room.muteParticipant(this.room.myroomjid, false, MediaType.AUDIO);\n    } else if (this.isVideoMutedByFocus && track.isVideoTrack() && !track.isMuted()) {\n        this.isVideoMutedByFocus = false;\n\n        // unmute local user on server\n        this.room.muteParticipant(this.room.myroomjid, false, MediaType.VIDEO);\n    }\n\n    let actorParticipant;\n\n    if (this.mutedByFocusActor && track.isAudioTrack()) {\n        const actorId = Strophe.getResourceFromJid(this.mutedByFocusActor);\n\n        actorParticipant = this.participants[actorId];\n    } else if (this.mutedVideoByFocusActor && track.isVideoTrack()) {\n        const actorId = Strophe.getResourceFromJid(this.mutedVideoByFocusActor);\n\n        actorParticipant = this.participants[actorId];\n    }\n\n    // Send the video type message to the bridge if the track is not removed/added to the pc as part of\n    // the mute/unmute operation. This currently happens only on Firefox.\n    if (track.isVideoTrack() && !browser.doesVideoMuteByStreamRemove()) {\n        const videoType = track.isMuted() ? VideoType.NONE : track.getVideoType();\n\n        this.rtc.setVideoType(videoType);\n    }\n\n    this.eventEmitter.emit(JitsiConferenceEvents.TRACK_MUTE_CHANGED, track, actorParticipant);\n};\n\n/**\n * Returns the list of local tracks that need to be added to the peerconnection on join.\n * This takes the startAudioMuted/startVideoMuted flags into consideration since we do not\n * want to add the tracks if the user joins the call audio/video muted. The tracks will be\n * added when the user unmutes for the first time.\n * @returns {Array<JitsiLocalTrack>} - list of local tracks that are unmuted.\n */\nJitsiConference.prototype._getInitialLocalTracks = function() {\n    return this.getLocalTracks()\n        .filter(track => (track.getType() === MediaType.AUDIO && !this.isStartAudioMuted())\n        || (track.getType() === MediaType.VIDEO && !this.isStartVideoMuted()));\n};\n\n/**\n * Clear JitsiLocalTrack properties and listeners.\n * @param track the JitsiLocalTrack object.\n */\nJitsiConference.prototype.onLocalTrackRemoved = function(track) {\n    track._setConference(null);\n    this.rtc.removeLocalTrack(track);\n    track.removeEventListener(JitsiTrackEvents.TRACK_MUTE_CHANGED,\n        track.muteHandler);\n    track.removeEventListener(JitsiTrackEvents.TRACK_AUDIO_LEVEL_CHANGED,\n        track.audioLevelHandler);\n\n    // send event for stopping screen sharing\n    // FIXME: we assume we have only one screen sharing track\n    // if we change this we need to fix this check\n    if (track.isVideoTrack() && track.videoType === VideoType.DESKTOP) {\n        this.statistics.sendScreenSharingEvent(false);\n    }\n\n    this.eventEmitter.emit(JitsiConferenceEvents.TRACK_REMOVED, track);\n};\n\n/**\n * Removes JitsiLocalTrack from the conference and performs\n * a new offer/answer cycle.\n * @param {JitsiLocalTrack} track\n * @returns {Promise}\n */\nJitsiConference.prototype.removeTrack = function(track) {\n    return this.replaceTrack(track, null);\n};\n\n/**\n * Replaces oldTrack with newTrack and performs a single offer/answer\n *  cycle after both operations are done.  Either oldTrack or newTrack\n *  can be null; replacing a valid 'oldTrack' with a null 'newTrack'\n *  effectively just removes 'oldTrack'\n * @param {JitsiLocalTrack} oldTrack the current stream in use to be replaced\n * @param {JitsiLocalTrack} newTrack the new stream to use\n * @returns {Promise} resolves when the replacement is finished\n */\nJitsiConference.prototype.replaceTrack = function(oldTrack, newTrack) {\n    // First do the removal of the oldTrack at the JitsiConference level\n    if (oldTrack) {\n        if (oldTrack.disposed) {\n            return Promise.reject(\n                new JitsiTrackError(JitsiTrackErrors.TRACK_IS_DISPOSED));\n        }\n    }\n    if (newTrack) {\n        if (newTrack.disposed) {\n            return Promise.reject(\n                new JitsiTrackError(JitsiTrackErrors.TRACK_IS_DISPOSED));\n        }\n    }\n\n    // Now replace the stream at the lower levels\n    return this._doReplaceTrack(oldTrack, newTrack)\n        .then(() => {\n            if (oldTrack) {\n                this.onLocalTrackRemoved(oldTrack);\n            }\n\n            // Send 'VideoTypeMessage' on the bridge channel for the new track.\n            if (newTrack) {\n                // Now handle the addition of the newTrack at the JitsiConference level\n                this._setupNewTrack(newTrack);\n                newTrack.isVideoTrack() && this.rtc.setVideoType(newTrack.getVideoType());\n            } else {\n                oldTrack && oldTrack.isVideoTrack() && this.rtc.setVideoType(VideoType.NONE);\n            }\n\n            if (this.isMutedByFocus || this.isVideoMutedByFocus) {\n                this._fireMuteChangeEvent(newTrack);\n            }\n\n            return Promise.resolve();\n        })\n        .catch(error => Promise.reject(new Error(error)));\n};\n\n/**\n * Replaces the tracks at the lower level by going through the Jingle session\n * and WebRTC peer connection. The method will resolve immediately if there is\n * currently no JingleSession started.\n * @param {JitsiLocalTrack|null} oldTrack the track to be removed during\n * the process or <tt>null</t> if the method should act as \"add track\"\n * @param {JitsiLocalTrack|null} newTrack the new track to be added or\n * <tt>null</tt> if the method should act as \"remove track\"\n * @return {Promise} resolved when the process is done or rejected with a string\n * which describes the error.\n * @private\n */\nJitsiConference.prototype._doReplaceTrack = function(oldTrack, newTrack) {\n    const replaceTrackPromises = [];\n\n    if (this.jvbJingleSession) {\n        replaceTrackPromises.push(\n            this.jvbJingleSession.replaceTrack(oldTrack, newTrack));\n    } else {\n        logger.info('_doReplaceTrack - no JVB JingleSession');\n    }\n\n    if (this.p2pJingleSession) {\n        replaceTrackPromises.push(\n            this.p2pJingleSession.replaceTrack(oldTrack, newTrack));\n    } else {\n        logger.info('_doReplaceTrack - no P2P JingleSession');\n    }\n\n    return Promise.all(replaceTrackPromises);\n};\n\n/**\n * Operations related to creating a new track\n * @param {JitsiLocalTrack} newTrack the new track being created\n */\nJitsiConference.prototype._setupNewTrack = function(newTrack) {\n    if (newTrack.isAudioTrack() || (newTrack.isVideoTrack()\n            && newTrack.videoType !== VideoType.DESKTOP)) {\n        // Report active device to statistics\n        const devices = RTC.getCurrentlyAvailableMediaDevices();\n        const device\n            = devices.find(\n                d =>\n                    d.kind === `${newTrack.getTrack().kind}input`\n                        && d.label === newTrack.getTrack().label);\n\n        if (device) {\n            Statistics.sendActiveDeviceListEvent(\n                RTC.getEventDataForActiveDevice(device));\n        }\n    }\n    if (newTrack.isVideoTrack()) {\n        const videoTypeTagName = 'videoType';\n\n        // if video type is camera and there is no videoType in presence, we skip adding it, as this is the default one\n        if (newTrack.videoType !== VideoType.CAMERA || this.room.getFromPresence(videoTypeTagName)) {\n            this.sendCommand(videoTypeTagName, { value: newTrack.videoType });\n        }\n    }\n    this.rtc.addLocalTrack(newTrack);\n\n    // ensure that we're sharing proper \"is muted\" state\n    if (newTrack.isAudioTrack()) {\n        this.room.setAudioMute(newTrack.isMuted());\n    } else {\n        this.room.setVideoMute(newTrack.isMuted());\n    }\n\n    newTrack.muteHandler = this._fireMuteChangeEvent.bind(this, newTrack);\n    newTrack.audioLevelHandler = this._fireAudioLevelChangeEvent.bind(this);\n    newTrack.addEventListener(\n        JitsiTrackEvents.TRACK_MUTE_CHANGED,\n        newTrack.muteHandler);\n    newTrack.addEventListener(\n        JitsiTrackEvents.TRACK_AUDIO_LEVEL_CHANGED,\n        newTrack.audioLevelHandler);\n\n    newTrack._setConference(this);\n\n    this.eventEmitter.emit(JitsiConferenceEvents.TRACK_ADDED, newTrack);\n};\n\n/**\n * Method called by the {@link JitsiLocalTrack} (a video one) in order to add\n * back the underlying WebRTC MediaStream to the PeerConnection (which has\n * removed on video mute).\n * @param {JitsiLocalTrack} track the local track that will be added as part of\n * the unmute operation.\n * @return {Promise} resolved when the process is done or rejected with a string\n * which describes the error.\n */\nJitsiConference.prototype._addLocalTrackAsUnmute = function(track) {\n    const addAsUnmutePromises = [];\n\n    if (this.jvbJingleSession) {\n        addAsUnmutePromises.push(this.jvbJingleSession.addTrackAsUnmute(track));\n    } else {\n        logger.debug('Add local MediaStream as unmute - no JVB Jingle session started yet');\n    }\n\n    if (this.p2pJingleSession) {\n        addAsUnmutePromises.push(this.p2pJingleSession.addTrackAsUnmute(track));\n    } else {\n        logger.debug('Add local MediaStream as unmute - no P2P Jingle session started yet');\n    }\n\n    return Promise.allSettled(addAsUnmutePromises)\n        .then(() => {\n            // Signal the video type to the bridge.\n            track.isVideoTrack() && this.rtc.setVideoType(track.getVideoType());\n        });\n};\n\n/**\n * Method called by the {@link JitsiLocalTrack} (a video one) in order to remove\n * the underlying WebRTC MediaStream from the PeerConnection. The purpose of\n * that is to stop sending any data and turn off the HW camera device.\n * @param {JitsiLocalTrack} track the local track that will be removed.\n * @return {Promise}\n */\nJitsiConference.prototype._removeLocalTrackAsMute = function(track) {\n    const removeAsMutePromises = [];\n\n    if (this.jvbJingleSession) {\n        removeAsMutePromises.push(this.jvbJingleSession.removeTrackAsMute(track));\n    } else {\n        logger.debug('Remove local MediaStream - no JVB JingleSession started yet');\n    }\n    if (this.p2pJingleSession) {\n        removeAsMutePromises.push(this.p2pJingleSession.removeTrackAsMute(track));\n    } else {\n        logger.debug('Remove local MediaStream - no P2P JingleSession started yet');\n    }\n\n    return Promise.allSettled(removeAsMutePromises)\n        .then(() => {\n            // Signal the video type to the bridge.\n            track.isVideoTrack() && this.rtc.setVideoType(VideoType.NONE);\n        });\n};\n\n/**\n * Get role of the local user.\n * @returns {string} user role: 'moderator' or 'none'\n */\nJitsiConference.prototype.getRole = function() {\n    return this.room.role;\n};\n\n/**\n * Returns whether or not the current conference has been joined as a hidden\n * user.\n *\n * @returns {boolean|null} True if hidden, false otherwise. Will return null if\n * no connection is active.\n */\nJitsiConference.prototype.isHidden = function() {\n    if (!this.connection) {\n        return null;\n    }\n\n    return Strophe.getDomainFromJid(this.connection.getJid())\n        === this.options.config.hiddenDomain;\n};\n\n/**\n * Check if local user is moderator.\n * @returns {boolean|null} true if local user is moderator, false otherwise. If\n * we're no longer in the conference room then <tt>null</tt> is returned.\n */\nJitsiConference.prototype.isModerator = function() {\n    return this.room ? this.room.isModerator() : null;\n};\n\n/**\n * Set password for the room.\n * @param {string} password new password for the room.\n * @returns {Promise}\n */\nJitsiConference.prototype.lock = function(password) {\n    if (!this.isModerator()) {\n        return Promise.reject(new Error('You are not moderator.'));\n    }\n\n    return new Promise((resolve, reject) => {\n        this.room.lockRoom(\n            password || '',\n            () => resolve(),\n            err => reject(err),\n            () => reject(JitsiConferenceErrors.PASSWORD_NOT_SUPPORTED));\n    });\n};\n\n/**\n * Remove password from the room.\n * @returns {Promise}\n */\nJitsiConference.prototype.unlock = function() {\n    return this.lock();\n};\n\n/**\n * Elects the participant with the given id to be the selected participant in\n * order to receive higher video quality (if simulcast is enabled).\n * Or cache it if channel is not created and send it once channel is available.\n * @param participantId the identifier of the participant\n * @throws NetworkError or InvalidStateError or Error if the operation fails.\n * @returns {void}\n */\nJitsiConference.prototype.selectParticipant = function(participantId) {\n    this.selectParticipants([ participantId ]);\n};\n\n/*\n * Elects participants with given ids to be the selected participants in order\n * to receive higher video quality (if simulcast is enabled). The argument\n * should be an array of participant id strings or an empty array; an error will\n * be thrown if a non-array is passed in. The error is thrown as a layer of\n * protection against passing an invalid argument, as the error will happen in\n * the bridge and may not be visible in the client.\n *\n * @param {Array<strings>} participantIds - An array of identifiers for\n * participants.\n * @returns {void}\n */\nJitsiConference.prototype.selectParticipants = function(participantIds) {\n    if (!Array.isArray(participantIds)) {\n        throw new Error('Invalid argument; participantIds must be an array.');\n    }\n\n    this.receiveVideoController.selectEndpoints(participantIds);\n};\n\n/**\n * Obtains the current value for \"lastN\". See {@link setLastN} for more info.\n * @returns {number}\n */\nJitsiConference.prototype.getLastN = function() {\n    return this.receiveVideoController.getLastN();\n};\n\n/**\n * Selects a new value for \"lastN\". The requested amount of videos are going\n * to be delivered after the value is in effect. Set to -1 for unlimited or\n * all available videos.\n * @param lastN the new number of videos the user would like to receive.\n * @throws Error or RangeError if the given value is not a number or is smaller\n * than -1.\n */\nJitsiConference.prototype.setLastN = function(lastN) {\n    if (!Number.isInteger(lastN) && !Number.parseInt(lastN, 10)) {\n        throw new Error(`Invalid value for lastN: ${lastN}`);\n    }\n    const n = Number(lastN);\n\n    if (n < -1) {\n        throw new RangeError('lastN cannot be smaller than -1');\n    }\n    this.receiveVideoController.setLastN(n);\n\n    // If the P2P session is not fully established yet, we wait until it gets\n    // established.\n    if (this.p2pJingleSession) {\n        const isVideoActive = n !== 0;\n\n        this.p2pJingleSession\n            .setMediaTransferActive(true, isVideoActive)\n            .catch(error => {\n                logger.error(\n                    `Failed to adjust video transfer status (${isVideoActive})`,\n                    error);\n            });\n    }\n};\n\n/**\n * Checks if the participant given by participantId is currently included in\n * the last N.\n * @param {string} participantId the identifier of the participant we would\n * like to check.\n * @return {boolean} true if the participant with id is in the last N set or\n * if there's no last N set, false otherwise.\n * @deprecated this method should never be used to figure out the UI, but\n * {@link ParticipantConnectionStatus} should be used instead.\n */\nJitsiConference.prototype.isInLastN = function(participantId) {\n    return this.rtc.isInLastN(participantId);\n};\n\n/**\n * @return Array<JitsiParticipant> an array of all participants in this\n * conference.\n */\nJitsiConference.prototype.getParticipants = function() {\n    return Object.values(this.participants);\n};\n\n/**\n * Returns the number of participants in the conference, including the local\n * participant.\n * @param countHidden {boolean} Whether or not to include hidden participants\n * in the count. Default: false.\n **/\nJitsiConference.prototype.getParticipantCount\n    = function(countHidden = false) {\n\n        let participants = this.getParticipants();\n\n        if (!countHidden) {\n            participants = participants.filter(p => !p.isHidden());\n        }\n\n        // Add one for the local participant.\n        return participants.length + 1;\n    };\n\n/**\n * @returns {JitsiParticipant} the participant in this conference with the\n * specified id (or undefined if there isn't one).\n * @param id the id of the participant.\n */\nJitsiConference.prototype.getParticipantById = function(id) {\n    return this.participants[id];\n};\n\n/**\n * Grant owner rights to the participant.\n * @param {string} id id of the participant to grant owner rights to.\n */\nJitsiConference.prototype.grantOwner = function(id) {\n    const participant = this.getParticipantById(id);\n\n    if (!participant) {\n        return;\n    }\n    this.room.setAffiliation(participant.getJid(), 'owner');\n};\n\n/**\n * Revoke owner rights to the participant or local Participant as\n * the user might want to refuse to be a moderator.\n * @param {string} id id of the participant to revoke owner rights to.\n */\nJitsiConference.prototype.revokeOwner = function(id) {\n    const participant = this.getParticipantById(id);\n    const isMyself = this.myUserId() === id;\n    const role = this.isMembersOnly() ? 'member' : 'none';\n\n    if (isMyself) {\n        this.room.setAffiliation(this.room.myroomjid, role);\n    } else if (participant) {\n        this.room.setAffiliation(participant.getJid(), role);\n    }\n};\n\n\n/**\n * Kick participant from this conference.\n * @param {string} id id of the participant to kick\n * @param {string} reason reason of the participant to kick\n */\nJitsiConference.prototype.kickParticipant = function(id, reason) {\n    const participant = this.getParticipantById(id);\n\n    if (!participant) {\n        return;\n    }\n    this.room.kick(participant.getJid(), reason);\n};\n\n/**\n * Maybe clears the timeout which emits {@link ACTION_JINGLE_SI_TIMEOUT}\n * analytics event.\n * @private\n */\nJitsiConference.prototype._maybeClearSITimeout = function() {\n    if (this._sessionInitiateTimeout\n            && (this.jvbJingleSession || this.getParticipantCount() < 2)) {\n        window.clearTimeout(this._sessionInitiateTimeout);\n        this._sessionInitiateTimeout = null;\n    }\n};\n\n/**\n * Sets a timeout which will emit {@link ACTION_JINGLE_SI_TIMEOUT} analytics\n * event.\n * @private\n */\nJitsiConference.prototype._maybeSetSITimeout = function() {\n    // Jicofo is supposed to invite if there are at least 2 participants\n    if (!this.jvbJingleSession\n            && this.getParticipantCount() >= 2\n            && !this._sessionInitiateTimeout) {\n        this._sessionInitiateTimeout = window.setTimeout(() => {\n            this._sessionInitiateTimeout = null;\n            Statistics.sendAnalytics(createJingleEvent(\n                ACTION_JINGLE_SI_TIMEOUT,\n                {\n                    p2p: false,\n                    value: JINGLE_SI_TIMEOUT\n                }));\n        }, JINGLE_SI_TIMEOUT);\n    }\n};\n\n/**\n * Mutes a participant.\n * @param {string} id The id of the participant to mute.\n */\nJitsiConference.prototype.muteParticipant = function(id, mediaType) {\n    const muteMediaType = mediaType ? mediaType : MediaType.AUDIO;\n\n    if (muteMediaType !== MediaType.AUDIO && muteMediaType !== MediaType.VIDEO) {\n        logger.error(`Unsupported media type: ${muteMediaType}`);\n\n        return;\n    }\n\n    const participant = this.getParticipantById(id);\n\n    if (!participant) {\n        return;\n    }\n    this.room.muteParticipant(participant.getJid(), true, muteMediaType);\n};\n\n/* eslint-disable max-params */\n\n/**\n * Notifies this JitsiConference that a new member has joined its chat room.\n *\n * FIXME This should NOT be exposed!\n *\n * @param jid the jid of the participant in the MUC\n * @param nick the display name of the participant\n * @param role the role of the participant in the MUC\n * @param isHidden indicates if this is a hidden participant (system\n * participant for example a recorder).\n * @param statsID the participant statsID (optional)\n * @param status the initial status if any\n * @param identity the member identity, if any\n * @param botType the member botType, if any\n * @param fullJid the member full jid, if any\n * @param features the member botType, if any\n * @param isReplaceParticipant whether this join replaces a participant with\n * the same jwt.\n */\nJitsiConference.prototype.onMemberJoined = function(\n        jid, nick, role, isHidden, statsID, status, identity, botType, fullJid, features, isReplaceParticipant) {\n    const id = Strophe.getResourceFromJid(jid);\n\n    if (id === 'focus' || this.myUserId() === id) {\n        return;\n    }\n\n    const participant\n        = new JitsiParticipant(jid, this, nick, isHidden, statsID, status, identity);\n\n    participant.setRole(role);\n    participant.setBotType(botType);\n    participant.setFeatures(features);\n    participant.setIsReplacing(isReplaceParticipant);\n\n    this.participants[id] = participant;\n    this.eventEmitter.emit(\n        JitsiConferenceEvents.USER_JOINED,\n        id,\n        participant);\n\n    this._updateFeatures(participant);\n\n    // maybeStart only if we had finished joining as then we will have information for the number of participants\n    if (this.isJoined()) {\n        this._maybeStartOrStopP2P();\n    }\n\n    this._maybeSetSITimeout();\n};\n\n/* eslint-enable max-params */\n\n/**\n * Get notified when we joined the room.\n *\n * FIXME This should NOT be exposed!\n *\n * @private\n */\nJitsiConference.prototype._onMucJoined = function() {\n    this._maybeStartOrStopP2P();\n};\n\n/**\n * Updates features for a participant.\n * @param {JitsiParticipant} participant - The participant to query for features.\n * @returns {void}\n * @private\n */\nJitsiConference.prototype._updateFeatures = function(participant) {\n    participant.getFeatures()\n        .then(features => {\n            participant._supportsDTMF = features.has('urn:xmpp:jingle:dtmf:0');\n            this.updateDTMFSupport();\n\n            if (features.has(FEATURE_JIGASI)) {\n                participant.setProperty('features_jigasi', true);\n            }\n\n            if (features.has(FEATURE_E2EE)) {\n                participant.setProperty('features_e2ee', true);\n            }\n        })\n        .catch(() => false);\n};\n\n/**\n * Get notified when member bot type had changed.\n * @param jid the member jid\n * @param botType the new botType value\n * @private\n */\nJitsiConference.prototype._onMemberBotTypeChanged = function(jid, botType) {\n\n    // find the participant and mark it as non bot, as the real one will join\n    // in a moment\n    const peers = this.getParticipants();\n    const botParticipant = peers.find(p => p.getJid() === jid);\n\n    if (botParticipant) {\n        botParticipant.setBotType(botType);\n        const id = Strophe.getResourceFromJid(jid);\n\n        this.eventEmitter.emit(\n            JitsiConferenceEvents.BOT_TYPE_CHANGED,\n            id,\n            botType);\n    }\n\n    // if botType changed to undefined, botType was removed, in case of\n    // poltergeist mode this is the moment when the poltergeist had exited and\n    // the real participant had already replaced it.\n    // In this case we can check and try p2p\n    if (!botParticipant.getBotType()) {\n        this._maybeStartOrStopP2P();\n    }\n};\n\nJitsiConference.prototype.onMemberLeft = function(jid) {\n    const id = Strophe.getResourceFromJid(jid);\n\n    if (id === 'focus' || this.myUserId() === id) {\n        return;\n    }\n\n    const participant = this.participants[id];\n\n    delete this.participants[id];\n\n    // Remove the ssrcs from the remote description.\n    const mediaSessions = this._getMediaSessions();\n    const removePromises = [];\n\n    for (const session of mediaSessions) {\n        removePromises.push(session.removeRemoteStreamsOnLeave(id));\n    }\n\n    Promise.allSettled(removePromises)\n        .then(results => {\n            let removedTracks = [];\n\n            results.map(result => result.value).forEach(value => {\n                if (value) {\n                    removedTracks = removedTracks.concat(value);\n                }\n            });\n\n            removedTracks.forEach(track => {\n                this.eventEmitter.emit(JitsiConferenceEvents.TRACK_REMOVED, track);\n            });\n\n            // There can be no participant in case the member that left is focus.\n            if (participant) {\n                this.eventEmitter.emit(JitsiConferenceEvents.USER_LEFT, id, participant);\n            }\n\n            this._maybeStartOrStopP2P(true /* triggered by user left event */);\n            this._maybeClearSITimeout();\n        });\n};\n\n/* eslint-disable max-params */\n\n/**\n * Designates an event indicating that we were kicked from the XMPP MUC.\n * @param {boolean} isSelfPresence - whether it is for local participant\n * or another participant.\n * @param {string} actorId - the id of the participant who was initiator\n * of the kick.\n * @param {string?} kickedParticipantId - when it is not a kick for local participant,\n * this is the id of the participant which was kicked.\n * @param {string} reason - reason of the participant to kick\n * @param {boolean?} isReplaceParticipant - whether this is a server initiated kick in order\n * to replace it with a participant with same jwt.\n */\nJitsiConference.prototype.onMemberKicked = function(\n        isSelfPresence,\n        actorId,\n        kickedParticipantId,\n        reason,\n        isReplaceParticipant) {\n    // This check which be true when we kick someone else. With the introduction of lobby\n    // the ChatRoom KICKED event is now also emitted for ourselves (the kicker) so we want to\n    // avoid emitting an event where `undefined` kicked someone.\n    if (actorId === this.myUserId()) {\n        return;\n    }\n\n    const actorParticipant = this.participants[actorId];\n\n    if (isSelfPresence) {\n        this.eventEmitter.emit(\n            JitsiConferenceEvents.KICKED, actorParticipant, reason, isReplaceParticipant);\n\n        this.leave();\n\n        return;\n    }\n\n    const kickedParticipant = this.participants[kickedParticipantId];\n\n    kickedParticipant.setIsReplaced(isReplaceParticipant);\n\n    this.eventEmitter.emit(\n        JitsiConferenceEvents.PARTICIPANT_KICKED, actorParticipant, kickedParticipant, reason);\n};\n\n/**\n * Method called on local MUC role change.\n * @param {string} role the name of new user's role as defined by XMPP MUC.\n */\nJitsiConference.prototype.onLocalRoleChanged = function(role) {\n    // Emit role changed for local  JID\n    this.eventEmitter.emit(\n        JitsiConferenceEvents.USER_ROLE_CHANGED, this.myUserId(), role);\n};\n\nJitsiConference.prototype.onUserRoleChanged = function(jid, role) {\n    const id = Strophe.getResourceFromJid(jid);\n    const participant = this.getParticipantById(id);\n\n    if (!participant) {\n        return;\n    }\n    participant.setRole(role);\n    this.eventEmitter.emit(JitsiConferenceEvents.USER_ROLE_CHANGED, id, role);\n};\n\nJitsiConference.prototype.onDisplayNameChanged = function(jid, displayName) {\n    const id = Strophe.getResourceFromJid(jid);\n    const participant = this.getParticipantById(id);\n\n    if (!participant) {\n        return;\n    }\n\n    if (participant._displayName === displayName) {\n        return;\n    }\n\n    participant._displayName = displayName;\n    this.eventEmitter.emit(\n        JitsiConferenceEvents.DISPLAY_NAME_CHANGED,\n        id,\n        displayName);\n};\n\n/**\n * Notifies this JitsiConference that a JitsiRemoteTrack was added into\n * the conference.\n *\n * @param {JitsiRemoteTrack} track the JitsiRemoteTrack which was added to this\n * JitsiConference\n */\nJitsiConference.prototype.onRemoteTrackAdded = function(track) {\n    if (track.isP2P && !this.isP2PActive()) {\n        logger.info(\n            'Trying to add remote P2P track, when not in P2P - IGNORED');\n\n        return;\n    } else if (!track.isP2P && this.isP2PActive()) {\n        logger.info(\n            'Trying to add remote JVB track, when in P2P - IGNORED');\n\n        return;\n    }\n\n    const id = track.getParticipantId();\n    const participant = this.getParticipantById(id);\n\n    if (!participant) {\n        logger.error(`No participant found for id: ${id}`);\n\n        return;\n    }\n\n    // Add track to JitsiParticipant.\n    participant._tracks.push(track);\n\n    if (this.transcriber) {\n        this.transcriber.addTrack(track);\n    }\n\n    const emitter = this.eventEmitter;\n\n    track.addEventListener(\n        JitsiTrackEvents.TRACK_MUTE_CHANGED,\n        () => emitter.emit(JitsiConferenceEvents.TRACK_MUTE_CHANGED, track));\n    track.addEventListener(\n        JitsiTrackEvents.TRACK_AUDIO_LEVEL_CHANGED,\n        (audioLevel, tpc) => {\n            const activeTPC = this.getActivePeerConnection();\n\n            if (activeTPC === tpc) {\n                emitter.emit(\n                    JitsiConferenceEvents.TRACK_AUDIO_LEVEL_CHANGED,\n                    id,\n                    audioLevel);\n            }\n        }\n    );\n\n    emitter.emit(JitsiConferenceEvents.TRACK_ADDED, track);\n};\n\n/**\n * Callback called by the Jingle plugin when 'session-answer' is received.\n * @param {JingleSessionPC} session the Jingle session for which an answer was\n * received.\n * @param {jQuery} answer a jQuery selector pointing to 'jingle' IQ element\n */\n// eslint-disable-next-line no-unused-vars\nJitsiConference.prototype.onCallAccepted = function(session, answer) {\n    if (this.p2pJingleSession === session) {\n        logger.info('P2P setAnswer');\n\n        this.p2pJingleSession.setAnswer(answer);\n        this.eventEmitter.emit(JitsiConferenceEvents._MEDIA_SESSION_STARTED, this.p2pJingleSession);\n    }\n};\n\n/**\n * Callback called by the Jingle plugin when 'transport-info' is received.\n * @param {JingleSessionPC} session the Jingle session for which the IQ was\n * received\n * @param {jQuery} transportInfo a jQuery selector pointing to 'jingle' IQ\n * element\n */\n// eslint-disable-next-line no-unused-vars\nJitsiConference.prototype.onTransportInfo = function(session, transportInfo) {\n    if (this.p2pJingleSession === session) {\n        logger.info('P2P addIceCandidates');\n        this.p2pJingleSession.addIceCandidates(transportInfo);\n    }\n};\n\n/**\n * Notifies this JitsiConference that a JitsiRemoteTrack was removed from\n * the conference.\n *\n * @param {JitsiRemoteTrack} removedTrack\n */\nJitsiConference.prototype.onRemoteTrackRemoved = function(removedTrack) {\n    this.getParticipants().forEach(participant => {\n        const tracks = participant.getTracks();\n\n        for (let i = 0; i < tracks.length; i++) {\n            if (tracks[i] === removedTrack) {\n                // Since the tracks have been compared and are\n                // considered equal the result of splice can be ignored.\n                participant._tracks.splice(i, 1);\n\n                this.eventEmitter.emit(\n                    JitsiConferenceEvents.TRACK_REMOVED, removedTrack);\n\n                if (this.transcriber) {\n                    this.transcriber.removeTrack(removedTrack);\n                }\n\n                break;\n            }\n        }\n    }, this);\n};\n\n/**\n * Handles an incoming call event for the P2P jingle session.\n */\nJitsiConference.prototype._onIncomingCallP2P = function(\n        jingleSession,\n        jingleOffer) {\n\n    let rejectReason;\n\n    if ((!this.isP2PEnabled() && !this.isP2PTestModeEnabled()) || browser.isFirefox() || browser.isWebKitBased()) {\n        rejectReason = {\n            reason: 'decline',\n            reasonDescription: 'P2P disabled',\n            errorMsg: 'P2P mode disabled in the configuration'\n        };\n    } else if (this.p2pJingleSession) {\n        // Reject incoming P2P call (already in progress)\n        rejectReason = {\n            reason: 'busy',\n            reasonDescription: 'P2P already in progress',\n            errorMsg: 'Duplicated P2P \"session-initiate\"'\n        };\n    } else if (!this._shouldBeInP2PMode()) {\n        rejectReason = {\n            reason: 'decline',\n            reasonDescription: 'P2P requirements not met',\n            errorMsg: 'Received P2P \"session-initiate\" when should not be in P2P mode'\n        };\n        Statistics.sendAnalytics(createJingleEvent(ACTION_P2P_DECLINED));\n    }\n\n    if (rejectReason) {\n        this._rejectIncomingCall(jingleSession, rejectReason);\n    } else {\n        this._acceptP2PIncomingCall(jingleSession, jingleOffer);\n    }\n};\n\n/**\n * Handles an incoming call event.\n */\nJitsiConference.prototype.onIncomingCall = function(\n        jingleSession,\n        jingleOffer,\n        now) {\n    // Handle incoming P2P call\n    if (jingleSession.isP2P) {\n        this._onIncomingCallP2P(jingleSession, jingleOffer);\n    } else {\n        if (!this.room.isFocus(jingleSession.remoteJid)) {\n            const description = 'Rejecting session-initiate from non-focus.';\n\n            this._rejectIncomingCall(\n                jingleSession, {\n                    reason: 'security-error',\n                    reasonDescription: description,\n                    errorMsg: description\n                });\n\n            return;\n        }\n        this._acceptJvbIncomingCall(jingleSession, jingleOffer, now);\n    }\n};\n\n/**\n * Accepts an incoming call event for the JVB jingle session.\n */\nJitsiConference.prototype._acceptJvbIncomingCall = function(\n        jingleSession,\n        jingleOffer,\n        now) {\n\n    // Accept incoming call\n    this.jvbJingleSession = jingleSession;\n    this.room.connectionTimes['session.initiate'] = now;\n    this._sendConferenceJoinAnalyticsEvent();\n\n    if (this.wasStopped) {\n        Statistics.sendAnalyticsAndLog(\n            createJingleEvent(ACTION_JINGLE_RESTART, { p2p: false }));\n    }\n\n    const serverRegion\n        = $(jingleOffer)\n            .find('>bridge-session[xmlns=\"http://jitsi.org/protocol/focus\"]')\n            .attr('region');\n\n    this.eventEmitter.emit(\n        JitsiConferenceEvents.SERVER_REGION_CHANGED,\n        serverRegion);\n\n    this._maybeClearSITimeout();\n    Statistics.sendAnalytics(createJingleEvent(\n        ACTION_JINGLE_SI_RECEIVED,\n        {\n            p2p: false,\n            value: now\n        }));\n\n    try {\n        jingleSession.initialize(this.room, this.rtc, {\n            ...this.options.config,\n            enableInsertableStreams: this.isE2EEEnabled()\n        });\n    } catch (error) {\n        GlobalOnErrorHandler.callErrorHandler(error);\n        logger.error(error);\n\n        return;\n    }\n\n    // Open a channel with the videobridge.\n    this._setBridgeChannel(jingleOffer, jingleSession.peerconnection);\n\n    const localTracks = this._getInitialLocalTracks();\n\n    try {\n        jingleSession.acceptOffer(\n            jingleOffer,\n            () => {\n                // If for any reason invite for the JVB session arrived after\n                // the P2P has been established already the media transfer needs\n                // to be turned off here.\n                if (this.isP2PActive() && this.jvbJingleSession) {\n                    this._suspendMediaTransferForJvbConnection();\n                }\n\n                this.eventEmitter.emit(\n                    JitsiConferenceEvents._MEDIA_SESSION_STARTED,\n                    jingleSession);\n                if (!this.isP2PActive()) {\n                    this.eventEmitter.emit(\n                        JitsiConferenceEvents._MEDIA_SESSION_ACTIVE_CHANGED,\n                        jingleSession);\n                }\n            },\n            error => {\n                GlobalOnErrorHandler.callErrorHandler(error);\n                logger.error(\n                    'Failed to accept incoming Jingle session', error);\n            },\n            localTracks\n        );\n\n        // Enable or disable simulcast for plan-b screensharing based on the capture fps if it is set through the UI.\n        this._desktopSharingFrameRate\n            && jingleSession.peerconnection.setDesktopSharingFrameRate(this._desktopSharingFrameRate);\n\n        // Start callstats as soon as peerconnection is initialized,\n        // do not wait for XMPPEvents.PEERCONNECTION_READY, as it may never\n        // happen in case if user doesn't have or denied permission to\n        // both camera and microphone.\n        logger.info('Starting CallStats for JVB connection...');\n        this.statistics.startCallStats(\n            this.jvbJingleSession.peerconnection,\n            'jitsi' /* Remote user ID for JVB is 'jitsi' */);\n        this.statistics.startRemoteStats(this.jvbJingleSession.peerconnection);\n    } catch (e) {\n        GlobalOnErrorHandler.callErrorHandler(e);\n        logger.error(e);\n    }\n};\n\n/**\n * Sets the BridgeChannel.\n *\n * @param {jQuery} offerIq a jQuery selector pointing to the jingle element of\n * the offer IQ which may carry the WebSocket URL for the 'websocket'\n * BridgeChannel mode.\n * @param {TraceablePeerConnection} pc the peer connection which will be used\n * to listen for new WebRTC Data Channels (in the 'datachannel' mode).\n */\nJitsiConference.prototype._setBridgeChannel = function(offerIq, pc) {\n    let wsUrl = null;\n    const webSocket\n        = $(offerIq)\n            .find('>content>transport>web-socket')\n            .first();\n\n    if (webSocket.length === 1) {\n        wsUrl = webSocket[0].getAttribute('url');\n    }\n\n    if (wsUrl) {\n        // If the offer contains a websocket use it.\n        this.rtc.initializeBridgeChannel(null, wsUrl);\n    } else {\n        // Otherwise, fall back to an attempt to use SCTP.\n        this.rtc.initializeBridgeChannel(pc, null);\n    }\n};\n\n/**\n * Rejects incoming Jingle call.\n * @param {JingleSessionPC} jingleSession the session instance to be rejected.\n * @param {object} [options]\n * @param {string} options.reason the name of the reason element as defined\n * by Jingle\n * @param {string} options.reasonDescription the reason description which will\n * be included in Jingle 'session-terminate' message.\n * @param {string} options.errorMsg an error message to be logged on global\n * error handler\n * @private\n */\nJitsiConference.prototype._rejectIncomingCall = function(\n        jingleSession,\n        options) {\n    if (options && options.errorMsg) {\n        GlobalOnErrorHandler.callErrorHandler(new Error(options.errorMsg));\n    }\n\n    // Terminate the jingle session with a reason\n    jingleSession.terminate(\n        null /* success callback => we don't care */,\n        error => {\n            logger.warn(\n                'An error occurred while trying to terminate'\n                    + ' invalid Jingle session', error);\n        }, {\n            reason: options && options.reason,\n            reasonDescription: options && options.reasonDescription,\n            sendSessionTerminate: true\n        });\n};\n\n/**\n * Handles the call ended event.\n * XXX is this due to the remote side terminating the Jingle session?\n *\n * @param {JingleSessionPC} jingleSession the jingle session which has been\n * terminated.\n * @param {String} reasonCondition the Jingle reason condition.\n * @param {String|null} reasonText human readable reason text which may provide\n * more details about why the call has been terminated.\n */\nJitsiConference.prototype.onCallEnded = function(\n        jingleSession,\n        reasonCondition,\n        reasonText) {\n    logger.info(\n        `Call ended: ${reasonCondition} - ${reasonText} P2P ?${\n            jingleSession.isP2P}`);\n    if (jingleSession === this.jvbJingleSession) {\n        this.wasStopped = true;\n\n        Statistics.sendAnalytics(\n            createJingleEvent(ACTION_JINGLE_TERMINATE, { p2p: false }));\n\n        // Stop the stats\n        if (this.statistics) {\n            this.statistics.stopRemoteStats(\n                this.jvbJingleSession.peerconnection);\n            logger.info('Stopping JVB CallStats');\n            this.statistics.stopCallStats(\n                this.jvbJingleSession.peerconnection);\n        }\n\n        // Current JVB JingleSession is no longer valid, so set it to null\n        this.jvbJingleSession = null;\n\n        // Let the RTC service do any cleanups\n        this.rtc.onCallEnded();\n    } else if (jingleSession === this.p2pJingleSession) {\n        // It's the responder who decides to enforce JVB mode, so that both\n        // initiator and responder are aware if it was intentional.\n        if (reasonCondition === 'decline' && reasonText === 'force JVB121') {\n            logger.info('In forced JVB 121 mode...');\n            Statistics.analytics.addPermanentProperties({ forceJvb121: true });\n        } else if (reasonCondition === 'connectivity-error'\n            && reasonText === 'ICE FAILED') {\n            // It can happen that the other peer detects ICE failed and\n            // terminates the session, before we get the event on our side.\n            // But we are able to parse the reason and mark it here.\n            Statistics.analytics.addPermanentProperties({ p2pFailed: true });\n        }\n        this._stopP2PSession();\n    } else {\n        logger.error(\n            'Received onCallEnded for invalid session',\n            jingleSession.sid,\n            jingleSession.remoteJid,\n            reasonCondition,\n            reasonText);\n    }\n};\n\n/**\n * Handles the suspend detected event. Leaves the room and fires suspended.\n * @param {JingleSessionPC} jingleSession\n */\nJitsiConference.prototype.onSuspendDetected = function(jingleSession) {\n    if (!jingleSession.isP2P) {\n        this.leave();\n        this.eventEmitter.emit(JitsiConferenceEvents.SUSPEND_DETECTED);\n    }\n};\n\nJitsiConference.prototype.updateDTMFSupport = function() {\n    let somebodySupportsDTMF = false;\n    const participants = this.getParticipants();\n\n    // check if at least 1 participant supports DTMF\n    for (let i = 0; i < participants.length; i += 1) {\n        if (participants[i].supportsDTMF()) {\n            somebodySupportsDTMF = true;\n            break;\n        }\n    }\n    if (somebodySupportsDTMF !== this.somebodySupportsDTMF) {\n        this.somebodySupportsDTMF = somebodySupportsDTMF;\n        this.eventEmitter.emit(\n            JitsiConferenceEvents.DTMF_SUPPORT_CHANGED,\n            somebodySupportsDTMF);\n    }\n};\n\n/**\n * Allows to check if there is at least one user in the conference\n * that supports DTMF.\n * @returns {boolean} true if somebody supports DTMF, false otherwise\n */\nJitsiConference.prototype.isDTMFSupported = function() {\n    return this.somebodySupportsDTMF;\n};\n\n/**\n * Returns the local user's ID\n * @return {string} local user's ID\n */\nJitsiConference.prototype.myUserId = function() {\n    return (\n        this.room && this.room.myroomjid\n            ? Strophe.getResourceFromJid(this.room.myroomjid)\n            : null);\n};\n\nJitsiConference.prototype.sendTones = function(tones, duration, pause) {\n    const peerConnection = this.getActivePeerConnection();\n\n    if (peerConnection) {\n        peerConnection.sendTones(tones, duration, pause);\n    } else {\n        logger.warn('cannot sendTones: no peer connection');\n    }\n};\n\n/**\n * Starts recording the current conference.\n *\n * @param {Object} options - Configuration for the recording. See\n * {@link Chatroom#startRecording} for more info.\n * @returns {Promise} See {@link Chatroom#startRecording} for more info.\n */\nJitsiConference.prototype.startRecording = function(options) {\n    if (this.room) {\n        return this.recordingManager.startRecording(options);\n    }\n\n    return Promise.reject(new Error('The conference is not created yet!'));\n};\n\n/**\n * Stop a recording session.\n *\n * @param {string} sessionID - The ID of the recording session that\n * should be stopped.\n * @returns {Promise} See {@link Chatroom#stopRecording} for more info.\n */\nJitsiConference.prototype.stopRecording = function(sessionID) {\n    if (this.room) {\n        return this.recordingManager.stopRecording(sessionID);\n    }\n\n    return Promise.reject(new Error('The conference is not created yet!'));\n};\n\n/**\n * Returns true if the SIP calls are supported and false otherwise\n */\nJitsiConference.prototype.isSIPCallingSupported = function() {\n    if (this.room) {\n        return this.room.isSIPCallingSupported();\n    }\n\n    return false;\n};\n\n/**\n * Dials a number.\n * @param number the number\n */\nJitsiConference.prototype.dial = function(number) {\n    if (this.room) {\n        return this.room.dial(number);\n    }\n\n    return new Promise((resolve, reject) => {\n        reject(new Error('The conference is not created yet!'));\n    });\n};\n\n/**\n * Hangup an existing call\n */\nJitsiConference.prototype.hangup = function() {\n    if (this.room) {\n        return this.room.hangup();\n    }\n\n    return new Promise((resolve, reject) => {\n        reject(new Error('The conference is not created yet!'));\n    });\n};\n\n/**\n * Starts the transcription service.\n */\nJitsiConference.prototype.startTranscriber = function() {\n    return this.dial('jitsi_meet_transcribe');\n};\n\n\n/**\n * Stops the transcription service.\n */\nJitsiConference.prototype.stopTranscriber = JitsiConference.prototype.hangup;\n\n/**\n * Returns the phone number for joining the conference.\n */\nJitsiConference.prototype.getPhoneNumber = function() {\n    if (this.room) {\n        return this.room.getPhoneNumber();\n    }\n\n    return null;\n};\n\n/**\n * Returns the pin for joining the conference with phone.\n */\nJitsiConference.prototype.getPhonePin = function() {\n    if (this.room) {\n        return this.room.getPhonePin();\n    }\n\n    return null;\n};\n\n/**\n * Returns the meeting unique ID if any.\n *\n * @returns {string|undefined}\n */\nJitsiConference.prototype.getMeetingUniqueId = function() {\n    if (this.room) {\n        return this.room.getMeetingId();\n    }\n};\n\n/**\n * Will return P2P or JVB <tt>TraceablePeerConnection</tt> depending on\n * which connection is currently active.\n *\n * @return {TraceablePeerConnection|null} null if there isn't any active\n * <tt>TraceablePeerConnection</tt> currently available.\n * @public (FIXME how to make package local ?)\n */\nJitsiConference.prototype.getActivePeerConnection = function() {\n    const session = this.isP2PActive() ? this.p2pJingleSession : this.jvbJingleSession;\n\n    return session ? session.peerconnection : null;\n};\n\n/**\n * Returns the connection state for the current room. Its ice connection state\n * for its session.\n * NOTE that \"completed\" ICE state which can appear on the P2P connection will\n * be converted to \"connected\".\n * @return {string|null} ICE state name or <tt>null</tt> if there is no active\n * peer connection at this time.\n */\nJitsiConference.prototype.getConnectionState = function() {\n    const peerConnection = this.getActivePeerConnection();\n\n    return peerConnection ? peerConnection.getConnectionState() : null;\n};\n\n/**\n * Make all new participants mute their audio/video on join.\n * @param policy {Object} object with 2 boolean properties for video and audio:\n * @param {boolean} audio if audio should be muted.\n * @param {boolean} video if video should be muted.\n */\nJitsiConference.prototype.setStartMutedPolicy = function(policy) {\n    if (!this.isModerator()) {\n        logger.warn(`Failed to set start muted policy, ${this.room ? '' : 'not in a room, '}${\n            this.isModerator() ? '' : 'participant is not a moderator'}`);\n\n        return;\n    }\n    this.startMutedPolicy = policy;\n    this.room.addOrReplaceInPresence('startmuted', {\n        attributes: {\n            audio: policy.audio,\n            video: policy.video,\n            xmlns: 'http://jitsi.org/jitmeet/start-muted'\n        }\n    }) && this.room.sendPresence();\n};\n\n/**\n * Returns current start muted policy\n * @returns {Object} with 2 properties - audio and video.\n */\nJitsiConference.prototype.getStartMutedPolicy = function() {\n    return this.startMutedPolicy;\n};\n\n/**\n * Check if audio is muted on join.\n */\nJitsiConference.prototype.isStartAudioMuted = function() {\n    return this.startAudioMuted;\n};\n\n/**\n * Check if video is muted on join.\n */\nJitsiConference.prototype.isStartVideoMuted = function() {\n    return this.startVideoMuted;\n};\n\n/**\n * Returns measured connectionTimes.\n */\nJitsiConference.prototype.getConnectionTimes = function() {\n    return this.room.connectionTimes;\n};\n\n/**\n * Sets a property for the local participant.\n */\nJitsiConference.prototype.setLocalParticipantProperty = function(name, value) {\n    this.sendCommand(`jitsi_participant_${name}`, { value });\n};\n\n/**\n *  Removes a property for the local participant and sends the updated presence.\n */\nJitsiConference.prototype.removeLocalParticipantProperty = function(name) {\n    this.removeCommand(`jitsi_participant_${name}`);\n    this.room.sendPresence();\n};\n\n/**\n * Gets a local participant property.\n *\n * @return value of the local participant property if the tagName exists in the\n * list of properties, otherwise returns undefined.\n */\nJitsiConference.prototype.getLocalParticipantProperty = function(name) {\n    const property = this.room.presMap.nodes.find(prop =>\n        prop.tagName === `jitsi_participant_${name}`\n    );\n\n    return property ? property.value : undefined;\n};\n\n/**\n * Sends the given feedback through CallStats if enabled.\n *\n * @param overallFeedback an integer between 1 and 5 indicating the\n * user feedback\n * @param detailedFeedback detailed feedback from the user. Not yet used\n * @returns {Promise} Resolves if feedback is submitted successfully.\n */\nJitsiConference.prototype.sendFeedback = function(\n        overallFeedback,\n        detailedFeedback) {\n    return this.statistics.sendFeedback(overallFeedback, detailedFeedback);\n};\n\n/**\n * Returns true if the callstats integration is enabled, otherwise returns\n * false.\n *\n * @returns true if the callstats integration is enabled, otherwise returns\n * false.\n */\nJitsiConference.prototype.isCallstatsEnabled = function() {\n    return this.statistics.isCallstatsEnabled();\n};\n\n/**\n * Finds the SSRC of a given track\n *\n * @param track\n * @returns {number|undefined} the SSRC of the specificed track, otherwise undefined.\n */\nJitsiConference.prototype.getSsrcByTrack = function(track) {\n    return track.isLocal() ? this.getActivePeerConnection()?.getLocalSSRC(track) : track.getSSRC();\n};\n\n/**\n * Handles track attached to container (Calls associateStreamWithVideoTag method\n * from statistics module)\n * @param {JitsiLocalTrack|JitsiRemoteTrack} track the track\n * @param container the container\n */\nJitsiConference.prototype._onTrackAttach = function(track, container) {\n    const isLocal = track.isLocal();\n    let ssrc = null;\n    const isP2P = track.isP2P;\n    const remoteUserId = isP2P ? track.getParticipantId() : 'jitsi';\n    const peerConnection\n        = isP2P\n            ? this.p2pJingleSession && this.p2pJingleSession.peerconnection\n            : this.jvbJingleSession && this.jvbJingleSession.peerconnection;\n\n    if (isLocal) {\n        // Local tracks have SSRC stored on per peer connection basis.\n        if (peerConnection) {\n            ssrc = peerConnection.getLocalSSRC(track);\n        }\n    } else {\n        ssrc = track.getSSRC();\n    }\n    if (!container.id || !ssrc || !peerConnection) {\n        return;\n    }\n\n    this.statistics.associateStreamWithVideoTag(\n        peerConnection,\n        ssrc,\n        isLocal,\n        remoteUserId,\n        track.getUsageLabel(),\n        container.id);\n};\n\n/**\n * Logs an \"application log\" message.\n * @param message {string} The message to log. Note that while this can be a\n * generic string, the convention used by lib-jitsi-meet and jitsi-meet is to\n * log valid JSON strings, with an \"id\" field used for distinguishing between\n * message types. E.g.: {id: \"recorder_status\", status: \"off\"}\n */\nJitsiConference.prototype.sendApplicationLog = function(message) {\n    Statistics.sendLog(message);\n};\n\n/**\n * Checks if the user identified by given <tt>mucJid</tt> is the conference\n * focus.\n * @param mucJid the full MUC address of the user to be checked.\n * @returns {boolean|null} <tt>true</tt> if MUC user is the conference focus,\n * <tt>false</tt> when is not. <tt>null</tt> if we're not in the MUC anymore and\n * are unable to figure out the status or if given <tt>mucJid</tt> is invalid.\n */\nJitsiConference.prototype._isFocus = function(mucJid) {\n    return this.room ? this.room.isFocus(mucJid) : null;\n};\n\n/**\n * Fires CONFERENCE_FAILED event with INCOMPATIBLE_SERVER_VERSIONS parameter\n */\nJitsiConference.prototype._fireIncompatibleVersionsEvent = function() {\n    this.eventEmitter.emit(JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.INCOMPATIBLE_SERVER_VERSIONS);\n};\n\n/**\n * Sends a message via the data channel.\n * @param to {string} the id of the endpoint that should receive the message.\n * If \"\" the message will be sent to all participants.\n * @param payload {object} the payload of the message.\n * @throws NetworkError or InvalidStateError or Error if the operation fails.\n * @deprecated Use 'sendMessage' instead. TODO: this should be private.\n */\nJitsiConference.prototype.sendEndpointMessage = function(to, payload) {\n    this.rtc.sendChannelMessage(to, payload);\n};\n\n/**\n * Sends local stats via the bridge channel which then forwards to other endpoints selectively.\n * @param {Object} payload The payload of the message.\n * @throws NetworkError/InvalidStateError/Error if the operation fails or if there is no data channel created.\n */\nJitsiConference.prototype.sendEndpointStatsMessage = function(payload) {\n    this.rtc.sendEndpointStatsMessage(payload);\n};\n\n/**\n * Sends a broadcast message via the data channel.\n * @param payload {object} the payload of the message.\n * @throws NetworkError or InvalidStateError or Error if the operation fails.\n * @deprecated Use 'sendMessage' instead. TODO: this should be private.\n */\nJitsiConference.prototype.broadcastEndpointMessage = function(payload) {\n    this.sendEndpointMessage('', payload);\n};\n\n/**\n * Sends a message to a given endpoint (if 'to' is a non-empty string), or\n * broadcasts it to all endpoints in the conference.\n * @param {string} to The ID of the endpoint/participant which is to receive\n * the message, or '' to broadcast the message to all endpoints in the\n * conference.\n * @param {string|object} message the message to send. If this is of type\n * 'string' it will be sent as a chat message. If it is of type 'object', it\n * will be encapsulated in a format recognized by jitsi-meet and converted to\n * JSON before being sent.\n * @param {boolean} sendThroughVideobridge Whether to send the message through\n * jitsi-videobridge (via the COLIBRI data channel or web socket), or through\n * the XMPP MUC. Currently only objects can be sent through jitsi-videobridge.\n */\nJitsiConference.prototype.sendMessage = function(\n        message,\n        to = '',\n        sendThroughVideobridge = false) {\n    const messageType = typeof message;\n\n    // Through videobridge we support only objects. Through XMPP we support\n    // objects (encapsulated in a specific JSON format) and strings (i.e.\n    // regular chat messages).\n    if (messageType !== 'object'\n            && (sendThroughVideobridge || messageType !== 'string')) {\n        logger.error(`Can not send a message of type ${messageType}`);\n\n        return;\n    }\n\n    if (sendThroughVideobridge) {\n        this.sendEndpointMessage(to, message);\n    } else {\n        let messageToSend = message;\n\n        // Name of packet extension of message stanza to send the required\n        // message in.\n        let elementName = 'body';\n\n        if (messageType === 'object') {\n            elementName = 'json-message';\n\n            // Mark as valid JSON message if not already\n            if (!messageToSend.hasOwnProperty(JITSI_MEET_MUC_TYPE)) {\n                messageToSend[JITSI_MEET_MUC_TYPE] = '';\n            }\n\n            try {\n                messageToSend = JSON.stringify(messageToSend);\n            } catch (e) {\n                logger.error('Can not send a message, stringify failed: ', e);\n\n                return;\n            }\n        }\n\n        if (to) {\n            this.sendPrivateTextMessage(to, messageToSend, elementName);\n        } else {\n            // Broadcast\n            this.sendTextMessage(messageToSend, elementName);\n        }\n    }\n\n};\n\nJitsiConference.prototype.isConnectionInterrupted = function() {\n    return this.isP2PActive()\n        ? this.isP2PConnectionInterrupted : this.isJvbConnectionInterrupted;\n};\n\n/**\n * Handles {@link XMPPEvents.CONNECTION_RESTARTED} event. This happens when the bridge goes down\n * and Jicofo moves conferences away to a different bridge.\n * @param {JingleSessionPC} session\n * @private\n */\nJitsiConference.prototype._onConferenceRestarted = function(session) {\n    if (!session.isP2P && this.options.config.enableForcedReload) {\n        this.restartInProgress = true;\n        this.eventEmitter.emit(JitsiConferenceEvents.CONFERENCE_FAILED, JitsiConferenceErrors.CONFERENCE_RESTARTED);\n    }\n};\n\n/**\n * Handles {@link XMPPEvents.CONNECTION_INTERRUPTED}\n * @param {JingleSessionPC} session\n * @private\n */\nJitsiConference.prototype._onIceConnectionInterrupted = function(session) {\n    if (session.isP2P) {\n        this.isP2PConnectionInterrupted = true;\n    } else {\n        this.isJvbConnectionInterrupted = true;\n    }\n    if (session.isP2P === this.isP2PActive()) {\n        this.eventEmitter.emit(JitsiConferenceEvents.CONNECTION_INTERRUPTED);\n    }\n};\n\n/**\n * Handles {@link XMPPEvents.CONNECTION_ICE_FAILED}\n * @param {JingleSessionPC} session\n * @private\n */\nJitsiConference.prototype._onIceConnectionFailed = function(session) {\n    // We do nothing for the JVB connection, because it's up to the Jicofo to\n    // eventually come up with the new offer (at least for the time being).\n    if (session.isP2P) {\n        // Add p2pFailed property to analytics to distinguish, between \"good\"\n        // and \"bad\" connection\n        Statistics.analytics.addPermanentProperties({ p2pFailed: true });\n\n        if (this.p2pJingleSession) {\n            Statistics.sendAnalyticsAndLog(\n                createP2PEvent(\n                    ACTION_P2P_FAILED,\n                    {\n                        initiator: this.p2pJingleSession.isInitiator\n                    }));\n\n        }\n        this._stopP2PSession('connectivity-error', 'ICE FAILED');\n    } else if (session && this.jvbJingleSession === session) {\n        this._delayedIceFailed = new IceFailedHandling(this);\n        this._delayedIceFailed.start(session);\n    }\n};\n\n/**\n * Handles {@link XMPPEvents.CONNECTION_RESTORED}\n * @param {JingleSessionPC} session\n * @private\n */\nJitsiConference.prototype._onIceConnectionRestored = function(session) {\n    if (session.isP2P) {\n        this.isP2PConnectionInterrupted = false;\n    } else {\n        this.isJvbConnectionInterrupted = false;\n        this._delayedIceFailed && this._delayedIceFailed.cancel();\n    }\n\n    if (session.isP2P === this.isP2PActive()) {\n        this.eventEmitter.emit(JitsiConferenceEvents.CONNECTION_RESTORED);\n    }\n};\n\n/**\n * Accept incoming P2P Jingle call.\n * @param {JingleSessionPC} jingleSession the session instance\n * @param {jQuery} jingleOffer a jQuery selector pointing to 'jingle' IQ element\n * @private\n */\nJitsiConference.prototype._acceptP2PIncomingCall = function(\n        jingleSession,\n        jingleOffer) {\n    this.isP2PConnectionInterrupted = false;\n\n    // Accept the offer\n    this.p2pJingleSession = jingleSession;\n    this._sendConferenceJoinAnalyticsEvent();\n\n    this.p2pJingleSession.initialize(\n        this.room,\n        this.rtc, {\n            ...this.options.config,\n            enableInsertableStreams: this.isE2EEEnabled()\n        });\n\n    logger.info('Starting CallStats for P2P connection...');\n\n    let remoteID = Strophe.getResourceFromJid(this.p2pJingleSession.remoteJid);\n\n    const participant = this.participants[remoteID];\n\n    if (participant) {\n        remoteID = participant.getStatsID() || remoteID;\n    }\n\n    this.statistics.startCallStats(\n        this.p2pJingleSession.peerconnection,\n        remoteID);\n\n    const localTracks = this.getLocalTracks();\n\n    this.p2pJingleSession.acceptOffer(\n        jingleOffer,\n        () => {\n            logger.debug('Got RESULT for P2P \"session-accept\"');\n\n            this.eventEmitter.emit(\n                JitsiConferenceEvents._MEDIA_SESSION_STARTED,\n                this.p2pJingleSession);\n        },\n        error => {\n            logger.error(\n                'Failed to accept incoming P2P Jingle session', error);\n        },\n        localTracks);\n};\n\n/**\n * Adds remote tracks to the conference associated with the JVB session.\n * @private\n */\nJitsiConference.prototype._addRemoteJVBTracks = function() {\n    this._addRemoteTracks(\n        'JVB', this.jvbJingleSession.peerconnection.getRemoteTracks());\n};\n\n/**\n * Adds remote tracks to the conference associated with the P2P session.\n * @private\n */\nJitsiConference.prototype._addRemoteP2PTracks = function() {\n    this._addRemoteTracks(\n        'P2P', this.p2pJingleSession.peerconnection.getRemoteTracks());\n};\n\n/**\n * Generates fake \"remote track added\" events for given Jingle session.\n * @param {string} logName the session's nickname which will appear in log\n * messages.\n * @param {Array<JitsiRemoteTrack>} remoteTracks the tracks that will be added\n * @private\n */\nJitsiConference.prototype._addRemoteTracks = function(logName, remoteTracks) {\n    for (const track of remoteTracks) {\n        logger.info(`Adding remote ${logName} track: ${track}`);\n        this.onRemoteTrackAdded(track);\n    }\n};\n\n/**\n * Called when {@link XMPPEvents.CONNECTION_ESTABLISHED} event is\n * triggered for a {@link JingleSessionPC}. Switches the conference to use\n * the P2P connection if the event comes from the P2P session.\n * @param {JingleSessionPC} jingleSession the session instance.\n * @private\n */\nJitsiConference.prototype._onIceConnectionEstablished = function(\n        jingleSession) {\n    if (this.p2pJingleSession !== null) {\n        // store the establishment time of the p2p session as a field of the\n        // JitsiConference because the p2pJingleSession might get disposed (thus\n        // the value is lost).\n        this.p2pEstablishmentDuration\n            = this.p2pJingleSession.establishmentDuration;\n    }\n\n    if (this.jvbJingleSession !== null) {\n        this.jvbEstablishmentDuration\n            = this.jvbJingleSession.establishmentDuration;\n    }\n\n    let done = false;\n    const forceJVB121Ratio = this.options.config.forceJVB121Ratio;\n\n    // We don't care about the JVB case, there's nothing to be done\n    if (!jingleSession.isP2P) {\n        done = true;\n    } else if (this.p2pJingleSession !== jingleSession) {\n        logger.error('CONNECTION_ESTABLISHED - wrong P2P session instance ?!');\n\n        done = true;\n    } else if (!jingleSession.isInitiator\n        && typeof forceJVB121Ratio === 'number'\n        && Math.random() < forceJVB121Ratio) {\n        logger.info(`Forcing JVB 121 mode (ratio=${forceJVB121Ratio})...`);\n        Statistics.analytics.addPermanentProperties({ forceJvb121: true });\n        this._stopP2PSession('decline', 'force JVB121');\n\n        done = true;\n    }\n\n    if (!isNaN(this.p2pEstablishmentDuration)\n        && !isNaN(this.jvbEstablishmentDuration)) {\n        const establishmentDurationDiff\n            = this.p2pEstablishmentDuration - this.jvbEstablishmentDuration;\n\n        Statistics.sendAnalytics(\n            ICE_ESTABLISHMENT_DURATION_DIFF,\n            { value: establishmentDurationDiff });\n    }\n\n    if (jingleSession.isP2P === this.isP2PActive()) {\n        this.eventEmitter.emit(JitsiConferenceEvents.CONNECTION_ESTABLISHED);\n    }\n\n    if (done) {\n\n        return;\n    }\n\n    // Update P2P status and emit events\n    this._setP2PStatus(true);\n\n    // Remove remote tracks\n    if (this.jvbJingleSession) {\n        this._removeRemoteJVBTracks();\n    } else {\n        logger.info('Not removing remote JVB tracks - no session yet');\n    }\n\n    this._addRemoteP2PTracks();\n\n    // Stop media transfer over the JVB connection\n    if (this.jvbJingleSession) {\n        this._suspendMediaTransferForJvbConnection();\n    }\n\n    logger.info('Starting remote stats with p2p connection');\n    this.statistics.startRemoteStats(this.p2pJingleSession.peerconnection);\n\n    Statistics.sendAnalyticsAndLog(\n        createP2PEvent(\n            ACTION_P2P_ESTABLISHED,\n            {\n                initiator: this.p2pJingleSession.isInitiator\n            }));\n\n};\n\n/**\n * Called when the chat room reads a new list of properties from jicofo's\n * presence. The properties may have changed, but they don't have to.\n *\n * @param {Object} properties - The properties keyed by the property name\n * ('key').\n * @private\n */\nJitsiConference.prototype._updateProperties = function(properties = {}) {\n    const changed = !isEqual(properties, this.properties);\n\n    this.properties = properties;\n    if (changed) {\n        this.eventEmitter.emit(\n            JitsiConferenceEvents.PROPERTIES_CHANGED,\n            this.properties);\n\n        // Some of the properties need to be added to analytics events.\n        const analyticsKeys = [\n\n            // The number of jitsi-videobridge instances currently used for the\n            // conference.\n            'bridge-count',\n\n            // The conference creation time (set by jicofo).\n            'created-ms'\n        ];\n\n        analyticsKeys.forEach(key => {\n            if (properties[key] !== undefined) {\n                Statistics.analytics.addPermanentProperties({\n                    [key.replace('-', '_')]: properties[key]\n                });\n            }\n        });\n    }\n};\n\n/**\n * Gets a conference property with a given key.\n *\n * @param {string} key - The key.\n * @returns {*} The value\n */\nJitsiConference.prototype.getProperty = function(key) {\n    return this.properties[key];\n};\n\n/**\n * Clears the deferred start P2P task if it has been scheduled.\n * @private\n */\nJitsiConference.prototype._maybeClearDeferredStartP2P = function() {\n    if (this.deferredStartP2PTask) {\n        logger.info('Cleared deferred start P2P task');\n        clearTimeout(this.deferredStartP2PTask);\n        this.deferredStartP2PTask = null;\n    }\n};\n\n/**\n * Removes from the conference remote tracks associated with the JVB\n * connection.\n * @private\n */\nJitsiConference.prototype._removeRemoteJVBTracks = function() {\n    this._removeRemoteTracks(\n        'JVB', this.jvbJingleSession.peerconnection.getRemoteTracks());\n};\n\n/**\n * Removes from the conference remote tracks associated with the P2P\n * connection.\n * @private\n */\nJitsiConference.prototype._removeRemoteP2PTracks = function() {\n    this._removeRemoteTracks(\n        'P2P', this.p2pJingleSession.peerconnection.getRemoteTracks());\n};\n\n/**\n * Generates fake \"remote track removed\" events for given Jingle session.\n * @param {string} sessionNickname the session's nickname which will appear in\n * log messages.\n * @param {Array<JitsiRemoteTrack>} remoteTracks the tracks that will be removed\n * @private\n */\nJitsiConference.prototype._removeRemoteTracks = function(\n        sessionNickname,\n        remoteTracks) {\n    for (const track of remoteTracks) {\n        logger.info(`Removing remote ${sessionNickname} track: ${track}`);\n        this.onRemoteTrackRemoved(track);\n    }\n};\n\n/**\n * Resumes media transfer over the JVB connection.\n * @private\n */\nJitsiConference.prototype._resumeMediaTransferForJvbConnection = function() {\n    logger.info('Resuming media transfer over the JVB connection...');\n    this.jvbJingleSession.setMediaTransferActive(true, true).then(\n        () => {\n            logger.info('Resumed media transfer over the JVB connection!');\n        },\n        error => {\n            logger.error(\n                'Failed to resume media transfer over the JVB connection:',\n                error);\n        });\n};\n\n/**\n * Sets new P2P status and updates some events/states hijacked from\n * the <tt>JitsiConference</tt>.\n * @param {boolean} newStatus the new P2P status value, <tt>true</tt> means that\n * P2P is now in use, <tt>false</tt> means that the JVB connection is now in use\n * @private\n */\nJitsiConference.prototype._setP2PStatus = function(newStatus) {\n    if (this.p2p === newStatus) {\n        logger.debug(`Called _setP2PStatus with the same status: ${newStatus}`);\n\n        return;\n    }\n    this.p2p = newStatus;\n    if (newStatus) {\n        logger.info('Peer to peer connection established!');\n\n        // When we end up in a valid P2P session need to reset the properties\n        // in case they have persisted, after session with another peer.\n        Statistics.analytics.addPermanentProperties({\n            p2pFailed: false,\n            forceJvb121: false\n        });\n\n        // Sync up video transfer active in case p2pJingleSession not existed\n        // when the lastN value was being adjusted.\n        const isVideoActive = this.getLastN() !== 0;\n\n        this.p2pJingleSession\n            .setMediaTransferActive(true, isVideoActive)\n            .catch(error => {\n                logger.error(\n                    'Failed to sync up P2P video transfer status'\n                        + `(${isVideoActive})`, error);\n            });\n    } else {\n        logger.info('Peer to peer connection closed!');\n    }\n\n    // Put the JVB connection on hold/resume\n    if (this.jvbJingleSession) {\n        this.statistics.sendConnectionResumeOrHoldEvent(\n            this.jvbJingleSession.peerconnection, !newStatus);\n    }\n\n    // Clear dtmfManager, so that it can be recreated with new connection\n    this.dtmfManager = null;\n\n    // Update P2P status\n    this.eventEmitter.emit(\n        JitsiConferenceEvents.P2P_STATUS,\n        this,\n        this.p2p);\n    this.eventEmitter.emit(\n        JitsiConferenceEvents._MEDIA_SESSION_ACTIVE_CHANGED,\n        this._getActiveMediaSession());\n\n    // Refresh connection interrupted/restored\n    this.eventEmitter.emit(\n        this.isConnectionInterrupted()\n            ? JitsiConferenceEvents.CONNECTION_INTERRUPTED\n            : JitsiConferenceEvents.CONNECTION_RESTORED);\n};\n\n/**\n * Starts new P2P session.\n * @param {string} remoteJid the JID of the remote participant\n * @private\n */\nJitsiConference.prototype._startP2PSession = function(remoteJid) {\n    this._maybeClearDeferredStartP2P();\n    if (this.p2pJingleSession) {\n        logger.error('P2P session already started!');\n\n        return;\n    }\n\n    this.isP2PConnectionInterrupted = false;\n    this.p2pJingleSession\n        = this.xmpp.connection.jingle.newP2PJingleSession(\n            this.room.myroomjid,\n            remoteJid);\n    logger.info(\n        'Created new P2P JingleSession', this.room.myroomjid, remoteJid);\n    this._sendConferenceJoinAnalyticsEvent();\n\n    this.p2pJingleSession.initialize(\n        this.room,\n        this.rtc, {\n            ...this.options.config,\n            enableInsertableStreams: this.isE2EEEnabled()\n        });\n\n    logger.info('Starting CallStats for P2P connection...');\n\n    let remoteID = Strophe.getResourceFromJid(this.p2pJingleSession.remoteJid);\n\n    const participant = this.participants[remoteID];\n\n    if (participant) {\n        remoteID = participant.getStatsID() || remoteID;\n    }\n\n    this.statistics.startCallStats(\n        this.p2pJingleSession.peerconnection,\n        remoteID);\n\n    const localTracks = this.getLocalTracks();\n\n    this.p2pJingleSession.invite(localTracks);\n};\n\n/**\n * Suspends media transfer over the JVB connection.\n * @private\n */\nJitsiConference.prototype._suspendMediaTransferForJvbConnection = function() {\n    logger.info('Suspending media transfer over the JVB connection...');\n    this.jvbJingleSession.setMediaTransferActive(false, false).then(\n        () => {\n            logger.info('Suspended media transfer over the JVB connection !');\n        },\n        error => {\n            logger.error(\n                'Failed to suspend media transfer over the JVB connection:',\n                error);\n        });\n};\n\n/**\n * Method when called will decide whether it's the time to start or stop\n * the P2P session.\n * @param {boolean} userLeftEvent if <tt>true</tt> it means that the call\n * originates from the user left event.\n * @private\n */\nJitsiConference.prototype._maybeStartOrStopP2P = function(userLeftEvent) {\n    if (!this.isP2PEnabled() || this.isP2PTestModeEnabled() || browser.isFirefox() || browser.isWebKitBased()) {\n        logger.info('Auto P2P disabled');\n\n        return;\n    }\n    const peers = this.getParticipants();\n    const peerCount = peers.length;\n\n    // FIXME 1 peer and it must *support* P2P switching\n    const shouldBeInP2P = this._shouldBeInP2PMode();\n\n    // Clear deferred \"start P2P\" task\n    if (!shouldBeInP2P && this.deferredStartP2PTask) {\n        this._maybeClearDeferredStartP2P();\n    }\n\n    // Start peer to peer session\n    if (!this.p2pJingleSession && shouldBeInP2P) {\n        const peer = peerCount && peers[0];\n\n\n        const myId = this.myUserId();\n        const peersId = peer.getId();\n\n        if (myId > peersId) {\n            logger.debug(\n                'I\\'m the bigger peersId - '\n                + 'the other peer should start P2P', myId, peersId);\n\n            return;\n        } else if (myId === peersId) {\n            logger.error('The same IDs ? ', myId, peersId);\n\n            return;\n        }\n\n        const jid = peer.getJid();\n\n        if (userLeftEvent) {\n            if (this.deferredStartP2PTask) {\n                logger.error('Deferred start P2P task\\'s been set already!');\n\n                return;\n            }\n            logger.info(\n                `Will start P2P with: ${jid} after ${\n                    this.backToP2PDelay} seconds...`);\n            this.deferredStartP2PTask = setTimeout(\n                this._startP2PSession.bind(this, jid),\n                this.backToP2PDelay * 1000);\n        } else {\n            logger.info(`Will start P2P with: ${jid}`);\n            this._startP2PSession(jid);\n        }\n    } else if (this.p2pJingleSession && !shouldBeInP2P) {\n        logger.info(`Will stop P2P with: ${this.p2pJingleSession.remoteJid}`);\n\n        // Log that there will be a switch back to the JVB connection\n        if (this.p2pJingleSession.isInitiator && peerCount > 1) {\n            Statistics.sendAnalyticsAndLog(\n                createP2PEvent(ACTION_P2P_SWITCH_TO_JVB));\n        }\n        this._stopP2PSession();\n    }\n};\n\n/**\n * Tells whether or not this conference should be currently in the P2P mode.\n *\n * @private\n * @returns {boolean}\n */\nJitsiConference.prototype._shouldBeInP2PMode = function() {\n    const peers = this.getParticipants();\n    const peerCount = peers.length;\n    const hasBotPeer = peers.find(p => p.getBotType() === 'poltergeist' || p.hasFeature(FEATURE_JIGASI)) !== undefined;\n    const shouldBeInP2P = peerCount === 1 && !hasBotPeer;\n\n    logger.debug(`P2P? peerCount: ${peerCount}, hasBotPeer: ${hasBotPeer} => ${shouldBeInP2P}`);\n\n    return shouldBeInP2P;\n};\n\n/**\n * Stops the current P2P session.\n * @param {string} [reason=\"success\"] one of the Jingle \"reason\" element\n * names as defined by https://xmpp.org/extensions/xep-0166.html#def-reason\n * @param {string} [reasonDescription=\"Turing off P2P session\"] text\n * description that will be included in the session terminate message\n * @private\n */\nJitsiConference.prototype._stopP2PSession = function(\n        reason,\n        reasonDescription) {\n    if (!this.p2pJingleSession) {\n        logger.error('No P2P session to be stopped!');\n\n        return;\n    }\n\n    const wasP2PEstablished = this.isP2PActive();\n\n    // Swap remote tracks, but only if the P2P has been fully established\n    if (wasP2PEstablished) {\n        if (this.jvbJingleSession) {\n            this._resumeMediaTransferForJvbConnection();\n        }\n\n        // Remove remote P2P tracks\n        this._removeRemoteP2PTracks();\n    }\n\n    // Stop P2P stats\n    logger.info('Stopping remote stats for P2P connection');\n    this.statistics.stopRemoteStats(this.p2pJingleSession.peerconnection);\n    logger.info('Stopping CallStats for P2P connection');\n    this.statistics.stopCallStats(this.p2pJingleSession.peerconnection);\n\n    this.p2pJingleSession.terminate(\n        () => {\n            logger.info('P2P session terminate RESULT');\n        },\n        error => {\n            // Because both initiator and responder are simultaneously\n            // terminating their JingleSessions in case of the 'to JVB switch'\n            // when 3rd participant joins, both will dispose their sessions and\n            // reply with 'item-not-found' (see strophe.jingle.js). We don't\n            // want to log this as an error since it's expected behaviour.\n            //\n            // We want them both to terminate, because in case of initiator's\n            // crash the responder would stay in P2P mode until ICE fails which\n            // could take up to 20 seconds.\n            //\n            // NOTE lack of 'reason' is considered as graceful session terminate\n            // where both initiator and responder terminate their sessions\n            // simultaneously.\n            if (reason) {\n                logger.error(\n                    'An error occurred while trying to terminate'\n                        + ' P2P Jingle session', error);\n            }\n        }, {\n            reason: reason ? reason : 'success',\n            reasonDescription: reasonDescription\n                ? reasonDescription : 'Turing off P2P session',\n            sendSessionTerminate: this.room\n                && this.getParticipantById(\n                    Strophe.getResourceFromJid(this.p2pJingleSession.remoteJid))\n        });\n\n    this.p2pJingleSession = null;\n\n    // Update P2P status and other affected events/states\n    this._setP2PStatus(false);\n\n    if (wasP2PEstablished) {\n        // Add back remote JVB tracks\n        if (this.jvbJingleSession) {\n            this._addRemoteJVBTracks();\n        } else {\n            logger.info('Not adding remote JVB tracks - no session yet');\n        }\n    }\n};\n\n/**\n * Checks whether or not the conference is currently in the peer to peer mode.\n * Being in peer to peer mode means that the direct connection has been\n * established and the P2P connection is being used for media transmission.\n * @return {boolean} <tt>true</tt> if in P2P mode or <tt>false</tt> otherwise.\n */\nJitsiConference.prototype.isP2PActive = function() {\n    return this.p2p;\n};\n\n/**\n * Returns the current ICE state of the P2P connection.\n * NOTE: method is used by the jitsi-meet-torture tests.\n * @return {string|null} an ICE state or <tt>null</tt> if there's currently\n * no P2P connection.\n */\nJitsiConference.prototype.getP2PConnectionState = function() {\n    if (this.isP2PActive()) {\n        return this.p2pJingleSession.peerconnection.getConnectionState();\n    }\n\n    return null;\n};\n\n/**\n * Configures the peerconnection so that a given framre rate can be achieved for desktop share.\n *\n * @param {number} maxFps The capture framerate to be used for desktop tracks.\n * @returns {boolean} true if the operation is successful, false otherwise.\n */\nJitsiConference.prototype.setDesktopSharingFrameRate = function(maxFps) {\n    if (typeof maxFps !== 'number' || isNaN(maxFps)) {\n        logger.error(`Invalid value ${maxFps} specified for desktop capture frame rate`);\n\n        return false;\n    }\n\n    this._desktopSharingFrameRate = maxFps;\n\n    // Enable or disable simulcast for plan-b screensharing based on the capture fps.\n    this.jvbJingleSession && this.jvbJingleSession.peerconnection.setDesktopSharingFrameRate(maxFps);\n\n    // Set the capture rate for desktop sharing.\n    this.rtc.setDesktopSharingFrameRate(maxFps);\n\n    return true;\n};\n\n/**\n * Manually starts new P2P session (should be used only in the tests).\n */\nJitsiConference.prototype.startP2PSession = function() {\n    const peers = this.getParticipants();\n\n    // Start peer to peer session\n    if (peers.length === 1) {\n        const peerJid = peers[0].getJid();\n\n        this._startP2PSession(peerJid);\n    } else {\n        throw new Error(\n            'There must be exactly 1 participant to start the P2P session !');\n    }\n};\n\n/**\n * Manually stops the current P2P session (should be used only in the tests)\n */\nJitsiConference.prototype.stopP2PSession = function() {\n    this._stopP2PSession();\n};\n\n/**\n * Get a summary of how long current participants have been the dominant speaker\n * @returns {object}\n */\nJitsiConference.prototype.getSpeakerStats = function() {\n    return this.speakerStatsCollector.getStats();\n};\n\n/**\n * Sets the constraints for the video that is requested from the bridge.\n *\n * @param {Object} videoConstraints The constraints which are specified in the\n * following format. The message updates the fields that are present and leaves the\n * rest unchanged on the bridge. Therefore, any field that is not applicable anymore\n * should be cleared by passing an empty object or list (whatever is applicable).\n * {\n *      'lastN': 20,\n *      'selectedEndpoints': ['A', 'B', 'C'],\n *      'onStageEndpoints': ['A'],\n *      'defaultConstraints': { 'maxHeight': 180 },\n *      'constraints': {\n *          'A': { 'maxHeight': 720 }\n *      }\n * }\n */\nJitsiConference.prototype.setReceiverConstraints = function(videoConstraints) {\n    this.receiveVideoController.setReceiverConstraints(videoConstraints);\n};\n\n/**\n * Sets the maximum video size the local participant should receive from remote\n * participants.\n *\n * @param {number} maxFrameHeight - the maximum frame height, in pixels,\n * this receiver is willing to receive.\n * @returns {void}\n */\nJitsiConference.prototype.setReceiverVideoConstraint = function(maxFrameHeight) {\n    this.receiveVideoController.setPreferredReceiveMaxFrameHeight(maxFrameHeight);\n};\n\n/**\n * Sets the maximum video size the local participant should send to remote\n * participants.\n * @param {number} maxFrameHeight - The user preferred max frame height.\n * @returns {Promise} promise that will be resolved when the operation is\n * successful and rejected otherwise.\n */\nJitsiConference.prototype.setSenderVideoConstraint = function(maxFrameHeight) {\n    return this.sendVideoController.setPreferredSendMaxFrameHeight(maxFrameHeight);\n};\n\n/**\n * Creates a video SIP GW session and returns it if service is enabled. Before\n * creating a session one need to check whether video SIP GW service is\n * available in the system {@link JitsiConference.isVideoSIPGWAvailable}. Even\n * if there are available nodes to serve this request, after creating the\n * session those nodes can be taken and the request about using the\n * created session can fail.\n *\n * @param {string} sipAddress - The sip address to be used.\n * @param {string} displayName - The display name to be used for this session.\n * @returns {JitsiVideoSIPGWSession|Error} Returns null if conference is not\n * initialised and there is no room.\n */\nJitsiConference.prototype.createVideoSIPGWSession\n    = function(sipAddress, displayName) {\n        if (!this.room) {\n            return new Error(VideoSIPGWConstants.ERROR_NO_CONNECTION);\n        }\n\n        return this.videoSIPGWHandler\n            .createVideoSIPGWSession(sipAddress, displayName);\n    };\n\n/**\n * Sends a conference.join analytics event.\n *\n * @returns {void}\n */\nJitsiConference.prototype._sendConferenceJoinAnalyticsEvent = function() {\n    const meetingId = this.getMeetingUniqueId();\n\n    if (this._conferenceJoinAnalyticsEventSent || !meetingId || this.getActivePeerConnection() === null) {\n        return;\n    }\n\n    Statistics.sendAnalytics(createConferenceEvent('joined', {\n        meetingId,\n        participantId: `${meetingId}.${this._statsCurrentId}`\n    }));\n    this._conferenceJoinAnalyticsEventSent = Date.now();\n};\n\n/**\n * Sends conference.left analytics event.\n * @private\n */\nJitsiConference.prototype._sendConferenceLeftAnalyticsEvent = function() {\n    const meetingId = this.getMeetingUniqueId();\n\n    if (!meetingId || !this._conferenceJoinAnalyticsEventSent) {\n\n        return;\n    }\n\n    Statistics.sendAnalytics(createConferenceEvent('left', {\n        meetingId,\n        participantId: `${meetingId}.${this._statsCurrentId}`,\n        stats: {\n            duration: Math.floor((Date.now() - this._conferenceJoinAnalyticsEventSent) / 1000),\n            perf: this.getPerformanceStats()\n        }\n    }));\n};\n\n/**\n * Restarts all active media sessions.\n *\n * @returns {void}\n */\nJitsiConference.prototype._restartMediaSessions = function() {\n    if (this.p2pJingleSession) {\n        this.stopP2PSession();\n    }\n\n    if (this.jvbJingleSession) {\n        this.jvbJingleSession.terminate(\n            null /* success callback => we don't care */,\n            error => {\n                logger.warn('An error occurred while trying to terminate the JVB session', error);\n            }, {\n                reason: 'success',\n                reasonDescription: 'restart required',\n                requestRestart: true,\n                sendSessionTerminate: true\n            });\n    }\n\n    this._maybeStartOrStopP2P(false);\n};\n\n/**\n * Returns whether End-To-End encryption is enabled.\n *\n * @returns {boolean}\n */\nJitsiConference.prototype.isE2EEEnabled = function() {\n    return this._e2eEncryption && this._e2eEncryption.isEnabled();\n};\n\n/**\n * Returns whether End-To-End encryption is supported. Note that not all participants\n * in the conference may support it.\n *\n * @returns {boolean}\n */\nJitsiConference.prototype.isE2EESupported = function() {\n    return E2EEncryption.isSupported(this.options.config);\n};\n\n/**\n * Enables / disables End-to-End encryption.\n *\n * @param {boolean} enabled whether to enable E2EE or not.\n * @returns {void}\n */\nJitsiConference.prototype.toggleE2EE = function(enabled) {\n    if (!this.isE2EESupported()) {\n        logger.warn('Cannot enable / disable E2EE: platform is not supported.');\n\n        return;\n    }\n\n    this._e2eEncryption.setEnabled(enabled);\n};\n\n/**\n * Returns <tt>true</tt> if lobby support is enabled in the backend.\n *\n * @returns {boolean} whether lobby is supported in the backend.\n */\nJitsiConference.prototype.isLobbySupported = function() {\n    return Boolean(this.room && this.room.getLobby().isSupported());\n};\n\n/**\n * Returns <tt>true</tt> if the room has members only enabled.\n *\n * @returns {boolean} whether conference room is members only.\n */\nJitsiConference.prototype.isMembersOnly = function() {\n    return Boolean(this.room && this.room.membersOnlyEnabled);\n};\n\n/**\n * Enables lobby by moderators\n *\n * @returns {Promise} resolves when lobby room is joined or rejects with the error.\n */\nJitsiConference.prototype.enableLobby = function() {\n    if (this.room && this.isModerator()) {\n        return this.room.getLobby().enable();\n    }\n\n    return Promise.reject(\n        new Error('The conference not started or user is not moderator'));\n};\n\n/**\n * Disabled lobby by moderators\n *\n * @returns {void}\n */\nJitsiConference.prototype.disableLobby = function() {\n    if (this.room && this.isModerator()) {\n        this.room.getLobby().disable();\n    } else {\n        logger.warn(`Failed to disable lobby, ${this.room ? '' : 'not in a room, '}${\n            this.isModerator() ? '' : 'participant is not a moderator'}`);\n    }\n};\n\n/**\n * Joins the lobby room with display name and optional email or with a shared password to skip waiting.\n *\n * @param {string} displayName Display name should be set to show it to moderators.\n * @param {string} email Optional email is used to present avatar to the moderator.\n * @returns {Promise<never>}\n */\nJitsiConference.prototype.joinLobby = function(displayName, email) {\n    if (this.room) {\n        return this.room.getLobby().join(displayName, email);\n    }\n\n    return Promise.reject(new Error('The conference not started'));\n};\n\n/**\n * Denies an occupant in the lobby room access to the conference.\n * @param {string} id The participant id.\n */\nJitsiConference.prototype.lobbyDenyAccess = function(id) {\n    if (this.room) {\n        this.room.getLobby().denyAccess(id);\n    }\n};\n\n/**\n * Approves the request to join the conference to a participant waiting in the lobby.\n *\n * @param {string} id The participant id.\n */\nJitsiConference.prototype.lobbyApproveAccess = function(id) {\n    if (this.room) {\n        this.room.getLobby().approveAccess(id);\n    }\n};\n\n/**\n * Returns <tt>true</tt> if AV Moderation support is enabled in the backend.\n *\n * @returns {boolean} whether AV Moderation is supported in the backend.\n */\nJitsiConference.prototype.isAVModerationSupported = function() {\n    return Boolean(this.room && this.room.getAVModeration().isSupported());\n};\n\n/**\n * Enables AV Moderation.\n * @param {MediaType} mediaType \"audio\" or \"video\"\n */\nJitsiConference.prototype.enableAVModeration = function(mediaType) {\n    if (this.room && this.isModerator()\n        && (mediaType === MediaType.AUDIO || mediaType === MediaType.VIDEO)) {\n        this.room.getAVModeration().enable(true, mediaType);\n    } else {\n        logger.warn(`Failed to enable AV moderation, ${this.room ? '' : 'not in a room, '}${\n            this.isModerator() ? '' : 'participant is not a moderator, '}${\n            this.room && this.isModerator() ? 'wrong media type passed' : ''}`);\n    }\n};\n\n/**\n * Disables AV Moderation.\n * @param {MediaType} mediaType \"audio\" or \"video\"\n */\nJitsiConference.prototype.disableAVModeration = function(mediaType) {\n    if (this.room && this.isModerator()\n        && (mediaType === MediaType.AUDIO || mediaType === MediaType.VIDEO)) {\n        this.room.getAVModeration().enable(false, mediaType);\n    } else {\n        logger.warn(`Failed to disable AV moderation, ${this.room ? '' : 'not in a room, '}${\n            this.isModerator() ? '' : 'participant is not a moderator, '}${\n            this.room && this.isModerator() ? 'wrong media type passed' : ''}`);\n    }\n};\n\n/**\n * Approve participant access to certain media, allows unmuting audio or video.\n *\n * @param {MediaType} mediaType \"audio\" or \"video\"\n * @param id the id of the participant.\n */\nJitsiConference.prototype.avModerationApprove = function(mediaType, id) {\n    if (this.room && this.isModerator()\n        && (mediaType === MediaType.AUDIO || mediaType === MediaType.VIDEO)) {\n\n        const participant = this.getParticipantById(id);\n\n        if (!participant) {\n            return;\n        }\n\n        this.room.getAVModeration().approve(mediaType, participant.getJid());\n    } else {\n        logger.warn(`AV moderation skipped , ${this.room ? '' : 'not in a room, '}${\n            this.isModerator() ? '' : 'participant is not a moderator, '}${\n            this.room && this.isModerator() ? 'wrong media type passed' : ''}`);\n    }\n};\n","/* global __filename */\n\nimport { getLogger } from 'jitsi-meet-logger';\nimport { Strophe } from 'strophe.js';\n\nimport * as JitsiConferenceErrors from './JitsiConferenceErrors';\nimport * as JitsiConferenceEvents from './JitsiConferenceEvents';\nimport { SPEAKERS_AUDIO_LEVELS } from './modules/statistics/constants';\nimport Statistics from './modules/statistics/statistics';\nimport EventEmitterForwarder from './modules/util/EventEmitterForwarder';\nimport * as MediaType from './service/RTC/MediaType';\nimport RTCEvents from './service/RTC/RTCEvents';\nimport VideoType from './service/RTC/VideoType';\nimport AuthenticationEvents\n    from './service/authentication/AuthenticationEvents';\nimport {\n    ACTION_JINGLE_SA_TIMEOUT,\n    createBridgeDownEvent,\n    createConnectionStageReachedEvent,\n    createFocusLeftEvent,\n    createJingleEvent,\n    createRemotelyMutedEvent\n} from './service/statistics/AnalyticsEvents';\nimport XMPPEvents from './service/xmpp/XMPPEvents';\n\nconst logger = getLogger(__filename);\n\n/**\n * Setups all event listeners related to conference\n * @param conference {JitsiConference} the conference\n */\nexport default function JitsiConferenceEventManager(conference) {\n    this.conference = conference;\n    this.xmppListeners = {};\n\n    // Listeners related to the conference only\n    conference.on(JitsiConferenceEvents.TRACK_MUTE_CHANGED,\n        track => {\n            if (!track.isLocal() || !conference.statistics) {\n                return;\n            }\n            const session\n                = track.isP2P\n                    ? conference.p2pJingleSession : conference.jvbJingleSession;\n\n            // TPC will be null, before the conference starts, but the event\n            // still should be queued\n            const tpc = (session && session.peerconnection) || null;\n\n            conference.statistics.sendMuteEvent(\n                tpc,\n                track.isMuted(),\n                track.getType());\n        });\n}\n\n/**\n * Setups event listeners related to conference.chatRoom\n */\nJitsiConferenceEventManager.prototype.setupChatRoomListeners = function() {\n    const conference = this.conference;\n    const chatRoom = conference.room;\n\n    this.chatRoomForwarder = new EventEmitterForwarder(chatRoom,\n        this.conference.eventEmitter);\n\n    chatRoom.addListener(XMPPEvents.ICE_RESTARTING, jingleSession => {\n        if (!jingleSession.isP2P) {\n            // If using DataChannel as bridge channel, it must be closed\n            // before ICE restart, otherwise Chrome will not trigger \"opened\"\n            // event for the channel established with the new bridge.\n            // TODO: This may be bypassed when using a WebSocket as bridge\n            // channel.\n            conference.rtc.closeBridgeChannel();\n        }\n\n        // else: there are no DataChannels in P2P session (at least for now)\n    });\n\n    chatRoom.addListener(XMPPEvents.PARTICIPANT_FEATURES_CHANGED, (from, features) => {\n        const participant = conference.getParticipantById(Strophe.getResourceFromJid(from));\n\n        if (participant) {\n            participant.setFeatures(features);\n            conference.eventEmitter.emit(JitsiConferenceEvents.PARTCIPANT_FEATURES_CHANGED, participant);\n        }\n    });\n\n    chatRoom.addListener(\n        XMPPEvents.ICE_RESTART_SUCCESS,\n        (jingleSession, offerIq) => {\n            // The JVB data chanel needs to be reopened in case the conference\n            // has been moved to a new bridge.\n            !jingleSession.isP2P\n                && conference._setBridgeChannel(\n                    offerIq, jingleSession.peerconnection);\n        });\n\n\n    chatRoom.addListener(XMPPEvents.AUDIO_MUTED_BY_FOCUS,\n        actor => {\n            // TODO: Add a way to differentiate between commands which caused\n            // us to mute and those that did not change our state (i.e. we were\n            // already muted).\n            Statistics.sendAnalytics(createRemotelyMutedEvent(MediaType.AUDIO));\n\n            conference.mutedByFocusActor = actor;\n\n            // set isMutedByFocus when setAudioMute Promise ends\n            conference.rtc.setAudioMute(true).then(\n                () => {\n                    conference.isMutedByFocus = true;\n                    conference.mutedByFocusActor = null;\n                })\n                .catch(\n                    error => {\n                        conference.mutedByFocusActor = null;\n                        logger.warn(\n                            'Error while audio muting due to focus request', error);\n                    });\n        }\n    );\n\n    chatRoom.addListener(XMPPEvents.VIDEO_MUTED_BY_FOCUS,\n        actor => {\n            // TODO: Add a way to differentiate between commands which caused\n            // us to mute and those that did not change our state (i.e. we were\n            // already muted).\n            Statistics.sendAnalytics(createRemotelyMutedEvent(MediaType.VIDEO));\n\n            conference.mutedVideoByFocusActor = actor;\n\n            // set isVideoMutedByFocus when setVideoMute Promise ends\n            conference.rtc.setVideoMute(true).then(\n                () => {\n                    conference.isVideoMutedByFocus = true;\n                    conference.mutedVideoByFocusActor = null;\n                })\n                .catch(\n                    error => {\n                        conference.mutedVideoByFocusActor = null;\n                        logger.warn(\n                            'Error while video muting due to focus request', error);\n                    });\n        }\n    );\n\n    this.chatRoomForwarder.forward(XMPPEvents.SUBJECT_CHANGED,\n        JitsiConferenceEvents.SUBJECT_CHANGED);\n\n    this.chatRoomForwarder.forward(XMPPEvents.MUC_JOINED,\n        JitsiConferenceEvents.CONFERENCE_JOINED);\n\n    this.chatRoomForwarder.forward(XMPPEvents.MEETING_ID_SET,\n        JitsiConferenceEvents.CONFERENCE_UNIQUE_ID_SET);\n\n    // send some analytics events\n    chatRoom.addListener(XMPPEvents.MUC_JOINED,\n        () => {\n            this.conference._onMucJoined();\n\n            this.conference.isJvbConnectionInterrupted = false;\n\n            // TODO: Move all of the 'connectionTimes' logic to its own module.\n            Object.keys(chatRoom.connectionTimes).forEach(key => {\n                const event\n                    = createConnectionStageReachedEvent(\n                        `conference_${key}`,\n                        { value: chatRoom.connectionTimes[key] });\n\n                Statistics.sendAnalytics(event);\n            });\n\n            // TODO: Move all of the 'connectionTimes' logic to its own module.\n            Object.keys(chatRoom.xmpp.connectionTimes).forEach(key => {\n                const event\n                    = createConnectionStageReachedEvent(\n                        `xmpp_${key}`,\n                        { value: chatRoom.xmpp.connectionTimes[key] });\n\n                Statistics.sendAnalytics(event);\n            });\n        });\n\n    chatRoom.addListener(XMPPEvents.RENEGOTIATION_FAILED, (e, session) => {\n        if (!session.isP2P) {\n            conference.eventEmitter.emit(JitsiConferenceEvents.CONFERENCE_FAILED,\n                JitsiConferenceErrors.OFFER_ANSWER_FAILED, e);\n        }\n    });\n\n    this.chatRoomForwarder.forward(XMPPEvents.ROOM_JOIN_ERROR,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.CONNECTION_ERROR);\n\n    this.chatRoomForwarder.forward(XMPPEvents.ROOM_CONNECT_ERROR,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.CONNECTION_ERROR);\n    this.chatRoomForwarder.forward(XMPPEvents.ROOM_CONNECT_NOT_ALLOWED_ERROR,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.NOT_ALLOWED_ERROR);\n    this.chatRoomForwarder.forward(XMPPEvents.ROOM_CONNECT_MEMBERS_ONLY_ERROR,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.MEMBERS_ONLY_ERROR);\n\n    this.chatRoomForwarder.forward(XMPPEvents.ROOM_MAX_USERS_ERROR,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.CONFERENCE_MAX_USERS);\n\n    this.chatRoomForwarder.forward(XMPPEvents.PASSWORD_REQUIRED,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.PASSWORD_REQUIRED);\n\n    this.chatRoomForwarder.forward(XMPPEvents.AUTHENTICATION_REQUIRED,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.AUTHENTICATION_REQUIRED);\n\n    this.chatRoomForwarder.forward(XMPPEvents.BRIDGE_DOWN,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.VIDEOBRIDGE_NOT_AVAILABLE);\n    chatRoom.addListener(\n        XMPPEvents.BRIDGE_DOWN,\n        () => Statistics.sendAnalytics(createBridgeDownEvent()));\n\n    chatRoom.addListener(XMPPEvents.CONNECTION_RESTARTED,\n        jingleSession => {\n            conference._onConferenceRestarted(jingleSession);\n        });\n\n    this.chatRoomForwarder.forward(XMPPEvents.RESERVATION_ERROR,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.RESERVATION_ERROR);\n\n    this.chatRoomForwarder.forward(XMPPEvents.GRACEFUL_SHUTDOWN,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.GRACEFUL_SHUTDOWN);\n\n    chatRoom.addListener(XMPPEvents.CONNECTION_ICE_FAILED,\n        jingleSession => {\n            conference._onIceConnectionFailed(jingleSession);\n        });\n\n    this.chatRoomForwarder.forward(XMPPEvents.MUC_DESTROYED,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.CONFERENCE_DESTROYED);\n\n    this.chatRoomForwarder.forward(XMPPEvents.CHAT_ERROR_RECEIVED,\n        JitsiConferenceEvents.CONFERENCE_ERROR,\n        JitsiConferenceErrors.CHAT_ERROR);\n\n    this.chatRoomForwarder.forward(XMPPEvents.FOCUS_DISCONNECTED,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.FOCUS_DISCONNECTED);\n\n    chatRoom.addListener(XMPPEvents.FOCUS_LEFT,\n        () => {\n            Statistics.sendAnalytics(createFocusLeftEvent());\n            conference.eventEmitter.emit(\n                JitsiConferenceEvents.CONFERENCE_FAILED,\n                JitsiConferenceErrors.FOCUS_LEFT);\n        });\n\n    chatRoom.addListener(XMPPEvents.SESSION_ACCEPT_TIMEOUT,\n        jingleSession => {\n            Statistics.sendAnalyticsAndLog(\n                createJingleEvent(\n                    ACTION_JINGLE_SA_TIMEOUT,\n                    { p2p: jingleSession.isP2P }));\n        });\n\n    chatRoom.addListener(XMPPEvents.RECORDER_STATE_CHANGED,\n        (session, jid) => {\n\n            if (jid) {\n                const resource = Strophe.getResourceFromJid(jid);\n                const participant = conference.getParticipantById(resource) || resource;\n\n                if (session.getStatus() === 'off') {\n                    session.setTerminator(participant);\n                } else if (session.getStatus() === 'on') {\n                    session.setInitiator(participant);\n                }\n            }\n\n            conference.eventEmitter.emit(\n                JitsiConferenceEvents.RECORDER_STATE_CHANGED,\n                session);\n        });\n\n    this.chatRoomForwarder.forward(XMPPEvents.TRANSCRIPTION_STATUS_CHANGED,\n        JitsiConferenceEvents.TRANSCRIPTION_STATUS_CHANGED);\n\n    this.chatRoomForwarder.forward(XMPPEvents.VIDEO_SIP_GW_AVAILABILITY_CHANGED,\n        JitsiConferenceEvents.VIDEO_SIP_GW_AVAILABILITY_CHANGED);\n\n    this.chatRoomForwarder.forward(\n        XMPPEvents.VIDEO_SIP_GW_SESSION_STATE_CHANGED,\n        JitsiConferenceEvents.VIDEO_SIP_GW_SESSION_STATE_CHANGED);\n\n    this.chatRoomForwarder.forward(XMPPEvents.PHONE_NUMBER_CHANGED,\n        JitsiConferenceEvents.PHONE_NUMBER_CHANGED);\n\n    chatRoom.setParticipantPropertyListener((node, from) => {\n        const participant = conference.getParticipantById(from);\n\n        if (!participant) {\n            return;\n        }\n\n        participant.setProperty(\n            node.tagName.substring('jitsi_participant_'.length),\n            node.value);\n    });\n\n    chatRoom.addListener(XMPPEvents.KICKED,\n        conference.onMemberKicked.bind(conference));\n    chatRoom.addListener(XMPPEvents.SUSPEND_DETECTED,\n        conference.onSuspendDetected.bind(conference));\n\n    this.chatRoomForwarder.forward(XMPPEvents.MUC_LOCK_CHANGED,\n        JitsiConferenceEvents.LOCK_STATE_CHANGED);\n\n    this.chatRoomForwarder.forward(XMPPEvents.MUC_MEMBERS_ONLY_CHANGED,\n        JitsiConferenceEvents.MEMBERS_ONLY_CHANGED);\n\n    chatRoom.addListener(XMPPEvents.MUC_MEMBER_JOINED,\n        conference.onMemberJoined.bind(conference));\n    this.chatRoomForwarder.forward(XMPPEvents.MUC_LOBBY_MEMBER_JOINED,\n        JitsiConferenceEvents.LOBBY_USER_JOINED);\n    this.chatRoomForwarder.forward(XMPPEvents.MUC_LOBBY_MEMBER_UPDATED,\n        JitsiConferenceEvents.LOBBY_USER_UPDATED);\n    this.chatRoomForwarder.forward(XMPPEvents.MUC_LOBBY_MEMBER_LEFT,\n        JitsiConferenceEvents.LOBBY_USER_LEFT);\n    chatRoom.addListener(XMPPEvents.MUC_MEMBER_BOT_TYPE_CHANGED,\n        conference._onMemberBotTypeChanged.bind(conference));\n    chatRoom.addListener(XMPPEvents.MUC_MEMBER_LEFT,\n        conference.onMemberLeft.bind(conference));\n    this.chatRoomForwarder.forward(XMPPEvents.MUC_LEFT,\n        JitsiConferenceEvents.CONFERENCE_LEFT);\n    this.chatRoomForwarder.forward(XMPPEvents.MUC_DENIED_ACCESS,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.CONFERENCE_ACCESS_DENIED);\n\n    chatRoom.addListener(XMPPEvents.DISPLAY_NAME_CHANGED,\n        conference.onDisplayNameChanged.bind(conference));\n\n    chatRoom.addListener(XMPPEvents.LOCAL_ROLE_CHANGED, role => {\n        conference.onLocalRoleChanged(role);\n\n        // log all events for the recorder operated by the moderator\n        if (conference.statistics && conference.isModerator()) {\n            conference.on(JitsiConferenceEvents.RECORDER_STATE_CHANGED,\n                recorderSession => {\n                    const logObject = {\n                        error: recorderSession.getError(),\n                        id: 'recorder_status',\n                        status: recorderSession.getStatus()\n                    };\n\n                    Statistics.sendLog(JSON.stringify(logObject));\n                });\n        }\n    });\n\n    chatRoom.addListener(XMPPEvents.MUC_ROLE_CHANGED,\n        conference.onUserRoleChanged.bind(conference));\n\n    chatRoom.addListener(AuthenticationEvents.IDENTITY_UPDATED,\n        (authEnabled, authIdentity) => {\n            conference.authEnabled = authEnabled;\n            conference.authIdentity = authIdentity;\n            conference.eventEmitter.emit(\n                JitsiConferenceEvents.AUTH_STATUS_CHANGED, authEnabled,\n                authIdentity);\n        });\n\n    chatRoom.addListener(\n        XMPPEvents.MESSAGE_RECEIVED,\n\n        // eslint-disable-next-line max-params\n        (jid, txt, myJid, ts) => {\n            const id = Strophe.getResourceFromJid(jid);\n\n            conference.eventEmitter.emit(\n                JitsiConferenceEvents.MESSAGE_RECEIVED,\n                id, txt, ts);\n        });\n\n    chatRoom.addListener(\n        XMPPEvents.PRIVATE_MESSAGE_RECEIVED,\n\n        // eslint-disable-next-line max-params\n        (jid, txt, myJid, ts) => {\n            const id = Strophe.getResourceFromJid(jid);\n\n            conference.eventEmitter.emit(\n                JitsiConferenceEvents.PRIVATE_MESSAGE_RECEIVED,\n                id, txt, ts);\n        });\n\n    chatRoom.addListener(XMPPEvents.PRESENCE_STATUS,\n        (jid, status) => {\n            const id = Strophe.getResourceFromJid(jid);\n            const participant = conference.getParticipantById(id);\n\n            if (!participant || participant._status === status) {\n                return;\n            }\n            participant._status = status;\n            conference.eventEmitter.emit(\n                JitsiConferenceEvents.USER_STATUS_CHANGED, id, status);\n        });\n\n    chatRoom.addListener(XMPPEvents.JSON_MESSAGE_RECEIVED,\n        (from, payload) => {\n            const id = Strophe.getResourceFromJid(from);\n            const participant = conference.getParticipantById(id);\n\n            if (participant) {\n                conference.eventEmitter.emit(\n                    JitsiConferenceEvents.ENDPOINT_MESSAGE_RECEIVED,\n                    participant, payload);\n            } else {\n                logger.warn(\n                    'Ignored XMPPEvents.JSON_MESSAGE_RECEIVED for not existing '\n                    + `participant: ${from}`,\n                    payload);\n            }\n        });\n\n    chatRoom.addPresenceListener('startmuted', (data, from) => {\n        let isModerator = false;\n\n        if (conference.myUserId() === from && conference.isModerator()) {\n            isModerator = true;\n        } else {\n            const participant = conference.getParticipantById(from);\n\n            if (participant && participant.isModerator()) {\n                isModerator = true;\n            }\n        }\n\n        if (!isModerator) {\n            return;\n        }\n\n        const startAudioMuted = data.attributes.audio === 'true';\n        const startVideoMuted = data.attributes.video === 'true';\n\n        let updated = false;\n\n        if (startAudioMuted !== conference.startMutedPolicy.audio) {\n            conference.startMutedPolicy.audio = startAudioMuted;\n            updated = true;\n        }\n\n        if (startVideoMuted !== conference.startMutedPolicy.video) {\n            conference.startMutedPolicy.video = startVideoMuted;\n            updated = true;\n        }\n\n        if (updated) {\n            conference.eventEmitter.emit(\n                JitsiConferenceEvents.START_MUTED_POLICY_CHANGED,\n                conference.startMutedPolicy\n            );\n        }\n    });\n\n    if (conference.statistics) {\n        // FIXME ICE related events should end up in RTCEvents eventually\n        chatRoom.addListener(XMPPEvents.CONNECTION_ICE_FAILED,\n            session => {\n                conference.statistics.sendIceConnectionFailedEvent(\n                    session.peerconnection);\n            });\n\n        // FIXME XMPPEvents.ADD_ICE_CANDIDATE_FAILED is never emitted\n        chatRoom.addListener(XMPPEvents.ADD_ICE_CANDIDATE_FAILED,\n            (e, pc) => {\n                conference.statistics.sendAddIceCandidateFailed(e, pc);\n            });\n    }\n};\n\n/**\n * Setups event listeners related to conference.rtc\n */\nJitsiConferenceEventManager.prototype.setupRTCListeners = function() {\n    const conference = this.conference;\n    const rtc = conference.rtc;\n\n    rtc.addListener(\n        RTCEvents.REMOTE_TRACK_ADDED,\n        conference.onRemoteTrackAdded.bind(conference));\n\n    rtc.addListener(\n        RTCEvents.REMOTE_TRACK_REMOVED,\n        conference.onRemoteTrackRemoved.bind(conference));\n\n    rtc.addListener(RTCEvents.DOMINANT_SPEAKER_CHANGED,\n        (dominant, previous) => {\n            if (conference.lastDominantSpeaker !== dominant && conference.room) {\n                conference.lastDominantSpeaker = dominant;\n                conference.eventEmitter.emit(\n                    JitsiConferenceEvents.DOMINANT_SPEAKER_CHANGED, dominant, previous);\n\n                if (previous && previous.length) {\n                    const speakerList = previous.slice(0);\n\n                    // Add the dominant speaker to the top of the list (exclude self).\n                    if (conference.myUserId !== dominant) {\n                        speakerList.splice(0, 0, dominant);\n                    }\n\n                    // Trim the list to the top 5 speakers only.\n                    if (speakerList.length > SPEAKERS_AUDIO_LEVELS) {\n                        speakerList.splice(SPEAKERS_AUDIO_LEVELS, speakerList.length - SPEAKERS_AUDIO_LEVELS);\n                    }\n                    conference.statistics && conference.statistics.setSpeakerList(speakerList);\n                }\n                if (conference.statistics && conference.myUserId() === dominant) {\n                    // We are the new dominant speaker.\n                    conference.statistics.sendDominantSpeakerEvent(conference.room.roomjid);\n                }\n            }\n        });\n\n    rtc.addListener(RTCEvents.DATA_CHANNEL_OPEN, () => {\n        const now = window.performance.now();\n        const key = 'data.channel.opened';\n\n        // TODO: Move all of the 'connectionTimes' logic to its own module.\n        logger.log(`(TIME) ${key}:\\t`, now);\n        conference.room.connectionTimes[key] = now;\n        Statistics.sendAnalytics(\n            createConnectionStageReachedEvent(key, { value: now }));\n\n        conference.eventEmitter.emit(JitsiConferenceEvents.DATA_CHANNEL_OPENED);\n    });\n\n    rtc.addListener(RTCEvents.ENDPOINT_MESSAGE_RECEIVED,\n        (from, payload) => {\n            const participant = conference.getParticipantById(from);\n\n            if (participant) {\n                conference.eventEmitter.emit(\n                    JitsiConferenceEvents.ENDPOINT_MESSAGE_RECEIVED,\n                    participant, payload);\n            } else {\n                logger.warn(\n                    'Ignored ENDPOINT_MESSAGE_RECEIVED for not existing '\n                        + `participant: ${from}`,\n                    payload);\n            }\n        });\n\n    rtc.addListener(RTCEvents.ENDPOINT_STATS_RECEIVED,\n        (from, payload) => {\n            const participant = conference.getParticipantById(from);\n\n            if (participant) {\n                conference.eventEmitter.emit(JitsiConferenceEvents.ENDPOINT_STATS_RECEIVED, participant, payload);\n            } else {\n                logger.warn(`Ignoring ENDPOINT_STATS_RECEIVED for a non-existant participant: ${from}`);\n            }\n        });\n\n    rtc.addListener(RTCEvents.LOCAL_UFRAG_CHANGED,\n        (tpc, ufrag) => {\n            if (!tpc.isP2P) {\n                Statistics.sendLog(\n                    JSON.stringify({\n                        id: 'local_ufrag',\n                        value: ufrag\n                    }));\n            }\n        });\n    rtc.addListener(RTCEvents.REMOTE_UFRAG_CHANGED,\n        (tpc, ufrag) => {\n            if (!tpc.isP2P) {\n                Statistics.sendLog(\n                    JSON.stringify({\n                        id: 'remote_ufrag',\n                        value: ufrag\n                    }));\n            }\n        });\n\n    rtc.addListener(RTCEvents.CREATE_ANSWER_FAILED,\n        (e, tpc) => {\n            conference.statistics.sendCreateAnswerFailed(e, tpc);\n            if (!tpc.isP2P) {\n                conference.eventEmitter.emit(JitsiConferenceEvents.CONFERENCE_FAILED,\n                    JitsiConferenceErrors.OFFER_ANSWER_FAILED, e);\n            }\n        });\n\n    rtc.addListener(RTCEvents.CREATE_OFFER_FAILED,\n        (e, tpc) => {\n            conference.statistics.sendCreateOfferFailed(e, tpc);\n            if (!tpc.isP2P) {\n                conference.eventEmitter.emit(JitsiConferenceEvents.CONFERENCE_FAILED,\n                    JitsiConferenceErrors.OFFER_ANSWER_FAILED, e);\n            }\n        });\n\n    rtc.addListener(RTCEvents.SET_LOCAL_DESCRIPTION_FAILED,\n        (e, tpc) => {\n            conference.statistics.sendSetLocalDescFailed(e, tpc);\n            if (!tpc.isP2P) {\n                conference.eventEmitter.emit(JitsiConferenceEvents.CONFERENCE_FAILED,\n                    JitsiConferenceErrors.OFFER_ANSWER_FAILED, e);\n            }\n        });\n\n    rtc.addListener(RTCEvents.SET_REMOTE_DESCRIPTION_FAILED,\n        (e, tpc) => {\n            conference.statistics.sendSetRemoteDescFailed(e, tpc);\n            if (!tpc.isP2P) {\n                conference.eventEmitter.emit(JitsiConferenceEvents.CONFERENCE_FAILED,\n                    JitsiConferenceErrors.OFFER_ANSWER_FAILED, e);\n            }\n        });\n\n    rtc.addListener(RTCEvents.LOCAL_TRACK_SSRC_UPDATED,\n        (track, ssrc) => {\n            // when starting screen sharing, the track is created and when\n            // we do set local description and we process the ssrc we\n            // will be notified for it and we will report it with the event\n            // for screen sharing\n            if (track.isVideoTrack() && track.videoType === VideoType.DESKTOP) {\n                conference.statistics.sendScreenSharingEvent(true, ssrc);\n            }\n        });\n};\n\n/**\n * Removes event listeners related to conference.xmpp\n */\nJitsiConferenceEventManager.prototype.removeXMPPListeners = function() {\n    const conference = this.conference;\n\n    Object.keys(this.xmppListeners).forEach(eventName => {\n        conference.xmpp.removeListener(\n            eventName,\n            this.xmppListeners[eventName]);\n    });\n    this.xmppListeners = {};\n};\n\n\n/**\n * Setups event listeners related to conference.xmpp\n */\nJitsiConferenceEventManager.prototype.setupXMPPListeners = function() {\n    const conference = this.conference;\n\n    this._addConferenceXMPPListener(\n        XMPPEvents.CALL_INCOMING,\n        conference.onIncomingCall.bind(conference));\n    this._addConferenceXMPPListener(\n        XMPPEvents.CALL_ACCEPTED,\n        conference.onCallAccepted.bind(conference));\n    this._addConferenceXMPPListener(\n        XMPPEvents.TRANSPORT_INFO,\n        conference.onTransportInfo.bind(conference));\n    this._addConferenceXMPPListener(\n        XMPPEvents.CALL_ENDED,\n        conference.onCallEnded.bind(conference));\n\n    this._addConferenceXMPPListener(XMPPEvents.START_MUTED_FROM_FOCUS,\n        (audioMuted, videoMuted) => {\n            if (conference.options.config.ignoreStartMuted) {\n                return;\n            }\n\n            conference.startAudioMuted = audioMuted;\n            conference.startVideoMuted = videoMuted;\n\n            // mute existing local tracks because this is initial mute from\n            // Jicofo\n            conference.getLocalTracks().forEach(track => {\n                switch (track.getType()) {\n                case MediaType.AUDIO:\n                    conference.startAudioMuted && track.mute();\n                    break;\n                case MediaType.VIDEO:\n                    conference.startVideoMuted && track.mute();\n                    break;\n                }\n            });\n\n            conference.eventEmitter.emit(JitsiConferenceEvents.STARTED_MUTED);\n        });\n\n    this._addConferenceXMPPListener(XMPPEvents.CONFERENCE_TIMESTAMP_RECEIVED,\n        createdTimestamp => {\n            conference.eventEmitter.emit(JitsiConferenceEvents.CONFERENCE_CREATED_TIMESTAMP, createdTimestamp);\n        });\n\n    this._addConferenceXMPPListener(XMPPEvents.AV_MODERATION_CHANGED,\n        (value, mediaType, actorJid) => {\n            const actorParticipant = conference.getParticipants().find(p => p.getJid() === actorJid);\n\n            conference.eventEmitter.emit(JitsiConferenceEvents.AV_MODERATION_CHANGED, {\n                enabled: value,\n                mediaType,\n                actor: actorParticipant\n            });\n        });\n    this._addConferenceXMPPListener(XMPPEvents.AV_MODERATION_PARTICIPANT_APPROVED,\n        (mediaType, jid) => {\n            const participant = conference.getParticipantById(Strophe.getResourceFromJid(jid));\n\n            if (participant) {\n                conference.eventEmitter.emit(JitsiConferenceEvents.AV_MODERATION_PARTICIPANT_APPROVED, {\n                    participant,\n                    mediaType\n                });\n            }\n        });\n    this._addConferenceXMPPListener(XMPPEvents.AV_MODERATION_APPROVED,\n        value => conference.eventEmitter.emit(JitsiConferenceEvents.AV_MODERATION_APPROVED, { mediaType: value }));\n};\n\n/**\n * Add XMPP listener and save its reference for remove on leave conference.\n */\nJitsiConferenceEventManager.prototype._addConferenceXMPPListener = function(\n        eventName, listener) {\n    this.xmppListeners[eventName] = listener;\n    this.conference.xmpp.addListener(eventName, listener);\n};\n\n/**\n * Setups event listeners related to conference.statistics\n */\nJitsiConferenceEventManager.prototype.setupStatisticsListeners = function() {\n    const conference = this.conference;\n\n    if (!conference.statistics) {\n        return;\n    }\n\n    /* eslint-disable max-params */\n    conference.statistics.addAudioLevelListener((tpc, ssrc, level, isLocal) => {\n        conference.rtc.setAudioLevel(tpc, ssrc, level, isLocal);\n    });\n\n    /* eslint-enable max-params */\n\n    // Forward the \"before stats disposed\" event\n    conference.statistics.addBeforeDisposedListener(() => {\n        conference.eventEmitter.emit(\n            JitsiConferenceEvents.BEFORE_STATISTICS_DISPOSED);\n    });\n\n    // if we are in startSilent mode we will not be sending/receiving so nothing to detect\n    if (!conference.options.config.startSilent) {\n        conference.statistics.addByteSentStatsListener((tpc, stats) => {\n            conference.getLocalTracks(MediaType.AUDIO).forEach(track => {\n                const ssrc = tpc.getLocalSSRC(track);\n\n                if (!ssrc || !stats.hasOwnProperty(ssrc)) {\n                    return;\n                }\n\n                track._onByteSentStatsReceived(tpc, stats[ssrc]);\n            });\n        });\n    }\n};\n","import { BrowserDetection } from '@jitsi/js-utils';\nimport { getLogger } from 'jitsi-meet-logger';\n\nconst logger = getLogger(__filename);\n\n/* Minimum required Chrome / Chromium version. This applies also to derivatives. */\nconst MIN_REQUIRED_CHROME_VERSION = 72;\n\n// TODO: Move this code to js-utils.\n\n// NOTE: Now we are extending BrowserDetection in order to preserve\n// RTCBrowserType interface but maybe it worth exporting BrowserCapabilities\n// and BrowserDetection as separate objects in future.\n\n/**\n * Implements browser capabilities for lib-jitsi-meet.\n */\nexport default class BrowserCapabilities extends BrowserDetection {\n    /**\n     * Creates new BrowserCapabilities instance.\n     */\n    constructor() {\n        super();\n        logger.info(\n            `This appears to be ${this.getName()}, ver: ${this.getVersion()}`);\n    }\n\n    /**\n     * Tells whether or not the <tt>MediaStream/tt> is removed from\n     * the <tt>PeerConnection</tt> and disposed on video mute (in order to turn\n     * off the camera device).\n     * @return {boolean} <tt>true</tt> if the current browser supports this\n     * strategy or <tt>false</tt> otherwise.\n     */\n    doesVideoMuteByStreamRemove() {\n        return this.isChromiumBased() || this.isWebKitBased();\n    }\n\n    /**\n     * Checks if the current browser is Chromium based, i.e., it's either Chrome / Chromium or uses it as its engine,\n     * but doesn't identify as Chrome.\n     *\n     * This includes the following browsers:\n     * - Chrome and Chromium.\n     * - Other browsers which use the Chrome engine, but are detected as Chrome, such as Brave and Vivaldi.\n     * - Browsers which are NOT Chrome but use it as their engine, and have custom detection code: Opera, Electron\n     *   and NW.JS.\n     * This excludes\n     * - Chrome on iOS since it uses WKWebView.\n     */\n    isChromiumBased() {\n        return (this.isChrome()\n            || this.isElectron()\n            || this.isNWJS()\n            || this.isOpera())\n            && !this.isWebKitBased();\n    }\n\n    /**\n     * Checks if the current browser is WebKit based. It's either\n     * Safari or uses WebKit as its engine.\n     *\n     * This includes Chrome and Firefox on iOS\n     *\n     * @returns {boolean}\n     */\n    isWebKitBased() {\n        // https://trac.webkit.org/changeset/236144/webkit/trunk/LayoutTests/webrtc/video-addLegacyTransceiver.html\n        return this._bowser.isEngine('webkit')\n            && typeof navigator.mediaDevices !== 'undefined'\n            && typeof navigator.mediaDevices.getUserMedia !== 'undefined'\n            && typeof window.RTCRtpTransceiver !== 'undefined'\n            // eslint-disable-next-line no-undef\n            && Object.keys(RTCRtpTransceiver.prototype).indexOf('currentDirection') > -1;\n    }\n\n    /**\n     * Checks whether current running context is a Trusted Web Application.\n     *\n     * @returns {boolean} Whether the current context is a TWA.\n     */\n    isTwa() {\n        return 'matchMedia' in window && window.matchMedia('(display-mode:standalone)').matches;\n    }\n\n    /**\n     * Checks if the current browser is supported.\n     *\n     * @returns {boolean} true if the browser is supported, false otherwise.\n     */\n    isSupported() {\n        return (this.isChromiumBased() && this._getChromiumBasedVersion() >= MIN_REQUIRED_CHROME_VERSION)\n            || this.isFirefox()\n            || this.isReactNative()\n            || this.isWebKitBased();\n    }\n\n    /**\n     * Returns whether or not the current environment needs a user interaction\n     * with the page before any unmute can occur.\n     *\n     * @returns {boolean}\n     */\n    isUserInteractionRequiredForUnmute() {\n        return this.isFirefox() && this.isVersionLessThan('68');\n    }\n\n    /**\n     * Checks if the current browser triggers 'onmute'/'onunmute' events when\n     * user's connection is interrupted and the video stops playback.\n     * @returns {*|boolean} 'true' if the event is supported or 'false'\n     * otherwise.\n     */\n    supportsVideoMuteOnConnInterrupted() {\n        return this.isChromiumBased() || this.isReactNative();\n    }\n\n    /**\n     * Checks if the current browser reports upload and download bandwidth\n     * statistics.\n     * @return {boolean}\n     */\n    supportsBandwidthStatistics() {\n        // FIXME bandwidth stats are currently not implemented for FF on our\n        // side, but not sure if not possible ?\n        return !this.isFirefox() && !this.isWebKitBased();\n    }\n\n    /**\n     * Checks if the current browser supports setting codec preferences on the transceiver.\n     * @returns {boolean}\n     */\n    supportsCodecPreferences() {\n        return Boolean(window.RTCRtpTransceiver\n            && 'setCodecPreferences' in window.RTCRtpTransceiver.prototype\n            && window.RTCRtpReceiver\n            && typeof window.RTCRtpReceiver.getCapabilities !== 'undefined')\n\n            // this is not working on Safari because of the following bug\n            // https://bugs.webkit.org/show_bug.cgi?id=215567\n            && !this.isWebKitBased();\n    }\n\n    /**\n     * Checks if the current browser support the device change event.\n     * @return {boolean}\n     */\n    supportsDeviceChangeEvent() {\n        return navigator.mediaDevices\n            && typeof navigator.mediaDevices.ondevicechange !== 'undefined'\n            && typeof navigator.mediaDevices.addEventListener !== 'undefined';\n    }\n\n    /**\n     * Checks if the current browser supports RTT statistics for srflx local\n     * candidates through the legacy getStats() API.\n     */\n    supportsLocalCandidateRttStatistics() {\n        return this.isChromiumBased() || this.isReactNative() || this.isWebKitBased();\n    }\n\n    /**\n     * Checks if the current browser supports the Long Tasks API that lets us observe\n     * performance measurement events and be notified of tasks that take longer than\n     * 50ms to execute on the main thread.\n     */\n    supportsPerformanceObserver() {\n        return typeof window.PerformanceObserver !== 'undefined'\n            && PerformanceObserver.supportedEntryTypes.indexOf('longtask') > -1;\n    }\n\n    /**\n     * Checks if the current browser supports audio level stats on the receivers.\n     */\n    supportsReceiverStats() {\n        return typeof window.RTCRtpReceiver !== 'undefined'\n            && Object.keys(RTCRtpReceiver.prototype).indexOf('getSynchronizationSources') > -1\n\n            // Disable this on Safari because it is reporting 0.000001 as the audio levels for all\n            // remote audio tracks.\n            && !this.isWebKitBased();\n    }\n\n    /**\n     * Checks if the current browser reports round trip time statistics for\n     * the ICE candidate pair.\n     * @return {boolean}\n     */\n    supportsRTTStatistics() {\n        // Firefox does not seem to report RTT for ICE candidate pair:\n        // eslint-disable-next-line max-len\n        // https://www.w3.org/TR/webrtc-stats/#dom-rtcicecandidatepairstats-currentroundtriptime\n        // It does report mozRTT for RTP streams, but at the time of this\n        // writing it's value does not make sense most of the time\n        // (is reported as 1):\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1241066\n        // For Chrome and others we rely on 'googRtt'.\n        return !this.isFirefox();\n    }\n\n    /**\n     * Checks if the browser uses SDP munging for turning on simulcast.\n     *\n     * @returns {boolean}\n     */\n    usesSdpMungingForSimulcast() {\n        return this.isChromiumBased() || this.isReactNative() || this.isWebKitBased();\n    }\n\n    /**\n     * Checks if the browser uses webrtc-adapter. All browsers except React Native do.\n     *\n     * @returns {boolean}\n     */\n    usesAdapter() {\n        return !this.isReactNative();\n    }\n\n    /**\n     * Checks if the browser uses RIDs/MIDs for siganling the simulcast streams\n     * to the bridge instead of the ssrcs.\n     */\n    usesRidsForSimulcast() {\n        return false;\n    }\n\n    /**\n     * Checks if the browser supports getDisplayMedia.\n     * @returns {boolean} {@code true} if the browser supports getDisplayMedia.\n     */\n    supportsGetDisplayMedia() {\n        return typeof navigator.getDisplayMedia !== 'undefined'\n            || (typeof navigator.mediaDevices !== 'undefined'\n                && typeof navigator.mediaDevices.getDisplayMedia\n                    !== 'undefined');\n    }\n\n    /**\n     * Checks if the browser supports insertable streams, needed for E2EE.\n     * @returns {boolean} {@code true} if the browser supports insertable streams.\n     */\n    supportsInsertableStreams() {\n        if (!(typeof window.RTCRtpSender !== 'undefined'\n            && window.RTCRtpSender.prototype.createEncodedStreams)) {\n            return false;\n        }\n\n        // Feature-detect transferable streams which we need to operate in a worker.\n        // See https://groups.google.com/a/chromium.org/g/blink-dev/c/1LStSgBt6AM/m/hj0odB8pCAAJ\n        const stream = new ReadableStream();\n\n        try {\n            window.postMessage(stream, '*', [ stream ]);\n\n            return true;\n        } catch {\n            return false;\n        }\n    }\n\n    /**\n     * Whether the browser supports the RED format for audio.\n     */\n    supportsAudioRed() {\n        return Boolean(window.RTCRtpSender\n            && window.RTCRtpSender.getCapabilities\n            && window.RTCRtpSender.getCapabilities('audio').codecs.some(codec => codec.mimeType === 'audio/red')\n            && window.RTCRtpReceiver\n            && window.RTCRtpReceiver.getCapabilities\n            && window.RTCRtpReceiver.getCapabilities('audio').codecs.some(codec => codec.mimeType === 'audio/red'));\n    }\n\n    /**\n     * Checks if the browser supports unified plan.\n     *\n     * @returns {boolean}\n     */\n    supportsUnifiedPlan() {\n        return !this.isReactNative();\n    }\n\n    /**\n     * Checks if the browser supports voice activity detection via the @type {VADAudioAnalyser} service.\n     *\n     * @returns {boolean}\n     */\n    supportsVADDetection() {\n        return this.isChromiumBased();\n    }\n\n    /**\n     * Returns the version of a Chromium based browser.\n     *\n     * @returns {Number}\n     */\n    _getChromiumBasedVersion() {\n        if (this.isChromiumBased()) {\n            // NW.JS doesn't expose the Chrome version in the UA string.\n            if (this.isNWJS()) {\n                // eslint-disable-next-line no-undef\n                return Number.parseInt(process.versions.chromium, 10);\n            }\n\n            // Here we process all browsers which use the Chrome engine but\n            // don't necessarily identify as Chrome. We cannot use the version\n            // comparing functions because the Electron, Opera and NW.JS\n            // versions are inconsequential here, as we need to know the actual\n            // Chrome engine version.\n            const ua = navigator.userAgent;\n\n            if (ua.match(/Chrome/)) {\n                const version\n                    = Number.parseInt(ua.match(/Chrome\\/([\\d.]+)/)[1], 10);\n\n                return version;\n            }\n        }\n\n        return -1;\n    }\n}\n","/**\n * [js-md5]{@link https://github.com/emn178/js-md5}\n *\n * @namespace md5\n * @version 0.7.3\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n */\n(function () {\n  'use strict';\n\n  var ERROR = 'input is invalid type';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_MD5_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_MD5_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_MD5_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_MD5_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var EXTRA = [128, 32768, 8388608, -2147483648];\n  var SHIFT = [0, 8, 16, 24];\n  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'buffer', 'arrayBuffer', 'base64'];\n  var BASE64_ENCODE_CHAR = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n  var blocks = [], buffer8;\n  if (ARRAY_BUFFER) {\n    var buffer = new ArrayBuffer(68);\n    buffer8 = new Uint8Array(buffer);\n    blocks = new Uint32Array(buffer);\n  }\n\n  if (root.JS_MD5_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_MD5_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  /**\n   * @method hex\n   * @memberof md5\n   * @description Output hash as hex string\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {String} Hex string\n   * @example\n   * md5.hex('The quick brown fox jumps over the lazy dog');\n   * // equal to\n   * md5('The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method digest\n   * @memberof md5\n   * @description Output hash as bytes array\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {Array} Bytes array\n   * @example\n   * md5.digest('The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method array\n   * @memberof md5\n   * @description Output hash as bytes array\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {Array} Bytes array\n   * @example\n   * md5.array('The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method arrayBuffer\n   * @memberof md5\n   * @description Output hash as ArrayBuffer\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {ArrayBuffer} ArrayBuffer\n   * @example\n   * md5.arrayBuffer('The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method buffer\n   * @deprecated This maybe confuse with Buffer in node.js. Please use arrayBuffer instead.\n   * @memberof md5\n   * @description Output hash as ArrayBuffer\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {ArrayBuffer} ArrayBuffer\n   * @example\n   * md5.buffer('The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method base64\n   * @memberof md5\n   * @description Output hash as base64 string\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {String} base64 string\n   * @example\n   * md5.base64('The quick brown fox jumps over the lazy dog');\n   */\n  var createOutputMethod = function (outputType) {\n    return function (message) {\n      return new Md5(true).update(message)[outputType]();\n    };\n  };\n\n  /**\n   * @method create\n   * @memberof md5\n   * @description Create Md5 object\n   * @returns {Md5} Md5 object.\n   * @example\n   * var hash = md5.create();\n   */\n  /**\n   * @method update\n   * @memberof md5\n   * @description Create and update Md5 object\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {Md5} Md5 object.\n   * @example\n   * var hash = md5.update('The quick brown fox jumps over the lazy dog');\n   * // equal to\n   * var hash = md5.create();\n   * hash.update('The quick brown fox jumps over the lazy dog');\n   */\n  var createMethod = function () {\n    var method = createOutputMethod('hex');\n    if (NODE_JS) {\n      method = nodeWrap(method);\n    }\n    method.create = function () {\n      return new Md5();\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createOutputMethod(type);\n    }\n    return method;\n  };\n\n  var nodeWrap = function (method) {\n    var crypto = eval(\"require('crypto')\");\n    var Buffer = eval(\"require('buffer').Buffer\");\n    var nodeMethod = function (message) {\n      if (typeof message === 'string') {\n        return crypto.createHash('md5').update(message, 'utf8').digest('hex');\n      } else {\n        if (message === null || message === undefined) {\n          throw ERROR;\n        } else if (message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        }\n      }\n      if (Array.isArray(message) || ArrayBuffer.isView(message) ||\n        message.constructor === Buffer) {\n        return crypto.createHash('md5').update(new Buffer(message)).digest('hex');\n      } else {\n        return method(message);\n      }\n    };\n    return nodeMethod;\n  };\n\n  /**\n   * Md5 class\n   * @class Md5\n   * @description This is internal class.\n   * @see {@link md5.create}\n   */\n  function Md5(sharedMemory) {\n    if (sharedMemory) {\n      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n      blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n      blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      this.blocks = blocks;\n      this.buffer8 = buffer8;\n    } else {\n      if (ARRAY_BUFFER) {\n        var buffer = new ArrayBuffer(68);\n        this.buffer8 = new Uint8Array(buffer);\n        this.blocks = new Uint32Array(buffer);\n      } else {\n        this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n      }\n    }\n    this.h0 = this.h1 = this.h2 = this.h3 = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n  }\n\n  /**\n   * @method update\n   * @memberof Md5\n   * @instance\n   * @description Update hash\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {Md5} Md5 object.\n   * @see {@link md5.update}\n   */\n  Md5.prototype.update = function (message) {\n    if (this.finalized) {\n      return;\n    }\n\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw ERROR;\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw ERROR;\n          }\n        }\n      } else {\n        throw ERROR;\n      }\n      notString = true;\n    }\n    var code, index = 0, i, length = message.length, blocks = this.blocks;\n    var buffer8 = this.buffer8;\n\n    while (index < length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = blocks[16];\n        blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      }\n\n      if (notString) {\n        if (ARRAY_BUFFER) {\n          for (i = this.start; index < length && i < 64; ++index) {\n            buffer8[i++] = message[index];\n          }\n        } else {\n          for (i = this.start; index < length && i < 64; ++index) {\n            blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n          }\n        }\n      } else {\n        if (ARRAY_BUFFER) {\n          for (i = this.start; index < length && i < 64; ++index) {\n            code = message.charCodeAt(index);\n            if (code < 0x80) {\n              buffer8[i++] = code;\n            } else if (code < 0x800) {\n              buffer8[i++] = 0xc0 | (code >> 6);\n              buffer8[i++] = 0x80 | (code & 0x3f);\n            } else if (code < 0xd800 || code >= 0xe000) {\n              buffer8[i++] = 0xe0 | (code >> 12);\n              buffer8[i++] = 0x80 | ((code >> 6) & 0x3f);\n              buffer8[i++] = 0x80 | (code & 0x3f);\n            } else {\n              code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n              buffer8[i++] = 0xf0 | (code >> 18);\n              buffer8[i++] = 0x80 | ((code >> 12) & 0x3f);\n              buffer8[i++] = 0x80 | ((code >> 6) & 0x3f);\n              buffer8[i++] = 0x80 | (code & 0x3f);\n            }\n          }\n        } else {\n          for (i = this.start; index < length && i < 64; ++index) {\n            code = message.charCodeAt(index);\n            if (code < 0x80) {\n              blocks[i >> 2] |= code << SHIFT[i++ & 3];\n            } else if (code < 0x800) {\n              blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n            } else if (code < 0xd800 || code >= 0xe000) {\n              blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n            } else {\n              code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n              blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n            }\n          }\n        }\n      }\n      this.lastByteIndex = i;\n      this.bytes += i - this.start;\n      if (i >= 64) {\n        this.start = i - 64;\n        this.hash();\n        this.hashed = true;\n      } else {\n        this.start = i;\n      }\n    }\n    if (this.bytes > 4294967295) {\n      this.hBytes += this.bytes / 4294967296 << 0;\n      this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n  };\n\n  Md5.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[i >> 2] |= EXTRA[i & 3];\n    if (i >= 56) {\n      if (!this.hashed) {\n        this.hash();\n      }\n      blocks[0] = blocks[16];\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n      blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n      blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n    }\n    blocks[14] = this.bytes << 3;\n    blocks[15] = this.hBytes << 3 | this.bytes >>> 29;\n    this.hash();\n  };\n\n  Md5.prototype.hash = function () {\n    var a, b, c, d, bc, da, blocks = this.blocks;\n\n    if (this.first) {\n      a = blocks[0] - 680876937;\n      a = (a << 7 | a >>> 25) - 271733879 << 0;\n      d = (-1732584194 ^ a & 2004318071) + blocks[1] - 117830708;\n      d = (d << 12 | d >>> 20) + a << 0;\n      c = (-271733879 ^ (d & (a ^ -271733879))) + blocks[2] - 1126478375;\n      c = (c << 17 | c >>> 15) + d << 0;\n      b = (a ^ (c & (d ^ a))) + blocks[3] - 1316259209;\n      b = (b << 22 | b >>> 10) + c << 0;\n    } else {\n      a = this.h0;\n      b = this.h1;\n      c = this.h2;\n      d = this.h3;\n      a += (d ^ (b & (c ^ d))) + blocks[0] - 680876936;\n      a = (a << 7 | a >>> 25) + b << 0;\n      d += (c ^ (a & (b ^ c))) + blocks[1] - 389564586;\n      d = (d << 12 | d >>> 20) + a << 0;\n      c += (b ^ (d & (a ^ b))) + blocks[2] + 606105819;\n      c = (c << 17 | c >>> 15) + d << 0;\n      b += (a ^ (c & (d ^ a))) + blocks[3] - 1044525330;\n      b = (b << 22 | b >>> 10) + c << 0;\n    }\n\n    a += (d ^ (b & (c ^ d))) + blocks[4] - 176418897;\n    a = (a << 7 | a >>> 25) + b << 0;\n    d += (c ^ (a & (b ^ c))) + blocks[5] + 1200080426;\n    d = (d << 12 | d >>> 20) + a << 0;\n    c += (b ^ (d & (a ^ b))) + blocks[6] - 1473231341;\n    c = (c << 17 | c >>> 15) + d << 0;\n    b += (a ^ (c & (d ^ a))) + blocks[7] - 45705983;\n    b = (b << 22 | b >>> 10) + c << 0;\n    a += (d ^ (b & (c ^ d))) + blocks[8] + 1770035416;\n    a = (a << 7 | a >>> 25) + b << 0;\n    d += (c ^ (a & (b ^ c))) + blocks[9] - 1958414417;\n    d = (d << 12 | d >>> 20) + a << 0;\n    c += (b ^ (d & (a ^ b))) + blocks[10] - 42063;\n    c = (c << 17 | c >>> 15) + d << 0;\n    b += (a ^ (c & (d ^ a))) + blocks[11] - 1990404162;\n    b = (b << 22 | b >>> 10) + c << 0;\n    a += (d ^ (b & (c ^ d))) + blocks[12] + 1804603682;\n    a = (a << 7 | a >>> 25) + b << 0;\n    d += (c ^ (a & (b ^ c))) + blocks[13] - 40341101;\n    d = (d << 12 | d >>> 20) + a << 0;\n    c += (b ^ (d & (a ^ b))) + blocks[14] - 1502002290;\n    c = (c << 17 | c >>> 15) + d << 0;\n    b += (a ^ (c & (d ^ a))) + blocks[15] + 1236535329;\n    b = (b << 22 | b >>> 10) + c << 0;\n    a += (c ^ (d & (b ^ c))) + blocks[1] - 165796510;\n    a = (a << 5 | a >>> 27) + b << 0;\n    d += (b ^ (c & (a ^ b))) + blocks[6] - 1069501632;\n    d = (d << 9 | d >>> 23) + a << 0;\n    c += (a ^ (b & (d ^ a))) + blocks[11] + 643717713;\n    c = (c << 14 | c >>> 18) + d << 0;\n    b += (d ^ (a & (c ^ d))) + blocks[0] - 373897302;\n    b = (b << 20 | b >>> 12) + c << 0;\n    a += (c ^ (d & (b ^ c))) + blocks[5] - 701558691;\n    a = (a << 5 | a >>> 27) + b << 0;\n    d += (b ^ (c & (a ^ b))) + blocks[10] + 38016083;\n    d = (d << 9 | d >>> 23) + a << 0;\n    c += (a ^ (b & (d ^ a))) + blocks[15] - 660478335;\n    c = (c << 14 | c >>> 18) + d << 0;\n    b += (d ^ (a & (c ^ d))) + blocks[4] - 405537848;\n    b = (b << 20 | b >>> 12) + c << 0;\n    a += (c ^ (d & (b ^ c))) + blocks[9] + 568446438;\n    a = (a << 5 | a >>> 27) + b << 0;\n    d += (b ^ (c & (a ^ b))) + blocks[14] - 1019803690;\n    d = (d << 9 | d >>> 23) + a << 0;\n    c += (a ^ (b & (d ^ a))) + blocks[3] - 187363961;\n    c = (c << 14 | c >>> 18) + d << 0;\n    b += (d ^ (a & (c ^ d))) + blocks[8] + 1163531501;\n    b = (b << 20 | b >>> 12) + c << 0;\n    a += (c ^ (d & (b ^ c))) + blocks[13] - 1444681467;\n    a = (a << 5 | a >>> 27) + b << 0;\n    d += (b ^ (c & (a ^ b))) + blocks[2] - 51403784;\n    d = (d << 9 | d >>> 23) + a << 0;\n    c += (a ^ (b & (d ^ a))) + blocks[7] + 1735328473;\n    c = (c << 14 | c >>> 18) + d << 0;\n    b += (d ^ (a & (c ^ d))) + blocks[12] - 1926607734;\n    b = (b << 20 | b >>> 12) + c << 0;\n    bc = b ^ c;\n    a += (bc ^ d) + blocks[5] - 378558;\n    a = (a << 4 | a >>> 28) + b << 0;\n    d += (bc ^ a) + blocks[8] - 2022574463;\n    d = (d << 11 | d >>> 21) + a << 0;\n    da = d ^ a;\n    c += (da ^ b) + blocks[11] + 1839030562;\n    c = (c << 16 | c >>> 16) + d << 0;\n    b += (da ^ c) + blocks[14] - 35309556;\n    b = (b << 23 | b >>> 9) + c << 0;\n    bc = b ^ c;\n    a += (bc ^ d) + blocks[1] - 1530992060;\n    a = (a << 4 | a >>> 28) + b << 0;\n    d += (bc ^ a) + blocks[4] + 1272893353;\n    d = (d << 11 | d >>> 21) + a << 0;\n    da = d ^ a;\n    c += (da ^ b) + blocks[7] - 155497632;\n    c = (c << 16 | c >>> 16) + d << 0;\n    b += (da ^ c) + blocks[10] - 1094730640;\n    b = (b << 23 | b >>> 9) + c << 0;\n    bc = b ^ c;\n    a += (bc ^ d) + blocks[13] + 681279174;\n    a = (a << 4 | a >>> 28) + b << 0;\n    d += (bc ^ a) + blocks[0] - 358537222;\n    d = (d << 11 | d >>> 21) + a << 0;\n    da = d ^ a;\n    c += (da ^ b) + blocks[3] - 722521979;\n    c = (c << 16 | c >>> 16) + d << 0;\n    b += (da ^ c) + blocks[6] + 76029189;\n    b = (b << 23 | b >>> 9) + c << 0;\n    bc = b ^ c;\n    a += (bc ^ d) + blocks[9] - 640364487;\n    a = (a << 4 | a >>> 28) + b << 0;\n    d += (bc ^ a) + blocks[12] - 421815835;\n    d = (d << 11 | d >>> 21) + a << 0;\n    da = d ^ a;\n    c += (da ^ b) + blocks[15] + 530742520;\n    c = (c << 16 | c >>> 16) + d << 0;\n    b += (da ^ c) + blocks[2] - 995338651;\n    b = (b << 23 | b >>> 9) + c << 0;\n    a += (c ^ (b | ~d)) + blocks[0] - 198630844;\n    a = (a << 6 | a >>> 26) + b << 0;\n    d += (b ^ (a | ~c)) + blocks[7] + 1126891415;\n    d = (d << 10 | d >>> 22) + a << 0;\n    c += (a ^ (d | ~b)) + blocks[14] - 1416354905;\n    c = (c << 15 | c >>> 17) + d << 0;\n    b += (d ^ (c | ~a)) + blocks[5] - 57434055;\n    b = (b << 21 | b >>> 11) + c << 0;\n    a += (c ^ (b | ~d)) + blocks[12] + 1700485571;\n    a = (a << 6 | a >>> 26) + b << 0;\n    d += (b ^ (a | ~c)) + blocks[3] - 1894986606;\n    d = (d << 10 | d >>> 22) + a << 0;\n    c += (a ^ (d | ~b)) + blocks[10] - 1051523;\n    c = (c << 15 | c >>> 17) + d << 0;\n    b += (d ^ (c | ~a)) + blocks[1] - 2054922799;\n    b = (b << 21 | b >>> 11) + c << 0;\n    a += (c ^ (b | ~d)) + blocks[8] + 1873313359;\n    a = (a << 6 | a >>> 26) + b << 0;\n    d += (b ^ (a | ~c)) + blocks[15] - 30611744;\n    d = (d << 10 | d >>> 22) + a << 0;\n    c += (a ^ (d | ~b)) + blocks[6] - 1560198380;\n    c = (c << 15 | c >>> 17) + d << 0;\n    b += (d ^ (c | ~a)) + blocks[13] + 1309151649;\n    b = (b << 21 | b >>> 11) + c << 0;\n    a += (c ^ (b | ~d)) + blocks[4] - 145523070;\n    a = (a << 6 | a >>> 26) + b << 0;\n    d += (b ^ (a | ~c)) + blocks[11] - 1120210379;\n    d = (d << 10 | d >>> 22) + a << 0;\n    c += (a ^ (d | ~b)) + blocks[2] + 718787259;\n    c = (c << 15 | c >>> 17) + d << 0;\n    b += (d ^ (c | ~a)) + blocks[9] - 343485551;\n    b = (b << 21 | b >>> 11) + c << 0;\n\n    if (this.first) {\n      this.h0 = a + 1732584193 << 0;\n      this.h1 = b - 271733879 << 0;\n      this.h2 = c - 1732584194 << 0;\n      this.h3 = d + 271733878 << 0;\n      this.first = false;\n    } else {\n      this.h0 = this.h0 + a << 0;\n      this.h1 = this.h1 + b << 0;\n      this.h2 = this.h2 + c << 0;\n      this.h3 = this.h3 + d << 0;\n    }\n  };\n\n  /**\n   * @method hex\n   * @memberof Md5\n   * @instance\n   * @description Output hash as hex string\n   * @returns {String} Hex string\n   * @see {@link md5.hex}\n   * @example\n   * hash.hex();\n   */\n  Md5.prototype.hex = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3;\n\n    return HEX_CHARS[(h0 >> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +\n      HEX_CHARS[(h0 >> 12) & 0x0F] + HEX_CHARS[(h0 >> 8) & 0x0F] +\n      HEX_CHARS[(h0 >> 20) & 0x0F] + HEX_CHARS[(h0 >> 16) & 0x0F] +\n      HEX_CHARS[(h0 >> 28) & 0x0F] + HEX_CHARS[(h0 >> 24) & 0x0F] +\n      HEX_CHARS[(h1 >> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +\n      HEX_CHARS[(h1 >> 12) & 0x0F] + HEX_CHARS[(h1 >> 8) & 0x0F] +\n      HEX_CHARS[(h1 >> 20) & 0x0F] + HEX_CHARS[(h1 >> 16) & 0x0F] +\n      HEX_CHARS[(h1 >> 28) & 0x0F] + HEX_CHARS[(h1 >> 24) & 0x0F] +\n      HEX_CHARS[(h2 >> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +\n      HEX_CHARS[(h2 >> 12) & 0x0F] + HEX_CHARS[(h2 >> 8) & 0x0F] +\n      HEX_CHARS[(h2 >> 20) & 0x0F] + HEX_CHARS[(h2 >> 16) & 0x0F] +\n      HEX_CHARS[(h2 >> 28) & 0x0F] + HEX_CHARS[(h2 >> 24) & 0x0F] +\n      HEX_CHARS[(h3 >> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +\n      HEX_CHARS[(h3 >> 12) & 0x0F] + HEX_CHARS[(h3 >> 8) & 0x0F] +\n      HEX_CHARS[(h3 >> 20) & 0x0F] + HEX_CHARS[(h3 >> 16) & 0x0F] +\n      HEX_CHARS[(h3 >> 28) & 0x0F] + HEX_CHARS[(h3 >> 24) & 0x0F];\n  };\n\n  /**\n   * @method toString\n   * @memberof Md5\n   * @instance\n   * @description Output hash as hex string\n   * @returns {String} Hex string\n   * @see {@link md5.hex}\n   * @example\n   * hash.toString();\n   */\n  Md5.prototype.toString = Md5.prototype.hex;\n\n  /**\n   * @method digest\n   * @memberof Md5\n   * @instance\n   * @description Output hash as bytes array\n   * @returns {Array} Bytes array\n   * @see {@link md5.digest}\n   * @example\n   * hash.digest();\n   */\n  Md5.prototype.digest = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3;\n    return [\n      h0 & 0xFF, (h0 >> 8) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 24) & 0xFF,\n      h1 & 0xFF, (h1 >> 8) & 0xFF, (h1 >> 16) & 0xFF, (h1 >> 24) & 0xFF,\n      h2 & 0xFF, (h2 >> 8) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 24) & 0xFF,\n      h3 & 0xFF, (h3 >> 8) & 0xFF, (h3 >> 16) & 0xFF, (h3 >> 24) & 0xFF\n    ];\n  };\n\n  /**\n   * @method array\n   * @memberof Md5\n   * @instance\n   * @description Output hash as bytes array\n   * @returns {Array} Bytes array\n   * @see {@link md5.array}\n   * @example\n   * hash.array();\n   */\n  Md5.prototype.array = Md5.prototype.digest;\n\n  /**\n   * @method arrayBuffer\n   * @memberof Md5\n   * @instance\n   * @description Output hash as ArrayBuffer\n   * @returns {ArrayBuffer} ArrayBuffer\n   * @see {@link md5.arrayBuffer}\n   * @example\n   * hash.arrayBuffer();\n   */\n  Md5.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var buffer = new ArrayBuffer(16);\n    var blocks = new Uint32Array(buffer);\n    blocks[0] = this.h0;\n    blocks[1] = this.h1;\n    blocks[2] = this.h2;\n    blocks[3] = this.h3;\n    return buffer;\n  };\n\n  /**\n   * @method buffer\n   * @deprecated This maybe confuse with Buffer in node.js. Please use arrayBuffer instead.\n   * @memberof Md5\n   * @instance\n   * @description Output hash as ArrayBuffer\n   * @returns {ArrayBuffer} ArrayBuffer\n   * @see {@link md5.buffer}\n   * @example\n   * hash.buffer();\n   */\n  Md5.prototype.buffer = Md5.prototype.arrayBuffer;\n\n  /**\n   * @method base64\n   * @memberof Md5\n   * @instance\n   * @description Output hash as base64 string\n   * @returns {String} base64 string\n   * @see {@link md5.base64}\n   * @example\n   * hash.base64();\n   */\n  Md5.prototype.base64 = function () {\n    var v1, v2, v3, base64Str = '', bytes = this.array();\n    for (var i = 0; i < 15;) {\n      v1 = bytes[i++];\n      v2 = bytes[i++];\n      v3 = bytes[i++];\n      base64Str += BASE64_ENCODE_CHAR[v1 >>> 2] +\n        BASE64_ENCODE_CHAR[(v1 << 4 | v2 >>> 4) & 63] +\n        BASE64_ENCODE_CHAR[(v2 << 2 | v3 >>> 6) & 63] +\n        BASE64_ENCODE_CHAR[v3 & 63];\n    }\n    v1 = bytes[i];\n    base64Str += BASE64_ENCODE_CHAR[v1 >>> 2] +\n      BASE64_ENCODE_CHAR[(v1 << 4) & 63] +\n      '==';\n    return base64Str;\n  };\n\n  var exports = createMethod();\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    /**\n     * @method md5\b\n     * @description Md5 hash function, export to global in browsers.\n     * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n     * @returns {String} md5 hashes\n     * @example\n     * md5(''); // d41d8cd98f00b204e9800998ecf8427e\n     * md5('The quick brown fox jumps over the lazy dog'); // 9e107d9d372bb6826bd81d3542a419d6\n     * md5('The quick brown fox jumps over the lazy dog.'); // e4d909c290d0fb1ca068ffaddf22cbd0\n     *\n     * // It also supports UTF-8 encoding\n     * md5('中文'); // a7bac2239fcdcb3a067903d8077c4a07\n     *\n     * // It also supports byte `Array`, `Uint8Array`, `ArrayBuffer`\n     * md5([]); // d41d8cd98f00b204e9800998ecf8427e\n     * md5(new Uint8Array([])); // d41d8cd98f00b204e9800998ecf8427e\n     */\n    root.md5 = exports;\n    if (AMD) {\n      define(function () {\n        return exports;\n      });\n    }\n  }\n})();\n","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.bowser=t():e.bowser=t()}(this,(function(){return function(e){var t={};function r(i){if(t[i])return t[i].exports;var n=t[i]={i:i,l:!1,exports:{}};return e[i].call(n.exports,n,n.exports,r),n.l=!0,n.exports}return r.m=e,r.c=t,r.d=function(e,t,i){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(r.r(i),Object.defineProperty(i,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var n in e)r.d(i,n,function(t){return e[t]}.bind(null,n));return i},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=90)}({17:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var i=r(18),n=function(){function e(){}return e.getFirstMatch=function(e,t){var r=t.match(e);return r&&r.length>0&&r[1]||\"\"},e.getSecondMatch=function(e,t){var r=t.match(e);return r&&r.length>1&&r[2]||\"\"},e.matchAndReturnConst=function(e,t,r){if(e.test(t))return r},e.getWindowsVersionName=function(e){switch(e){case\"NT\":return\"NT\";case\"XP\":return\"XP\";case\"NT 5.0\":return\"2000\";case\"NT 5.1\":return\"XP\";case\"NT 5.2\":return\"2003\";case\"NT 6.0\":return\"Vista\";case\"NT 6.1\":return\"7\";case\"NT 6.2\":return\"8\";case\"NT 6.3\":return\"8.1\";case\"NT 10.0\":return\"10\";default:return}},e.getMacOSVersionName=function(e){var t=e.split(\".\").splice(0,2).map((function(e){return parseInt(e,10)||0}));if(t.push(0),10===t[0])switch(t[1]){case 5:return\"Leopard\";case 6:return\"Snow Leopard\";case 7:return\"Lion\";case 8:return\"Mountain Lion\";case 9:return\"Mavericks\";case 10:return\"Yosemite\";case 11:return\"El Capitan\";case 12:return\"Sierra\";case 13:return\"High Sierra\";case 14:return\"Mojave\";case 15:return\"Catalina\";default:return}},e.getAndroidVersionName=function(e){var t=e.split(\".\").splice(0,2).map((function(e){return parseInt(e,10)||0}));if(t.push(0),!(1===t[0]&&t[1]<5))return 1===t[0]&&t[1]<6?\"Cupcake\":1===t[0]&&t[1]>=6?\"Donut\":2===t[0]&&t[1]<2?\"Eclair\":2===t[0]&&2===t[1]?\"Froyo\":2===t[0]&&t[1]>2?\"Gingerbread\":3===t[0]?\"Honeycomb\":4===t[0]&&t[1]<1?\"Ice Cream Sandwich\":4===t[0]&&t[1]<4?\"Jelly Bean\":4===t[0]&&t[1]>=4?\"KitKat\":5===t[0]?\"Lollipop\":6===t[0]?\"Marshmallow\":7===t[0]?\"Nougat\":8===t[0]?\"Oreo\":9===t[0]?\"Pie\":void 0},e.getVersionPrecision=function(e){return e.split(\".\").length},e.compareVersions=function(t,r,i){void 0===i&&(i=!1);var n=e.getVersionPrecision(t),s=e.getVersionPrecision(r),o=Math.max(n,s),a=0,u=e.map([t,r],(function(t){var r=o-e.getVersionPrecision(t),i=t+new Array(r+1).join(\".0\");return e.map(i.split(\".\"),(function(e){return new Array(20-e.length).join(\"0\")+e})).reverse()}));for(i&&(a=o-Math.min(n,s)),o-=1;o>=a;){if(u[0][o]>u[1][o])return 1;if(u[0][o]===u[1][o]){if(o===a)return 0;o-=1}else if(u[0][o]<u[1][o])return-1}},e.map=function(e,t){var r,i=[];if(Array.prototype.map)return Array.prototype.map.call(e,t);for(r=0;r<e.length;r+=1)i.push(t(e[r]));return i},e.getBrowserAlias=function(e){return i.BROWSER_ALIASES_MAP[e]},e.getBrowserTypeByAlias=function(e){return i.BROWSER_MAP[e]||\"\"},e}();t.default=n,e.exports=t.default},18:function(e,t,r){\"use strict\";t.__esModule=!0,t.ENGINE_MAP=t.OS_MAP=t.PLATFORMS_MAP=t.BROWSER_MAP=t.BROWSER_ALIASES_MAP=void 0;t.BROWSER_ALIASES_MAP={\"Amazon Silk\":\"amazon_silk\",\"Android Browser\":\"android\",Bada:\"bada\",BlackBerry:\"blackberry\",Chrome:\"chrome\",Chromium:\"chromium\",Epiphany:\"epiphany\",Firefox:\"firefox\",Focus:\"focus\",Generic:\"generic\",\"Google Search\":\"google_search\",Googlebot:\"googlebot\",\"Internet Explorer\":\"ie\",\"K-Meleon\":\"k_meleon\",Maxthon:\"maxthon\",\"Microsoft Edge\":\"edge\",\"MZ Browser\":\"mz\",\"NAVER Whale Browser\":\"naver\",Opera:\"opera\",\"Opera Coast\":\"opera_coast\",PhantomJS:\"phantomjs\",Puffin:\"puffin\",QupZilla:\"qupzilla\",QQ:\"qq\",QQLite:\"qqlite\",Safari:\"safari\",Sailfish:\"sailfish\",\"Samsung Internet for Android\":\"samsung_internet\",SeaMonkey:\"seamonkey\",Sleipnir:\"sleipnir\",Swing:\"swing\",Tizen:\"tizen\",\"UC Browser\":\"uc\",Vivaldi:\"vivaldi\",\"WebOS Browser\":\"webos\",WeChat:\"wechat\",\"Yandex Browser\":\"yandex\",Roku:\"roku\"};t.BROWSER_MAP={amazon_silk:\"Amazon Silk\",android:\"Android Browser\",bada:\"Bada\",blackberry:\"BlackBerry\",chrome:\"Chrome\",chromium:\"Chromium\",epiphany:\"Epiphany\",firefox:\"Firefox\",focus:\"Focus\",generic:\"Generic\",googlebot:\"Googlebot\",google_search:\"Google Search\",ie:\"Internet Explorer\",k_meleon:\"K-Meleon\",maxthon:\"Maxthon\",edge:\"Microsoft Edge\",mz:\"MZ Browser\",naver:\"NAVER Whale Browser\",opera:\"Opera\",opera_coast:\"Opera Coast\",phantomjs:\"PhantomJS\",puffin:\"Puffin\",qupzilla:\"QupZilla\",qq:\"QQ Browser\",qqlite:\"QQ Browser Lite\",safari:\"Safari\",sailfish:\"Sailfish\",samsung_internet:\"Samsung Internet for Android\",seamonkey:\"SeaMonkey\",sleipnir:\"Sleipnir\",swing:\"Swing\",tizen:\"Tizen\",uc:\"UC Browser\",vivaldi:\"Vivaldi\",webos:\"WebOS Browser\",wechat:\"WeChat\",yandex:\"Yandex Browser\"};t.PLATFORMS_MAP={tablet:\"tablet\",mobile:\"mobile\",desktop:\"desktop\",tv:\"tv\"};t.OS_MAP={WindowsPhone:\"Windows Phone\",Windows:\"Windows\",MacOS:\"macOS\",iOS:\"iOS\",Android:\"Android\",WebOS:\"WebOS\",BlackBerry:\"BlackBerry\",Bada:\"Bada\",Tizen:\"Tizen\",Linux:\"Linux\",ChromeOS:\"Chrome OS\",PlayStation4:\"PlayStation 4\",Roku:\"Roku\"};t.ENGINE_MAP={EdgeHTML:\"EdgeHTML\",Blink:\"Blink\",Trident:\"Trident\",Presto:\"Presto\",Gecko:\"Gecko\",WebKit:\"WebKit\"}},90:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var i,n=(i=r(91))&&i.__esModule?i:{default:i},s=r(18);function o(e,t){for(var r=0;r<t.length;r++){var i=t[r];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}var a=function(){function e(){}var t,r,i;return e.getParser=function(e,t){if(void 0===t&&(t=!1),\"string\"!=typeof e)throw new Error(\"UserAgent should be a string\");return new n.default(e,t)},e.parse=function(e){return new n.default(e).getResult()},t=e,i=[{key:\"BROWSER_MAP\",get:function(){return s.BROWSER_MAP}},{key:\"ENGINE_MAP\",get:function(){return s.ENGINE_MAP}},{key:\"OS_MAP\",get:function(){return s.OS_MAP}},{key:\"PLATFORMS_MAP\",get:function(){return s.PLATFORMS_MAP}}],(r=null)&&o(t.prototype,r),i&&o(t,i),e}();t.default=a,e.exports=t.default},91:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var i=u(r(92)),n=u(r(93)),s=u(r(94)),o=u(r(95)),a=u(r(17));function u(e){return e&&e.__esModule?e:{default:e}}var d=function(){function e(e,t){if(void 0===t&&(t=!1),null==e||\"\"===e)throw new Error(\"UserAgent parameter can't be empty\");this._ua=e,this.parsedResult={},!0!==t&&this.parse()}var t=e.prototype;return t.getUA=function(){return this._ua},t.test=function(e){return e.test(this._ua)},t.parseBrowser=function(){var e=this;this.parsedResult.browser={};var t=i.default.find((function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.browser=t.describe(this.getUA())),this.parsedResult.browser},t.getBrowser=function(){return this.parsedResult.browser?this.parsedResult.browser:this.parseBrowser()},t.getBrowserName=function(e){return e?String(this.getBrowser().name).toLowerCase()||\"\":this.getBrowser().name||\"\"},t.getBrowserVersion=function(){return this.getBrowser().version},t.getOS=function(){return this.parsedResult.os?this.parsedResult.os:this.parseOS()},t.parseOS=function(){var e=this;this.parsedResult.os={};var t=n.default.find((function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.os=t.describe(this.getUA())),this.parsedResult.os},t.getOSName=function(e){var t=this.getOS().name;return e?String(t).toLowerCase()||\"\":t||\"\"},t.getOSVersion=function(){return this.getOS().version},t.getPlatform=function(){return this.parsedResult.platform?this.parsedResult.platform:this.parsePlatform()},t.getPlatformType=function(e){void 0===e&&(e=!1);var t=this.getPlatform().type;return e?String(t).toLowerCase()||\"\":t||\"\"},t.parsePlatform=function(){var e=this;this.parsedResult.platform={};var t=s.default.find((function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.platform=t.describe(this.getUA())),this.parsedResult.platform},t.getEngine=function(){return this.parsedResult.engine?this.parsedResult.engine:this.parseEngine()},t.getEngineName=function(e){return e?String(this.getEngine().name).toLowerCase()||\"\":this.getEngine().name||\"\"},t.parseEngine=function(){var e=this;this.parsedResult.engine={};var t=o.default.find((function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.engine=t.describe(this.getUA())),this.parsedResult.engine},t.parse=function(){return this.parseBrowser(),this.parseOS(),this.parsePlatform(),this.parseEngine(),this},t.getResult=function(){return Object.assign({},this.parsedResult)},t.satisfies=function(e){var t=this,r={},i=0,n={},s=0;if(Object.keys(e).forEach((function(t){var o=e[t];\"string\"==typeof o?(n[t]=o,s+=1):\"object\"==typeof o&&(r[t]=o,i+=1)})),i>0){var o=Object.keys(r),a=o.find((function(e){return t.isOS(e)}));if(a){var u=this.satisfies(r[a]);if(void 0!==u)return u}var d=o.find((function(e){return t.isPlatform(e)}));if(d){var c=this.satisfies(r[d]);if(void 0!==c)return c}}if(s>0){var f=Object.keys(n).find((function(e){return t.isBrowser(e,!0)}));if(void 0!==f)return this.compareVersion(n[f])}},t.isBrowser=function(e,t){void 0===t&&(t=!1);var r=this.getBrowserName().toLowerCase(),i=e.toLowerCase(),n=a.default.getBrowserTypeByAlias(i);return t&&n&&(i=n.toLowerCase()),i===r},t.compareVersion=function(e){var t=[0],r=e,i=!1,n=this.getBrowserVersion();if(\"string\"==typeof n)return\">\"===e[0]||\"<\"===e[0]?(r=e.substr(1),\"=\"===e[1]?(i=!0,r=e.substr(2)):t=[],\">\"===e[0]?t.push(1):t.push(-1)):\"=\"===e[0]?r=e.substr(1):\"~\"===e[0]&&(i=!0,r=e.substr(1)),t.indexOf(a.default.compareVersions(n,r,i))>-1},t.isOS=function(e){return this.getOSName(!0)===String(e).toLowerCase()},t.isPlatform=function(e){return this.getPlatformType(!0)===String(e).toLowerCase()},t.isEngine=function(e){return this.getEngineName(!0)===String(e).toLowerCase()},t.is=function(e){return this.isBrowser(e)||this.isOS(e)||this.isPlatform(e)},t.some=function(e){var t=this;return void 0===e&&(e=[]),e.some((function(e){return t.is(e)}))},e}();t.default=d,e.exports=t.default},92:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var i,n=(i=r(17))&&i.__esModule?i:{default:i};var s=/version\\/(\\d+(\\.?_?\\d+)+)/i,o=[{test:[/googlebot/i],describe:function(e){var t={name:\"Googlebot\"},r=n.default.getFirstMatch(/googlebot\\/(\\d+(\\.\\d+))/i,e)||n.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/opera/i],describe:function(e){var t={name:\"Opera\"},r=n.default.getFirstMatch(s,e)||n.default.getFirstMatch(/(?:opera)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/opr\\/|opios/i],describe:function(e){var t={name:\"Opera\"},r=n.default.getFirstMatch(/(?:opr|opios)[\\s/](\\S+)/i,e)||n.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/SamsungBrowser/i],describe:function(e){var t={name:\"Samsung Internet for Android\"},r=n.default.getFirstMatch(s,e)||n.default.getFirstMatch(/(?:SamsungBrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/Whale/i],describe:function(e){var t={name:\"NAVER Whale Browser\"},r=n.default.getFirstMatch(s,e)||n.default.getFirstMatch(/(?:whale)[\\s/](\\d+(?:\\.\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/MZBrowser/i],describe:function(e){var t={name:\"MZ Browser\"},r=n.default.getFirstMatch(/(?:MZBrowser)[\\s/](\\d+(?:\\.\\d+)+)/i,e)||n.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/focus/i],describe:function(e){var t={name:\"Focus\"},r=n.default.getFirstMatch(/(?:focus)[\\s/](\\d+(?:\\.\\d+)+)/i,e)||n.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/swing/i],describe:function(e){var t={name:\"Swing\"},r=n.default.getFirstMatch(/(?:swing)[\\s/](\\d+(?:\\.\\d+)+)/i,e)||n.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/coast/i],describe:function(e){var t={name:\"Opera Coast\"},r=n.default.getFirstMatch(s,e)||n.default.getFirstMatch(/(?:coast)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/yabrowser/i],describe:function(e){var t={name:\"Yandex Browser\"},r=n.default.getFirstMatch(/(?:yabrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||n.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/ucbrowser/i],describe:function(e){var t={name:\"UC Browser\"},r=n.default.getFirstMatch(s,e)||n.default.getFirstMatch(/(?:ucbrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/Maxthon|mxios/i],describe:function(e){var t={name:\"Maxthon\"},r=n.default.getFirstMatch(s,e)||n.default.getFirstMatch(/(?:Maxthon|mxios)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/epiphany/i],describe:function(e){var t={name:\"Epiphany\"},r=n.default.getFirstMatch(s,e)||n.default.getFirstMatch(/(?:epiphany)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/puffin/i],describe:function(e){var t={name:\"Puffin\"},r=n.default.getFirstMatch(s,e)||n.default.getFirstMatch(/(?:puffin)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/sleipnir/i],describe:function(e){var t={name:\"Sleipnir\"},r=n.default.getFirstMatch(s,e)||n.default.getFirstMatch(/(?:sleipnir)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/k-meleon/i],describe:function(e){var t={name:\"K-Meleon\"},r=n.default.getFirstMatch(s,e)||n.default.getFirstMatch(/(?:k-meleon)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/micromessenger/i],describe:function(e){var t={name:\"WeChat\"},r=n.default.getFirstMatch(/(?:micromessenger)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||n.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/qqbrowser/i],describe:function(e){var t={name:/qqbrowserlite/i.test(e)?\"QQ Browser Lite\":\"QQ Browser\"},r=n.default.getFirstMatch(/(?:qqbrowserlite|qqbrowser)[/](\\d+(\\.?_?\\d+)+)/i,e)||n.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/msie|trident/i],describe:function(e){var t={name:\"Internet Explorer\"},r=n.default.getFirstMatch(/(?:msie |rv:)(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/\\sedg\\//i],describe:function(e){var t={name:\"Microsoft Edge\"},r=n.default.getFirstMatch(/\\sedg\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/edg([ea]|ios)/i],describe:function(e){var t={name:\"Microsoft Edge\"},r=n.default.getSecondMatch(/edg([ea]|ios)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/vivaldi/i],describe:function(e){var t={name:\"Vivaldi\"},r=n.default.getFirstMatch(/vivaldi\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/seamonkey/i],describe:function(e){var t={name:\"SeaMonkey\"},r=n.default.getFirstMatch(/seamonkey\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/sailfish/i],describe:function(e){var t={name:\"Sailfish\"},r=n.default.getFirstMatch(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i,e);return r&&(t.version=r),t}},{test:[/silk/i],describe:function(e){var t={name:\"Amazon Silk\"},r=n.default.getFirstMatch(/silk\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/phantom/i],describe:function(e){var t={name:\"PhantomJS\"},r=n.default.getFirstMatch(/phantomjs\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/slimerjs/i],describe:function(e){var t={name:\"SlimerJS\"},r=n.default.getFirstMatch(/slimerjs\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/blackberry|\\bbb\\d+/i,/rim\\stablet/i],describe:function(e){var t={name:\"BlackBerry\"},r=n.default.getFirstMatch(s,e)||n.default.getFirstMatch(/blackberry[\\d]+\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/(web|hpw)[o0]s/i],describe:function(e){var t={name:\"WebOS Browser\"},r=n.default.getFirstMatch(s,e)||n.default.getFirstMatch(/w(?:eb)?[o0]sbrowser\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/bada/i],describe:function(e){var t={name:\"Bada\"},r=n.default.getFirstMatch(/dolfin\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/tizen/i],describe:function(e){var t={name:\"Tizen\"},r=n.default.getFirstMatch(/(?:tizen\\s?)?browser\\/(\\d+(\\.?_?\\d+)+)/i,e)||n.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/qupzilla/i],describe:function(e){var t={name:\"QupZilla\"},r=n.default.getFirstMatch(/(?:qupzilla)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||n.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/firefox|iceweasel|fxios/i],describe:function(e){var t={name:\"Firefox\"},r=n.default.getFirstMatch(/(?:firefox|iceweasel|fxios)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/chromium/i],describe:function(e){var t={name:\"Chromium\"},r=n.default.getFirstMatch(/(?:chromium)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||n.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/chrome|crios|crmo/i],describe:function(e){var t={name:\"Chrome\"},r=n.default.getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/GSA/i],describe:function(e){var t={name:\"Google Search\"},r=n.default.getFirstMatch(/(?:GSA)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:function(e){var t=!e.test(/like android/i),r=e.test(/android/i);return t&&r},describe:function(e){var t={name:\"Android Browser\"},r=n.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/playstation 4/i],describe:function(e){var t={name:\"PlayStation 4\"},r=n.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/safari|applewebkit/i],describe:function(e){var t={name:\"Safari\"},r=n.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/.*/i],describe:function(e){var t=-1!==e.search(\"\\\\(\")?/^(.*)\\/(.*)[ \\t]\\((.*)/:/^(.*)\\/(.*) /;return{name:n.default.getFirstMatch(t,e),version:n.default.getSecondMatch(t,e)}}}];t.default=o,e.exports=t.default},93:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var i,n=(i=r(17))&&i.__esModule?i:{default:i},s=r(18);var o=[{test:[/Roku\\/DVP/],describe:function(e){var t=n.default.getFirstMatch(/Roku\\/DVP-(\\d+\\.\\d+)/i,e);return{name:s.OS_MAP.Roku,version:t}}},{test:[/windows phone/i],describe:function(e){var t=n.default.getFirstMatch(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i,e);return{name:s.OS_MAP.WindowsPhone,version:t}}},{test:[/windows/i],describe:function(e){var t=n.default.getFirstMatch(/Windows ((NT|XP)( \\d\\d?.\\d)?)/i,e),r=n.default.getWindowsVersionName(t);return{name:s.OS_MAP.Windows,version:t,versionName:r}}},{test:[/macintosh/i],describe:function(e){var t=n.default.getFirstMatch(/mac os x (\\d+(\\.?_?\\d+)+)/i,e).replace(/[_\\s]/g,\".\"),r=n.default.getMacOSVersionName(t),i={name:s.OS_MAP.MacOS,version:t};return r&&(i.versionName=r),i}},{test:[/(ipod|iphone|ipad)/i],describe:function(e){var t=n.default.getFirstMatch(/os (\\d+([_\\s]\\d+)*) like mac os x/i,e).replace(/[_\\s]/g,\".\");return{name:s.OS_MAP.iOS,version:t}}},{test:function(e){var t=!e.test(/like android/i),r=e.test(/android/i);return t&&r},describe:function(e){var t=n.default.getFirstMatch(/android[\\s/-](\\d+(\\.\\d+)*)/i,e),r=n.default.getAndroidVersionName(t),i={name:s.OS_MAP.Android,version:t};return r&&(i.versionName=r),i}},{test:[/(web|hpw)[o0]s/i],describe:function(e){var t=n.default.getFirstMatch(/(?:web|hpw)[o0]s\\/(\\d+(\\.\\d+)*)/i,e),r={name:s.OS_MAP.WebOS};return t&&t.length&&(r.version=t),r}},{test:[/blackberry|\\bbb\\d+/i,/rim\\stablet/i],describe:function(e){var t=n.default.getFirstMatch(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i,e)||n.default.getFirstMatch(/blackberry\\d+\\/(\\d+([_\\s]\\d+)*)/i,e)||n.default.getFirstMatch(/\\bbb(\\d+)/i,e);return{name:s.OS_MAP.BlackBerry,version:t}}},{test:[/bada/i],describe:function(e){var t=n.default.getFirstMatch(/bada\\/(\\d+(\\.\\d+)*)/i,e);return{name:s.OS_MAP.Bada,version:t}}},{test:[/tizen/i],describe:function(e){var t=n.default.getFirstMatch(/tizen[/\\s](\\d+(\\.\\d+)*)/i,e);return{name:s.OS_MAP.Tizen,version:t}}},{test:[/linux/i],describe:function(){return{name:s.OS_MAP.Linux}}},{test:[/CrOS/],describe:function(){return{name:s.OS_MAP.ChromeOS}}},{test:[/PlayStation 4/],describe:function(e){var t=n.default.getFirstMatch(/PlayStation 4[/\\s](\\d+(\\.\\d+)*)/i,e);return{name:s.OS_MAP.PlayStation4,version:t}}}];t.default=o,e.exports=t.default},94:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var i,n=(i=r(17))&&i.__esModule?i:{default:i},s=r(18);var o=[{test:[/googlebot/i],describe:function(){return{type:\"bot\",vendor:\"Google\"}}},{test:[/huawei/i],describe:function(e){var t=n.default.getFirstMatch(/(can-l01)/i,e)&&\"Nova\",r={type:s.PLATFORMS_MAP.mobile,vendor:\"Huawei\"};return t&&(r.model=t),r}},{test:[/nexus\\s*(?:7|8|9|10).*/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Nexus\"}}},{test:[/ipad/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Apple\",model:\"iPad\"}}},{test:[/kftt build/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Amazon\",model:\"Kindle Fire HD 7\"}}},{test:[/silk/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Amazon\"}}},{test:[/tablet(?! pc)/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet}}},{test:function(e){var t=e.test(/ipod|iphone/i),r=e.test(/like (ipod|iphone)/i);return t&&!r},describe:function(e){var t=n.default.getFirstMatch(/(ipod|iphone)/i,e);return{type:s.PLATFORMS_MAP.mobile,vendor:\"Apple\",model:t}}},{test:[/nexus\\s*[0-6].*/i,/galaxy nexus/i],describe:function(){return{type:s.PLATFORMS_MAP.mobile,vendor:\"Nexus\"}}},{test:[/[^-]mobi/i],describe:function(){return{type:s.PLATFORMS_MAP.mobile}}},{test:function(e){return\"blackberry\"===e.getBrowserName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.mobile,vendor:\"BlackBerry\"}}},{test:function(e){return\"bada\"===e.getBrowserName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.mobile}}},{test:function(e){return\"windows phone\"===e.getBrowserName()},describe:function(){return{type:s.PLATFORMS_MAP.mobile,vendor:\"Microsoft\"}}},{test:function(e){var t=Number(String(e.getOSVersion()).split(\".\")[0]);return\"android\"===e.getOSName(!0)&&t>=3},describe:function(){return{type:s.PLATFORMS_MAP.tablet}}},{test:function(e){return\"android\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.mobile}}},{test:function(e){return\"macos\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.desktop,vendor:\"Apple\"}}},{test:function(e){return\"windows\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.desktop}}},{test:function(e){return\"linux\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.desktop}}},{test:function(e){return\"playstation 4\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.tv}}},{test:function(e){return\"roku\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.tv}}}];t.default=o,e.exports=t.default},95:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var i,n=(i=r(17))&&i.__esModule?i:{default:i},s=r(18);var o=[{test:function(e){return\"microsoft edge\"===e.getBrowserName(!0)},describe:function(e){if(/\\sedg\\//i.test(e))return{name:s.ENGINE_MAP.Blink};var t=n.default.getFirstMatch(/edge\\/(\\d+(\\.?_?\\d+)+)/i,e);return{name:s.ENGINE_MAP.EdgeHTML,version:t}}},{test:[/trident/i],describe:function(e){var t={name:s.ENGINE_MAP.Trident},r=n.default.getFirstMatch(/trident\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:function(e){return e.test(/presto/i)},describe:function(e){var t={name:s.ENGINE_MAP.Presto},r=n.default.getFirstMatch(/presto\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:function(e){var t=e.test(/gecko/i),r=e.test(/like gecko/i);return t&&!r},describe:function(e){var t={name:s.ENGINE_MAP.Gecko},r=n.default.getFirstMatch(/gecko\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/(apple)?webkit\\/537\\.36/i],describe:function(){return{name:s.ENGINE_MAP.Blink}}},{test:[/(apple)?webkit/i],describe:function(e){var t={name:s.ENGINE_MAP.WebKit},r=n.default.getFirstMatch(/webkit\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}}];t.default=o,e.exports=t.default}})}));","import { getLogger } from 'jitsi-meet-logger';\n\nimport {\n    TYPE_OPERATIONAL,\n    TYPE_PAGE,\n    TYPE_TRACK,\n    TYPE_UI\n} from '../../service/statistics/AnalyticsEvents';\nimport browser from '../browser';\n\nconst MAX_CACHE_SIZE = 100;\n\n// eslist-disable-line no-undef\nconst logger = getLogger(__filename);\n\n/**\n * This class provides an API to lib-jitsi-meet and its users for sending\n * analytics events. It serves as a bridge to different backend implementations\n * (\"analytics handlers\") and a cache for events attempted to be sent before\n * the analytics handlers were enabled.\n *\n * The API is designed to be an easy replacement for the previous version of\n * this adapter, and is meant to be extended with more convenience methods.\n *\n *\n * The API calls are translated to objects with the following structure, which\n * are then passed to the sendEvent(event) function of the underlying handlers:\n *\n * {\n *    type,\n *\n *    action,\n *    actionSubject,\n *    actionSubjectId,\n *    attributes,\n *    categories,\n *    containerId,\n *    containerType,\n *    name,\n *    objectId,\n *    objectType,\n *    source,\n *    tags\n * }\n *\n * The 'type' is one of 'operational', 'page', 'track' or 'ui', and some of the\n * other properties are considered required according to the type.\n *\n * For events with type 'page', the required properties are: name.\n *\n * For events with type 'operational' and 'ui', the required properties are:\n * action, actionSubject, source\n *\n * For events with type 'page', the required properties are:\n * action, actionSubject, source, containerType, containerId, objectType,\n * objectId\n */\nclass AnalyticsAdapter {\n    /**\n     * Creates new AnalyticsAdapter instance.\n     */\n    constructor() {\n        this.reset();\n    }\n\n    /**\n     * Reset the state to the initial one.\n     *\n     * @returns {void}\n     */\n    reset() {\n        /**\n         * Whether this AnalyticsAdapter has been disposed of or not. Once this\n         * is set to true, the AnalyticsAdapter is disabled and does not accept\n         * any more events, and it can not be re-enabled.\n         * @type {boolean}\n         */\n        this.disposed = false;\n\n        /**\n         * The set of handlers to which events will be sent.\n         * @type {Set<any>}\n         */\n        this.analyticsHandlers = new Set();\n\n        /**\n         * The cache of events which are not sent yet. The cache is enabled\n         * while this field is truthy, and disabled otherwise.\n         * @type {Array}\n         */\n        this.cache = [];\n\n        /**\n         * Map of properties that will be added to every event. Note that the\n         * keys will be prefixed with \"permanent.\".\n         */\n        this.permanentProperties = {};\n\n        /**\n         * The name of the conference that this AnalyticsAdapter is associated\n         * with.\n         * @type {null}\n         */\n        this.conferenceName = '';\n\n        this.addPermanentProperties({\n            'user_agent': navigator.userAgent,\n            'browser_name': browser.getName()\n        });\n    }\n\n    /**\n     * Dispose analytics. Clears all handlers.\n     */\n    dispose() {\n        logger.warn('Disposing of analytics adapter.');\n\n        if (this.analyticsHandlers && this.analyticsHandlers.size > 0) {\n            this.analyticsHandlers.forEach(handler => {\n                if (typeof handler.dispose === 'function') {\n                    handler.dispose();\n                }\n            });\n        }\n\n        this.setAnalyticsHandlers([]);\n        this.disposed = true;\n    }\n\n    /**\n     * Sets the handlers that are going to be used to send analytics. Sends any\n     * cached events.\n     * @param {Array} handlers the handlers\n     */\n    setAnalyticsHandlers(handlers) {\n        if (this.disposed) {\n            return;\n        }\n\n        this.analyticsHandlers = new Set(handlers);\n\n        this._setUserProperties();\n\n        // Note that we disable the cache even if the set of handlers is empty.\n        const cache = this.cache;\n\n        this.cache = null;\n        if (cache) {\n            cache.forEach(event => this._sendEvent(event));\n        }\n    }\n\n    /**\n     * Set the user properties to the analytics handlers.\n     *\n     * @returns {void}\n     */\n    _setUserProperties() {\n        this.analyticsHandlers.forEach(handler => {\n            try {\n                handler.setUserProperties(this.permanentProperties);\n            } catch (error) {\n                logger.warn('Error in setUserProperties method of one of the '\n                    + `analytics handlers: ${error}`);\n            }\n        });\n    }\n\n    /**\n     * Adds a set of permanent properties to this this AnalyticsAdapter.\n     * Permanent properties will be added as \"attributes\" to events sent to\n     * the underlying \"analytics handlers\", and their keys will be prefixed\n     * by \"permanent_\", i.e. adding a permanent property {key: \"value\"} will\n     * result in {\"permanent_key\": \"value\"} object to be added to the\n     * \"attributes\" field of events.\n     *\n     * @param {Object} properties the properties to add\n     */\n    addPermanentProperties(properties) {\n        this.permanentProperties = {\n            ...this.permanentProperties,\n            ...properties\n        };\n\n        this._setUserProperties();\n    }\n\n    /**\n     * Sets the name of the conference that this AnalyticsAdapter is associated\n     * with.\n     * @param name the name to set.\n     */\n    setConferenceName(name) {\n        this.conferenceName = name;\n        this.addPermanentProperties({ 'conference_name': name });\n    }\n\n    /**\n     * Sends an event with a given name and given properties. The first\n     * parameter is either a string or an object. If it is a string, it is used\n     * as the event name and the second parameter is used at the attributes to\n     * attach to the event. If it is an object, it represents the whole event,\n     * including any desired attributes, and the second parameter is ignored.\n     *\n     * @param {String|Object} eventName either a string to be used as the name\n     * of the event, or an event object. If an event object is passed, the\n     * properties parameters is ignored.\n     * @param {Object} properties the properties/attributes to attach to the\n     * event, if eventName is a string.\n     */\n    sendEvent(eventName, properties = {}) {\n        if (this.disposed) {\n            return;\n        }\n\n        let event = null;\n\n        if (typeof eventName === 'string') {\n            event = {\n                type: TYPE_OPERATIONAL,\n                action: eventName,\n                actionSubject: eventName,\n                source: eventName,\n                attributes: properties\n            };\n        } else if (typeof eventName === 'object') {\n            event = eventName;\n        }\n\n        if (!this._verifyRequiredFields(event)) {\n            logger.error(\n                `Dropping a mis-formatted event: ${JSON.stringify(event)}`);\n\n            return;\n        }\n\n        this._sendEvent(event);\n    }\n\n    /**\n     * Checks whether an event has all of the required fields set, and tries\n     * to fill in some of the missing fields with reasonable default values.\n     * Returns true if after this operation the event has all of the required\n     * fields set, and false otherwise (if some of the required fields were not\n     * set and the attempt to fill them in with a default failed).\n     *\n     * @param event the event object.\n     * @return {boolean} true if the event (after the call to this function)\n     * contains all of the required fields, and false otherwise.\n     * @private\n     */\n    _verifyRequiredFields(event) {\n        if (!event) {\n            return false;\n        }\n\n        if (!event.type) {\n            event.type = TYPE_OPERATIONAL;\n        }\n\n        const type = event.type;\n\n        if (type !== TYPE_OPERATIONAL && type !== TYPE_PAGE\n            && type !== TYPE_UI && type !== TYPE_TRACK) {\n            logger.error(`Unknown event type: ${type}`);\n\n            return false;\n        }\n\n        if (type === TYPE_PAGE) {\n            return Boolean(event.name);\n        }\n\n        // Try to set some reasonable default values in case some of the\n        // parameters required by the handler API are missing.\n        event.action = event.action || event.name || event.actionSubject;\n        event.actionSubject = event.actionSubject || event.name || event.action;\n        event.source = event.source || event.name || event.action\n            || event.actionSubject;\n\n        if (!event.action || !event.actionSubject || !event.source) {\n            logger.error(\n                'Required field missing (action, actionSubject or source)');\n\n            return false;\n        }\n\n        // Track events have additional required fields.\n        if (type === TYPE_TRACK) {\n            event.objectType = event.objectType || 'generic-object-type';\n            event.containerType = event.containerType || 'conference';\n            if (event.containerType === 'conference' && !event.containerId) {\n                event.containerId = this.conferenceName;\n            }\n\n\n            if (!event.objectType || !event.objectId\n                || !event.containerType || !event.containerId) {\n                logger.error(\n                    'Required field missing (containerId, containerType, '\n                        + 'objectId or objectType)');\n\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * Saves an event to the cache, if the cache is enabled.\n     * @param event the event to save.\n     * @returns {boolean} true if the event was saved, and false otherwise (i.e.\n     * if the cache was disabled).\n     * @private\n     */\n    _maybeCacheEvent(event) {\n        if (this.cache) {\n            this.cache.push(event);\n\n            // We limit the size of the cache, in case the user fails to ever\n            // set the analytics handlers.\n            if (this.cache.length > MAX_CACHE_SIZE) {\n                this.cache.splice(0, 1);\n            }\n\n            return true;\n        }\n\n        return false;\n\n    }\n\n    /**\n     *\n     * @param event\n     * @private\n     */\n    _sendEvent(event) {\n        if (this._maybeCacheEvent(event)) {\n            // The event was consumed by the cache.\n        } else {\n            this.analyticsHandlers.forEach(handler => {\n                try {\n                    handler.sendEvent(event);\n                } catch (e) {\n                    logger.warn(`Error sending analytics event: ${e}`);\n                }\n            });\n        }\n    }\n}\n\nexport default new AnalyticsAdapter();\n","\nimport { getLogger } from 'jitsi-meet-logger';\n\nimport * as StatisticsEvents from '../../service/statistics/Events';\nimport { RunningAverage } from '../util/MathUtil';\n\nconst logger = getLogger(__filename);\nconst MILLI_SECONDS = 1000;\nconst SECONDS = 60;\n\n/**\n * This class creates an observer that monitors browser's performance measurement events\n * as they are recorded in the browser's performance timeline and computes an average and\n * a maximum value for the long task events. Tasks are classified as long tasks if they take\n * longer than 50ms to execute on the main thread.\n */\nexport class PerformanceObserverStats {\n    /**\n     * Creates a new instance of Performance observer statistics.\n     *\n     * @param {*} emitter Event emitter for emitting stats periodically\n     * @param {*} statsInterval interval for calculating the stats\n     */\n    constructor(emitter, statsInterval) {\n        this.eventEmitter = emitter;\n        this.longTasks = 0;\n        this.maxDuration = 0;\n        this.performanceStatsInterval = statsInterval;\n        this.stats = new RunningAverage();\n    }\n\n    /**\n     * Obtains the average rate of long tasks observed per min and the\n     * duration of the longest task recorded by the observer.\n     * @returns {Object}\n     */\n    getLongTasksStats() {\n        return {\n            avgRatePerMinute: (this.stats.getAverage() * SECONDS).toFixed(2), // calc rate per min\n            maxDurationMs: this.maxDuration\n        };\n    }\n\n    /**\n     * Starts the performance observer by registering the callback function\n     * that calculates the performance statistics periodically.\n     * @returns {void}\n     */\n    startObserver() {\n        // Create a handler for when the long task event is fired.\n        this.longTaskEventHandler = list => {\n            const entries = list.getEntries();\n\n            for (const task of entries) {\n                this.longTasks++;\n                this.maxDuration = Math.max(this.maxDuration, task.duration).toFixed(3);\n            }\n        };\n\n        // Create an observer for monitoring long tasks.\n        logger.info('Creating a Performance Observer for monitoring Long Tasks');\n        this.observer = new PerformanceObserver(this.longTaskEventHandler);\n        this.observer.observe({ type: 'longtask',\n            buffered: true });\n        const startTime = Date.now();\n\n        // Calculate the average # of events/sec and emit a stats event.\n        this.longTasksIntervalId = setInterval(() => {\n            const now = Date.now();\n            const interval = this._lastTimeStamp\n                ? (now - this._lastTimeStamp) / MILLI_SECONDS\n                : (now - startTime) / MILLI_SECONDS;\n            const rate = this.longTasks / interval;\n\n            this.stats.addNext(rate);\n            this.eventEmitter.emit(\n                StatisticsEvents.LONG_TASKS_STATS, this.getLongTasksStats());\n\n            // Reset the counter and start counting events again.\n            this.longTasks = 0;\n            this._lastTimeStamp = Date.now();\n        }, this.performanceStatsInterval);\n    }\n\n    /**\n     * Stops the performance observer.\n     * @returns {void}\n     */\n    stopObserver() {\n        this.observer && this.observer.disconnect();\n        this.longTaskEventHandler = null;\n        if (this.longTasksIntervalId) {\n            clearInterval(this.longTasksIntervalId);\n            this.longTasksIntervalId = null;\n        }\n    }\n}\n","import { getLogger } from 'jitsi-meet-logger';\n\nimport * as MediaType from '../../service/RTC/MediaType';\nimport * as StatisticsEvents from '../../service/statistics/Events';\nimport browser from '../browser';\n\nconst GlobalOnErrorHandler = require('../util/GlobalOnErrorHandler');\n\nconst logger = getLogger(__filename);\n\n/**\n * Calculates packet lost percent using the number of lost packets and the\n * number of all packet.\n * @param lostPackets the number of lost packets\n * @param totalPackets the number of all packets.\n * @returns {number} packet loss percent\n */\nfunction calculatePacketLoss(lostPackets, totalPackets) {\n    if (!totalPackets || totalPackets <= 0\n            || !lostPackets || lostPackets <= 0) {\n        return 0;\n    }\n\n    return Math.round((lostPackets / totalPackets) * 100);\n}\n\n/**\n * Holds \"statistics\" for a single SSRC.\n * @constructor\n */\nfunction SsrcStats() {\n    this.loss = {};\n    this.bitrate = {\n        download: 0,\n        upload: 0\n    };\n    this.resolution = {};\n    this.framerate = 0;\n    this.codec = '';\n}\n\n/**\n * Sets the \"loss\" object.\n * @param loss the value to set.\n */\nSsrcStats.prototype.setLoss = function(loss) {\n    this.loss = loss || {};\n};\n\n/**\n * Sets resolution that belong to the ssrc represented by this instance.\n * @param resolution new resolution value to be set.\n */\nSsrcStats.prototype.setResolution = function(resolution) {\n    this.resolution = resolution || {};\n};\n\n/**\n * Adds the \"download\" and \"upload\" fields from the \"bitrate\" parameter to\n * the respective fields of the \"bitrate\" field of this object.\n * @param bitrate an object holding the values to add.\n */\nSsrcStats.prototype.addBitrate = function(bitrate) {\n    this.bitrate.download += bitrate.download;\n    this.bitrate.upload += bitrate.upload;\n};\n\n/**\n * Resets the bit rate for given <tt>ssrc</tt> that belong to the peer\n * represented by this instance.\n */\nSsrcStats.prototype.resetBitrate = function() {\n    this.bitrate.download = 0;\n    this.bitrate.upload = 0;\n};\n\n/**\n * Sets the \"framerate\".\n * @param framerate the value to set.\n */\nSsrcStats.prototype.setFramerate = function(framerate) {\n    this.framerate = framerate || 0;\n};\n\nSsrcStats.prototype.setCodec = function(codec) {\n    this.codec = codec || '';\n};\n\n/**\n *\n */\nfunction ConferenceStats() {\n\n    /**\n     * The bandwidth\n     * @type {{}}\n     */\n    this.bandwidth = {};\n\n    /**\n     * The bit rate\n     * @type {{}}\n     */\n    this.bitrate = {};\n\n    /**\n     * The packet loss rate\n     * @type {{}}\n     */\n    this.packetLoss = null;\n\n    /**\n     * Array with the transport information.\n     * @type {Array}\n     */\n    this.transport = [];\n}\n\n/* eslint-disable max-params */\n\n/**\n * <tt>StatsCollector</tt> registers for stats updates of given\n * <tt>peerconnection</tt> in given <tt>interval</tt>. On each update particular\n * stats are extracted and put in {@link SsrcStats} objects. Once the processing\n * is done <tt>audioLevelsUpdateCallback</tt> is called with <tt>this</tt>\n * instance as an event source.\n *\n * @param peerconnection WebRTC PeerConnection object.\n * @param audioLevelsInterval\n * @param statsInterval stats refresh interval given in ms.\n * @param eventEmitter\n * @constructor\n */\nexport default function StatsCollector(peerconnection, audioLevelsInterval, statsInterval, eventEmitter) {\n    this.peerconnection = peerconnection;\n    this.baselineAudioLevelsReport = null;\n    this.currentAudioLevelsReport = null;\n    this.currentStatsReport = null;\n    this.previousStatsReport = null;\n    this.audioLevelReportHistory = {};\n    this.audioLevelsIntervalId = null;\n    this.eventEmitter = eventEmitter;\n    this.conferenceStats = new ConferenceStats();\n\n    // Updates stats interval\n    this.audioLevelsIntervalMilis = audioLevelsInterval;\n\n    this.speakerList = [];\n    this.statsIntervalId = null;\n    this.statsIntervalMilis = statsInterval;\n\n    /**\n     * Maps SSRC numbers to {@link SsrcStats}.\n     * @type {Map<number,SsrcStats}\n     */\n    this.ssrc2stats = new Map();\n}\n\n/**\n * Set the list of the remote speakers for which audio levels are to be calculated.\n *\n * @param {Array<string>} speakerList - Endpoint ids.\n * @returns {void}\n */\nStatsCollector.prototype.setSpeakerList = function(speakerList) {\n    this.speakerList = speakerList;\n};\n\n/**\n * Stops stats updates.\n */\nStatsCollector.prototype.stop = function() {\n    if (this.audioLevelsIntervalId) {\n        clearInterval(this.audioLevelsIntervalId);\n        this.audioLevelsIntervalId = null;\n    }\n\n    if (this.statsIntervalId) {\n        clearInterval(this.statsIntervalId);\n        this.statsIntervalId = null;\n    }\n};\n\n/**\n * Callback passed to <tt>getStats</tt> method.\n * @param error an error that occurred on <tt>getStats</tt> call.\n */\nStatsCollector.prototype.errorCallback = function(error) {\n    GlobalOnErrorHandler.callErrorHandler(error);\n    logger.error('Get stats error', error);\n    this.stop();\n};\n\n/**\n * Starts stats updates.\n */\nStatsCollector.prototype.start = function(startAudioLevelStats) {\n    if (startAudioLevelStats) {\n        if (browser.supportsReceiverStats()) {\n            logger.info('Using RTCRtpSynchronizationSource for remote audio levels');\n        }\n        this.audioLevelsIntervalId = setInterval(\n            () => {\n                if (browser.supportsReceiverStats()) {\n                    const audioLevels = this.peerconnection.getAudioLevels(this.speakerList);\n\n                    for (const ssrc in audioLevels) {\n                        if (audioLevels.hasOwnProperty(ssrc)) {\n                            // Use a scaling factor of 2.5 to report the same\n                            // audio levels that getStats reports.\n                            const audioLevel = audioLevels[ssrc] * 2.5;\n\n                            this.eventEmitter.emit(\n                                StatisticsEvents.AUDIO_LEVEL,\n                                this.peerconnection,\n                                Number.parseInt(ssrc, 10),\n                                audioLevel,\n                                false /* isLocal */);\n                        }\n                    }\n                } else {\n                    // Interval updates\n                    this.peerconnection.getStats()\n                        .then(report => {\n                            this.currentAudioLevelsReport = typeof report?.result === 'function'\n                                ? report.result()\n                                : report;\n                            this.processAudioLevelReport();\n                            this.baselineAudioLevelsReport = this.currentAudioLevelsReport;\n                        })\n                        .catch(error => this.errorCallback(error));\n                }\n            },\n            this.audioLevelsIntervalMilis\n        );\n    }\n\n    const processStats = () => {\n        // Interval updates\n        this.peerconnection.getStats()\n            .then(report => {\n                this.currentStatsReport = typeof report?.result === 'function'\n                    ? report.result()\n                    : report;\n\n                try {\n                    this.processStatsReport();\n                } catch (error) {\n                    GlobalOnErrorHandler.callErrorHandler(error);\n                    logger.error('Processing of RTP stats failed:', error);\n                }\n                this.previousStatsReport = this.currentStatsReport;\n            })\n            .catch(error => this.errorCallback(error));\n    };\n\n    processStats();\n    this.statsIntervalId = setInterval(processStats, this.statsIntervalMilis);\n};\n\n/**\n *\n */\nStatsCollector.prototype._processAndEmitReport = function() {\n    // process stats\n    const totalPackets = {\n        download: 0,\n        upload: 0\n    };\n    const lostPackets = {\n        download: 0,\n        upload: 0\n    };\n    let bitrateDownload = 0;\n    let bitrateUpload = 0;\n    const resolutions = {};\n    const framerates = {};\n    const codecs = {};\n    let audioBitrateDownload = 0;\n    let audioBitrateUpload = 0;\n    let audioCodec;\n    let videoBitrateDownload = 0;\n    let videoBitrateUpload = 0;\n    let videoCodec;\n\n    for (const [ ssrc, ssrcStats ] of this.ssrc2stats) {\n        // process packet loss stats\n        const loss = ssrcStats.loss;\n        const type = loss.isDownloadStream ? 'download' : 'upload';\n\n        totalPackets[type] += loss.packetsTotal;\n        lostPackets[type] += loss.packetsLost;\n\n        // process bitrate stats\n        bitrateDownload += ssrcStats.bitrate.download;\n        bitrateUpload += ssrcStats.bitrate.upload;\n\n        // collect resolutions and framerates\n        const track = this.peerconnection.getTrackBySSRC(ssrc);\n\n        if (track) {\n            if (track.isAudioTrack()) {\n                audioBitrateDownload += ssrcStats.bitrate.download;\n                audioBitrateUpload += ssrcStats.bitrate.upload;\n                audioCodec = ssrcStats.codec;\n            } else {\n                videoBitrateDownload += ssrcStats.bitrate.download;\n                videoBitrateUpload += ssrcStats.bitrate.upload;\n                videoCodec = ssrcStats.codec;\n            }\n\n            const participantId = track.getParticipantId();\n\n            if (participantId) {\n                const resolution = ssrcStats.resolution;\n\n                if (resolution.width\n                        && resolution.height\n                        && resolution.width !== -1\n                        && resolution.height !== -1) {\n                    const userResolutions = resolutions[participantId] || {};\n\n                    userResolutions[ssrc] = resolution;\n                    resolutions[participantId] = userResolutions;\n                }\n                if (ssrcStats.framerate !== 0) {\n                    const userFramerates = framerates[participantId] || {};\n\n                    userFramerates[ssrc] = ssrcStats.framerate;\n                    framerates[participantId] = userFramerates;\n                }\n                if (audioCodec && videoCodec) {\n                    const codecDesc = {\n                        'audio': audioCodec,\n                        'video': videoCodec\n                    };\n\n                    const userCodecs = codecs[participantId] || {};\n\n                    userCodecs[ssrc] = codecDesc;\n                    codecs[participantId] = userCodecs;\n                }\n            } else {\n                logger.error(`No participant ID returned by ${track}`);\n            }\n        }\n\n        ssrcStats.resetBitrate();\n    }\n\n    this.conferenceStats.bitrate = {\n        'upload': bitrateUpload,\n        'download': bitrateDownload\n    };\n\n    this.conferenceStats.bitrate.audio = {\n        'upload': audioBitrateUpload,\n        'download': audioBitrateDownload\n    };\n\n    this.conferenceStats.bitrate.video = {\n        'upload': videoBitrateUpload,\n        'download': videoBitrateDownload\n    };\n\n    this.conferenceStats.packetLoss = {\n        total:\n            calculatePacketLoss(\n                lostPackets.download + lostPackets.upload,\n                totalPackets.download + totalPackets.upload),\n        download:\n            calculatePacketLoss(lostPackets.download, totalPackets.download),\n        upload:\n            calculatePacketLoss(lostPackets.upload, totalPackets.upload)\n    };\n\n    const avgAudioLevels = {};\n    let localAvgAudioLevels;\n\n    Object.keys(this.audioLevelReportHistory).forEach(ssrc => {\n        const { data, isLocal } = this.audioLevelReportHistory[ssrc];\n        const avgAudioLevel = data.reduce((sum, currentValue) => sum + currentValue) / data.length;\n\n        if (isLocal) {\n            localAvgAudioLevels = avgAudioLevel;\n        } else {\n            const track = this.peerconnection.getTrackBySSRC(Number(ssrc));\n\n            if (track) {\n                const participantId = track.getParticipantId();\n\n                if (participantId) {\n                    avgAudioLevels[participantId] = avgAudioLevel;\n                }\n            }\n        }\n    });\n    this.audioLevelReportHistory = {};\n\n    this.eventEmitter.emit(\n        StatisticsEvents.CONNECTION_STATS,\n        this.peerconnection,\n        {\n            'bandwidth': this.conferenceStats.bandwidth,\n            'bitrate': this.conferenceStats.bitrate,\n            'packetLoss': this.conferenceStats.packetLoss,\n            'resolution': resolutions,\n            'framerate': framerates,\n            'codec': codecs,\n            'transport': this.conferenceStats.transport,\n            localAvgAudioLevels,\n            avgAudioLevels\n        });\n    this.conferenceStats.transport = [];\n};\n\n/**\n * Converts the value to a non-negative number.\n * If the value is either invalid or negative then 0 will be returned.\n * @param {*} v\n * @return {number}\n * @private\n */\nStatsCollector.prototype.getNonNegativeValue = function(v) {\n    let value = v;\n\n    if (typeof value !== 'number') {\n        value = Number(value);\n    }\n\n    if (isNaN(value)) {\n        return 0;\n    }\n\n    return Math.max(0, value);\n};\n\n/**\n * Calculates bitrate between before and now using a supplied field name and its\n * value in the stats.\n * @param {RTCInboundRtpStreamStats|RTCSentRtpStreamStats} now the current stats\n * @param {RTCInboundRtpStreamStats|RTCSentRtpStreamStats} before the\n * previous stats.\n * @param fieldName the field to use for calculations.\n * @return {number} the calculated bitrate between now and before.\n * @private\n */\nStatsCollector.prototype._calculateBitrate = function(now, before, fieldName) {\n    const bytesNow = this.getNonNegativeValue(now[fieldName]);\n    const bytesBefore = this.getNonNegativeValue(before[fieldName]);\n    const bytesProcessed = Math.max(0, bytesNow - bytesBefore);\n\n    const timeMs = now.timestamp - before.timestamp;\n    let bitrateKbps = 0;\n\n    if (timeMs > 0) {\n        // TODO is there any reason to round here?\n        bitrateKbps = Math.round((bytesProcessed * 8) / timeMs);\n    }\n\n    return bitrateKbps;\n};\n\n/**\n * Stats processing for spec-compliant RTCPeerConnection#getStats.\n */\nStatsCollector.prototype.processStatsReport = function() {\n    if (!this.previousStatsReport) {\n        return;\n    }\n    const byteSentStats = {};\n\n    this.currentStatsReport.forEach(now => {\n        // RTCIceCandidatePairStats - https://w3c.github.io/webrtc-stats/#candidatepair-dict*\n        if (now.type === 'candidate-pair' && now.nominated && now.state === 'succeeded') {\n            const availableIncomingBitrate = now.availableIncomingBitrate;\n            const availableOutgoingBitrate = now.availableOutgoingBitrate;\n\n            if (availableIncomingBitrate || availableOutgoingBitrate) {\n                this.conferenceStats.bandwidth = {\n                    'download': Math.round(availableIncomingBitrate / 1000),\n                    'upload': Math.round(availableOutgoingBitrate / 1000)\n                };\n            }\n\n            const remoteUsedCandidate = this.currentStatsReport.get(now.remoteCandidateId);\n            const localUsedCandidate = this.currentStatsReport.get(now.localCandidateId);\n\n            // RTCIceCandidateStats\n            // https://w3c.github.io/webrtc-stats/#icecandidate-dict*\n            if (remoteUsedCandidate && localUsedCandidate) {\n                const remoteIpAddress = browser.isChromiumBased()\n                    ? remoteUsedCandidate.ip\n                    : remoteUsedCandidate.address;\n                const remotePort = remoteUsedCandidate.port;\n                const ip = `${remoteIpAddress}:${remotePort}`;\n\n                const localIpAddress = browser.isChromiumBased()\n                    ? localUsedCandidate.ip\n                    : localUsedCandidate.address;\n                const localPort = localUsedCandidate.port;\n                const localip = `${localIpAddress}:${localPort}`;\n                const type = remoteUsedCandidate.protocol;\n\n                // Save the address unless it has been saved already.\n                const conferenceStatsTransport = this.conferenceStats.transport;\n\n                if (!conferenceStatsTransport.some(t =>\n                    t.ip === ip\n                    && t.type === type\n                    && t.localip === localip)) {\n                    conferenceStatsTransport.push({\n                        ip,\n                        type,\n                        localip,\n                        p2p: this.peerconnection.isP2P,\n                        localCandidateType: localUsedCandidate.candidateType,\n                        remoteCandidateType: remoteUsedCandidate.candidateType,\n                        networkType: localUsedCandidate.networkType,\n                        rtt: now.currentRoundTripTime * 1000\n                    });\n                }\n            }\n\n        // RTCReceivedRtpStreamStats\n        // https://w3c.github.io/webrtc-stats/#receivedrtpstats-dict*\n        // RTCSentRtpStreamStats\n        // https://w3c.github.io/webrtc-stats/#sentrtpstats-dict*\n        } else if (now.type === 'inbound-rtp' || now.type === 'outbound-rtp') {\n            const before = this.previousStatsReport.get(now.id);\n            const ssrc = this.getNonNegativeValue(now.ssrc);\n\n            if (!before || !ssrc) {\n                return;\n            }\n\n            let ssrcStats = this.ssrc2stats.get(ssrc);\n\n            if (!ssrcStats) {\n                ssrcStats = new SsrcStats();\n                this.ssrc2stats.set(ssrc, ssrcStats);\n            }\n\n            let isDownloadStream = true;\n            let key = 'packetsReceived';\n\n            if (now.type === 'outbound-rtp') {\n                isDownloadStream = false;\n                key = 'packetsSent';\n            }\n\n            let packetsNow = now[key];\n\n            if (!packetsNow || packetsNow < 0) {\n                packetsNow = 0;\n            }\n\n            const packetsBefore = this.getNonNegativeValue(before[key]);\n            const packetsDiff = Math.max(0, packetsNow - packetsBefore);\n\n            const packetsLostNow = this.getNonNegativeValue(now.packetsLost);\n            const packetsLostBefore = this.getNonNegativeValue(before.packetsLost);\n            const packetsLostDiff = Math.max(0, packetsLostNow - packetsLostBefore);\n\n            ssrcStats.setLoss({\n                packetsTotal: packetsDiff + packetsLostDiff,\n                packetsLost: packetsLostDiff,\n                isDownloadStream\n            });\n\n            // Get the resolution and framerate for only remote video sources here. For the local video sources,\n            // 'track' stats will be used since they have the updated resolution based on the simulcast streams\n            // currently being sent. Promise based getStats reports three 'outbound-rtp' streams and there will be\n            // more calculations needed to determine what is the highest resolution stream sent by the client if the\n            // 'outbound-rtp' stats are used.\n            if (now.type === 'inbound-rtp') {\n                const resolution = {\n                    height: now.frameHeight,\n                    width: now.frameWidth\n                };\n                const frameRate = now.framesPerSecond;\n\n                if (resolution.height && resolution.width) {\n                    ssrcStats.setResolution(resolution);\n                }\n                ssrcStats.setFramerate(Math.round(frameRate || 0));\n\n                ssrcStats.addBitrate({\n                    'download': this._calculateBitrate(now, before, 'bytesReceived'),\n                    'upload': 0\n                });\n            } else {\n                byteSentStats[ssrc] = this.getNonNegativeValue(now.bytesSent);\n                ssrcStats.addBitrate({\n                    'download': 0,\n                    'upload': this._calculateBitrate(now, before, 'bytesSent')\n                });\n            }\n\n            const codec = this.currentStatsReport.get(now.codecId);\n\n            if (codec) {\n                /**\n                 * The mime type has the following form: video/VP8 or audio/ISAC,\n                 * so we what to keep just the type after the '/', audio and video\n                 * keys will be added on the processing side.\n                 */\n                const codecShortType = codec.mimeType.split('/')[1];\n\n                codecShortType && ssrcStats.setCodec(codecShortType);\n            }\n\n        // Use track stats for resolution and framerate of the local video source.\n        // RTCVideoHandlerStats - https://w3c.github.io/webrtc-stats/#vststats-dict*\n        // RTCMediaHandlerStats - https://w3c.github.io/webrtc-stats/#mststats-dict*\n        } else if (now.type === 'track' && now.kind === MediaType.VIDEO && !now.remoteSource) {\n            const resolution = {\n                height: now.frameHeight,\n                width: now.frameWidth\n            };\n            const localVideoTracks = this.peerconnection.getLocalTracks(MediaType.VIDEO);\n\n            if (!localVideoTracks?.length) {\n                return;\n            }\n\n            const ssrc = this.peerconnection.getLocalSSRC(localVideoTracks[0]);\n\n            if (!ssrc) {\n                return;\n            }\n            let ssrcStats = this.ssrc2stats.get(ssrc);\n\n            if (!ssrcStats) {\n                ssrcStats = new SsrcStats();\n                this.ssrc2stats.set(ssrc, ssrcStats);\n            }\n            if (resolution.height && resolution.width) {\n                ssrcStats.setResolution(resolution);\n            }\n\n            // Calculate the frame rate. 'framesSent' is the total aggregate value for all the simulcast streams.\n            // Therefore, it needs to be divided by the total number of active simulcast streams.\n            let frameRate = now.framesPerSecond;\n\n            if (!frameRate) {\n                const before = this.previousStatsReport.get(now.id);\n\n                if (before) {\n                    const timeMs = now.timestamp - before.timestamp;\n\n                    if (timeMs > 0 && now.framesSent) {\n                        const numberOfFramesSinceBefore = now.framesSent - before.framesSent;\n\n                        frameRate = (numberOfFramesSinceBefore / timeMs) * 1000;\n                    }\n                }\n\n                if (!frameRate) {\n                    return;\n                }\n            }\n\n            // Get the number of simulcast streams currently enabled from TPC.\n            const numberOfActiveStreams = this.peerconnection.getActiveSimulcastStreams();\n\n            // Reset frame rate to 0 when video is suspended as a result of endpoint falling out of last-n.\n            frameRate = numberOfActiveStreams ? Math.round(frameRate / numberOfActiveStreams) : 0;\n            ssrcStats.setFramerate(frameRate);\n        }\n    });\n\n    this.eventEmitter.emit(StatisticsEvents.BYTE_SENT_STATS, this.peerconnection, byteSentStats);\n    this._processAndEmitReport();\n};\n\n/**\n * Stats processing logic.\n */\nStatsCollector.prototype.processAudioLevelReport = function() {\n    if (!this.baselineAudioLevelsReport) {\n        return;\n    }\n\n    this.currentAudioLevelsReport.forEach(now => {\n        if (now.type !== 'track') {\n            return;\n        }\n\n        // Audio level\n        const audioLevel = now.audioLevel;\n\n        if (!audioLevel) {\n            return;\n        }\n\n        const trackIdentifier = now.trackIdentifier;\n        const ssrc = this.peerconnection.getSsrcByTrackId(trackIdentifier);\n\n        if (ssrc) {\n            const isLocal\n                = ssrc === this.peerconnection.getLocalSSRC(\n                this.peerconnection.getLocalTracks(MediaType.AUDIO));\n\n            this.eventEmitter.emit(\n                StatisticsEvents.AUDIO_LEVEL,\n                this.peerconnection,\n                ssrc,\n                audioLevel,\n                isLocal);\n        }\n    });\n};\n\n","/**\n * Implements utility to forward events from one eventEmitter to another.\n * @param src {object} instance of EventEmitter or another class that implements\n * addListener method which will register listener to EventEmitter instance.\n * @param dest {object} instance of EventEmitter or another class that\n * implements emit method which will emit an event.\n */\nfunction EventEmitterForwarder(src, dest) {\n    if (!src || !dest || typeof src.addListener !== 'function'\n        || typeof dest.emit !== 'function') {\n        throw new Error('Invalid arguments passed to EventEmitterForwarder');\n    }\n    this.src = src;\n    this.dest = dest;\n}\n\n/**\n * Adds event to be forwarded from src to dest.\n * @param srcEvent {string} the event that EventEmitterForwarder is listening\n * for.\n * @param dstEvent {string} the event that will be fired from dest.\n * @param arguments all other passed arguments are going to be fired with\n * dstEvent.\n */\nEventEmitterForwarder.prototype.forward = function(...args) {\n    const srcEvent = args[0];\n\n    // This will be the \"this\" value for emit function.\n\n    args[0] = this.dest;\n\n    // Using bind.apply to pass the arguments as Array-like object (\"arguments\")\n    this.src.addListener(\n        srcEvent,\n        Function.prototype.bind.apply(this.dest.emit, args));\n};\n\nmodule.exports = EventEmitterForwarder;\n","\nimport { Strophe } from 'strophe.js';\n\n\nimport * as JitsiConferenceEvents from './JitsiConferenceEvents';\nimport { ParticipantConnectionStatus }\n    from './modules/connectivity/ParticipantConnectionStatus';\nimport * as MediaType from './service/RTC/MediaType';\n\n/**\n * Represents a participant in (i.e. a member of) a conference.\n */\nexport default class JitsiParticipant {\n\n    /* eslint-disable max-params */\n\n    /**\n     * Initializes a new JitsiParticipant instance.\n     *\n     * @constructor\n     * @param jid the conference XMPP jid\n     * @param conference\n     * @param displayName\n     * @param {Boolean} hidden - True if the new JitsiParticipant instance is to\n     * represent a hidden participant; otherwise, false.\n     * @param {string} statsID - optional participant statsID\n     * @param {string} status - the initial status if any.\n     * @param {object} identity - the xmpp identity\n     * @param {boolean?} isReplacing - whether this is a participant replacing another into the meeting.\n     * @param {boolean?} isReplaced - whether this is a participant to be kicked and replaced into the meeting.\n     */\n    constructor(jid, conference, displayName, hidden, statsID, status, identity, isReplacing, isReplaced) {\n        this._jid = jid;\n        this._id = Strophe.getResourceFromJid(jid);\n        this._conference = conference;\n        this._displayName = displayName;\n        this._supportsDTMF = false;\n        this._tracks = [];\n        this._role = 'none';\n        this._status = status;\n        this._hidden = hidden;\n        this._statsID = statsID;\n        this._connectionStatus = ParticipantConnectionStatus.ACTIVE;\n        this._properties = {};\n        this._identity = identity;\n        this._isReplacing = isReplacing;\n        this._isReplaced = isReplaced;\n        this._features = new Set();\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     * @returns {JitsiConference} The conference that this participant belongs\n     * to.\n     */\n    getConference() {\n        return this._conference;\n    }\n\n    /**\n     * Gets the value of a property of this participant.\n     */\n    getProperty(name) {\n        return this._properties[name];\n    }\n\n    /**\n     * Checks whether this <tt>JitsiParticipant</tt> has any video tracks which\n     * are muted according to their underlying WebRTC <tt>MediaStreamTrack</tt>\n     * muted status.\n     * @return {boolean} <tt>true</tt> if this <tt>participant</tt> contains any\n     * video <tt>JitsiTrack</tt>s which are muted as defined in\n     * {@link JitsiTrack.isWebRTCTrackMuted}.\n     */\n    hasAnyVideoTrackWebRTCMuted() {\n        return (\n            this.getTracks().some(\n                jitsiTrack =>\n                    jitsiTrack.getType() === MediaType.VIDEO\n                        && jitsiTrack.isWebRTCTrackMuted()));\n    }\n\n    /**\n     * Updates participant's connection status.\n     * @param {string} state the current participant connection state.\n     * {@link ParticipantConnectionStatus}.\n     * @private\n     */\n    _setConnectionStatus(status) {\n        this._connectionStatus = status;\n    }\n\n    /**\n     * Return participant's connectivity status.\n     *\n     * @returns {string} the connection status\n     * <tt>ParticipantConnectionStatus</tt> of the user.\n     * {@link ParticipantConnectionStatus}.\n     */\n    getConnectionStatus() {\n        return this._connectionStatus;\n    }\n\n    /**\n     * Sets the value of a property of this participant, and fires an event if\n     * the value has changed.\n     * @name the name of the property.\n     * @value the value to set.\n     */\n    setProperty(name, value) {\n        const oldValue = this._properties[name];\n\n        if (value !== oldValue) {\n            this._properties[name] = value;\n            this._conference.eventEmitter.emit(\n                JitsiConferenceEvents.PARTICIPANT_PROPERTY_CHANGED,\n                this,\n                name,\n                oldValue,\n                value);\n        }\n    }\n\n    /**\n     * @returns {Array.<JitsiTrack>} The list of media tracks for this\n     * participant.\n     */\n    getTracks() {\n        return this._tracks.slice();\n    }\n\n    /**\n     * @param {MediaType} mediaType\n     * @returns {Array.<JitsiTrack>} an array of media tracks for this\n     * participant, for given media type.\n     */\n    getTracksByMediaType(mediaType) {\n        return this.getTracks().filter(track => track.getType() === mediaType);\n    }\n\n    /**\n     * @returns {String} The ID of this participant.\n     */\n    getId() {\n        return this._id;\n    }\n\n    /**\n     * @returns {String} The JID of this participant.\n     */\n    getJid() {\n        return this._jid;\n    }\n\n    /**\n     * @returns {String} The human-readable display name of this participant.\n     */\n    getDisplayName() {\n        return this._displayName;\n    }\n\n    /**\n     * @returns {String} The stats ID of this participant.\n     */\n    getStatsID() {\n        return this._statsID;\n    }\n\n    /**\n     * @returns {String} The status of the participant.\n     */\n    getStatus() {\n        return this._status;\n    }\n\n    /**\n     * @returns {Boolean} Whether this participant is a moderator or not.\n     */\n    isModerator() {\n        return this._role === 'moderator';\n    }\n\n    /**\n     * @returns {Boolean} Whether this participant is a hidden participant. Some\n     * special system participants may want to join hidden (like for example the\n     * recorder).\n     */\n    isHidden() {\n        return this._hidden;\n    }\n\n    /**\n     * @returns {Boolean} Wheter this participants replaces another participant\n     * from the meeting.\n     */\n    isReplacing() {\n        return this._isReplacing;\n    }\n\n    /**\n     * @returns {Boolean} Wheter this participants will be replaced by another\n     * participant in the meeting.\n     */\n    isReplaced() {\n        return this._isReplaced;\n    }\n\n    /**\n     * @returns {Boolean} Whether this participant has muted their audio.\n     */\n    isAudioMuted() {\n        return this._isMediaTypeMuted(MediaType.AUDIO);\n    }\n\n    /**\n     * Determines whether all JitsiTracks which are of a specific MediaType and\n     * which belong to this JitsiParticipant are muted.\n     *\n     * @param {MediaType} mediaType - The MediaType of the JitsiTracks to be\n     * checked.\n     * @private\n     * @returns {Boolean} True if all JitsiTracks which are of the specified\n     * mediaType and which belong to this JitsiParticipant are muted; otherwise,\n     * false.\n     */\n    _isMediaTypeMuted(mediaType) {\n        return this.getTracks().reduce(\n            (muted, track) =>\n                muted && (track.getType() !== mediaType || track.isMuted()),\n            true);\n    }\n\n    /**\n     * @returns {Boolean} Whether this participant has muted their video.\n     */\n    isVideoMuted() {\n        return this._isMediaTypeMuted(MediaType.VIDEO);\n    }\n\n    /**\n     * @returns {String} The role of this participant.\n     */\n    getRole() {\n        return this._role;\n    }\n\n    /**\n     * Sets a new participant role.\n     * @param {String} newRole - the new role.\n     */\n    setRole(newRole) {\n        this._role = newRole;\n    }\n\n    /**\n     * Sets whether participant is replacing another based on jwt.\n     * @param {String} newIsReplacing - whether is replacing.\n     */\n    setIsReplacing(newIsReplacing) {\n        this._isReplacing = newIsReplacing;\n    }\n\n    /**\n     * Sets whether participant is being replaced by another based on jwt.\n     * @param {String} newIsReplacing - whether is being replaced.\n     */\n    setIsReplaced(newIsReplaced) {\n        this._isReplaced = newIsReplaced;\n    }\n\n    /**\n     *\n     */\n    supportsDTMF() {\n        return this._supportsDTMF;\n    }\n\n    /**\n     * Returns a set with the features for the participant.\n     * @returns {Promise<Set<String>, Error>}\n     */\n    getFeatures() {\n        return Promise.resolve(this._features);\n    }\n\n    /**\n     * Checks current set features.\n     * @param {String} feature - the feature to check.\n     * @return {boolean} <tt>true</tt> if this <tt>participant</tt> contains the\n     * <tt>feature</tt>.\n     */\n    hasFeature(feature) {\n        return this._features.has(feature);\n    }\n\n    /**\n     * Set new features.\n     * @param {Set<String>|undefined} newFeatures - Sets new features.\n     */\n    setFeatures(newFeatures) {\n        this._features = newFeatures || new Set();\n    }\n\n    /**\n     * Returns the bot type for the participant.\n     *\n     * @returns {string|undefined} - The bot type of the participant.\n     */\n    getBotType() {\n        return this._botType;\n    }\n\n    /**\n     * Sets the bot type for the participant.\n     * @param {String} newBotType - The new bot type to set.\n     */\n    setBotType(newBotType) {\n        this._botType = newBotType;\n    }\n}\n","import {\n    CONNECTION_DISCONNECTED,\n    CONNECTION_ESTABLISHED,\n    CONNECTION_FAILED\n} from './JitsiConnectionEvents';\nimport XMPP from './modules/xmpp/xmpp';\n\n/**\n * @typedef {Object} UpgradeRoleError\n *\n * @property {JitsiConnectionErrors} [connectionError] - One of\n * {@link JitsiConnectionErrors} which occurred when trying to connect to the\n * XMPP server.\n * @property {String} [authenticationError] - One of XMPP error conditions\n * returned by Jicofo on authentication attempt. See\n * {@link https://xmpp.org/rfcs/rfc3920.html#streams-error}.\n * @property {String} [message] - More details about the error.\n * @property {Object} [credentials] - The credentials that failed the\n * authentication.\n * @property {String} [credentials.jid] - The XMPP ID part of the credentials\n * that failed the authentication.\n * @property {string} [credentials.password] - The password part of the\n * credentials that failed the authentication.\n *\n * NOTE If neither one of the errors is present, then the operation has been\n * canceled.\n */\n\n/* eslint-disable no-invalid-this */\n\n/**\n * Connects to the XMPP server using the specified credentials and contacts\n * Jicofo in order to obtain a session ID (which is then stored in the local\n * storage). The user's role of the parent conference will be upgraded to\n * moderator (by Jicofo). It's also used to join the conference when starting\n * from anonymous domain and only authenticated users are allowed to create new\n * rooms.\n *\n * @param {Object} options\n * @param {string} options.id - XMPP user's ID to log in. For example,\n * user@xmpp-server.com.\n * @param {string} options.password - XMPP user's password to log in with.\n * @param {string} [options.roomPassword] - The password to join the MUC with.\n * @param {Function} [options.onLoginSuccessful] - Callback called when logging\n * into the XMPP server was successful. The next step will be to obtain a new\n * session ID from Jicofo and join the MUC using it which will effectively\n * upgrade the user's role to moderator.\n * @returns {Object} A <tt>thenable</tt> which (1) settles when the process of\n * authenticating and upgrading the role of the specified XMPP user finishes and\n * (2) has a <tt>cancel</tt> method that allows the caller to interrupt the\n * process. If the process finishes successfully, the session ID has been stored\n * in the settings and the <tt>thenable</tt> is resolved. If the process\n * finishes with failure, the <tt>thenable</tt> is rejected with reason of type\n * {@link UpgradeRoleError} which will have either <tt>connectionError</tt> or\n * <tt>authenticationError</tt> property set depending on which of the steps has\n * failed. If <tt>cancel</tt> is called before the process finishes, then the\n * thenable will be rejected with an empty object (i.e. no error property will\n * be set on the rejection reason).\n */\nexport default function authenticateAndUpgradeRole({\n    // 1. Log the specified XMPP user in.\n    id,\n    password,\n    onCreateResource,\n\n    // 2. Let the API client/consumer know as soon as the XMPP user has been\n    //    successfully logged in.\n    onLoginSuccessful,\n\n    // 3. Join the MUC.\n    roomPassword\n}) {\n    let canceled = false;\n    let rejectPromise;\n    let xmpp = new XMPP(this.connection.options);\n\n    const process = new Promise((resolve, reject) => {\n        // The process is represented by a Thenable with a cancel method. The\n        // Thenable is implemented using Promise and the cancel using the\n        // Promise's reject function.\n        rejectPromise = reject;\n\n\n        xmpp.addListener(\n            CONNECTION_DISCONNECTED,\n            () => {\n                xmpp = undefined;\n            });\n        xmpp.addListener(\n            CONNECTION_ESTABLISHED,\n            () => {\n                if (canceled) {\n                    return;\n                }\n\n                // Let the caller know that the XMPP login was successful.\n                onLoginSuccessful && onLoginSuccessful();\n\n                // Now authenticate with Jicofo and get a new session ID.\n                const room = xmpp.createRoom(\n                    this.options.name,\n                    this.options.config,\n                    onCreateResource\n                );\n\n                room.moderator.authenticate()\n                    .then(() => {\n                        xmpp && xmpp.disconnect();\n\n                        if (canceled) {\n                            return;\n                        }\n\n                        // At this point we should have the new session ID\n                        // stored in the settings. Jicofo will allow to join the\n                        // room.\n                        this.join(roomPassword);\n\n                        resolve();\n                    })\n                    .catch(({ error, message }) => {\n                        xmpp.disconnect();\n\n                        reject({\n                            authenticationError: error,\n                            message\n                        });\n                    });\n            });\n        xmpp.addListener(\n            CONNECTION_FAILED,\n            (connectionError, message, credentials) => {\n                reject({\n                    connectionError,\n                    credentials,\n                    message\n                });\n                xmpp = undefined;\n            });\n\n        canceled || xmpp.connect(id, password);\n    });\n\n    /**\n     * Cancels the process, if it's in progress, of authenticating and upgrading\n     * the role of the local participant/user.\n     *\n     * @public\n     * @returns {void}\n     */\n    process.cancel = () => {\n        canceled = true;\n        rejectPromise({});\n        xmpp && xmpp.disconnect();\n    };\n\n    return process;\n}\n\n/* eslint-enable no-invalid-this */\n","/* global __filename */\n\nimport { getLogger } from 'jitsi-meet-logger';\n\nconst logger = getLogger(__filename);\n\n// Flag to set on senders / receivers to avoid setting up the encryption transform\n// more than once.\nconst kJitsiE2EE = Symbol('kJitsiE2EE');\n\n/**\n * Context encapsulating the cryptography bits required for E2EE.\n * This uses the WebRTC Insertable Streams API which is explained in\n *   https://github.com/alvestrand/webrtc-media-streams/blob/master/explainer.md\n * that provides access to the encoded frames and allows them to be transformed.\n *\n * The encoded frame format is explained below in the _encodeFunction method.\n * High level design goals were:\n * - do not require changes to existing SFUs and retain (VP8) metadata.\n * - allow the SFU to rewrite SSRCs, timestamp, pictureId.\n * - allow for the key to be rotated frequently.\n */\nexport default class E2EEcontext {\n    /**\n     * Build a new E2EE context instance, which will be used in a given conference.\n     */\n    constructor() {\n        // Determine the URL for the worker script. Relative URLs are relative to\n        // the entry point, not the script that launches the worker.\n        let baseUrl = '';\n        const ljm = document.querySelector('script[src*=\"lib-jitsi-meet\"]');\n\n        if (ljm) {\n            const idx = ljm.src.lastIndexOf('/');\n\n            baseUrl = `${ljm.src.substring(0, idx)}/`;\n        }\n\n        // Initialize the E2EE worker. In order to avoid CORS issues, start the worker and have it\n        // synchronously load the JS.\n        const workerUrl = `${baseUrl}lib-jitsi-meet.e2ee-worker.js`;\n        const workerBlob\n            = new Blob([ `importScripts(\"${workerUrl}\");` ], { type: 'application/javascript' });\n        const blobUrl = window.URL.createObjectURL(workerBlob);\n\n        this._worker = new Worker(blobUrl, { name: 'E2EE Worker' });\n        this._worker.onerror = e => logger.onerror(e);\n    }\n\n    /**\n     * Cleans up all state associated with the given participant. This is needed when a\n     * participant leaves the current conference.\n     *\n     * @param {string} participantId - The participant that just left.\n     */\n    cleanup(participantId) {\n        this._worker.postMessage({\n            operation: 'cleanup',\n            participantId\n        });\n    }\n\n    /**\n     * Handles the given {@code RTCRtpReceiver} by creating a {@code TransformStream} which will inject\n     * a frame decoder.\n     *\n     * @param {RTCRtpReceiver} receiver - The receiver which will get the decoding function injected.\n     * @param {string} kind - The kind of track this receiver belongs to.\n     * @param {string} participantId - The participant id that this receiver belongs to.\n     */\n    handleReceiver(receiver, kind, participantId) {\n        if (receiver[kJitsiE2EE]) {\n            return;\n        }\n        receiver[kJitsiE2EE] = true;\n\n        const receiverStreams = receiver.createEncodedStreams();\n\n        this._worker.postMessage({\n            operation: 'decode',\n            readableStream: receiverStreams.readable,\n            writableStream: receiverStreams.writable,\n            participantId\n        }, [ receiverStreams.readable, receiverStreams.writable ]);\n    }\n\n    /**\n     * Handles the given {@code RTCRtpSender} by creating a {@code TransformStream} which will inject\n     * a frame encoder.\n     *\n     * @param {RTCRtpSender} sender - The sender which will get the encoding function injected.\n     * @param {string} kind - The kind of track this sender belongs to.\n     * @param {string} participantId - The participant id that this sender belongs to.\n     */\n    handleSender(sender, kind, participantId) {\n        if (sender[kJitsiE2EE]) {\n            return;\n        }\n        sender[kJitsiE2EE] = true;\n\n        const senderStreams = sender.createEncodedStreams();\n\n        this._worker.postMessage({\n            operation: 'encode',\n            readableStream: senderStreams.readable,\n            writableStream: senderStreams.writable,\n            participantId\n        }, [ senderStreams.readable, senderStreams.writable ]);\n    }\n\n    /**\n     * Set the E2EE key for the specified participant.\n     *\n     * @param {string} participantId - the ID of the participant who's key we are setting.\n     * @param {Uint8Array | boolean} key - they key for the given participant.\n     * @param {Number} keyIndex - the key index.\n     */\n    setKey(participantId, key, keyIndex) {\n        this._worker.postMessage({\n            operation: 'setKey',\n            participantId,\n            key,\n            keyIndex\n        });\n    }\n}\n","import { getLogger } from 'jitsi-meet-logger';\n\nimport {\n    default as NetworkInfo,\n    NETWORK_INFO_EVENT\n} from '../connectivity/NetworkInfo';\nimport { getJitterDelay } from '../util/Retry';\n\nconst logger = getLogger(__filename);\n\n/**\n * The class contains the logic for triggering connection resume via XEP-0198 stream management.\n * It does two things, the first one is it tracks the internet online/offline status and it makes sure that\n * the reconnect is attempted only while online. The seconds thing is that it tracks the retry attempts and extends\n * the retry interval using the full jitter pattern.\n */\nexport default class ResumeTask {\n    /**\n     * Initializes new {@code RetryTask}.\n     * @param {Strophe.Connection} stropheConnection - The Strophe connection instance.\n     */\n    constructor(stropheConnection) {\n        this._stropheConn = stropheConnection;\n\n        /**\n         * The counter increased before each resume retry attempt, used to calculate exponential backoff.\n         * @type {number}\n         * @private\n         */\n        this._resumeRetryN = 0;\n\n        this._retryDelay = undefined;\n    }\n\n    /**\n     * @returns {number|undefined} - How much the app will wait before trying to resume the XMPP connection. When\n     * 'undefined' it means that no resume task was not scheduled.\n     */\n    get retryDelay() {\n        return this._retryDelay;\n    }\n\n    /**\n     * Called by {@link XmppConnection} when the connection drops and it's a signal it wants to schedule a reconnect.\n     *\n     * @returns {void}\n     */\n    schedule() {\n        this._cancelResume();\n\n        this._resumeRetryN += 1;\n\n        this._networkOnlineListener\n            = NetworkInfo.addEventListener(\n                NETWORK_INFO_EVENT,\n                ({ isOnline }) => {\n                    if (isOnline) {\n                        this._scheduleResume();\n                    } else {\n                        this._cancelResume();\n                    }\n                });\n\n        NetworkInfo.isOnline() && this._scheduleResume();\n    }\n\n    /**\n     * Schedules a delayed timeout which will execute the resume action.\n     * @private\n     * @returns {void}\n     */\n    _scheduleResume() {\n        if (this._resumeTimeout) {\n\n            // NO-OP\n            return;\n        }\n\n        // The retry delay will be:\n        //   1st retry: 1.5s - 3s\n        //   2nd retry: 3s - 9s\n        //   3rd and next retry: 4.5s - 27s\n        this._resumeRetryN = Math.min(3, this._resumeRetryN);\n        this._retryDelay = getJitterDelay(\n            /* retry */ this._resumeRetryN,\n            /* minDelay */ this._resumeRetryN * 1500,\n            3);\n\n        logger.info(`Will try to resume the XMPP connection in ${this.retryDelay}ms`);\n\n        this._resumeTimeout = setTimeout(() => this._resumeConnection(), this.retryDelay);\n    }\n\n    /**\n     * Cancels the delayed resume task.\n     *\n     * @private\n     * @returns {void}\n     */\n    _cancelResume() {\n        if (this._resumeTimeout) {\n            logger.info('Canceling connection resume task');\n            clearTimeout(this._resumeTimeout);\n            this._resumeTimeout = undefined;\n            this._retryDelay = undefined;\n        }\n    }\n\n    /**\n     * Resumes the XMPP connection using the stream management plugin.\n     *\n     * @private\n     * @returns {void}\n     */\n    _resumeConnection() {\n        const { streamManagement } = this._stropheConn;\n        const resumeToken = streamManagement.getResumeToken();\n\n        // Things may have changed since when the task was scheduled\n        if (!resumeToken) {\n            return;\n        }\n\n        logger.info('Trying to resume the XMPP connection');\n\n        const url = new URL(this._stropheConn.service);\n        let { search } = url;\n        const pattern = /(previd=)([\\w-]+)/;\n        const oldToken = search.match(pattern);\n\n        // Replace previd if the previd value has changed.\n        if (oldToken && oldToken.indexOf(resumeToken) === -1) {\n            search = search.replace(pattern, `$1${resumeToken}`);\n\n        // Append previd if it doesn't exist.\n        } else if (!oldToken) {\n            search += search.indexOf('?') === -1 ? `?previd=${resumeToken}` : `&previd=${resumeToken}`;\n        }\n\n        url.search = search;\n\n        this._stropheConn.service = url.toString();\n\n        streamManagement.resume();\n    }\n\n    /**\n     * Cancels the retry task. It's called by {@link XmppConnection} when it's no longer interested in reconnecting for\n     * example when the disconnect method is called.\n     *\n     * @returns {void}\n     */\n    cancel() {\n        this._cancelResume();\n        this._resumeRetryN = 0;\n        if (this._networkOnlineListener) {\n            this._networkOnlineListener();\n            this._networkOnlineListener = null;\n        }\n    }\n}\n","/**\n* Gets next timeout using the full jitter pattern.\n*\n* NOTE that there are no checks for argument correctness, so either do the math or use defaults.\n*\n* @param {number} retry - The retry number.\n* @param {number} minDelay - The minimal delay in milliseconds.\n* @param {number} base - The exponent base.\n* @returns {number} - The amount of waiting before trying another time given in milliseconds.\n* @private\n*/\nexport function getJitterDelay(retry, minDelay = 500, base = 2) {\n    return Math.floor((Math.random() * ((Math.pow(base, retry) * 1000) - minDelay)) + minDelay);\n}\n","/**\n * Attaches to the {@link Strophe.Connection.rawInput} which is called whenever any data is received from the server.\n */\nexport default class LastRequestTracker {\n    /**\n     * Initializes new instance.\n     */\n    constructor() {\n        this._lastSuccess = null;\n        this._lastFailedMessage = null;\n    }\n\n    /**\n     * Starts tracking requests on the given connection.\n     *\n     * @param {XmppConnection} xmppConnection - The XMPP connection which manages the given {@code stropheConnection}.\n     * @param {Object} stropheConnection - Strophe connection instance.\n     */\n    startTracking(xmppConnection, stropheConnection) {\n        const originalRawInput = stropheConnection.rawInput;\n\n        stropheConnection.rawInput = (...args) => {\n            const rawMessage = args[0];\n\n            if (rawMessage.includes('failure')) {\n                this._lastFailedMessage = rawMessage;\n            }\n\n            // It's okay to use rawInput callback only once the connection has been established, otherwise it will\n            // treat 'item-not-found' or other connection error on websocket reconnect as successful stanza received.\n            if (xmppConnection.connected) {\n                this._lastSuccess = Date.now();\n            }\n            originalRawInput.apply(stropheConnection, args);\n        };\n    }\n\n    /**\n     * Returns the last raw failed incoming message on the xmpp connection.\n     *\n     * @returns {string|null}\n     */\n    getLastFailedMessage() {\n        return this._lastFailedMessage;\n    }\n\n    /**\n     * Returns how many milliseconds have passed since the last successful BOSH request.\n     *\n     * @returns {number|null}\n     */\n    getTimeSinceLastSuccess() {\n        return this._lastSuccess\n            ? Date.now() - this._lastSuccess\n            : null;\n    }\n}\n","import { getLogger } from 'jitsi-meet-logger';\nimport { $iq, Strophe } from 'strophe.js';\n\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\n\nimport ConnectionPlugin from './ConnectionPlugin';\n\n\nconst logger = getLogger(__filename);\n\n/**\n * Default ping every 10 sec\n */\nconst PING_DEFAULT_INTERVAL = 10000;\n\n/**\n * Default ping timeout error after 5 sec of waiting.\n */\nconst PING_DEFAULT_TIMEOUT = 5000;\n\n/**\n * Default value for how many ping failures will be tolerated before the WebSocket connection is killed.\n * The worst case scenario in case of ping timing out without a response is (25 seconds at the time of this writing):\n * PING_THRESHOLD * PING_INTERVAL + PING_TIMEOUT\n */\nconst PING_DEFAULT_THRESHOLD = 2;\n\n/**\n * XEP-0199 ping plugin.\n *\n * Registers \"urn:xmpp:ping\" namespace under Strophe.NS.PING.\n */\nexport default class PingConnectionPlugin extends ConnectionPlugin {\n    /**\n     * Constructs new object\n     * @param {Object} options\n     * @param {Function} options.onPingThresholdExceeded - Callback called when ping fails too many times (controlled\n     * by the {@link PING_THRESHOLD} constant).\n     * @param {Function} options._getTimeSinceLastServerResponse - A function to obtain the last seen\n     * response from the server.\n     * @param {Object} options.pingOptions - The ping options if any.\n     * @constructor\n     */\n    constructor({ getTimeSinceLastServerResponse, onPingThresholdExceeded, pingOptions = {} }) {\n        super();\n        this.failedPings = 0;\n        this._onPingThresholdExceeded = onPingThresholdExceeded;\n        this._getTimeSinceLastServerResponse = getTimeSinceLastServerResponse;\n\n        this.pingInterval = typeof pingOptions.interval === 'number' ? pingOptions.interval : PING_DEFAULT_INTERVAL;\n        this.pingTimeout = typeof pingOptions.timeout === 'number' ? pingOptions.timeout : PING_DEFAULT_TIMEOUT;\n        this.pingThreshold = typeof pingOptions.threshold === 'number'\n            ? pingOptions.threshold : PING_DEFAULT_THRESHOLD;\n\n        // The number of timestamps of send pings to keep.\n        // The current value is 2 minutes.\n        this.pingTimestampsToKeep = Math.round(120000 / this.pingInterval);\n        this.pingExecIntervals = new Array(this.pingTimestampsToKeep);\n    }\n\n    /**\n     * Initializes the plugin. Method called by Strophe.\n     * @param connection Strophe connection instance.\n     */\n    init(connection) {\n        super.init(connection);\n        Strophe.addNamespace('PING', 'urn:xmpp:ping');\n    }\n\n    /* eslint-disable max-params */\n\n    /**\n     * Sends \"ping\" to given <tt>jid</tt>\n     * @param jid the JID to which ping request will be sent.\n     * @param success callback called on success.\n     * @param error callback called on error.\n     * @param timeout ms how long are we going to wait for the response. On\n     * timeout <tt>error<//t> callback is called with undefined error argument.\n     */\n    ping(jid, success, error, timeout) {\n        this._addPingExecutionTimestamp();\n\n        const iq = $iq({\n            type: 'get',\n            to: jid\n        });\n\n        iq.c('ping', { xmlns: Strophe.NS.PING });\n        this.connection.sendIQ2(iq, { timeout })\n            .then(success, error);\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     * Starts to send ping in given interval to specified remote JID.\n     * This plugin supports only one such task and <tt>stopInterval</tt>\n     * must be called before starting a new one.\n     * @param remoteJid remote JID to which ping requests will be sent to.\n     */\n    startInterval(remoteJid) {\n        clearInterval(this.intervalId);\n        this.intervalId = window.setInterval(() => {\n\n            // when there were some server responses in the interval since the last time we checked (_lastServerCheck)\n            // let's skip the ping\n\n            const now = Date.now();\n\n            if (this._getTimeSinceLastServerResponse() < now - this._lastServerCheck) {\n                // do this just to keep in sync the intervals so we can detect suspended device\n                this._addPingExecutionTimestamp();\n\n                this._lastServerCheck = now;\n                this.failedPings = 0;\n\n                return;\n            }\n\n            this.ping(remoteJid, () => {\n                // server response is measured on raw input and ping response time is measured after all the xmpp\n                // processing is done in js, so there can be some misalignment when we do the check above.\n                // That's why we store the last time we got the response\n                this._lastServerCheck = this._getTimeSinceLastServerResponse() + Date.now();\n\n                this.failedPings = 0;\n            }, error => {\n                this.failedPings += 1;\n                const errmsg = `Ping ${error ? 'error' : 'timeout'}`;\n\n                if (this.failedPings >= this.pingThreshold) {\n                    GlobalOnErrorHandler.callErrorHandler(new Error(errmsg));\n                    logger.error(errmsg, error);\n                    this._onPingThresholdExceeded && this._onPingThresholdExceeded();\n                } else {\n                    logger.warn(errmsg, error);\n                }\n            }, this.pingTimeout);\n        }, this.pingInterval);\n        logger.info(`XMPP pings will be sent every ${this.pingInterval} ms`);\n    }\n\n    /**\n     * Stops current \"ping\"  interval task.\n     */\n    stopInterval() {\n        if (this.intervalId) {\n            window.clearInterval(this.intervalId);\n            this.intervalId = null;\n            this.failedPings = 0;\n            logger.info('Ping interval cleared');\n        }\n    }\n\n    /**\n     * Adds the current time to the array of send ping timestamps.\n     * @private\n     */\n    _addPingExecutionTimestamp() {\n        this.pingExecIntervals.push(new Date().getTime());\n\n        // keep array length to PING_TIMESTAMPS_TO_KEEP\n        if (this.pingExecIntervals.length > this.pingTimestampsToKeep) {\n            this.pingExecIntervals.shift();\n        }\n    }\n\n    /**\n     * Returns the maximum time between the recent sent pings, if there is a\n     * big value it means the computer was inactive for some time(suspended).\n     * Checks the maximum gap between sending pings, considering and the\n     * current time. Trying to detect computer inactivity (sleep).\n     *\n     * @returns {int} the time ping was suspended, if it was not 0 is returned.\n     */\n    getPingSuspendTime() {\n        const pingIntervals = this.pingExecIntervals.slice();\n\n        // we need current time, as if ping was sent now\n        // if computer sleeps we will get correct interval after next\n        // scheduled ping, bet we sometimes need that interval before waiting\n        // for the next ping, on closing the connection on error.\n        pingIntervals.push(new Date().getTime());\n\n        let maxInterval = 0;\n        let previousTS = pingIntervals[0];\n\n        pingIntervals.forEach(e => {\n            const currentInterval = e - previousTS;\n\n            if (currentInterval > maxInterval) {\n                maxInterval = currentInterval;\n            }\n\n            previousTS = e;\n        });\n\n        // remove the interval between the ping sent\n        // this way in normal execution there is no suspend and the return\n        // will be 0 or close to 0.\n        maxInterval -= this.pingInterval;\n\n        // make sure we do not return less than 0\n        return Math.max(maxInterval, 0);\n    }\n}\n","/* global $ */\n\nimport { getLogger } from 'jitsi-meet-logger';\nimport { Strophe } from 'strophe.js';\n\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\n\nimport ChatRoom from './ChatRoom';\nimport { ConnectionPluginListenable } from './ConnectionPlugin';\n\nconst logger = getLogger(__filename);\n\n/**\n * MUC connection plugin.\n */\nexport default class MucConnectionPlugin extends ConnectionPluginListenable {\n    /**\n     *\n     * @param xmpp\n     */\n    constructor(xmpp) {\n        super();\n        this.xmpp = xmpp;\n        this.rooms = {};\n    }\n\n    /**\n     *\n     * @param connection\n     */\n    init(connection) {\n        super.init(connection);\n\n        // add handlers (just once)\n        this.connection.addHandler(this.onPresence.bind(this), null,\n            'presence', null, null, null, null);\n        this.connection.addHandler(this.onPresenceUnavailable.bind(this),\n            null, 'presence', 'unavailable', null);\n        this.connection.addHandler(this.onPresenceError.bind(this), null,\n            'presence', 'error', null);\n        this.connection.addHandler(this.onMessage.bind(this), null,\n            'message', null, null);\n        this.connection.addHandler(this.onMute.bind(this),\n            'http://jitsi.org/jitmeet/audio', 'iq', 'set', null, null);\n        this.connection.addHandler(this.onMuteVideo.bind(this),\n            'http://jitsi.org/jitmeet/video', 'iq', 'set', null, null);\n    }\n\n    /**\n     *\n     * @param jid\n     * @param password\n     * @param options\n     */\n    createRoom(jid, password, options) {\n        const roomJid = Strophe.getBareJidFromJid(jid);\n\n        if (this.rooms[roomJid]) {\n            const errmsg = 'You are already in the room!';\n\n            logger.error(errmsg);\n            throw new Error(errmsg);\n        }\n        this.rooms[roomJid] = new ChatRoom(this.connection, jid,\n            password, this.xmpp, options);\n        this.eventEmitter.emit(\n            XMPPEvents.EMUC_ROOM_ADDED, this.rooms[roomJid]);\n\n        return this.rooms[roomJid];\n    }\n\n    /**\n     *\n     * @param jid\n     */\n    doLeave(jid) {\n        this.eventEmitter.emit(\n            XMPPEvents.EMUC_ROOM_REMOVED, this.rooms[jid]);\n        delete this.rooms[jid];\n    }\n\n    /**\n     *\n     * @param pres\n     */\n    onPresence(pres) {\n        const from = pres.getAttribute('from');\n\n        // What is this for? A workaround for something?\n        if (pres.getAttribute('type')) {\n            return true;\n        }\n\n        const room = this.rooms[Strophe.getBareJidFromJid(from)];\n\n        if (!room) {\n            return true;\n        }\n\n        // Parse status.\n        if ($(pres).find('>x[xmlns=\"http://jabber.org/protocol/muc#user\"]'\n            + '>status[code=\"201\"]').length) {\n            room.createNonAnonymousRoom();\n        }\n\n        room.onPresence(pres);\n\n        return true;\n    }\n\n    /**\n     *\n     * @param pres\n     */\n    onPresenceUnavailable(pres) {\n        const from = pres.getAttribute('from');\n        const room = this.rooms[Strophe.getBareJidFromJid(from)];\n\n        if (!room) {\n            return true;\n        }\n\n        room.onPresenceUnavailable(pres, from);\n\n        return true;\n    }\n\n    /**\n     *\n     * @param pres\n     */\n    onPresenceError(pres) {\n        const from = pres.getAttribute('from');\n        const room = this.rooms[Strophe.getBareJidFromJid(from)];\n\n        if (!room) {\n            return true;\n        }\n\n        room.onPresenceError(pres, from);\n\n        return true;\n    }\n\n    /**\n     *\n     * @param msg\n     */\n    onMessage(msg) {\n        // FIXME: this is a hack. but jingle on muc makes nickchanges hard\n        const from = msg.getAttribute('from');\n        const room = this.rooms[Strophe.getBareJidFromJid(from)];\n\n        if (!room) {\n            return true;\n        }\n\n        room.onMessage(msg, from);\n\n        return true;\n    }\n\n    /**\n     * TODO: Document\n     * @param iq\n     */\n    onMute(iq) {\n        const from = iq.getAttribute('from');\n        const room = this.rooms[Strophe.getBareJidFromJid(from)];\n\n        // Returning false would result in the listener being deregistered by Strophe\n        if (!room) {\n            return true;\n        }\n\n        room.onMute(iq);\n\n        return true;\n    }\n\n    /**\n     * TODO: Document\n     * @param iq\n     */\n    onMuteVideo(iq) {\n        const from = iq.getAttribute('from');\n        const room = this.rooms[Strophe.getBareJidFromJid(from)];\n\n        // Returning false would result in the listener being deregistered by Strophe\n        if (!room) {\n            return true;\n        }\n\n        room.onMuteVideo(iq);\n\n        return true;\n    }\n}\n","/* global $, __filename */\n\nimport { getLogger } from 'jitsi-meet-logger';\nimport isEqual from 'lodash.isequal';\nimport { $iq, $msg, $pres, Strophe } from 'strophe.js';\n\nimport * as JitsiTranscriptionStatus from '../../JitsiTranscriptionStatus';\nimport * as MediaType from '../../service/RTC/MediaType';\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\nimport Listenable from '../util/Listenable';\n\nimport AVModeration from './AVModeration';\nimport Lobby from './Lobby';\nimport XmppConnection from './XmppConnection';\nimport Moderator from './moderator';\n\nconst logger = getLogger(__filename);\n\nexport const parser = {\n    packet2JSON(xmlElement, nodes) {\n        for (const child of Array.from(xmlElement.children)) {\n            const node = {\n                attributes: {},\n                children: [],\n                tagName: child.tagName\n            };\n\n            for (const attr of Array.from(child.attributes)) {\n                node.attributes[attr.name] = attr.value;\n            }\n            const text = Strophe.getText(child);\n\n            if (text) {\n                // Using Strophe.getText will do work for traversing all direct\n                // child text nodes but returns an escaped value, which is not\n                // desirable at this point.\n                node.value = Strophe.xmlunescape(text);\n            }\n            nodes.push(node);\n            this.packet2JSON(child, node.children);\n        }\n    },\n    json2packet(nodes, packet) {\n        for (let i = 0; i < nodes.length; i++) {\n            const node = nodes[i];\n\n            if (node) {\n                packet.c(node.tagName, node.attributes);\n                if (node.value) {\n                    packet.t(node.value);\n                }\n                if (node.children) {\n                    this.json2packet(node.children, packet);\n                }\n                packet.up();\n            }\n        }\n\n        // packet.up();\n    }\n};\n\n/**\n * Returns array of JS objects from the presence JSON associated with the passed\n / nodeName\n * @param pres the presence JSON\n * @param nodeName the name of the node (videomuted, audiomuted, etc)\n */\nfunction filterNodeFromPresenceJSON(pres, nodeName) {\n    const res = [];\n\n    for (let i = 0; i < pres.length; i++) {\n        if (pres[i].tagName === nodeName) {\n            res.push(pres[i]);\n        }\n    }\n\n    return res;\n}\n\n// XXX As ChatRoom constructs XMPP stanzas and Strophe is build around the idea\n// of chaining function calls, allow long function call chains.\n/* eslint-disable newline-per-chained-call */\n\n/**\n * Array of affiliations that are allowed in members only room.\n * @type {string[]}\n */\nconst MEMBERS_AFFILIATIONS = [ 'owner', 'admin', 'member' ];\n\n/**\n *\n */\nexport default class ChatRoom extends Listenable {\n\n    /* eslint-disable max-params */\n\n    /**\n     *\n     * @param {XmppConnection} connection - The XMPP connection instance.\n     * @param jid\n     * @param password\n     * @param XMPP\n     * @param options\n     * @param {boolean} options.disableFocus - when set to {@code false} will\n     * not invite Jicofo into the room.\n     * @param {boolean} options.disableDiscoInfo - when set to {@code false} will skip disco info.\n     * This is intended to be used only for lobby rooms.\n     * @param {boolean} options.enableLobby - when set to {@code false} will skip creating lobby room.\n     */\n    constructor(connection, jid, password, XMPP, options) {\n        super();\n        this.xmpp = XMPP;\n        this.connection = connection;\n        this.roomjid = Strophe.getBareJidFromJid(jid);\n        this.myroomjid = jid;\n        this.password = password;\n        this.replaceParticipant = false;\n        logger.info(`Joined MUC as ${this.myroomjid}`);\n        this.members = {};\n        this.presMap = {};\n        this.presHandlers = {};\n        this._removeConnListeners = [];\n        this.joined = false;\n        this.role = null;\n        this.focusMucJid = null;\n        this.noBridgeAvailable = false;\n        this.options = options || {};\n        this.moderator\n            = new Moderator(this.roomjid, this.xmpp, this.eventEmitter, {\n                connection: this.xmpp.options,\n                conference: this.options\n            });\n        if (typeof this.options.enableLobby === 'undefined' || this.options.enableLobby) {\n            this.lobby = new Lobby(this);\n        }\n        this.avModeration = new AVModeration(this);\n        this.initPresenceMap(options);\n        this.lastPresences = {};\n        this.phoneNumber = null;\n        this.phonePin = null;\n        this.connectionTimes = {};\n        this.participantPropertyListener = null;\n\n        this.locked = false;\n        this.transcriptionStatus = JitsiTranscriptionStatus.OFF;\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     *\n     */\n    initPresenceMap(options = {}) {\n        this.presMap.to = this.myroomjid;\n        this.presMap.xns = 'http://jabber.org/protocol/muc';\n        this.presMap.nodes = [];\n\n        if (options.statsId) {\n            this.presMap.nodes.push({\n                'tagName': 'stats-id',\n                'value': options.statsId\n            });\n        }\n\n        if (options.deploymentInfo && options.deploymentInfo.userRegion) {\n            this.presMap.nodes.push({\n                'tagName': 'region',\n                'attributes': {\n                    id: options.deploymentInfo.userRegion,\n                    xmlns: 'http://jitsi.org/jitsi-meet'\n                }\n            });\n        }\n\n        this.presenceUpdateTime = Date.now();\n    }\n\n    /**\n     * Joins the chat room.\n     * @param {string} password - Password to unlock room on joining.\n     * @returns {Promise} - resolved when join completes. At the time of this\n     * writing it's never rejected.\n     */\n    join(password, replaceParticipant) {\n        this.password = password;\n        this.replaceParticipant = replaceParticipant;\n\n        return new Promise(resolve => {\n            this.options.disableFocus\n                && logger.info(`Conference focus disabled for ${this.roomjid}`);\n\n            const preJoin\n                = this.options.disableFocus\n                    ? Promise.resolve()\n                    : this.moderator.allocateConferenceFocus();\n\n            preJoin.then(() => {\n                this.sendPresence(true);\n                this._removeConnListeners.push(\n                    this.connection.addEventListener(\n                        XmppConnection.Events.CONN_STATUS_CHANGED,\n                        this.onConnStatusChanged.bind(this))\n                );\n                resolve();\n            });\n        });\n    }\n\n    /**\n     *\n     * @param fromJoin - Whether this is initial presence to join the room.\n     */\n    sendPresence(fromJoin) {\n        const to = this.presMap.to;\n\n        if (!this.connection || !this.connection.connected || !to || (!this.joined && !fromJoin)) {\n            // Too early to send presence - not initialized\n            return;\n        }\n\n        const pres = $pres({ to });\n\n        // xep-0045 defines: \"including in the initial presence stanza an empty\n        // <x/> element qualified by the 'http://jabber.org/protocol/muc'\n        // namespace\" and subsequent presences should not include that or it can\n        // be considered as joining, and server can send us the message history\n        // for the room on every presence\n        if (fromJoin) {\n            if (this.replaceParticipant) {\n                pres.c('flip_device').up();\n            }\n\n            pres.c('x', { xmlns: this.presMap.xns });\n\n            if (this.password) {\n                pres.c('password').t(this.password).up();\n            }\n            if (this.options.billingId) {\n                pres.c('billingid').t(this.options.billingId).up();\n            }\n\n            pres.up();\n        }\n\n        parser.json2packet(this.presMap.nodes, pres);\n\n        // we store time we last synced presence state\n        this.presenceSyncTime = Date.now();\n\n        this.connection.send(pres);\n        if (fromJoin) {\n            // XXX We're pressed for time here because we're beginning a complex\n            // and/or lengthy conference-establishment process which supposedly\n            // involves multiple RTTs. We don't have the time to wait for\n            // Strophe to decide to send our IQ.\n            this.connection.flush();\n        }\n    }\n\n    /**\n     * Sends the presence unavailable, signaling the server\n     * we want to leave the room.\n     */\n    doLeave() {\n        logger.log('do leave', this.myroomjid);\n        const pres = $pres({ to: this.myroomjid,\n            type: 'unavailable' });\n\n        this.presMap.length = 0;\n\n        // XXX Strophe is asynchronously sending by default. Unfortunately, that\n        // means that there may not be enough time to send the unavailable\n        // presence. Switching Strophe to synchronous sending is not much of an\n        // option because it may lead to a noticeable delay in navigating away\n        // from the current location. As a compromise, we will try to increase\n        // the chances of sending the unavailable presence within the short time\n        // span that we have upon unloading by invoking flush() on the\n        // connection. We flush() once before sending/queuing the unavailable\n        // presence in order to attemtp to have the unavailable presence at the\n        // top of the send queue. We flush() once more after sending/queuing the\n        // unavailable presence in order to attempt to have it sent as soon as\n        // possible.\n        // FIXME do not use Strophe.Connection in the ChatRoom directly\n        !this.connection.isUsingWebSocket && this.connection.flush();\n        this.connection.send(pres);\n        this.connection.flush();\n    }\n\n    /**\n     *\n     */\n    discoRoomInfo() {\n        // https://xmpp.org/extensions/xep-0045.html#disco-roominfo\n\n        const getInfo\n            = $iq({\n                type: 'get',\n                to: this.roomjid\n            })\n                .c('query', { xmlns: Strophe.NS.DISCO_INFO });\n\n        this.connection.sendIQ(getInfo, result => {\n            const locked\n                = $(result).find('>query>feature[var=\"muc_passwordprotected\"]')\n                    .length\n                    === 1;\n\n            if (locked !== this.locked) {\n                this.eventEmitter.emit(XMPPEvents.MUC_LOCK_CHANGED, locked);\n                this.locked = locked;\n            }\n\n            const meetingIdValEl\n                = $(result).find('>query>x[type=\"result\"]>field[var=\"muc#roominfo_meetingId\"]>value');\n\n            if (meetingIdValEl.length) {\n                this.setMeetingId(meetingIdValEl.text());\n            } else {\n                logger.warn('No meeting ID from backend');\n            }\n\n            const membersOnly = $(result).find('>query>feature[var=\"muc_membersonly\"]').length === 1;\n\n            const lobbyRoomField\n                = $(result).find('>query>x[type=\"result\"]>field[var=\"muc#roominfo_lobbyroom\"]>value');\n\n            if (this.lobby) {\n                this.lobby.setLobbyRoomJid(lobbyRoomField && lobbyRoomField.length ? lobbyRoomField.text() : undefined);\n            }\n\n            if (membersOnly !== this.membersOnlyEnabled) {\n                this.membersOnlyEnabled = membersOnly;\n                this.eventEmitter.emit(XMPPEvents.MUC_MEMBERS_ONLY_CHANGED, membersOnly);\n            }\n\n        }, error => {\n            GlobalOnErrorHandler.callErrorHandler(error);\n            logger.error('Error getting room info: ', error);\n        });\n    }\n\n    /**\n     * Sets the meeting unique Id (received from the backend).\n     *\n     * @param {string} meetingId - The new meetings id.\n     * @returns {void}\n     */\n    setMeetingId(meetingId) {\n        if (this.meetingId !== meetingId) {\n            if (this.meetingId) {\n                logger.warn(`Meeting Id changed from:${this.meetingId} to:${meetingId}`);\n            }\n            this.meetingId = meetingId;\n            this.eventEmitter.emit(XMPPEvents.MEETING_ID_SET, meetingId);\n        }\n    }\n\n    /**\n     *\n     */\n    createNonAnonymousRoom() {\n        // http://xmpp.org/extensions/xep-0045.html#createroom-reserved\n\n        if (this.options.disableDiscoInfo) {\n            return;\n        }\n\n        const getForm = $iq({ type: 'get',\n            to: this.roomjid })\n            .c('query', { xmlns: 'http://jabber.org/protocol/muc#owner' })\n            .c('x', { xmlns: 'jabber:x:data',\n                type: 'submit' });\n\n        this.connection.sendIQ(getForm, form => {\n            if (!$(form).find(\n                    '>query>x[xmlns=\"jabber:x:data\"]'\n                    + '>field[var=\"muc#roomconfig_whois\"]').length) {\n                const errmsg = 'non-anonymous rooms not supported';\n\n                GlobalOnErrorHandler.callErrorHandler(new Error(errmsg));\n                logger.error(errmsg);\n\n                return;\n            }\n\n            const formSubmit = $iq({ to: this.roomjid,\n                type: 'set' })\n                .c('query', { xmlns: 'http://jabber.org/protocol/muc#owner' });\n\n            formSubmit.c('x', { xmlns: 'jabber:x:data',\n                type: 'submit' });\n\n            formSubmit.c('field', { 'var': 'FORM_TYPE' })\n                .c('value')\n                .t('http://jabber.org/protocol/muc#roomconfig').up().up();\n\n            formSubmit.c('field', { 'var': 'muc#roomconfig_whois' })\n                .c('value').t('anyone').up().up();\n\n            this.connection.sendIQ(formSubmit);\n\n        }, error => {\n            GlobalOnErrorHandler.callErrorHandler(error);\n            logger.error('Error getting room configuration form: ', error);\n        });\n    }\n\n    /**\n     * Handles Xmpp Connection status updates.\n     *\n     * @param {Strophe.Status} status - The Strophe connection status.\n     */\n    onConnStatusChanged(status) {\n        // Send cached presence when the XMPP connection is re-established.\n        if (status === XmppConnection.Status.CONNECTED) {\n            this.sendPresence();\n        }\n    }\n\n    /**\n     *\n     * @param pres\n     */\n    onPresence(pres) {\n        const from = pres.getAttribute('from');\n        const member = {};\n        const statusEl = pres.getElementsByTagName('status')[0];\n\n        if (statusEl) {\n            member.status = statusEl.textContent || '';\n        }\n        let hasStatusUpdate = false;\n        let hasVersionUpdate = false;\n        const xElement\n            = pres.getElementsByTagNameNS(\n                'http://jabber.org/protocol/muc#user', 'x')[0];\n        const mucUserItem\n            = xElement && xElement.getElementsByTagName('item')[0];\n\n        member.isReplaceParticipant\n            = pres.getElementsByTagName('flip_device').length;\n\n        member.affiliation\n            = mucUserItem && mucUserItem.getAttribute('affiliation');\n        member.role = mucUserItem && mucUserItem.getAttribute('role');\n\n        // Focus recognition\n        const jid = mucUserItem && mucUserItem.getAttribute('jid');\n\n        member.jid = jid;\n        member.isFocus\n            = jid && jid.indexOf(`${this.moderator.getFocusUserJid()}/`) === 0;\n        member.isHiddenDomain\n            = jid && jid.indexOf('@') > 0\n                && this.options.hiddenDomain\n                    === jid.substring(jid.indexOf('@') + 1, jid.indexOf('/'));\n\n        this.eventEmitter.emit(XMPPEvents.PRESENCE_RECEIVED, {\n            fromHiddenDomain: member.isHiddenDomain,\n            presence: pres\n        });\n\n        const xEl = pres.querySelector('x');\n\n        if (xEl) {\n            xEl.remove();\n        }\n\n        const nodes = [];\n\n        parser.packet2JSON(pres, nodes);\n        this.lastPresences[from] = nodes;\n\n        // process nodes to extract data needed for MUC_JOINED and\n        // MUC_MEMBER_JOINED events\n        const extractIdentityInformation = node => {\n            const identity = {};\n            const userInfo = node.children.find(c => c.tagName === 'user');\n\n            if (userInfo) {\n                identity.user = {};\n                for (const tag of [ 'id', 'name', 'avatar' ]) {\n                    const child\n                        = userInfo.children.find(c => c.tagName === tag);\n\n                    if (child) {\n                        identity.user[tag] = child.value;\n                    }\n                }\n            }\n            const groupInfo = node.children.find(c => c.tagName === 'group');\n\n            if (groupInfo) {\n                identity.group = groupInfo.value;\n            }\n\n            return identity;\n        };\n\n        for (let i = 0; i < nodes.length; i++) {\n            const node = nodes[i];\n\n            switch (node.tagName) {\n            case 'bot': {\n                const { attributes } = node;\n\n                if (!attributes) {\n                    break;\n                }\n                const { type } = attributes;\n\n                member.botType = type;\n                break;\n            }\n            case 'nick':\n                member.nick = node.value;\n                break;\n            case 'userId':\n                member.id = node.value;\n                break;\n            case 'stats-id':\n                member.statsID = node.value;\n                break;\n            case 'identity':\n                member.identity = extractIdentityInformation(node);\n                break;\n            case 'features': {\n                member.features = this._extractFeatures(node);\n                break;\n            }\n            case 'stat': {\n                const { attributes } = node;\n\n                if (!attributes) {\n                    break;\n                }\n                const { name } = attributes;\n\n                if (name === 'version') {\n                    member.version = attributes.value;\n                }\n                break;\n            }\n            }\n        }\n\n        if (from === this.myroomjid) {\n            const newRole\n                = member.affiliation === 'owner' ? member.role : 'none';\n\n            if (this.role !== newRole) {\n                this.role = newRole;\n                this.eventEmitter.emit(\n                    XMPPEvents.LOCAL_ROLE_CHANGED,\n                    this.role);\n            }\n            if (!this.joined) {\n                this.joined = true;\n                const now = this.connectionTimes['muc.joined']\n                    = window.performance.now();\n\n                logger.log('(TIME) MUC joined:\\t', now);\n\n                // set correct initial state of locked\n                if (this.password) {\n                    this.locked = true;\n                }\n\n                // Re-send presence in case any presence updates were added,\n                // but blocked from sending, during the join process.\n                // send the presence only if there was a modification after we had synced it\n                if (this.presenceUpdateTime >= this.presenceSyncTime) {\n                    this.sendPresence();\n                }\n\n                this.eventEmitter.emit(XMPPEvents.MUC_JOINED);\n\n                // Now let's check the disco-info to retrieve the\n                // meeting Id if any\n                !this.options.disableDiscoInfo && this.discoRoomInfo();\n            }\n        } else if (jid === undefined) {\n            logger.info('Ignoring member with undefined JID');\n        } else if (this.members[from] === undefined) {\n            // new participant\n            this.members[from] = member;\n            logger.log('entered', from, member);\n            hasStatusUpdate = member.status !== undefined;\n            hasVersionUpdate = member.version !== undefined;\n            if (member.isFocus) {\n                this._initFocus(from, member.features);\n            } else {\n                // identity is being added to member joined, so external\n                // services can be notified for that (currently identity is\n                // not used inside library)\n                this.eventEmitter.emit(\n                    XMPPEvents.MUC_MEMBER_JOINED,\n                    from,\n                    member.nick,\n                    member.role,\n                    member.isHiddenDomain,\n                    member.statsID,\n                    member.status,\n                    member.identity,\n                    member.botType,\n                    member.jid,\n                    member.features,\n                    member.isReplaceParticipant);\n\n                // we are reporting the status with the join\n                // so we do not want a second event about status update\n                hasStatusUpdate = false;\n            }\n        } else {\n            // Presence update for existing participant\n            // Watch role change:\n            const memberOfThis = this.members[from];\n\n            if (memberOfThis.role !== member.role) {\n                memberOfThis.role = member.role;\n                this.eventEmitter.emit(\n                    XMPPEvents.MUC_ROLE_CHANGED, from, member.role);\n            }\n\n            // affiliation changed\n            if (memberOfThis.affiliation !== member.affiliation) {\n                memberOfThis.affiliation = member.affiliation;\n            }\n\n            // fire event that botType had changed\n            if (memberOfThis.botType !== member.botType) {\n                memberOfThis.botType = member.botType;\n                this.eventEmitter.emit(\n                    XMPPEvents.MUC_MEMBER_BOT_TYPE_CHANGED,\n                    from,\n                    member.botType);\n            }\n\n            if (member.isFocus) {\n                // From time to time first few presences of the focus are not\n                // containing it's jid. That way we can mark later the focus\n                // member instead of not marking it at all and not starting the\n                // conference.\n                // FIXME: Maybe there is a better way to handle this issue. It\n                // seems there is some period of time in prosody that the\n                // configuration form is received but not applied. And if any\n                // participant joins during that period of time the first\n                // presence from the focus won't contain\n                // <item jid=\"focus...\" />.\n                // By default we are disabling the waiting for form submission in order to use the room\n                // and we had enabled by default that jids are public in the room ,\n                // so this case should not happen, if public jid is turned off we will receive the jid\n                // when we become moderator in the room\n                memberOfThis.isFocus = true;\n                this._initFocus(from, member.features);\n            }\n\n            // store the new display name\n            if (member.displayName) {\n                memberOfThis.displayName = member.displayName;\n            }\n\n            // update stored status message to be able to detect changes\n            if (memberOfThis.status !== member.status) {\n                hasStatusUpdate = true;\n                memberOfThis.status = member.status;\n            }\n\n            if (memberOfThis.version !== member.version) {\n                hasVersionUpdate = true;\n                memberOfThis.version = member.version;\n            }\n\n            if (!isEqual(memberOfThis.features, member.features)) {\n                memberOfThis.features = member.features;\n                this.eventEmitter.emit(XMPPEvents.PARTICIPANT_FEATURES_CHANGED, from, member.features);\n            }\n        }\n\n        // after we had fired member or room joined events, lets fire events\n        // for the rest info we got in presence\n        for (let i = 0; i < nodes.length; i++) {\n            const node = nodes[i];\n\n            switch (node.tagName) {\n            case 'nick':\n                if (!member.isFocus) {\n                    const displayName\n                        = this.xmpp.options.displayJids\n                            ? Strophe.getResourceFromJid(from)\n                            : member.nick;\n\n                    this.eventEmitter.emit(\n                        XMPPEvents.DISPLAY_NAME_CHANGED,\n                        from,\n                        displayName);\n                }\n                break;\n            case 'bridgeNotAvailable':\n                if (member.isFocus && !this.noBridgeAvailable) {\n                    this.noBridgeAvailable = true;\n                    this.eventEmitter.emit(XMPPEvents.BRIDGE_DOWN);\n                }\n                break;\n            case 'conference-properties':\n                if (member.isFocus) {\n                    const properties = {};\n\n                    for (let j = 0; j < node.children.length; j++) {\n                        const { attributes } = node.children[j];\n\n                        if (attributes && attributes.key) {\n                            properties[attributes.key] = attributes.value;\n                        }\n                    }\n\n                    this.eventEmitter.emit(\n                        XMPPEvents.CONFERENCE_PROPERTIES_CHANGED, properties);\n\n                    this.restartByTerminateSupported = properties['support-terminate-restart'] === 'true';\n                    logger.info(`Jicofo supports restart by terminate: ${this.supportsRestartByTerminate()}`);\n                }\n                break;\n            case 'transcription-status': {\n                const { attributes } = node;\n\n                if (!attributes) {\n                    break;\n                }\n\n                const { status } = attributes;\n\n                if (status && status !== this.transcriptionStatus) {\n                    this.transcriptionStatus = status;\n                    this.eventEmitter.emit(\n                        XMPPEvents.TRANSCRIPTION_STATUS_CHANGED,\n                        status\n                    );\n                }\n\n\n                break;\n            }\n            case 'call-control': {\n                const att = node.attributes;\n\n                if (!att) {\n                    break;\n                }\n                this.phoneNumber = att.phone || null;\n                this.phonePin = att.pin || null;\n                this.eventEmitter.emit(XMPPEvents.PHONE_NUMBER_CHANGED);\n                break;\n            }\n            default:\n                this.processNode(node, from);\n            }\n        }\n\n        // Trigger status message update if necessary\n        if (hasStatusUpdate) {\n            this.eventEmitter.emit(\n                XMPPEvents.PRESENCE_STATUS,\n                from,\n                member.status);\n        }\n\n        if (hasVersionUpdate) {\n            logger.info(`Received version for ${jid}: ${member.version}`);\n        }\n    }\n\n    /**\n     * Extracts the features from the presence.\n     * @param node the node to process.\n     * @return features the Set of features where extracted data is added.\n     * @private\n     */\n    _extractFeatures(node) {\n        const features = new Set();\n\n        for (let j = 0; j < node.children.length; j++) {\n            const { attributes } = node.children[j];\n\n            if (attributes && attributes.var) {\n                features.add(attributes.var);\n            }\n        }\n\n        return features;\n    }\n\n    /**\n     * Initialize some properties when the focus participant is verified.\n     * @param from jid of the focus\n     * @param features the features reported in jicofo presence\n     */\n    _initFocus(from, features) {\n        this.focusMucJid = from;\n        this.focusFeatures = features;\n    }\n\n    /**\n     * Sets the special listener to be used for \"command\"s whose name starts\n     * with \"jitsi_participant_\".\n     */\n    setParticipantPropertyListener(listener) {\n        this.participantPropertyListener = listener;\n    }\n\n    /**\n     * Checks if Jicofo supports restarting Jingle session after 'session-terminate'.\n     * @returns {boolean}\n     */\n    supportsRestartByTerminate() {\n        return this.restartByTerminateSupported;\n    }\n\n    /**\n     *\n     * @param node\n     * @param from\n     */\n    processNode(node, from) {\n        // make sure we catch all errors coming from any handler\n        // otherwise we can remove the presence handler from strophe\n        try {\n            let tagHandlers = this.presHandlers[node.tagName];\n\n            if (node.tagName.startsWith('jitsi_participant_')) {\n                tagHandlers = [ this.participantPropertyListener ];\n            }\n\n            if (tagHandlers) {\n                tagHandlers.forEach(handler => {\n                    handler(node, Strophe.getResourceFromJid(from), from);\n                });\n            }\n        } catch (e) {\n            GlobalOnErrorHandler.callErrorHandler(e);\n            logger.error(`Error processing:${node.tagName} node.`, e);\n        }\n    }\n\n    /**\n     * Send text message to the other participants in the conference\n     * @param message\n     * @param elementName\n     */\n    sendMessage(message, elementName) {\n        const msg = $msg({ to: this.roomjid,\n            type: 'groupchat' });\n\n        // We are adding the message in a packet extension. If this element\n        // is different from 'body', we add a custom namespace.\n        // e.g. for 'json-message' extension of message stanza.\n        if (elementName === 'body') {\n            msg.c(elementName, {}, message);\n        } else {\n            msg.c(elementName, { xmlns: 'http://jitsi.org/jitmeet' }, message);\n        }\n\n        this.connection.send(msg);\n        this.eventEmitter.emit(XMPPEvents.SENDING_CHAT_MESSAGE, message);\n    }\n\n    /* eslint-disable max-params */\n    /**\n     * Send private text message to another participant of the conference\n     * @param id id/muc resource of the receiver\n     * @param message\n     * @param elementName\n     */\n    sendPrivateMessage(id, message, elementName) {\n        const msg = $msg({ to: `${this.roomjid}/${id}`,\n            type: 'chat' });\n\n        // We are adding the message in packet. If this element is different\n        // from 'body', we add our custom namespace for the same.\n        // e.g. for 'json-message' message extension.\n        if (elementName === 'body') {\n            msg.c(elementName, message).up();\n        } else {\n            msg.c(elementName, { xmlns: 'http://jitsi.org/jitmeet' }, message)\n                .up();\n        }\n\n        this.connection.send(msg);\n        this.eventEmitter.emit(\n            XMPPEvents.SENDING_PRIVATE_CHAT_MESSAGE, message);\n    }\n    /* eslint-enable max-params */\n\n    /**\n     *\n     * @param subject\n     */\n    setSubject(subject) {\n        const msg = $msg({ to: this.roomjid,\n            type: 'groupchat' });\n\n        msg.c('subject', subject);\n        this.connection.send(msg);\n    }\n\n    /**\n     * Called when participant leaves.\n     * @param jid the jid of the participant that leaves\n     * @param skipEvents optional params to skip any events, including check\n     * whether this is the focus that left\n     */\n    onParticipantLeft(jid, skipEvents) {\n        delete this.lastPresences[jid];\n\n        if (skipEvents) {\n            return;\n        }\n\n        this.eventEmitter.emit(XMPPEvents.MUC_MEMBER_LEFT, jid);\n\n        this.moderator.onMucMemberLeft(jid);\n    }\n\n    /**\n     *\n     * @param pres\n     * @param from\n     */\n    onPresenceUnavailable(pres, from) {\n        // ignore presence\n        if ($(pres).find('>ignore[xmlns=\"http://jitsi.org/jitmeet/\"]').length) {\n            return true;\n        }\n\n        // room destroyed ?\n        const destroySelect = $(pres).find('>x[xmlns=\"http://jabber.org/protocol/muc#user\"]>destroy');\n\n        if (destroySelect.length) {\n            let reason;\n            const reasonSelect\n                = $(pres).find(\n                    '>x[xmlns=\"http://jabber.org/protocol/muc#user\"]'\n                        + '>destroy>reason');\n\n            if (reasonSelect.length) {\n                reason = reasonSelect.text();\n            }\n\n            this.eventEmitter.emit(XMPPEvents.MUC_DESTROYED, reason, destroySelect.attr('jid'));\n            this.connection.emuc.doLeave(this.roomjid);\n\n            return true;\n        }\n\n        // Status code 110 indicates that this notification is \"self-presence\".\n        const isSelfPresence\n            = $(pres)\n                .find(\n                    '>x[xmlns=\"http://jabber.org/protocol/muc#user\"]>'\n                        + 'status[code=\"110\"]')\n                .length;\n        const isKick\n            = $(pres)\n                .find(\n                    '>x[xmlns=\"http://jabber.org/protocol/muc#user\"]'\n                        + '>status[code=\"307\"]')\n                .length;\n        const membersKeys = Object.keys(this.members);\n        const isReplaceParticipant = $(pres).find('flip_device').length;\n\n        if (isKick) {\n            const actorSelect\n                = $(pres)\n                .find('>x[xmlns=\"http://jabber.org/protocol/muc#user\"]>item>actor');\n            let actorNick;\n\n            if (actorSelect.length) {\n                actorNick = actorSelect.attr('nick');\n            }\n\n            let reason;\n            const reasonSelect\n                = $(pres).find(\n                '>x[xmlns=\"http://jabber.org/protocol/muc#user\"]'\n                + '>item>reason');\n\n            if (reasonSelect.length) {\n                reason = reasonSelect.text();\n            }\n\n            // we first fire the kicked so we can show the participant\n            // who kicked, before notifying that participant left\n            // we fire kicked for us and for any participant kicked\n            this.eventEmitter.emit(\n                XMPPEvents.KICKED,\n                isSelfPresence,\n                actorNick,\n                Strophe.getResourceFromJid(from),\n                reason,\n                isReplaceParticipant);\n        }\n\n        if (isSelfPresence) {\n            // If the status code is 110 this means we're leaving and we would\n            // like to remove everyone else from our view, so we trigger the\n            // event.\n            membersKeys.forEach(jid => {\n                const member = this.members[jid];\n\n                delete this.members[jid];\n                this.onParticipantLeft(jid, member.isFocus);\n            });\n            this.connection.emuc.doLeave(this.roomjid);\n\n            // we fire muc_left only if this is not a kick,\n            // kick has both statuses 110 and 307.\n            if (!isKick) {\n                this.eventEmitter.emit(XMPPEvents.MUC_LEFT);\n            }\n        } else {\n            delete this.members[from];\n            this.onParticipantLeft(from, false);\n        }\n    }\n\n    /**\n     *\n     * @param msg\n     * @param from\n     */\n    onMessage(msg, from) {\n        const type = msg.getAttribute('type');\n\n        if (type === 'error') {\n            const errorMsg = $(msg).find('>error>text').text();\n\n            this.eventEmitter.emit(XMPPEvents.CHAT_ERROR_RECEIVED, errorMsg);\n\n            return true;\n        }\n\n        const txt = $(msg).find('>body').text();\n        const subject = $(msg).find('>subject');\n\n        if (subject.length) {\n            const subjectText = subject.text();\n\n            if (subjectText || subjectText === '') {\n                this.eventEmitter.emit(XMPPEvents.SUBJECT_CHANGED, subjectText);\n                logger.log(`Subject is changed to ${subjectText}`);\n            }\n        }\n\n        // xep-0203 delay\n        let stamp = $(msg).find('>delay').attr('stamp');\n\n        if (!stamp) {\n            // or xep-0091 delay, UTC timestamp\n            stamp = $(msg).find('>[xmlns=\"jabber:x:delay\"]').attr('stamp');\n\n            if (stamp) {\n                // the format is CCYYMMDDThh:mm:ss\n                const dateParts\n                    = stamp.match(/(\\d{4})(\\d{2})(\\d{2}T\\d{2}:\\d{2}:\\d{2})/);\n\n                stamp = `${dateParts[1]}-${dateParts[2]}-${dateParts[3]}Z`;\n            }\n        }\n\n        if (from === this.roomjid) {\n            let invite;\n\n            if ($(msg).find('>x[xmlns=\"http://jabber.org/protocol/muc#user\"]>status[code=\"104\"]').length) {\n                this.discoRoomInfo();\n            } else if ((invite = $(msg).find('>x[xmlns=\"http://jabber.org/protocol/muc#user\"]>invite'))\n                        && invite.length) {\n                const passwordSelect = $(msg).find('>x[xmlns=\"http://jabber.org/protocol/muc#user\"]>password');\n                let password;\n\n                if (passwordSelect && passwordSelect.length) {\n                    password = passwordSelect.text();\n                }\n\n                this.eventEmitter.emit(XMPPEvents.INVITE_MESSAGE_RECEIVED,\n                    from, invite.attr('from'), txt, password);\n            }\n        }\n\n        const jsonMessage = $(msg).find('>json-message').text();\n\n        if (jsonMessage) {\n            const parsedJson = this.xmpp.tryParseJSONAndVerify(jsonMessage);\n\n            // We emit this event if the message is a valid json, and is not\n            // delivered after a delay, i.e. stamp is undefined.\n            // e.g. - subtitles should not be displayed if delayed.\n            if (parsedJson && stamp === undefined) {\n                this.eventEmitter.emit(XMPPEvents.JSON_MESSAGE_RECEIVED,\n                    from, parsedJson);\n\n                return;\n            }\n        }\n\n        if (txt) {\n            if (type === 'chat') {\n                this.eventEmitter.emit(XMPPEvents.PRIVATE_MESSAGE_RECEIVED,\n                        from, txt, this.myroomjid, stamp);\n            } else if (type === 'groupchat') {\n                this.eventEmitter.emit(XMPPEvents.MESSAGE_RECEIVED,\n                        from, txt, this.myroomjid, stamp);\n            }\n        }\n    }\n\n    /**\n     *\n     * @param pres\n     * @param from\n     */\n    onPresenceError(pres, from) {\n        if ($(pres)\n                .find(\n                    '>error[type=\"auth\"]'\n                        + '>not-authorized['\n                        + 'xmlns=\"urn:ietf:params:xml:ns:xmpp-stanzas\"]')\n                .length) {\n            logger.log('on password required', from);\n            this.eventEmitter.emit(XMPPEvents.PASSWORD_REQUIRED);\n        } else if ($(pres)\n                .find(\n                    '>error[type=\"cancel\"]'\n                        + '>not-allowed['\n                        + 'xmlns=\"urn:ietf:params:xml:ns:xmpp-stanzas\"]')\n                .length) {\n            const toDomain = Strophe.getDomainFromJid(pres.getAttribute('to'));\n\n            if (toDomain === this.xmpp.options.hosts.anonymousdomain) {\n                // enter the room by replying with 'not-authorized'. This would\n                // result in reconnection from authorized domain.\n                // We're either missing Jicofo/Prosody config for anonymous\n                // domains or something is wrong.\n                this.eventEmitter.emit(XMPPEvents.ROOM_JOIN_ERROR);\n\n            } else {\n                logger.warn('onPresError ', pres);\n                this.eventEmitter.emit(\n                    XMPPEvents.ROOM_CONNECT_NOT_ALLOWED_ERROR);\n            }\n        } else if ($(pres).find('>error>service-unavailable').length) {\n            logger.warn('Maximum users limit for the room has been reached',\n                pres);\n            this.eventEmitter.emit(XMPPEvents.ROOM_MAX_USERS_ERROR);\n        } else if ($(pres)\n            .find(\n                '>error[type=\"auth\"]'\n                + '>registration-required['\n                + 'xmlns=\"urn:ietf:params:xml:ns:xmpp-stanzas\"]').length) {\n\n            // let's extract the lobby jid from the custom field\n            const lobbyRoomNode = $(pres).find('>lobbyroom');\n            let lobbyRoomJid;\n\n            if (lobbyRoomNode.length) {\n                lobbyRoomJid = lobbyRoomNode.text();\n            }\n\n            this.eventEmitter.emit(XMPPEvents.ROOM_CONNECT_MEMBERS_ONLY_ERROR, lobbyRoomJid);\n        } else {\n            logger.warn('onPresError ', pres);\n            this.eventEmitter.emit(XMPPEvents.ROOM_CONNECT_ERROR);\n        }\n    }\n\n    /**\n     *\n     * @param jid\n     * @param affiliation\n     */\n    setAffiliation(jid, affiliation) {\n        const grantIQ = $iq({\n            to: this.roomjid,\n            type: 'set'\n        })\n        .c('query', { xmlns: 'http://jabber.org/protocol/muc#admin' })\n        .c('item', {\n            affiliation,\n            nick: Strophe.getResourceFromJid(jid)\n        })\n        .c('reason').t(`Your affiliation has been changed to '${affiliation}'.`)\n        .up().up().up();\n\n        this.connection.sendIQ(\n            grantIQ,\n            result => logger.log('Set affiliation of participant with jid: ', jid, 'to', affiliation, result),\n            error => logger.log('Set affiliation of participant error: ', error));\n    }\n\n    /**\n     *\n     * @param jid\n     * @param reason\n     */\n    kick(jid, reason = 'You have been kicked.') {\n        const kickIQ = $iq({ to: this.roomjid,\n            type: 'set' })\n            .c('query', { xmlns: 'http://jabber.org/protocol/muc#admin' })\n            .c('item', { nick: Strophe.getResourceFromJid(jid),\n                role: 'none' })\n            .c('reason').t(reason).up().up().up();\n\n        this.connection.sendIQ(\n            kickIQ,\n            result => logger.log('Kick participant with jid: ', jid, result),\n            error => logger.log('Kick participant error: ', error));\n    }\n\n    /* eslint-disable max-params */\n\n    /**\n     *\n     * @param key\n     * @param onSuccess\n     * @param onError\n     * @param onNotSupported\n     */\n    lockRoom(key, onSuccess, onError, onNotSupported) {\n        // http://xmpp.org/extensions/xep-0045.html#roomconfig\n        this.connection.sendIQ(\n            $iq({\n                to: this.roomjid,\n                type: 'get'\n            })\n                .c('query', { xmlns: 'http://jabber.org/protocol/muc#owner' }),\n            res => {\n                if ($(res)\n                        .find(\n                            '>query>x[xmlns=\"jabber:x:data\"]'\n                                + '>field[var=\"muc#roomconfig_roomsecret\"]')\n                        .length) {\n                    const formsubmit\n                        = $iq({\n                            to: this.roomjid,\n                            type: 'set'\n                        })\n                            .c('query', {\n                                xmlns: 'http://jabber.org/protocol/muc#owner'\n                            });\n\n                    formsubmit.c('x', {\n                        xmlns: 'jabber:x:data',\n                        type: 'submit'\n                    });\n                    formsubmit\n                        .c('field', { 'var': 'FORM_TYPE' })\n                        .c('value')\n                        .t('http://jabber.org/protocol/muc#roomconfig')\n                        .up()\n                        .up();\n                    formsubmit\n                        .c('field', { 'var': 'muc#roomconfig_roomsecret' })\n                        .c('value')\n                        .t(key)\n                        .up()\n                        .up();\n                    formsubmit\n                        .c('field',\n                             { 'var': 'muc#roomconfig_passwordprotectedroom' })\n                        .c('value')\n                        .t(key === null || key.length === 0 ? '0' : '1')\n                        .up()\n                        .up();\n\n                    // if members only enabled\n                    if (this.membersOnlyEnabled) {\n                        formsubmit\n                            .c('field', { 'var': 'muc#roomconfig_membersonly' })\n                            .c('value')\n                            .t('true')\n                            .up()\n                            .up();\n                    }\n\n                    // Fixes a bug in prosody 0.9.+\n                    // https://prosody.im/issues/issue/373\n                    formsubmit\n                        .c('field', { 'var': 'muc#roomconfig_whois' })\n                        .c('value')\n                        .t('anyone')\n                        .up()\n                        .up();\n\n                    this.connection.sendIQ(\n                        formsubmit,\n                        () => {\n\n                            // we set the password in chat room so we can use it\n                            // later when dialing out\n                            this.password = key;\n                            onSuccess();\n                        },\n                        onError);\n                } else {\n                    onNotSupported();\n                }\n            },\n            onError);\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     * Turns off or on the members only config for the main room.\n     *\n     * @param {boolean} enabled - Whether to turn it on or off.\n     * @param onSuccess - optional callback.\n     * @param onError - optional callback.\n     */\n    setMembersOnly(enabled, onSuccess, onError) {\n        if (enabled && Object.values(this.members).filter(m => !m.isFocus).length) {\n            // first grant membership to all that are in the room\n            // currently there is a bug in prosody where it handles only the first item\n            // that's why we will send iq per member\n            Object.values(this.members).forEach(m => {\n                if (m.jid && !MEMBERS_AFFILIATIONS.includes(m.affiliation)) {\n                    this.xmpp.connection.sendIQ(\n                        $iq({\n                            to: this.roomjid,\n                            type: 'set' })\n                        .c('query', {\n                            xmlns: 'http://jabber.org/protocol/muc#admin' })\n                        .c('item', {\n                            'affiliation': 'member',\n                            'jid': m.jid\n                        }).up().up());\n                }\n            });\n        }\n\n        const errorCallback = onError ? onError : () => {}; // eslint-disable-line no-empty-function\n\n        this.xmpp.connection.sendIQ(\n            $iq({\n                to: this.roomjid,\n                type: 'get'\n            }).c('query', { xmlns: 'http://jabber.org/protocol/muc#owner' }),\n            res => {\n                if ($(res).find('>query>x[xmlns=\"jabber:x:data\"]>field[var=\"muc#roomconfig_membersonly\"]').length) {\n                    const formToSubmit\n                        = $iq({\n                            to: this.roomjid,\n                            type: 'set'\n                        }).c('query', { xmlns: 'http://jabber.org/protocol/muc#owner' });\n\n                    formToSubmit.c('x', {\n                        xmlns: 'jabber:x:data',\n                        type: 'submit'\n                    });\n                    formToSubmit\n                        .c('field', { 'var': 'FORM_TYPE' })\n                        .c('value')\n                        .t('http://jabber.org/protocol/muc#roomconfig')\n                        .up()\n                        .up();\n                    formToSubmit\n                        .c('field', { 'var': 'muc#roomconfig_membersonly' })\n                        .c('value')\n                        .t(enabled ? 'true' : 'false')\n                        .up()\n                        .up();\n\n                    // if room is locked from other participant or we are locking it\n                    if (this.locked) {\n                        formToSubmit\n                            .c('field',\n                                { 'var': 'muc#roomconfig_passwordprotectedroom' })\n                            .c('value')\n                            .t('1')\n                            .up()\n                            .up();\n                    }\n\n                    this.xmpp.connection.sendIQ(formToSubmit, onSuccess, errorCallback);\n                } else {\n                    errorCallback(new Error('Setting members only room not supported!'));\n                }\n            },\n            errorCallback);\n    }\n\n    /**\n     * Adds the key to the presence map, overriding any previous value.\n     * This method is used by jibri.\n     *\n     * @param key The key to add or replace.\n     * @param values The new values.\n     * @returns {boolean|null} <tt>true</tt> if the operation succeeded or <tt>false</tt> when no add or replce was\n     * performed as the value was already there.\n     * @deprecated Use 'addOrReplaceInPresence' instead. TODO: remove it from here and jibri.\n     */\n    addToPresence(key, values) {\n        return this.addOrReplaceInPresence(key, values);\n    }\n\n    /**\n     * Adds the key to the presence map, overriding any previous value.\n     * @param key The key to add or replace.\n     * @param values The new values.\n     * @returns {boolean|null} <tt>true</tt> if the operation succeeded or <tt>false</tt> when no add or replace was\n     * performed as the value was already there.\n     */\n    addOrReplaceInPresence(key, values) {\n        values.tagName = key;\n\n        const matchingNodes = this.presMap.nodes.filter(node => key === node.tagName);\n\n        // if we have found just one, let's check is it the same\n        if (matchingNodes.length === 1 && isEqual(matchingNodes[0], values)) {\n            return false;\n        }\n\n        this.removeFromPresence(key);\n        this.presMap.nodes.push(values);\n        this.presenceUpdateTime = Date.now();\n\n        return true;\n    }\n\n    /**\n     * Retrieves a value from the presence map.\n     *\n     * @param {string} key - The key to find the value for.\n     * @returns {Object?}\n     */\n    getFromPresence(key) {\n        return this.presMap.nodes.find(node => key === node.tagName);\n    }\n\n    /**\n     * Removes a key from the presence map.\n     * @param key\n     */\n    removeFromPresence(key) {\n        const nodes = this.presMap.nodes.filter(node => key !== node.tagName);\n\n        this.presMap.nodes = nodes;\n        this.presenceUpdateTime = Date.now();\n    }\n\n    /**\n     *\n     * @param name\n     * @param handler\n     */\n    addPresenceListener(name, handler) {\n        if (typeof handler !== 'function') {\n            throw new Error('\"handler\" is not a function');\n        }\n        let tagHandlers = this.presHandlers[name];\n\n        if (!tagHandlers) {\n            this.presHandlers[name] = tagHandlers = [];\n        }\n        if (tagHandlers.indexOf(handler) === -1) {\n            tagHandlers.push(handler);\n        } else {\n            logger.warn(\n                `Trying to add the same handler more than once for: ${name}`);\n        }\n    }\n\n    /**\n     *\n     * @param name\n     * @param handler\n     */\n    removePresenceListener(name, handler) {\n        const tagHandlers = this.presHandlers[name];\n        const handlerIdx = tagHandlers ? tagHandlers.indexOf(handler) : -1;\n\n        // eslint-disable-next-line no-negated-condition\n        if (handlerIdx !== -1) {\n            tagHandlers.splice(handlerIdx, 1);\n        } else {\n            logger.warn(`Handler for: ${name} was not registered`);\n        }\n    }\n\n    /**\n     * Checks if the user identified by given <tt>mucJid</tt> is the conference\n     * focus.\n     * @param mucJid the full MUC address of the user to be checked.\n     * @returns {boolean|null} <tt>true</tt> if MUC user is the conference focus\n     * or <tt>false</tt> if is not. When given <tt>mucJid</tt> does not exist in\n     * the MUC then <tt>null</tt> is returned.\n     */\n    isFocus(mucJid) {\n        const member = this.members[mucJid];\n\n        if (member) {\n            return member.isFocus;\n        }\n\n        return null;\n    }\n\n    /**\n     *\n     */\n    isModerator() {\n        return this.role === 'moderator';\n    }\n\n    /**\n     *\n     * @param peerJid\n     */\n    getMemberRole(peerJid) {\n        if (this.members[peerJid]) {\n            return this.members[peerJid].role;\n        }\n\n        return null;\n    }\n\n    /**\n     *\n     * @param mute\n     * @param callback\n     */\n    setVideoMute(mute, callback) {\n        this.sendVideoInfoPresence(mute);\n        if (callback) {\n            callback(mute);\n        }\n    }\n\n    /**\n     *\n     * @param mute\n     * @param callback\n     */\n    setAudioMute(mute, callback) {\n        return this.sendAudioInfoPresence(mute, callback);\n    }\n\n    /**\n     *\n     * @param mute\n     */\n    addAudioInfoToPresence(mute) {\n        const audioMutedTagName = 'audiomuted';\n\n        // we skip adding it as muted is default value\n        if (mute && !this.getFromPresence(audioMutedTagName)) {\n            return false;\n        }\n\n        return this.addOrReplaceInPresence(\n            audioMutedTagName,\n            {\n                value: mute.toString()\n            });\n    }\n\n    /**\n     *\n     * @param mute\n     * @param callback\n     */\n    sendAudioInfoPresence(mute, callback) {\n        // FIXME resend presence on CONNECTED\n        this.addAudioInfoToPresence(mute) && this.sendPresence();\n        if (callback) {\n            callback();\n        }\n    }\n\n    /**\n     *\n     * @param mute\n     */\n    addVideoInfoToPresence(mute) {\n        const videoMutedTagName = 'videomuted';\n\n        // we skip adding it as muted is default value\n        if (mute && !this.getFromPresence(videoMutedTagName)) {\n            return false;\n        }\n\n        return this.addOrReplaceInPresence(\n            videoMutedTagName,\n            {\n                value: mute.toString()\n            });\n    }\n\n    /**\n     *\n     * @param mute\n     */\n    sendVideoInfoPresence(mute) {\n        this.addVideoInfoToPresence(mute) && this.sendPresence();\n    }\n\n    /**\n     * Obtains the info about given media advertised in the MUC presence of\n     * the participant identified by the given endpoint JID.\n     * @param {string} endpointId the endpoint ID mapped to the participant\n     * which corresponds to MUC nickname.\n     * @param {MediaType} mediaType the type of the media for which presence\n     * info will be obtained.\n     * @return {PeerMediaInfo} presenceInfo an object with media presence\n     * info or <tt>null</tt> either if there is no presence available or if\n     * the media type given is invalid.\n     */\n    getMediaPresenceInfo(endpointId, mediaType) {\n        // Will figure out current muted status by looking up owner's presence\n        const pres = this.lastPresences[`${this.roomjid}/${endpointId}`];\n\n        if (!pres) {\n            // No presence available\n            return null;\n        }\n        const data = {\n            muted: true, // muted by default\n            videoType: undefined // no video type by default\n        };\n        let mutedNode = null;\n\n        if (mediaType === MediaType.AUDIO) {\n            mutedNode = filterNodeFromPresenceJSON(pres, 'audiomuted');\n        } else if (mediaType === MediaType.VIDEO) {\n            mutedNode = filterNodeFromPresenceJSON(pres, 'videomuted');\n            const codecTypeNode = filterNodeFromPresenceJSON(pres, 'jitsi_participant_codecType');\n            const videoTypeNode = filterNodeFromPresenceJSON(pres, 'videoType');\n\n            if (videoTypeNode.length > 0) {\n                data.videoType = videoTypeNode[0].value;\n            }\n            if (codecTypeNode.length > 0) {\n                data.codecType = codecTypeNode[0].value;\n            }\n        } else {\n            logger.error(`Unsupported media type: ${mediaType}`);\n\n            return null;\n        }\n\n        if (mutedNode.length > 0) {\n            data.muted = mutedNode[0].value === 'true';\n        }\n\n        return data;\n    }\n\n    /**\n     * Returns true if the SIP calls are supported and false otherwise\n     */\n    isSIPCallingSupported() {\n        if (this.moderator) {\n            return this.moderator.isSipGatewayEnabled();\n        }\n\n        return false;\n    }\n\n    /**\n     * Dials a number.\n     * @param number the number\n     */\n    dial(number) {\n        return this.connection.rayo.dial(number, 'fromnumber',\n            Strophe.getBareJidFromJid(this.myroomjid), this.password,\n            this.focusMucJid);\n    }\n\n    /**\n     * Hangup an existing call\n     */\n    hangup() {\n        return this.connection.rayo.hangup();\n    }\n\n    /**\n     *\n     * @returns {Lobby}\n     */\n    getLobby() {\n        return this.lobby;\n    }\n\n    /**\n     * @returns {AVModeration}\n     */\n    getAVModeration() {\n        return this.avModeration;\n    }\n\n\n    /**\n     * Returns the phone number for joining the conference.\n     */\n    getPhoneNumber() {\n        return this.phoneNumber;\n    }\n\n    /**\n     * Returns the pin for joining the conference with phone.\n     */\n    getPhonePin() {\n        return this.phonePin;\n    }\n\n    /**\n     * Returns the meeting unique ID if any came from backend.\n     *\n     * @returns {string} - The meeting ID.\n     */\n    getMeetingId() {\n        return this.meetingId;\n    }\n\n    /**\n     * Mutes remote participant.\n     * @param jid of the participant\n     * @param mute\n     * @param mediaType\n     */\n    muteParticipant(jid, mute, mediaType) {\n        logger.info('set mute', mute);\n        const iqToFocus = $iq(\n            { to: this.focusMucJid,\n                type: 'set' })\n            .c('mute', {\n                xmlns: `http://jitsi.org/jitmeet/${mediaType}`,\n                jid\n            })\n            .t(mute.toString())\n            .up();\n\n        this.connection.sendIQ(\n            iqToFocus,\n            result => logger.log('set mute', result),\n            error => logger.log('set mute error', error));\n    }\n\n    /**\n     * TODO: Document\n     * @param iq\n     */\n    onMute(iq) {\n        const from = iq.getAttribute('from');\n\n        if (from !== this.focusMucJid) {\n            logger.warn('Ignored mute from non focus peer');\n\n            return;\n        }\n        const mute = $(iq).find('mute');\n\n        if (mute.length && mute.text() === 'true') {\n            this.eventEmitter.emit(XMPPEvents.AUDIO_MUTED_BY_FOCUS, mute.attr('actor'));\n        } else {\n            // XXX Why do we support anything but muting? Why do we encode the\n            // value in the text of the element? Why do we use a separate XML\n            // namespace?\n            logger.warn('Ignoring a mute request which does not explicitly '\n                + 'specify a positive mute command.');\n        }\n    }\n\n    /**\n     * TODO: Document\n     * @param iq\n     */\n    onMuteVideo(iq) {\n        const from = iq.getAttribute('from');\n\n        if (from !== this.focusMucJid) {\n            logger.warn('Ignored mute from non focus peer');\n\n            return;\n        }\n        const mute = $(iq).find('mute');\n\n        if (mute.length && mute.text() === 'true') {\n            this.eventEmitter.emit(XMPPEvents.VIDEO_MUTED_BY_FOCUS, mute.attr('actor'));\n        } else {\n            // XXX Why do we support anything but muting? Why do we encode the\n            // value in the text of the element? Why do we use a separate XML\n            // namespace?\n            logger.warn('Ignoring a mute request which does not explicitly '\n                + 'specify a positive mute command.');\n        }\n    }\n\n    /**\n     * Clean any listeners or resources, executed on leaving.\n     */\n    clean() {\n        this._removeConnListeners.forEach(remove => remove());\n        this._removeConnListeners = [];\n\n        this.joined = false;\n    }\n\n    /**\n     * Leaves the room. Closes the jingle session.\n     * @returns {Promise} which is resolved if XMPPEvents.MUC_LEFT is received\n     * less than 5s after sending presence unavailable. Otherwise the promise is\n     * rejected.\n     */\n    leave() {\n        return new Promise((resolve, reject) => {\n            const timeout = setTimeout(() => onMucLeft(true), 5000);\n            const eventEmitter = this.eventEmitter;\n\n            this.clean();\n\n            /**\n             *\n             * @param doReject\n             */\n            function onMucLeft(doReject = false) {\n                eventEmitter.removeListener(XMPPEvents.MUC_LEFT, onMucLeft);\n                clearTimeout(timeout);\n                if (doReject) {\n                    // the timeout expired\n                    reject(new Error('The timeout for the confirmation about '\n                        + 'leaving the room expired.'));\n                } else {\n                    resolve();\n                }\n            }\n            eventEmitter.on(XMPPEvents.MUC_LEFT, onMucLeft);\n            this.doLeave();\n        });\n    }\n}\n\n/* eslint-enable newline-per-chained-call */\n","import { getLogger } from 'jitsi-meet-logger';\nimport { $msg } from 'strophe.js';\n\nimport * as MediaType from '../../service/RTC/MediaType';\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\n\nconst logger = getLogger(__filename);\n\n/**\n * The AVModeration logic.\n */\nexport default class AVModeration {\n\n    /**\n     * Constructs AV moderation room.\n     *\n     * @param {ChatRoom} room the main room.\n     */\n    constructor(room) {\n        this._xmpp = room.xmpp;\n\n        this._mainRoom = room;\n\n        this._momderationEnabledByType = {\n            [MediaType.AUDIO]: false,\n            [MediaType.VIDEO]: false\n        };\n\n        this._whitelistAudio = [];\n        this._whitelistVideo = [];\n\n        this._xmpp.addListener(XMPPEvents.AV_MODERATION_RECEIVED, this._onMessage.bind(this));\n    }\n\n    /**\n     * Whether AV moderation is supported on backend.\n     *\n     * @returns {boolean} whether AV moderation is supported on backend.\n     */\n    isSupported() {\n        return Boolean(this._xmpp.avModerationComponentAddress);\n    }\n\n    /**\n     * Enables or disables AV Moderation by sending a msg with command to the component.\n     */\n    enable(state, mediaType) {\n        if (!this.isSupported() || !this._mainRoom.isModerator()) {\n            logger.error(`Cannot enable:${state} AV moderation supported:${this.isSupported()}, \n                moderator:${this._mainRoom.isModerator()}`);\n\n            return;\n        }\n\n        if (state === this._momderationEnabledByType[mediaType]) {\n            logger.warn(`Moderation already in state:${state} for mediaType:${mediaType}`);\n\n            return;\n        }\n\n        // send the enable/disable message\n        const msg = $msg({ to: this._xmpp.avModerationComponentAddress });\n\n        msg.c('av_moderation', {\n            enable: state,\n            mediaType\n        }).up();\n\n        this._xmpp.connection.send(msg);\n    }\n\n    /**\n     * Approves that a participant can unmute by sending a msg with its jid to the component.\n     */\n    approve(mediaType, jid) {\n        if (!this.isSupported() || !this._mainRoom.isModerator()) {\n            logger.error(`Cannot approve in AV moderation supported:${this.isSupported()}, \n                moderator:${this._mainRoom.isModerator()}`);\n\n            return;\n        }\n\n        // send a message to whitelist the jid and approve it to unmute\n        const msg = $msg({ to: this._xmpp.avModerationComponentAddress });\n\n        msg.c('av_moderation', {\n            mediaType,\n            jidToWhitelist: jid }).up();\n\n        this._xmpp.connection.send(msg);\n    }\n\n    /**\n     * Receives av_moderation parsed messages as json.\n     * @param obj the parsed json content of the message to process.\n     * @private\n     */\n    _onMessage(obj) {\n        const newWhitelists = obj.whitelists;\n\n        if (newWhitelists) {\n            const fireEventApprovedJids = (mediaType, oldList, newList) => {\n                newList.filter(x => !oldList.includes(x))\n                    .forEach(jid => this._xmpp.eventEmitter\n                        .emit(XMPPEvents.AV_MODERATION_PARTICIPANT_APPROVED, mediaType, jid));\n            };\n\n            if (newWhitelists[MediaType.AUDIO]) {\n                fireEventApprovedJids(MediaType.AUDIO, this._whitelistAudio, newWhitelists[MediaType.AUDIO]);\n            }\n\n            if (newWhitelists[MediaType.VIDEO]) {\n                fireEventApprovedJids(MediaType.VIDEO, this._whitelistVideo, newWhitelists[MediaType.VIDEO]);\n            }\n        } else if (obj.enabled !== undefined && this._momderationEnabledByType[obj.mediaType] !== obj.enabled) {\n            this._momderationEnabledByType[obj.mediaType] = obj.enabled;\n\n            this._xmpp.eventEmitter.emit(XMPPEvents.AV_MODERATION_CHANGED, obj.enabled, obj.mediaType, obj.actor);\n        } else if (obj.approved) {\n            this._xmpp.eventEmitter.emit(XMPPEvents.AV_MODERATION_APPROVED, obj.mediaType);\n        }\n    }\n}\n","import { getLogger } from 'jitsi-meet-logger';\nimport { $msg, Strophe } from 'strophe.js';\n\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\n\nconst logger = getLogger(__filename);\n\n/**\n * The command type for updating a lobby participant's e-mail address.\n *\n * @type {string}\n */\nconst EMAIL_COMMAND = 'email';\n\n/**\n * The Lobby room implementation. Setting a room to members only, joining the lobby room\n * approving or denying access to participants from the lobby room.\n */\nexport default class Lobby {\n\n    /**\n     * Constructs lobby room.\n     *\n     * @param {ChatRoom} room the main room.\n     */\n    constructor(room) {\n        this.xmpp = room.xmpp;\n        this.mainRoom = room;\n\n        const maybeJoinLobbyRoom = this._maybeJoinLobbyRoom.bind(this);\n\n        this.mainRoom.addEventListener(\n            XMPPEvents.LOCAL_ROLE_CHANGED,\n            maybeJoinLobbyRoom);\n\n        this.mainRoom.addEventListener(\n            XMPPEvents.MUC_MEMBERS_ONLY_CHANGED,\n            maybeJoinLobbyRoom);\n\n        this.mainRoom.addEventListener(\n            XMPPEvents.ROOM_CONNECT_MEMBERS_ONLY_ERROR,\n            jid => {\n                this.lobbyRoomJid = jid;\n            });\n    }\n\n    /**\n     * Whether lobby is supported on backend.\n     *\n     * @returns {boolean} whether lobby is supported on backend.\n     */\n    isSupported() {\n        return this.xmpp.lobbySupported;\n    }\n\n    /**\n     * Enables lobby by setting the main room to be members only and joins the lobby chat room.\n     *\n     * @returns {Promise}\n     */\n    enable() {\n        if (!this.isSupported()) {\n            return Promise.reject(new Error('Lobby not supported!'));\n        }\n\n        return new Promise((resolve, reject) => {\n            this.mainRoom.setMembersOnly(true, resolve, reject);\n        });\n    }\n\n    /**\n     * Disable lobby by setting the main room to be non members only and levaes the lobby chat room if joined.\n     *\n     * @returns {void}\n     */\n    disable() {\n        if (!this.isSupported() || !this.mainRoom.isModerator()\n                || !this.lobbyRoom || !this.mainRoom.membersOnlyEnabled) {\n            return;\n        }\n\n        this.mainRoom.setMembersOnly(false);\n    }\n\n    /**\n     * Leaves the lobby room.\n     * @private\n     */\n    _leaveLobbyRoom() {\n        if (this.lobbyRoom) {\n            this.lobbyRoom.leave()\n                .then(() => {\n                    this.lobbyRoom = undefined;\n                    logger.info('Lobby room left!');\n                })\n                .catch(() => {}); // eslint-disable-line no-empty-function\n        }\n    }\n\n    /**\n     * We had received a jid for the lobby room.\n     *\n     * @param jid the lobby room jid to join.\n     */\n    setLobbyRoomJid(jid) {\n        this.lobbyRoomJid = jid;\n    }\n\n    /**\n     * Checks the state of mainRoom, lobbyRoom and current user role to decide whether to join lobby room.\n     * @private\n     */\n    _maybeJoinLobbyRoom() {\n        if (!this.isSupported()) {\n            return;\n        }\n\n        const isModerator = this.mainRoom.joined && this.mainRoom.isModerator();\n\n        if (isModerator && this.mainRoom.membersOnlyEnabled && !this.lobbyRoom) {\n            // join the lobby\n            this.join()\n                .then(() => logger.info('Joined lobby room'))\n                .catch(e => logger.error('Failed joining lobby', e));\n        }\n    }\n\n    /**\n     * Joins a lobby room setting display name and eventually avatar(using the email provided).\n     *\n     * @param {string} username is required.\n     * @param {string} email is optional.\n     * @returns {Promise} resolves once we join the room.\n     */\n    join(displayName, email) {\n        const isModerator = this.mainRoom.joined && this.mainRoom.isModerator();\n\n        if (!this.lobbyRoomJid) {\n            return Promise.reject(new Error('Missing lobbyRoomJid, cannot join lobby room.'));\n        }\n\n        const roomName = Strophe.getNodeFromJid(this.lobbyRoomJid);\n        const customDomain = Strophe.getDomainFromJid(this.lobbyRoomJid);\n\n        this.lobbyRoom = this.xmpp.createRoom(\n            roomName, {\n                customDomain,\n                disableDiscoInfo: true,\n                disableFocus: true,\n                enableLobby: false\n            }\n        );\n\n        if (displayName) {\n            // remove previously set nickname\n            this.lobbyRoom.addOrReplaceInPresence('nick', {\n                attributes: { xmlns: 'http://jabber.org/protocol/nick' },\n                value: displayName\n            });\n        }\n\n        if (isModerator) {\n            this.lobbyRoom.addPresenceListener(EMAIL_COMMAND, (node, from) => {\n                this.mainRoom.eventEmitter.emit(XMPPEvents.MUC_LOBBY_MEMBER_UPDATED, from, { email: node.value });\n            });\n            this.lobbyRoom.addEventListener(\n                XMPPEvents.MUC_MEMBER_JOINED,\n                // eslint-disable-next-line max-params\n                (from, nick, role, isHiddenDomain, statsID, status, identity, botType, jid) => {\n                    // we need to ignore joins on lobby for participants that are already in the main room\n                    if (Object.values(this.mainRoom.members).find(m => m.jid === jid)) {\n                        return;\n                    }\n\n                    // we emit the new event on the main room so we can propagate\n                    // events to the conference\n                    this.mainRoom.eventEmitter.emit(\n                        XMPPEvents.MUC_LOBBY_MEMBER_JOINED,\n                        Strophe.getResourceFromJid(from),\n                        nick,\n                        identity ? identity.avatar : undefined\n                    );\n                });\n            this.lobbyRoom.addEventListener(\n                XMPPEvents.MUC_MEMBER_LEFT, from => {\n                    // we emit the new event on the main room so we can propagate\n                    // events to the conference\n                    this.mainRoom.eventEmitter.emit(\n                        XMPPEvents.MUC_LOBBY_MEMBER_LEFT,\n                        Strophe.getResourceFromJid(from)\n                    );\n                });\n            this.lobbyRoom.addEventListener(\n                XMPPEvents.MUC_DESTROYED,\n                () => {\n                    // let's make sure we emit that all lobby users had left\n                    Object.keys(this.lobbyRoom.members)\n                        .forEach(j => this.mainRoom.eventEmitter.emit(\n                            XMPPEvents.MUC_LOBBY_MEMBER_LEFT, Strophe.getResourceFromJid(j)));\n\n                    this.lobbyRoom.clean();\n\n                    this.lobbyRoom = undefined;\n                    logger.info('Lobby room left(destroyed)!');\n                });\n        } else {\n            // this should only be handled by those waiting in lobby\n            this.lobbyRoom.addEventListener(XMPPEvents.KICKED, isSelfPresence => {\n                if (isSelfPresence) {\n                    this.mainRoom.eventEmitter.emit(XMPPEvents.MUC_DENIED_ACCESS);\n\n                    this.lobbyRoom.clean();\n\n                    return;\n                }\n            });\n\n            // As there is still reference of the main room\n            // the invite will be detected and addressed to its eventEmitter, even though we are not in it\n            // the invite message should be received directly to the xmpp conn in general\n            this.mainRoom.addEventListener(\n                XMPPEvents.INVITE_MESSAGE_RECEIVED,\n                (roomJid, from, txt, invitePassword) => {\n                    logger.debug(`Received approval to join ${roomJid} ${from} ${txt}`);\n                    if (roomJid === this.mainRoom.roomjid) {\n                        // we are now allowed let's join and leave lobby\n                        this.mainRoom.join(invitePassword);\n\n                        this._leaveLobbyRoom();\n                    }\n                });\n            this.lobbyRoom.addEventListener(\n                XMPPEvents.MUC_DESTROYED,\n                (reason, jid) => {\n                    // we are receiving the jid of the main room\n                    // means we are invited to join, maybe lobby was disabled\n                    if (jid) {\n                        this.mainRoom.join();\n\n                        return;\n                    }\n\n                    this.lobbyRoom.clean();\n\n                    this.mainRoom.eventEmitter.emit(XMPPEvents.MUC_DESTROYED, reason);\n                });\n\n            // If participant retries joining shared password while waiting in the lobby\n            // and succeeds make sure we leave lobby\n            this.mainRoom.addEventListener(\n                XMPPEvents.MUC_JOINED,\n                () => {\n                    this._leaveLobbyRoom();\n                });\n        }\n\n        return new Promise((resolve, reject) => {\n            this.lobbyRoom.addEventListener(XMPPEvents.MUC_JOINED, () => {\n                resolve();\n\n                // send our email, as we do not handle this on initial presence we need a second one\n                if (email && !isModerator) {\n                    this.lobbyRoom.addOrReplaceInPresence(EMAIL_COMMAND, { value: email })\n                        && this.lobbyRoom.sendPresence();\n                }\n            });\n            this.lobbyRoom.addEventListener(XMPPEvents.ROOM_JOIN_ERROR, reject);\n            this.lobbyRoom.addEventListener(XMPPEvents.ROOM_CONNECT_NOT_ALLOWED_ERROR, reject);\n            this.lobbyRoom.addEventListener(XMPPEvents.ROOM_CONNECT_ERROR, reject);\n\n            this.lobbyRoom.join();\n        });\n\n    }\n\n    /**\n     * Should be possible only for moderators.\n     * @param id\n     */\n    denyAccess(id) {\n        if (!this.isSupported() || !this.mainRoom.isModerator()) {\n            return;\n        }\n\n        const jid = Object.keys(this.lobbyRoom.members)\n            .find(j => Strophe.getResourceFromJid(j) === id);\n\n        if (jid) {\n            this.lobbyRoom.kick(jid);\n        } else {\n            logger.error(`Not found member for ${id} in lobby room.`);\n        }\n    }\n\n    /**\n     * Should be possible only for moderators.\n     * @param id\n     */\n    approveAccess(id) {\n        if (!this.isSupported() || !this.mainRoom.isModerator()) {\n            return;\n        }\n\n        const memberRoomJid = Object.keys(this.lobbyRoom.members)\n            .find(j => Strophe.getResourceFromJid(j) === id);\n\n        if (memberRoomJid) {\n            const jid = this.lobbyRoom.members[memberRoomJid].jid;\n            const msgToSend\n                = $msg({ to: this.mainRoom.roomjid })\n                    .c('x', { xmlns: 'http://jabber.org/protocol/muc#user' })\n                    .c('invite', { to: jid });\n\n            this.xmpp.connection.sendIQ(msgToSend,\n                () => { }, // eslint-disable-line no-empty-function\n                e => {\n                    logger.error(`Error sending invite for ${jid}`, e);\n                });\n        } else {\n            logger.error(`Not found member for ${memberRoomJid} in lobby room.`);\n        }\n    }\n}\n","/* global $, Promise */\n\nimport { getLogger } from 'jitsi-meet-logger';\nimport { $iq, Strophe } from 'strophe.js';\n\nimport Settings from '../settings/Settings';\n\nconst AuthenticationEvents\n    = require('../../service/authentication/AuthenticationEvents');\nconst XMPPEvents = require('../../service/xmpp/XMPPEvents');\nconst GlobalOnErrorHandler = require('../util/GlobalOnErrorHandler');\n\nconst logger = getLogger(__filename);\n\n/**\n *\n * @param step\n */\nfunction createExpBackoffTimer(step) {\n    let count = 1;\n\n    return function(reset) {\n        // Reset call\n        if (reset) {\n            count = 1;\n\n            return;\n        }\n\n        // Calculate next timeout\n        const timeout = Math.pow(2, count - 1);\n\n        count += 1;\n\n        return timeout * step;\n    };\n}\n\n/* eslint-disable max-params */\n\n/**\n *\n * @param roomName\n * @param xmpp\n * @param emitter\n * @param options\n */\nexport default function Moderator(roomName, xmpp, emitter, options) {\n    this.roomName = roomName;\n    this.xmppService = xmpp;\n    this.getNextTimeout = createExpBackoffTimer(1000);\n    this.getNextErrorTimeout = createExpBackoffTimer(1000);\n\n    // External authentication stuff\n    this.externalAuthEnabled = false;\n    this.options = options;\n\n    // Whether SIP gateway (jigasi) support is enabled. This is set\n    // based on conference properties received in presence.\n    this.sipGatewayEnabled = false;\n\n    this.eventEmitter = emitter;\n\n    this.connection = this.xmppService.connection;\n\n    // FIXME: Message listener that talks to POPUP window\n    /**\n     *\n     * @param event\n     */\n    function listener(event) {\n        if (event.data && event.data.sessionId) {\n            if (event.origin !== window.location.origin) {\n                logger.warn(\n                    `Ignoring sessionId from different origin: ${\n                        event.origin}`);\n\n                return;\n            }\n            Settings.sessionId = event.data.sessionId;\n\n            // After popup is closed we will authenticate\n        }\n    }\n\n    // Register\n    if (window.addEventListener) {\n        window.addEventListener('message', listener, false);\n    } else {\n        window.attachEvent('onmessage', listener);\n    }\n}\n\n/* eslint-enable max-params */\n\nModerator.prototype.isExternalAuthEnabled = function() {\n    return this.externalAuthEnabled;\n};\n\nModerator.prototype.isSipGatewayEnabled = function() {\n    return this.sipGatewayEnabled;\n};\n\nModerator.prototype.onMucMemberLeft = function(jid) {\n    logger.info(`Someone left is it focus ? ${jid}`);\n    const resource = Strophe.getResourceFromJid(jid);\n\n    if (resource === 'focus') {\n        logger.info(\n            'Focus has left the room - leaving conference');\n        this.eventEmitter.emit(XMPPEvents.FOCUS_LEFT);\n    }\n};\n\nModerator.prototype.setFocusUserJid = function(focusJid) {\n    if (!this.focusUserJid) {\n        this.focusUserJid = focusJid;\n        logger.info(`Focus jid set to:  ${this.focusUserJid}`);\n    }\n};\n\nModerator.prototype.getFocusUserJid = function() {\n    return this.focusUserJid;\n};\n\nModerator.prototype.getFocusComponent = function() {\n    // Get focus component address\n    let focusComponent = this.options.connection.hosts.focus;\n\n    // If not specified use default:  'focus.domain'\n\n    if (!focusComponent) {\n        focusComponent = `focus.${this.options.connection.hosts.domain}`;\n    }\n\n    return focusComponent;\n};\n\nModerator.prototype.createConferenceIq = function() {\n    // Generate create conference IQ\n    const elem = $iq({ to: this.getFocusComponent(),\n        type: 'set' });\n\n    // Session Id used for authentication\n    const { sessionId } = Settings;\n    const machineUID = Settings.machineId;\n    const config = this.options.conference;\n\n    logger.info(`Session ID: ${sessionId} machine UID: ${machineUID}`);\n\n    elem.c('conference', {\n        xmlns: 'http://jitsi.org/protocol/focus',\n        room: this.roomName,\n        'machine-uid': machineUID\n    });\n\n    if (sessionId) {\n        elem.attrs({ 'session-id': sessionId });\n    }\n\n    elem.c(\n        'property', {\n            name: 'disableRtx',\n            value: Boolean(config.disableRtx)\n        }).up();\n\n    if (config.audioPacketDelay !== undefined) {\n        elem.c(\n            'property', {\n                name: 'audioPacketDelay',\n                value: config.audioPacketDelay\n            }).up();\n    }\n    if (config.startBitrate) {\n        elem.c(\n            'property', {\n                name: 'startBitrate',\n                value: config.startBitrate\n            }).up();\n    }\n    if (config.minBitrate) {\n        elem.c(\n            'property', {\n                name: 'minBitrate',\n                value: config.minBitrate\n            }).up();\n    }\n\n    if (this.options.conference.startAudioMuted !== undefined) {\n        elem.c(\n            'property', {\n                name: 'startAudioMuted',\n                value: this.options.conference.startAudioMuted\n            }).up();\n    }\n    if (this.options.conference.startVideoMuted !== undefined) {\n        elem.c(\n            'property', {\n                name: 'startVideoMuted',\n                value: this.options.conference.startVideoMuted\n            }).up();\n    }\n    elem.up();\n\n    return elem;\n};\n\n\nModerator.prototype.parseSessionId = function(resultIq) {\n    // eslint-disable-next-line newline-per-chained-call\n    const sessionId = $(resultIq).find('conference').attr('session-id');\n\n    if (sessionId) {\n        logger.info(`Received sessionId:  ${sessionId}`);\n        Settings.sessionId = sessionId;\n    }\n};\n\nModerator.prototype.parseConfigOptions = function(resultIq) {\n    // eslint-disable-next-line newline-per-chained-call\n    this.setFocusUserJid($(resultIq).find('conference').attr('focusjid'));\n\n    const authenticationEnabled\n        = $(resultIq).find(\n            '>conference>property'\n            + '[name=\\'authentication\\'][value=\\'true\\']').length > 0;\n\n    logger.info(`Authentication enabled: ${authenticationEnabled}`);\n\n    this.externalAuthEnabled = $(resultIq).find(\n        '>conference>property'\n            + '[name=\\'externalAuth\\'][value=\\'true\\']').length > 0;\n\n    logger.info(\n        `External authentication enabled: ${this.externalAuthEnabled}`);\n\n    if (!this.externalAuthEnabled) {\n        // We expect to receive sessionId in 'internal' authentication mode\n        this.parseSessionId(resultIq);\n    }\n\n    // eslint-disable-next-line newline-per-chained-call\n    const authIdentity = $(resultIq).find('>conference').attr('identity');\n\n    this.eventEmitter.emit(AuthenticationEvents.IDENTITY_UPDATED,\n        authenticationEnabled, authIdentity);\n\n    // Check if jicofo has jigasi support enabled.\n    if ($(resultIq).find(\n        '>conference>property'\n        + '[name=\\'sipGatewayEnabled\\'][value=\\'true\\']').length) {\n        this.sipGatewayEnabled = true;\n    }\n\n    logger.info(`Sip gateway enabled:  ${this.sipGatewayEnabled}`);\n};\n\n// FIXME We need to show the fact that we're waiting for the focus to the user\n// (or that the focus is not available)\n/**\n * Allocates the conference focus.\n *\n * @param {Function} callback - the function to be called back upon the\n * successful allocation of the conference focus\n * @returns {Promise} - Resolved when Jicofo allows to join the room. It's never\n * rejected and it'll keep on pinging Jicofo forever.\n */\nModerator.prototype.allocateConferenceFocus = function() {\n    return new Promise(resolve => {\n        // Try to use focus user JID from the config\n        this.setFocusUserJid(this.options.connection.focusUserJid);\n\n        // Send create conference IQ\n        this.connection.sendIQ(\n            this.createConferenceIq(),\n            result => this._allocateConferenceFocusSuccess(result, resolve),\n            error => this._allocateConferenceFocusError(error, resolve));\n\n        // XXX We're pressed for time here because we're beginning a complex\n        // and/or lengthy conference-establishment process which supposedly\n        // involves multiple RTTs. We don't have the time to wait for Strophe to\n        // decide to send our IQ.\n        this.connection.flush();\n    });\n};\n\n/**\n * Invoked by {@link #allocateConferenceFocus} upon its request receiving an\n * error result.\n *\n * @param error - the error result of the request that\n * {@link #allocateConferenceFocus} sent\n * @param {Function} callback - the function to be called back upon the\n * successful allocation of the conference focus\n */\nModerator.prototype._allocateConferenceFocusError = function(error, callback) {\n    // If the session is invalid, remove and try again without session ID to get\n    // a new one\n    const invalidSession\n        = $(error).find('>error>session-invalid').length\n            || $(error).find('>error>not-acceptable').length;\n\n    if (invalidSession) {\n        logger.info('Session expired! - removing');\n        Settings.sessionId = undefined;\n    }\n    if ($(error).find('>error>graceful-shutdown').length) {\n        this.eventEmitter.emit(XMPPEvents.GRACEFUL_SHUTDOWN);\n\n        return;\n    }\n\n    // Check for error returned by the reservation system\n    const reservationErr = $(error).find('>error>reservation-error');\n\n    if (reservationErr.length) {\n        // Trigger error event\n        const errorCode = reservationErr.attr('error-code');\n        const errorTextNode = $(error).find('>error>text');\n        let errorMsg;\n\n        if (errorTextNode) {\n            errorMsg = errorTextNode.text();\n        }\n        this.eventEmitter.emit(\n            XMPPEvents.RESERVATION_ERROR,\n            errorCode,\n            errorMsg);\n\n        return;\n    }\n\n    // Not authorized to create new room\n    if ($(error).find('>error>not-authorized').length) {\n        logger.warn('Unauthorized to start the conference', error);\n        const toDomain = Strophe.getDomainFromJid(error.getAttribute('to'));\n\n        if (toDomain !== this.options.connection.hosts.anonymousdomain) {\n            // FIXME \"is external\" should come either from the focus or\n            // config.js\n            this.externalAuthEnabled = true;\n        }\n        this.eventEmitter.emit(XMPPEvents.AUTHENTICATION_REQUIRED);\n\n        return;\n    }\n    const waitMs = this.getNextErrorTimeout();\n    const errmsg = `Focus error, retry after ${waitMs}`;\n\n    GlobalOnErrorHandler.callErrorHandler(new Error(errmsg));\n    logger.error(errmsg, error);\n\n    // Show message\n    const focusComponent = this.getFocusComponent();\n    const retrySec = waitMs / 1000;\n\n    // FIXME: message is duplicated ? Do not show in case of session invalid\n    // which means just a retry\n\n    if (!invalidSession) {\n        this.eventEmitter.emit(\n            XMPPEvents.FOCUS_DISCONNECTED,\n            focusComponent,\n            retrySec);\n    }\n\n    // Reset response timeout\n    this.getNextTimeout(true);\n    window.setTimeout(\n        () => this.allocateConferenceFocus().then(callback),\n        waitMs);\n};\n\n/**\n * Invoked by {@link #allocateConferenceFocus} upon its request receiving a\n * success (i.e. non-error) result.\n *\n * @param result - the success (i.e. non-error) result of the request that\n * {@link #allocateConferenceFocus} sent\n * @param {Function} callback - the function to be called back upon the\n * successful allocation of the conference focus\n */\nModerator.prototype._allocateConferenceFocusSuccess = function(\n        result,\n        callback) {\n    // Setup config options\n    this.parseConfigOptions(result);\n\n    // Reset the error timeout (because we haven't failed here).\n    this.getNextErrorTimeout(true);\n\n    // eslint-disable-next-line newline-per-chained-call\n    if ($(result).find('conference').attr('ready') === 'true') {\n        // Reset the non-error timeout (because we've succeeded here).\n        this.getNextTimeout(true);\n\n        // Exec callback\n        callback();\n    } else {\n        const waitMs = this.getNextTimeout();\n\n        logger.info(`Waiting for the focus... ${waitMs}`);\n        window.setTimeout(\n            () => this.allocateConferenceFocus().then(callback),\n            waitMs);\n    }\n};\n\nModerator.prototype.authenticate = function() {\n    return new Promise((resolve, reject) => {\n        this.connection.sendIQ(\n            this.createConferenceIq(),\n            result => {\n                this.parseSessionId(result);\n                resolve();\n            },\n            errorIq => reject({\n                error: $(errorIq).find('iq>error :first')\n                    .prop('tagName'),\n                message: $(errorIq).find('iq>error>text')\n                    .text()\n            })\n        );\n    });\n};\n\nModerator.prototype.getLoginUrl = function(urlCallback, failureCallback) {\n    this._getLoginUrl(/* popup */ false, urlCallback, failureCallback);\n};\n\n/**\n *\n * @param {boolean} popup false for {@link Moderator#getLoginUrl} or true for\n * {@link Moderator#getPopupLoginUrl}\n * @param urlCb\n * @param failureCb\n */\nModerator.prototype._getLoginUrl = function(popup, urlCb, failureCb) {\n    const iq = $iq({ to: this.getFocusComponent(),\n        type: 'get' });\n    const attrs = {\n        xmlns: 'http://jitsi.org/protocol/focus',\n        room: this.roomName,\n        'machine-uid': Settings.machineId\n    };\n    let str = 'auth url'; // for logger\n\n    if (popup) {\n        attrs.popup = true;\n        str = `POPUP ${str}`;\n    }\n    iq.c('login-url', attrs);\n\n    /**\n     * Implements a failure callback which reports an error message and an error\n     * through (1) GlobalOnErrorHandler, (2) logger, and (3) failureCb.\n     *\n     * @param {string} errmsg the error messsage to report\n     * @param {*} error the error to report (in addition to errmsg)\n     */\n    function reportError(errmsg, err) {\n        GlobalOnErrorHandler.callErrorHandler(new Error(errmsg));\n        logger.error(errmsg, err);\n        failureCb(err);\n    }\n    this.connection.sendIQ(\n        iq,\n        result => {\n            // eslint-disable-next-line newline-per-chained-call\n            let url = $(result).find('login-url').attr('url');\n\n            url = decodeURIComponent(url);\n            if (url) {\n                logger.info(`Got ${str}: ${url}`);\n                urlCb(url);\n            } else {\n                reportError(`Failed to get ${str} from the focus`, result);\n            }\n        },\n        reportError.bind(undefined, `Get ${str} error`)\n    );\n};\n\nModerator.prototype.getPopupLoginUrl = function(urlCallback, failureCallback) {\n    this._getLoginUrl(/* popup */ true, urlCallback, failureCallback);\n};\n\nModerator.prototype.logout = function(callback) {\n    const iq = $iq({ to: this.getFocusComponent(),\n        type: 'set' });\n    const { sessionId } = Settings;\n\n    if (!sessionId) {\n        callback();\n\n        return;\n    }\n    iq.c('logout', {\n        xmlns: 'http://jitsi.org/protocol/focus',\n        'session-id': sessionId\n    });\n    this.connection.sendIQ(\n        iq,\n        result => {\n            // eslint-disable-next-line newline-per-chained-call\n            let logoutUrl = $(result).find('logout').attr('logout-url');\n\n            if (logoutUrl) {\n                logoutUrl = decodeURIComponent(logoutUrl);\n            }\n            logger.info(`Log out OK, url: ${logoutUrl}`, result);\n            Settings.sessionId = undefined;\n            callback(logoutUrl);\n        },\n        error => {\n            const errmsg = 'Logout error';\n\n            GlobalOnErrorHandler.callErrorHandler(new Error(errmsg));\n            logger.error(errmsg, error);\n        }\n    );\n};\n","const RandomUtil = require('./RandomUtil');\n\n/**\n * from faker.js - Copyright (c) 2014-2015 Matthew Bergman & Marak Squires\n * MIT License\n * http://github.com/marak/faker.js/\n *\n * @const\n */\nconst names = [\n    'Aaliyah', 'Aaron', 'Abagail', 'Abbey', 'Abbie', 'Abbigail', 'Abby',\n    'Abdiel', 'Abdul', 'Abdullah', 'Abe', 'Abel', 'Abelardo', 'Abigail',\n    'Abigale', 'Abigayle', 'Abner', 'Abraham', 'Ada', 'Adah', 'Adalberto',\n    'Adaline', 'Adam', 'Adan', 'Addie', 'Addison', 'Adela', 'Adelbert', 'Adele',\n    'Adelia', 'Adeline', 'Adell', 'Adella', 'Adelle', 'Aditya', 'Adolf',\n    'Adolfo', 'Adolph', 'Adolphus', 'Adonis', 'Adrain', 'Adrian', 'Adriana',\n    'Adrianna', 'Adriel', 'Adrien', 'Adrienne', 'Afton', 'Aglae', 'Agnes',\n    'Agustin', 'Agustina', 'Ahmad', 'Ahmed', 'Aida', 'Aidan', 'Aiden', 'Aileen',\n    'Aisha', 'Aiyana', 'Akeem', 'Al', 'Alaina', 'Alan', 'Alana', 'Alanis',\n    'Alanna', 'Alayna', 'Alba', 'Albert', 'Alberta', 'Albertha', 'Alberto',\n    'Albin', 'Albina', 'Alda', 'Alden', 'Alec', 'Aleen', 'Alejandra',\n    'Alejandrin', 'Alek', 'Alena', 'Alene', 'Alessandra', 'Alessandro',\n    'Alessia', 'Aletha', 'Alex', 'Alexa', 'Alexander', 'Alexandra', 'Alexandre',\n    'Alexandrea', 'Alexandria', 'Alexandrine', 'Alexandro', 'Alexane',\n    'Alexanne', 'Alexie', 'Alexis', 'Alexys', 'Alexzander', 'Alf', 'Alfonso',\n    'Alfonzo', 'Alford', 'Alfred', 'Alfreda', 'Alfredo', 'Ali', 'Alia', 'Alice',\n    'Alicia', 'Alisa', 'Alisha', 'Alison', 'Alivia', 'Aliya', 'Aliyah', 'Aliza',\n    'Alize', 'Allan', 'Allen', 'Allene', 'Allie', 'Allison', 'Ally', 'Alphonso',\n    'Alta', 'Althea', 'Alva', 'Alvah', 'Alvena', 'Alvera', 'Alverta', 'Alvina',\n    'Alvis', 'Alyce', 'Alycia', 'Alysa', 'Alysha', 'Alyson', 'Alysson',\n    'Amalia', 'Amanda', 'Amani', 'Amara', 'Amari', 'Amaya', 'Amber', 'Ambrose',\n    'Amelia', 'Amelie', 'Amely', 'America', 'Americo', 'Amie', 'Amina', 'Amir',\n    'Amira', 'Amiya', 'Amos', 'Amparo', 'Amy', 'Amya', 'Ana', 'Anabel',\n    'Anabelle', 'Anahi', 'Anais', 'Anastacio', 'Anastasia', 'Anderson', 'Andre',\n    'Andreane', 'Andreanne', 'Andres', 'Andrew', 'Andy', 'Angel', 'Angela',\n    'Angelica', 'Angelina', 'Angeline', 'Angelita', 'Angelo', 'Angie', 'Angus',\n    'Anibal', 'Anika', 'Anissa', 'Anita', 'Aniya', 'Aniyah', 'Anjali', 'Anna',\n    'Annabel', 'Annabell', 'Annabelle', 'Annalise', 'Annamae', 'Annamarie',\n    'Anne', 'Annetta', 'Annette', 'Annie', 'Ansel', 'Ansley', 'Anthony',\n    'Antoinette', 'Antone', 'Antonetta', 'Antonette', 'Antonia', 'Antonietta',\n    'Antonina', 'Antonio', 'Antwan', 'Antwon', 'Anya', 'April', 'Ara',\n    'Araceli', 'Aracely', 'Arch', 'Archibald', 'Ardella', 'Arden', 'Ardith',\n    'Arely', 'Ari', 'Ariane', 'Arianna', 'Aric', 'Ariel', 'Arielle', 'Arjun',\n    'Arlene', 'Arlie', 'Arlo', 'Armand', 'Armando', 'Armani', 'Arnaldo', 'Arne',\n    'Arno', 'Arnold', 'Arnoldo', 'Arnulfo', 'Aron', 'Art', 'Arthur', 'Arturo',\n    'Arvel', 'Arvid', 'Arvilla', 'Aryanna', 'Asa', 'Asha', 'Ashlee', 'Ashleigh',\n    'Ashley', 'Ashly', 'Ashlynn', 'Ashton', 'Ashtyn', 'Asia', 'Assunta',\n    'Astrid', 'Athena', 'Aubree', 'Aubrey', 'Audie', 'Audra', 'Audreanne',\n    'Audrey', 'August', 'Augusta', 'Augustine', 'Augustus', 'Aurelia',\n    'Aurelie', 'Aurelio', 'Aurore', 'Austen', 'Austin', 'Austyn', 'Autumn',\n    'Ava', 'Avery', 'Avis', 'Axel', 'Ayana', 'Ayden', 'Ayla', 'Aylin', 'Baby',\n    'Bailee', 'Bailey', 'Barbara', 'Barney', 'Baron', 'Barrett', 'Barry',\n    'Bart', 'Bartholome', 'Barton', 'Baylee', 'Beatrice', 'Beau', 'Beaulah',\n    'Bell', 'Bella', 'Belle', 'Ben', 'Benedict', 'Benjamin', 'Bennett',\n    'Bennie', 'Benny', 'Benton', 'Berenice', 'Bernadette', 'Bernadine',\n    'Bernard', 'Bernardo', 'Berneice', 'Bernhard', 'Bernice', 'Bernie',\n    'Berniece', 'Bernita', 'Berry', 'Bert', 'Berta', 'Bertha', 'Bertram',\n    'Bertrand', 'Beryl', 'Bessie', 'Beth', 'Bethany', 'Bethel', 'Betsy',\n    'Bette', 'Bettie', 'Betty', 'Bettye', 'Beulah', 'Beverly', 'Bianka', 'Bill',\n    'Billie', 'Billy', 'Birdie', 'Blair', 'Blaise', 'Blake', 'Blanca',\n    'Blanche', 'Blaze', 'Bo', 'Bobbie', 'Bobby', 'Bonita', 'Bonnie', 'Boris',\n    'Boyd', 'Brad', 'Braden', 'Bradford', 'Bradley', 'Bradly', 'Brady',\n    'Braeden', 'Brain', 'Brandi', 'Brando', 'Brandon', 'Brandt', 'Brandy',\n    'Brandyn', 'Brannon', 'Branson', 'Brant', 'Braulio', 'Braxton', 'Brayan',\n    'Breana', 'Breanna', 'Breanne', 'Brenda', 'Brendan', 'Brenden', 'Brendon',\n    'Brenna', 'Brennan', 'Brennon', 'Brent', 'Bret', 'Brett', 'Bria', 'Brian',\n    'Briana', 'Brianne', 'Brice', 'Bridget', 'Bridgette', 'Bridie', 'Brielle',\n    'Brigitte', 'Brionna', 'Brisa', 'Britney', 'Brittany', 'Brock', 'Broderick',\n    'Brody', 'Brook', 'Brooke', 'Brooklyn', 'Brooks', 'Brown', 'Bruce',\n    'Bryana', 'Bryce', 'Brycen', 'Bryon', 'Buck', 'Bud', 'Buddy', 'Buford',\n    'Bulah', 'Burdette', 'Burley', 'Burnice', 'Buster', 'Cade', 'Caden',\n    'Caesar', 'Caitlyn', 'Cale', 'Caleb', 'Caleigh', 'Cali', 'Calista',\n    'Callie', 'Camden', 'Cameron', 'Camila', 'Camilla', 'Camille', 'Camren',\n    'Camron', 'Camryn', 'Camylle', 'Candace', 'Candelario', 'Candice',\n    'Candida', 'Candido', 'Cara', 'Carey', 'Carissa', 'Carlee', 'Carleton',\n    'Carley', 'Carli', 'Carlie', 'Carlo', 'Carlos', 'Carlotta', 'Carmel',\n    'Carmela', 'Carmella', 'Carmelo', 'Carmen', 'Carmine', 'Carol', 'Carolanne',\n    'Carole', 'Carolina', 'Caroline', 'Carolyn', 'Carolyne', 'Carrie',\n    'Carroll', 'Carson', 'Carter', 'Cary', 'Casandra', 'Casey', 'Casimer',\n    'Casimir', 'Casper', 'Cassandra', 'Cassandre', 'Cassidy', 'Cassie',\n    'Catalina', 'Caterina', 'Catharine', 'Catherine', 'Cathrine', 'Cathryn',\n    'Cathy', 'Cayla', 'Ceasar', 'Cecelia', 'Cecil', 'Cecile', 'Cecilia',\n    'Cedrick', 'Celestine', 'Celestino', 'Celia', 'Celine', 'Cesar', 'Chad',\n    'Chadd', 'Chadrick', 'Chaim', 'Chance', 'Chandler', 'Chanel', 'Chanelle',\n    'Charity', 'Charlene', 'Charles', 'Charley', 'Charlie', 'Charlotte',\n    'Chase', 'Chasity', 'Chauncey', 'Chaya', 'Chaz', 'Chelsea', 'Chelsey',\n    'Chelsie', 'Chesley', 'Chester', 'Chet', 'Cheyanne', 'Cheyenne', 'Chloe',\n    'Chris', 'Christ', 'Christa', 'Christelle', 'Christian', 'Christiana',\n    'Christina', 'Christine', 'Christop', 'Christophe', 'Christopher',\n    'Christy', 'Chyna', 'Ciara', 'Cicero', 'Cielo', 'Cierra', 'Cindy',\n    'Citlalli', 'Clair', 'Claire', 'Clara', 'Clarabelle', 'Clare', 'Clarissa',\n    'Clark', 'Claud', 'Claude', 'Claudia', 'Claudie', 'Claudine', 'Clay',\n    'Clemens', 'Clement', 'Clementina', 'Clementine', 'Clemmie', 'Cleo',\n    'Cleora', 'Cleta', 'Cletus', 'Cleve', 'Cleveland', 'Clifford', 'Clifton',\n    'Clint', 'Clinton', 'Clotilde', 'Clovis', 'Cloyd', 'Clyde', 'Coby', 'Cody',\n    'Colby', 'Cole', 'Coleman', 'Colin', 'Colleen', 'Collin', 'Colt', 'Colten',\n    'Colton', 'Columbus', 'Concepcion', 'Conner', 'Connie', 'Connor', 'Conor',\n    'Conrad', 'Constance', 'Constantin', 'Consuelo', 'Cooper', 'Cora',\n    'Coralie', 'Corbin', 'Cordelia', 'Cordell', 'Cordia', 'Cordie', 'Corene',\n    'Corine', 'Cornelius', 'Cornell', 'Corrine', 'Cortez', 'Cortney', 'Cory',\n    'Coty', 'Courtney', 'Coy', 'Craig', 'Crawford', 'Creola', 'Cristal',\n    'Cristian', 'Cristina', 'Cristobal', 'Cristopher', 'Cruz', 'Crystal',\n    'Crystel', 'Cullen', 'Curt', 'Curtis', 'Cydney', 'Cynthia', 'Cyril',\n    'Cyrus', 'Dagmar', 'Dahlia', 'Daija', 'Daisha', 'Daisy', 'Dakota', 'Dale',\n    'Dallas', 'Dallin', 'Dalton', 'Damaris', 'Dameon', 'Damian', 'Damien',\n    'Damion', 'Damon', 'Dan', 'Dana', 'Dandre', 'Dane', 'D\\'angelo', 'Dangelo',\n    'Danial', 'Daniela', 'Daniella', 'Danielle', 'Danika', 'Dannie', 'Danny',\n    'Dante', 'Danyka', 'Daphne', 'Daphnee', 'Daphney', 'Darby', 'Daren',\n    'Darian', 'Dariana', 'Darien', 'Dario', 'Darion', 'Darius', 'Darlene',\n    'Daron', 'Darrel', 'Darrell', 'Darren', 'Darrick', 'Darrin', 'Darrion',\n    'Darron', 'Darryl', 'Darwin', 'Daryl', 'Dashawn', 'Dasia', 'Dave', 'David',\n    'Davin', 'Davion', 'Davon', 'Davonte', 'Dawn', 'Dawson', 'Dax', 'Dayana',\n    'Dayna', 'Dayne', 'Dayton', 'Dean', 'Deangelo', 'Deanna', 'Deborah',\n    'Declan', 'Dedric', 'Dedrick', 'Dee', 'Deion', 'Deja', 'Dejah', 'Dejon',\n    'Dejuan', 'Delaney', 'Delbert', 'Delfina', 'Delia', 'Delilah', 'Dell',\n    'Della', 'Delmer', 'Delores', 'Delpha', 'Delphia', 'Delphine', 'Delta',\n    'Demarco', 'Demarcus', 'Demario', 'Demetris', 'Demetrius', 'Demond', 'Dena',\n    'Denis', 'Dennis', 'Deon', 'Deondre', 'Deontae', 'Deonte', 'Dereck',\n    'Derek', 'Derick', 'Deron', 'Derrick', 'Deshaun', 'Deshawn', 'Desiree',\n    'Desmond', 'Dessie', 'Destany', 'Destin', 'Destinee', 'Destiney', 'Destini',\n    'Destiny', 'Devan', 'Devante', 'Deven', 'Devin', 'Devon', 'Devonte',\n    'Devyn', 'Dewayne', 'Dewitt', 'Dexter', 'Diamond', 'Diana', 'Dianna',\n    'Diego', 'Dillan', 'Dillon', 'Dimitri', 'Dina', 'Dino', 'Dion', 'Dixie',\n    'Dock', 'Dolly', 'Dolores', 'Domenic', 'Domenica', 'Domenick', 'Domenico',\n    'Domingo', 'Dominic', 'Dominique', 'Don', 'Donald', 'Donato', 'Donavon',\n    'Donna', 'Donnell', 'Donnie', 'Donny', 'Dora', 'Dorcas', 'Dorian', 'Doris',\n    'Dorothea', 'Dorothy', 'Dorris', 'Dortha', 'Dorthy', 'Doug', 'Douglas',\n    'Dovie', 'Doyle', 'Drake', 'Drew', 'Duane', 'Dudley', 'Dulce', 'Duncan',\n    'Durward', 'Dustin', 'Dusty', 'Dwight', 'Dylan', 'Earl', 'Earlene',\n    'Earline', 'Earnest', 'Earnestine', 'Easter', 'Easton', 'Ebba', 'Ebony',\n    'Ed', 'Eda', 'Edd', 'Eddie', 'Eden', 'Edgar', 'Edgardo', 'Edison', 'Edmond',\n    'Edmund', 'Edna', 'Eduardo', 'Edward', 'Edwardo', 'Edwin', 'Edwina',\n    'Edyth', 'Edythe', 'Effie', 'Efrain', 'Efren', 'Eileen', 'Einar', 'Eino',\n    'Eladio', 'Elaina', 'Elbert', 'Elda', 'Eldon', 'Eldora', 'Eldred',\n    'Eldridge', 'Eleanora', 'Eleanore', 'Eleazar', 'Electa', 'Elena', 'Elenor',\n    'Elenora', 'Eleonore', 'Elfrieda', 'Eli', 'Elian', 'Eliane', 'Elias',\n    'Eliezer', 'Elijah', 'Elinor', 'Elinore', 'Elisa', 'Elisabeth', 'Elise',\n    'Eliseo', 'Elisha', 'Elissa', 'Eliza', 'Elizabeth', 'Ella', 'Ellen',\n    'Ellie', 'Elliot', 'Elliott', 'Ellis', 'Ellsworth', 'Elmer', 'Elmira',\n    'Elmo', 'Elmore', 'Elna', 'Elnora', 'Elody', 'Eloisa', 'Eloise', 'Elouise',\n    'Eloy', 'Elroy', 'Elsa', 'Else', 'Elsie', 'Elta', 'Elton', 'Elva', 'Elvera',\n    'Elvie', 'Elvis', 'Elwin', 'Elwyn', 'Elyse', 'Elyssa', 'Elza', 'Emanuel',\n    'Emelia', 'Emelie', 'Emely', 'Emerald', 'Emerson', 'Emery', 'Emie', 'Emil',\n    'Emile', 'Emilia', 'Emiliano', 'Emilie', 'Emilio', 'Emily', 'Emma',\n    'Emmalee', 'Emmanuel', 'Emmanuelle', 'Emmet', 'Emmett', 'Emmie', 'Emmitt',\n    'Emmy', 'Emory', 'Ena', 'Enid', 'Enoch', 'Enola', 'Enos', 'Enrico',\n    'Enrique', 'Ephraim', 'Era', 'Eriberto', 'Eric', 'Erica', 'Erich', 'Erick',\n    'Ericka', 'Erik', 'Erika', 'Erin', 'Erling', 'Erna', 'Ernest', 'Ernestina',\n    'Ernestine', 'Ernesto', 'Ernie', 'Ervin', 'Erwin', 'Eryn', 'Esmeralda',\n    'Esperanza', 'Esta', 'Esteban', 'Estefania', 'Estel', 'Estell', 'Estella',\n    'Estelle', 'Estevan', 'Esther', 'Estrella', 'Etha', 'Ethan', 'Ethel',\n    'Ethelyn', 'Ethyl', 'Ettie', 'Eudora', 'Eugene', 'Eugenia', 'Eula', 'Eulah',\n    'Eulalia', 'Euna', 'Eunice', 'Eusebio', 'Eva', 'Evalyn', 'Evan',\n    'Evangeline', 'Evans', 'Eve', 'Eveline', 'Evelyn', 'Everardo', 'Everett',\n    'Everette', 'Evert', 'Evie', 'Ewald', 'Ewell', 'Ezekiel', 'Ezequiel',\n    'Ezra', 'Fabian', 'Fabiola', 'Fae', 'Fannie', 'Fanny', 'Fatima', 'Faustino',\n    'Fausto', 'Favian', 'Fay', 'Faye', 'Federico', 'Felicia', 'Felicita',\n    'Felicity', 'Felipa', 'Felipe', 'Felix', 'Felton', 'Fermin', 'Fern',\n    'Fernando', 'Ferne', 'Fidel', 'Filiberto', 'Filomena', 'Finn', 'Fiona',\n    'Flavie', 'Flavio', 'Fleta', 'Fletcher', 'Flo', 'Florence', 'Florencio',\n    'Florian', 'Florida', 'Florine', 'Flossie', 'Floy', 'Floyd', 'Ford',\n    'Forest', 'Forrest', 'Foster', 'Frances', 'Francesca', 'Francesco',\n    'Francis', 'Francisca', 'Francisco', 'Franco', 'Frank', 'Frankie', 'Franz',\n    'Fred', 'Freda', 'Freddie', 'Freddy', 'Frederic', 'Frederick', 'Frederik',\n    'Frederique', 'Fredrick', 'Fredy', 'Freeda', 'Freeman', 'Freida', 'Frida',\n    'Frieda', 'Friedrich', 'Fritz', 'Furman', 'Gabe', 'Gabriel', 'Gabriella',\n    'Gabrielle', 'Gaetano', 'Gage', 'Gail', 'Gardner', 'Garett', 'Garfield',\n    'Garland', 'Garnet', 'Garnett', 'Garret', 'Garrett', 'Garrick', 'Garrison',\n    'Garry', 'Garth', 'Gaston', 'Gavin', 'Gay', 'Gayle', 'Gaylord', 'Gene',\n    'General', 'Genesis', 'Genevieve', 'Gennaro', 'Genoveva', 'Geo', 'Geoffrey',\n    'George', 'Georgette', 'Georgiana', 'Georgianna', 'Geovanni', 'Geovanny',\n    'Geovany', 'Gerald', 'Geraldine', 'Gerard', 'Gerardo', 'Gerda', 'Gerhard',\n    'Germaine', 'German', 'Gerry', 'Gerson', 'Gertrude', 'Gia', 'Gianni',\n    'Gideon', 'Gilbert', 'Gilberto', 'Gilda', 'Giles', 'Gillian', 'Gina',\n    'Gino', 'Giovani', 'Giovanna', 'Giovanni', 'Giovanny', 'Gisselle',\n    'Giuseppe', 'Gladyce', 'Gladys', 'Glen', 'Glenda', 'Glenna', 'Glennie',\n    'Gloria', 'Godfrey', 'Golda', 'Golden', 'Gonzalo', 'Gordon', 'Grace',\n    'Gracie', 'Graciela', 'Grady', 'Graham', 'Grant', 'Granville', 'Grayce',\n    'Grayson', 'Green', 'Greg', 'Gregg', 'Gregoria', 'Gregorio', 'Gregory',\n    'Greta', 'Gretchen', 'Greyson', 'Griffin', 'Grover', 'Guadalupe', 'Gudrun',\n    'Guido', 'Guillermo', 'Guiseppe', 'Gunnar', 'Gunner', 'Gus', 'Gussie',\n    'Gust', 'Gustave', 'Guy', 'Gwen', 'Gwendolyn', 'Hadley', 'Hailee', 'Hailey',\n    'Hailie', 'Hal', 'Haleigh', 'Haley', 'Halie', 'Halle', 'Hallie', 'Hank',\n    'Hanna', 'Hannah', 'Hans', 'Hardy', 'Harley', 'Harmon', 'Harmony', 'Harold',\n    'Harrison', 'Harry', 'Harvey', 'Haskell', 'Hassan', 'Hassie', 'Hattie',\n    'Haven', 'Hayden', 'Haylee', 'Hayley', 'Haylie', 'Hazel', 'Hazle', 'Heath',\n    'Heather', 'Heaven', 'Heber', 'Hector', 'Heidi', 'Helen', 'Helena',\n    'Helene', 'Helga', 'Hellen', 'Helmer', 'Heloise', 'Henderson', 'Henri',\n    'Henriette', 'Henry', 'Herbert', 'Herman', 'Hermann', 'Hermina', 'Herminia',\n    'Herminio', 'Hershel', 'Herta', 'Hertha', 'Hester', 'Hettie', 'Hilario',\n    'Hilbert', 'Hilda', 'Hildegard', 'Hillard', 'Hillary', 'Hilma', 'Hilton',\n    'Hipolito', 'Hiram', 'Hobart', 'Holden', 'Hollie', 'Hollis', 'Holly',\n    'Hope', 'Horace', 'Horacio', 'Hortense', 'Hosea', 'Houston', 'Howard',\n    'Howell', 'Hoyt', 'Hubert', 'Hudson', 'Hugh', 'Hulda', 'Humberto', 'Hunter',\n    'Hyman', 'Ian', 'Ibrahim', 'Icie', 'Ida', 'Idell', 'Idella', 'Ignacio',\n    'Ignatius', 'Ike', 'Ila', 'Ilene', 'Iliana', 'Ima', 'Imani', 'Imelda',\n    'Immanuel', 'Imogene', 'Ines', 'Irma', 'Irving', 'Irwin', 'Isaac', 'Isabel',\n    'Isabell', 'Isabella', 'Isabelle', 'Isac', 'Isadore', 'Isai', 'Isaiah',\n    'Isaias', 'Isidro', 'Ismael', 'Isobel', 'Isom', 'Israel', 'Issac', 'Itzel',\n    'Iva', 'Ivah', 'Ivory', 'Ivy', 'Izabella', 'Izaiah', 'Jabari', 'Jace',\n    'Jacey', 'Jacinthe', 'Jacinto', 'Jack', 'Jackeline', 'Jackie', 'Jacklyn',\n    'Jackson', 'Jacky', 'Jaclyn', 'Jacquelyn', 'Jacques', 'Jacynthe', 'Jada',\n    'Jade', 'Jaden', 'Jadon', 'Jadyn', 'Jaeden', 'Jaida', 'Jaiden', 'Jailyn',\n    'Jaime', 'Jairo', 'Jakayla', 'Jake', 'Jakob', 'Jaleel', 'Jalen', 'Jalon',\n    'Jalyn', 'Jamaal', 'Jamal', 'Jamar', 'Jamarcus', 'Jamel', 'Jameson',\n    'Jamey', 'Jamie', 'Jamil', 'Jamir', 'Jamison', 'Jammie', 'Jan', 'Jana',\n    'Janae', 'Jane', 'Janelle', 'Janessa', 'Janet', 'Janice', 'Janick', 'Janie',\n    'Janis', 'Janiya', 'Jannie', 'Jany', 'Jaquan', 'Jaquelin', 'Jaqueline',\n    'Jared', 'Jaren', 'Jarod', 'Jaron', 'Jarred', 'Jarrell', 'Jarret',\n    'Jarrett', 'Jarrod', 'Jarvis', 'Jasen', 'Jasmin', 'Jason', 'Jasper',\n    'Jaunita', 'Javier', 'Javon', 'Javonte', 'Jay', 'Jayce', 'Jaycee', 'Jayda',\n    'Jayde', 'Jayden', 'Jaydon', 'Jaylan', 'Jaylen', 'Jaylin', 'Jaylon',\n    'Jayme', 'Jayne', 'Jayson', 'Jazlyn', 'Jazmin', 'Jazmyn', 'Jazmyne', 'Jean',\n    'Jeanette', 'Jeanie', 'Jeanne', 'Jed', 'Jedediah', 'Jedidiah', 'Jeff',\n    'Jefferey', 'Jeffery', 'Jeffrey', 'Jeffry', 'Jena', 'Jenifer', 'Jennie',\n    'Jennifer', 'Jennings', 'Jennyfer', 'Jensen', 'Jerad', 'Jerald', 'Jeramie',\n    'Jeramy', 'Jerel', 'Jeremie', 'Jeremy', 'Jermain', 'Jermaine', 'Jermey',\n    'Jerod', 'Jerome', 'Jeromy', 'Jerrell', 'Jerrod', 'Jerrold', 'Jerry',\n    'Jess', 'Jesse', 'Jessica', 'Jessie', 'Jessika', 'Jessy', 'Jessyca',\n    'Jesus', 'Jett', 'Jettie', 'Jevon', 'Jewel', 'Jewell', 'Jillian', 'Jimmie',\n    'Jimmy', 'Jo', 'Joan', 'Joana', 'Joanie', 'Joanne', 'Joannie', 'Joanny',\n    'Joany', 'Joaquin', 'Jocelyn', 'Jodie', 'Jody', 'Joe', 'Joel', 'Joelle',\n    'Joesph', 'Joey', 'Johan', 'Johann', 'Johanna', 'Johathan', 'John',\n    'Johnathan', 'Johnathon', 'Johnnie', 'Johnny', 'Johnpaul', 'Johnson',\n    'Jolie', 'Jon', 'Jonas', 'Jonatan', 'Jonathan', 'Jonathon', 'Jordan',\n    'Jordane', 'Jordi', 'Jordon', 'Jordy', 'Jordyn', 'Jorge', 'Jose', 'Josefa',\n    'Josefina', 'Joseph', 'Josephine', 'Josh', 'Joshua', 'Joshuah', 'Josiah',\n    'Josiane', 'Josianne', 'Josie', 'Josue', 'Jovan', 'Jovani', 'Jovanny',\n    'Jovany', 'Joy', 'Joyce', 'Juana', 'Juanita', 'Judah', 'Judd', 'Jude',\n    'Judge', 'Judson', 'Judy', 'Jules', 'Julia', 'Julian', 'Juliana',\n    'Julianne', 'Julie', 'Julien', 'Juliet', 'Julio', 'Julius', 'June',\n    'Junior', 'Junius', 'Justen', 'Justice', 'Justina', 'Justine', 'Juston',\n    'Justus', 'Justyn', 'Juvenal', 'Juwan', 'Kacey', 'Kaci', 'Kacie', 'Kade',\n    'Kaden', 'Kadin', 'Kaela', 'Kaelyn', 'Kaia', 'Kailee', 'Kailey', 'Kailyn',\n    'Kaitlin', 'Kaitlyn', 'Kale', 'Kaleb', 'Kaleigh', 'Kaley', 'Kali', 'Kallie',\n    'Kameron', 'Kamille', 'Kamren', 'Kamron', 'Kamryn', 'Kane', 'Kara',\n    'Kareem', 'Karelle', 'Karen', 'Kari', 'Kariane', 'Karianne', 'Karina',\n    'Karine', 'Karl', 'Karlee', 'Karley', 'Karli', 'Karlie', 'Karolann',\n    'Karson', 'Kasandra', 'Kasey', 'Kassandra', 'Katarina', 'Katelin',\n    'Katelyn', 'Katelynn', 'Katharina', 'Katherine', 'Katheryn', 'Kathleen',\n    'Kathlyn', 'Kathryn', 'Kathryne', 'Katlyn', 'Katlynn', 'Katrina', 'Katrine',\n    'Kattie', 'Kavon', 'Kay', 'Kaya', 'Kaycee', 'Kayden', 'Kayla', 'Kaylah',\n    'Kaylee', 'Kayleigh', 'Kayley', 'Kayli', 'Kaylie', 'Kaylin', 'Keagan',\n    'Keanu', 'Keara', 'Keaton', 'Keegan', 'Keeley', 'Keely', 'Keenan', 'Keira',\n    'Keith', 'Kellen', 'Kelley', 'Kelli', 'Kellie', 'Kelly', 'Kelsi', 'Kelsie',\n    'Kelton', 'Kelvin', 'Ken', 'Kendall', 'Kendra', 'Kendrick', 'Kenna',\n    'Kennedi', 'Kennedy', 'Kenneth', 'Kennith', 'Kenny', 'Kenton', 'Kenya',\n    'Kenyatta', 'Kenyon', 'Keon', 'Keshaun', 'Keshawn', 'Keven', 'Kevin',\n    'Kevon', 'Keyon', 'Keyshawn', 'Khalid', 'Khalil', 'Kian', 'Kiana', 'Kianna',\n    'Kiara', 'Kiarra', 'Kiel', 'Kiera', 'Kieran', 'Kiley', 'Kim', 'Kimberly',\n    'King', 'Kip', 'Kira', 'Kirk', 'Kirsten', 'Kirstin', 'Kitty', 'Kobe',\n    'Koby', 'Kody', 'Kolby', 'Kole', 'Korbin', 'Korey', 'Kory', 'Kraig', 'Kris',\n    'Krista', 'Kristian', 'Kristin', 'Kristina', 'Kristofer', 'Kristoffer',\n    'Kristopher', 'Kristy', 'Krystal', 'Krystel', 'Krystina', 'Kurt', 'Kurtis',\n    'Kyla', 'Kyle', 'Kylee', 'Kyleigh', 'Kyler', 'Kylie', 'Kyra', 'Lacey',\n    'Lacy', 'Ladarius', 'Lafayette', 'Laila', 'Laisha', 'Lamar', 'Lambert',\n    'Lamont', 'Lance', 'Landen', 'Lane', 'Laney', 'Larissa', 'Laron', 'Larry',\n    'Larue', 'Laura', 'Laurel', 'Lauren', 'Laurence', 'Lauretta', 'Lauriane',\n    'Laurianne', 'Laurie', 'Laurine', 'Laury', 'Lauryn', 'Lavada', 'Lavern',\n    'Laverna', 'Laverne', 'Lavina', 'Lavinia', 'Lavon', 'Lavonne', 'Lawrence',\n    'Lawson', 'Layla', 'Layne', 'Lazaro', 'Lea', 'Leann', 'Leanna', 'Leanne',\n    'Leatha', 'Leda', 'Lee', 'Leif', 'Leila', 'Leilani', 'Lela', 'Lelah',\n    'Leland', 'Lelia', 'Lempi', 'Lemuel', 'Lenna', 'Lennie', 'Lenny', 'Lenora',\n    'Lenore', 'Leo', 'Leola', 'Leon', 'Leonard', 'Leonardo', 'Leone', 'Leonel',\n    'Leonie', 'Leonor', 'Leonora', 'Leopold', 'Leopoldo', 'Leora', 'Lera',\n    'Lesley', 'Leslie', 'Lesly', 'Lessie', 'Lester', 'Leta', 'Letha', 'Letitia',\n    'Levi', 'Lew', 'Lewis', 'Lexi', 'Lexie', 'Lexus', 'Lia', 'Liam', 'Liana',\n    'Libbie', 'Libby', 'Lila', 'Lilian', 'Liliana', 'Liliane', 'Lilla',\n    'Lillian', 'Lilliana', 'Lillie', 'Lilly', 'Lily', 'Lilyan', 'Lina',\n    'Lincoln', 'Linda', 'Lindsay', 'Lindsey', 'Linnea', 'Linnie', 'Linwood',\n    'Lionel', 'Lisa', 'Lisandro', 'Lisette', 'Litzy', 'Liza', 'Lizeth',\n    'Lizzie', 'Llewellyn', 'Lloyd', 'Logan', 'Lois', 'Lola', 'Lolita', 'Loma',\n    'Lon', 'London', 'Lonie', 'Lonnie', 'Lonny', 'Lonzo', 'Lora', 'Loraine',\n    'Loren', 'Lorena', 'Lorenz', 'Lorenza', 'Lorenzo', 'Lori', 'Lorine',\n    'Lorna', 'Lottie', 'Lou', 'Louie', 'Louisa', 'Lourdes', 'Louvenia',\n    'Lowell', 'Loy', 'Loyal', 'Loyce', 'Lucas', 'Luciano', 'Lucie', 'Lucienne',\n    'Lucile', 'Lucinda', 'Lucio', 'Lucious', 'Lucius', 'Lucy', 'Ludie',\n    'Ludwig', 'Lue', 'Luella', 'Luigi', 'Luis', 'Luisa', 'Lukas', 'Lula',\n    'Lulu', 'Luna', 'Lupe', 'Lura', 'Lurline', 'Luther', 'Luz', 'Lyda', 'Lydia',\n    'Lyla', 'Lynn', 'Lyric', 'Lysanne', 'Mabel', 'Mabelle', 'Mable', 'Mac',\n    'Macey', 'Maci', 'Macie', 'Mack', 'Mackenzie', 'Macy', 'Madaline',\n    'Madalyn', 'Maddison', 'Madeline', 'Madelyn', 'Madelynn', 'Madge', 'Madie',\n    'Madilyn', 'Madisen', 'Madison', 'Madisyn', 'Madonna', 'Madyson', 'Mae',\n    'Maegan', 'Maeve', 'Mafalda', 'Magali', 'Magdalen', 'Magdalena', 'Maggie',\n    'Magnolia', 'Magnus', 'Maia', 'Maida', 'Maiya', 'Major', 'Makayla',\n    'Makenna', 'Makenzie', 'Malachi', 'Malcolm', 'Malika', 'Malinda', 'Mallie',\n    'Mallory', 'Malvina', 'Mandy', 'Manley', 'Manuel', 'Manuela', 'Mara',\n    'Marc', 'Marcel', 'Marcelina', 'Marcelino', 'Marcella', 'Marcelle',\n    'Marcellus', 'Marcelo', 'Marcia', 'Marco', 'Marcos', 'Marcus', 'Margaret',\n    'Margarete', 'Margarett', 'Margaretta', 'Margarette', 'Margarita', 'Marge',\n    'Margie', 'Margot', 'Margret', 'Marguerite', 'Maria', 'Mariah', 'Mariam',\n    'Marian', 'Mariana', 'Mariane', 'Marianna', 'Marianne', 'Mariano',\n    'Maribel', 'Marie', 'Mariela', 'Marielle', 'Marietta', 'Marilie', 'Marilou',\n    'Marilyne', 'Marina', 'Mario', 'Marion', 'Marisa', 'Marisol', 'Maritza',\n    'Marjolaine', 'Marjorie', 'Marjory', 'Mark', 'Markus', 'Marlee', 'Marlen',\n    'Marlene', 'Marley', 'Marlin', 'Marlon', 'Marques', 'Marquis', 'Marquise',\n    'Marshall', 'Marta', 'Martin', 'Martina', 'Martine', 'Marty', 'Marvin',\n    'Mary', 'Maryam', 'Maryjane', 'Maryse', 'Mason', 'Mateo', 'Mathew',\n    'Mathias', 'Mathilde', 'Matilda', 'Matilde', 'Matt', 'Matteo', 'Mattie',\n    'Maud', 'Maude', 'Maudie', 'Maureen', 'Maurice', 'Mauricio', 'Maurine',\n    'Maverick', 'Mavis', 'Max', 'Maxie', 'Maxime', 'Maximilian', 'Maximillia',\n    'Maximillian', 'Maximo', 'Maximus', 'Maxine', 'Maxwell', 'May', 'Maya',\n    'Maybell', 'Maybelle', 'Maye', 'Maymie', 'Maynard', 'Mayra', 'Mazie',\n    'Mckayla', 'Mckenna', 'Mckenzie', 'Meagan', 'Meaghan', 'Meda', 'Megane',\n    'Meggie', 'Meghan', 'Mekhi', 'Melany', 'Melba', 'Melisa', 'Melissa',\n    'Mellie', 'Melody', 'Melvin', 'Melvina', 'Melyna', 'Melyssa', 'Mercedes',\n    'Meredith', 'Merl', 'Merle', 'Merlin', 'Merritt', 'Mertie', 'Mervin',\n    'Meta', 'Mia', 'Micaela', 'Micah', 'Michael', 'Michaela', 'Michale',\n    'Micheal', 'Michel', 'Michele', 'Michelle', 'Miguel', 'Mikayla', 'Mike',\n    'Mikel', 'Milan', 'Miles', 'Milford', 'Miller', 'Millie', 'Milo', 'Milton',\n    'Mina', 'Minerva', 'Minnie', 'Miracle', 'Mireille', 'Mireya', 'Misael',\n    'Missouri', 'Misty', 'Mitchel', 'Mitchell', 'Mittie', 'Modesta', 'Modesto',\n    'Mohamed', 'Mohammad', 'Mohammed', 'Moises', 'Mollie', 'Molly', 'Mona',\n    'Monica', 'Monique', 'Monroe', 'Monserrat', 'Monserrate', 'Montana',\n    'Monte', 'Monty', 'Morgan', 'Moriah', 'Morris', 'Mortimer', 'Morton',\n    'Mose', 'Moses', 'Moshe', 'Mossie', 'Mozell', 'Mozelle', 'Muhammad',\n    'Muriel', 'Murl', 'Murphy', 'Murray', 'Mustafa', 'Mya', 'Myah', 'Mylene',\n    'Myles', 'Myra', 'Myriam', 'Myrl', 'Myrna', 'Myron', 'Myrtice', 'Myrtie',\n    'Myrtis', 'Myrtle', 'Nadia', 'Nakia', 'Name', 'Nannie', 'Naomi', 'Naomie',\n    'Napoleon', 'Narciso', 'Nash', 'Nasir', 'Nat', 'Natalia', 'Natalie',\n    'Natasha', 'Nathan', 'Nathanael', 'Nathanial', 'Nathaniel', 'Nathen',\n    'Nayeli', 'Neal', 'Ned', 'Nedra', 'Neha', 'Neil', 'Nelda', 'Nella', 'Nelle',\n    'Nellie', 'Nels', 'Nelson', 'Neoma', 'Nestor', 'Nettie', 'Neva', 'Newell',\n    'Newton', 'Nia', 'Nicholas', 'Nicholaus', 'Nichole', 'Nick', 'Nicklaus',\n    'Nickolas', 'Nico', 'Nicola', 'Nicolas', 'Nicole', 'Nicolette', 'Nigel',\n    'Nikita', 'Nikki', 'Nikko', 'Niko', 'Nikolas', 'Nils', 'Nina', 'Noah',\n    'Noble', 'Noe', 'Noel', 'Noelia', 'Noemi', 'Noemie', 'Noemy', 'Nola',\n    'Nolan', 'Nona', 'Nora', 'Norbert', 'Norberto', 'Norene', 'Norma', 'Norris',\n    'Norval', 'Norwood', 'Nova', 'Novella', 'Nya', 'Nyah', 'Nyasia', 'Obie',\n    'Oceane', 'Ocie', 'Octavia', 'Oda', 'Odell', 'Odessa', 'Odie', 'Ofelia',\n    'Okey', 'Ola', 'Olaf', 'Ole', 'Olen', 'Oleta', 'Olga', 'Olin', 'Oliver',\n    'Ollie', 'Oma', 'Omari', 'Omer', 'Ona', 'Onie', 'Opal', 'Ophelia', 'Ora',\n    'Oral', 'Oran', 'Oren', 'Orie', 'Orin', 'Orion', 'Orland', 'Orlando',\n    'Orlo', 'Orpha', 'Orrin', 'Orval', 'Orville', 'Osbaldo', 'Osborne', 'Oscar',\n    'Osvaldo', 'Oswald', 'Oswaldo', 'Otha', 'Otho', 'Otilia', 'Otis', 'Ottilie',\n    'Ottis', 'Otto', 'Ova', 'Owen', 'Ozella', 'Pablo', 'Paige', 'Palma',\n    'Pamela', 'Pansy', 'Paolo', 'Paris', 'Parker', 'Pascale', 'Pasquale', 'Pat',\n    'Patience', 'Patricia', 'Patrick', 'Patsy', 'Pattie', 'Paul', 'Paula',\n    'Pauline', 'Paxton', 'Payton', 'Pearl', 'Pearlie', 'Pearline', 'Pedro',\n    'Peggie', 'Penelope', 'Percival', 'Percy', 'Perry', 'Pete', 'Peter',\n    'Petra', 'Peyton', 'Philip', 'Phoebe', 'Phyllis', 'Pierce', 'Pierre',\n    'Pietro', 'Pink', 'Pinkie', 'Piper', 'Polly', 'Porter', 'Precious',\n    'Presley', 'Preston', 'Price', 'Prince', 'Princess', 'Priscilla',\n    'Providenci', 'Prudence', 'Queen', 'Queenie', 'Quentin', 'Quincy', 'Quinn',\n    'Quinten', 'Quinton', 'Rachael', 'Rachel', 'Rachelle', 'Rae', 'Raegan',\n    'Rafael', 'Rafaela', 'Raheem', 'Rahsaan', 'Rahul', 'Raina', 'Raleigh',\n    'Ralph', 'Ramiro', 'Ramon', 'Ramona', 'Randal', 'Randall', 'Randi', 'Randy',\n    'Ransom', 'Raoul', 'Raphael', 'Raphaelle', 'Raquel', 'Rashad', 'Rashawn',\n    'Rasheed', 'Raul', 'Raven', 'Ray', 'Raymond', 'Raymundo', 'Reagan',\n    'Reanna', 'Reba', 'Rebeca', 'Rebecca', 'Rebeka', 'Rebekah', 'Reece', 'Reed',\n    'Reese', 'Regan', 'Reggie', 'Reginald', 'Reid', 'Reilly', 'Reina',\n    'Reinhold', 'Remington', 'Rene', 'Renee', 'Ressie', 'Reta', 'Retha',\n    'Retta', 'Reuben', 'Reva', 'Rex', 'Rey', 'Reyes', 'Reymundo', 'Reyna',\n    'Reynold', 'Rhea', 'Rhett', 'Rhianna', 'Rhiannon', 'Rhoda', 'Ricardo',\n    'Richard', 'Richie', 'Richmond', 'Rick', 'Rickey', 'Rickie', 'Ricky',\n    'Rico', 'Rigoberto', 'Riley', 'Rita', 'River', 'Robb', 'Robbie', 'Robert',\n    'Roberta', 'Roberto', 'Robin', 'Robyn', 'Rocio', 'Rocky', 'Rod', 'Roderick',\n    'Rodger', 'Rodolfo', 'Rodrick', 'Rodrigo', 'Roel', 'Rogelio', 'Roger',\n    'Rogers', 'Rolando', 'Rollin', 'Roma', 'Romaine', 'Roman', 'Ron', 'Ronaldo',\n    'Ronny', 'Roosevelt', 'Rory', 'Rosa', 'Rosalee', 'Rosalia', 'Rosalind',\n    'Rosalinda', 'Rosalyn', 'Rosamond', 'Rosanna', 'Rosario', 'Roscoe', 'Rose',\n    'Rosella', 'Roselyn', 'Rosemarie', 'Rosemary', 'Rosendo', 'Rosetta',\n    'Rosie', 'Rosina', 'Roslyn', 'Ross', 'Rossie', 'Rowan', 'Rowena', 'Rowland',\n    'Roxane', 'Roxanne', 'Roy', 'Royal', 'Royce', 'Rozella', 'Ruben', 'Rubie',\n    'Ruby', 'Rubye', 'Rudolph', 'Rudy', 'Rupert', 'Russ', 'Russel', 'Russell',\n    'Rusty', 'Ruth', 'Ruthe', 'Ruthie', 'Ryan', 'Ryann', 'Ryder', 'Rylan',\n    'Rylee', 'Ryleigh', 'Ryley', 'Sabina', 'Sabrina', 'Sabryna', 'Sadie',\n    'Sadye', 'Sage', 'Saige', 'Sallie', 'Sally', 'Salma', 'Salvador',\n    'Salvatore', 'Sam', 'Samanta', 'Samantha', 'Samara', 'Samir', 'Sammie',\n    'Sammy', 'Samson', 'Sandra', 'Sandrine', 'Sandy', 'Sanford', 'Santa',\n    'Santiago', 'Santina', 'Santino', 'Santos', 'Sarah', 'Sarai', 'Sarina',\n    'Sasha', 'Saul', 'Savanah', 'Savanna', 'Savannah', 'Savion', 'Scarlett',\n    'Schuyler', 'Scot', 'Scottie', 'Scotty', 'Seamus', 'Sean', 'Sebastian',\n    'Sedrick', 'Selena', 'Selina', 'Selmer', 'Serena', 'Serenity', 'Seth',\n    'Shad', 'Shaina', 'Shakira', 'Shana', 'Shane', 'Shanel', 'Shanelle',\n    'Shania', 'Shanie', 'Shaniya', 'Shanna', 'Shannon', 'Shanny', 'Shanon',\n    'Shany', 'Sharon', 'Shaun', 'Shawn', 'Shawna', 'Shaylee', 'Shayna',\n    'Shayne', 'Shea', 'Sheila', 'Sheldon', 'Shemar', 'Sheridan', 'Sherman',\n    'Sherwood', 'Shirley', 'Shyann', 'Shyanne', 'Sibyl', 'Sid', 'Sidney',\n    'Sienna', 'Sierra', 'Sigmund', 'Sigrid', 'Sigurd', 'Silas', 'Sim', 'Simeon',\n    'Simone', 'Sincere', 'Sister', 'Skye', 'Skyla', 'Skylar', 'Sofia',\n    'Soledad', 'Solon', 'Sonia', 'Sonny', 'Sonya', 'Sophia', 'Sophie',\n    'Spencer', 'Stacey', 'Stacy', 'Stan', 'Stanford', 'Stanley', 'Stanton',\n    'Stefan', 'Stefanie', 'Stella', 'Stephan', 'Stephania', 'Stephanie',\n    'Stephany', 'Stephen', 'Stephon', 'Sterling', 'Steve', 'Stevie', 'Stewart',\n    'Stone', 'Stuart', 'Summer', 'Sunny', 'Susan', 'Susana', 'Susanna', 'Susie',\n    'Suzanne', 'Sven', 'Syble', 'Sydnee', 'Sydney', 'Sydni', 'Sydnie', 'Sylvan',\n    'Sylvester', 'Sylvia', 'Tabitha', 'Tad', 'Talia', 'Talon', 'Tamara',\n    'Tamia', 'Tania', 'Tanner', 'Tanya', 'Tara', 'Taryn', 'Tate', 'Tatum',\n    'Tatyana', 'Taurean', 'Tavares', 'Taya', 'Taylor', 'Teagan', 'Ted', 'Telly',\n    'Terence', 'Teresa', 'Terrance', 'Terrell', 'Terrence', 'Terrill', 'Terry',\n    'Tess', 'Tessie', 'Tevin', 'Thad', 'Thaddeus', 'Thalia', 'Thea', 'Thelma',\n    'Theo', 'Theodora', 'Theodore', 'Theresa', 'Therese', 'Theresia', 'Theron',\n    'Thomas', 'Thora', 'Thurman', 'Tia', 'Tiana', 'Tianna', 'Tiara', 'Tierra',\n    'Tiffany', 'Tillman', 'Timmothy', 'Timmy', 'Timothy', 'Tina', 'Tito',\n    'Titus', 'Tobin', 'Toby', 'Tod', 'Tom', 'Tomas', 'Tomasa', 'Tommie',\n    'Toney', 'Toni', 'Tony', 'Torey', 'Torrance', 'Torrey', 'Toy', 'Trace',\n    'Tracey', 'Tracy', 'Travis', 'Travon', 'Tre', 'Tremaine', 'Tremayne',\n    'Trent', 'Trenton', 'Tressa', 'Tressie', 'Treva', 'Trever', 'Trevion',\n    'Trevor', 'Trey', 'Trinity', 'Trisha', 'Tristian', 'Tristin', 'Triston',\n    'Troy', 'Trudie', 'Trycia', 'Trystan', 'Turner', 'Twila', 'Tyler', 'Tyra',\n    'Tyree', 'Tyreek', 'Tyrel', 'Tyrell', 'Tyrese', 'Tyrique', 'Tyshawn',\n    'Tyson', 'Ubaldo', 'Ulices', 'Ulises', 'Una', 'Unique', 'Urban', 'Uriah',\n    'Uriel', 'Ursula', 'Vada', 'Valentin', 'Valentina', 'Valentine', 'Valerie',\n    'Vallie', 'Van', 'Vance', 'Vanessa', 'Vaughn', 'Veda', 'Velda', 'Vella',\n    'Velma', 'Velva', 'Vena', 'Verda', 'Verdie', 'Vergie', 'Verla', 'Verlie',\n    'Vern', 'Verna', 'Verner', 'Vernice', 'Vernie', 'Vernon', 'Verona',\n    'Veronica', 'Vesta', 'Vicenta', 'Vicente', 'Vickie', 'Vicky', 'Victor',\n    'Victoria', 'Vida', 'Vidal', 'Vilma', 'Vince', 'Vincent', 'Vincenza',\n    'Vincenzo', 'Vinnie', 'Viola', 'Violet', 'Violette', 'Virgie', 'Virgil',\n    'Virginia', 'Virginie', 'Vita', 'Vito', 'Viva', 'Vivian', 'Viviane',\n    'Vivianne', 'Vivien', 'Vivienne', 'Vladimir', 'Wade', 'Waino', 'Waldo',\n    'Walker', 'Wallace', 'Walter', 'Walton', 'Wanda', 'Ward', 'Warren',\n    'Watson', 'Wava', 'Waylon', 'Wayne', 'Webster', 'Weldon', 'Wellington',\n    'Wendell', 'Wendy', 'Werner', 'Westley', 'Weston', 'Whitney', 'Wilber',\n    'Wilbert', 'Wilburn', 'Wiley', 'Wilford', 'Wilfred', 'Wilfredo', 'Wilfrid',\n    'Wilhelm', 'Wilhelmine', 'Will', 'Willa', 'Willard', 'William', 'Willie',\n    'Willis', 'Willow', 'Willy', 'Wilma', 'Wilmer', 'Wilson', 'Wilton',\n    'Winfield', 'Winifred', 'Winnifred', 'Winona', 'Winston', 'Woodrow',\n    'Wyatt', 'Wyman', 'Xander', 'Xavier', 'Xzavier', 'Yadira', 'Yasmeen',\n    'Yasmin', 'Yasmine', 'Yazmin', 'Yesenia', 'Yessenia', 'Yolanda', 'Yoshiko',\n    'Yvette', 'Yvonne', 'Zachariah', 'Zachary', 'Zachery', 'Zack', 'Zackary',\n    'Zackery', 'Zakary', 'Zander', 'Zane', 'Zaria', 'Zechariah', 'Zelda',\n    'Zella', 'Zelma', 'Zena', 'Zetta', 'Zion', 'Zita', 'Zoe', 'Zoey', 'Zoie',\n    'Zoila', 'Zola', 'Zora', 'Zula'\n];\n\n/**\n * Generate random username.\n * @returns {string} random username\n */\nfunction generateUsername() {\n    const name = RandomUtil.randomElement(names);\n    const suffix = RandomUtil.randomAlphanumStr(3);\n\n    return `${name}-${suffix}`;\n}\n\nmodule.exports = {\n    generateUsername\n};\n","/* global $, __filename */\n\nimport { getLogger } from 'jitsi-meet-logger';\nimport { $iq, Strophe } from 'strophe.js';\n\nimport {\n    ACTION_JINGLE_TR_RECEIVED,\n    ACTION_JINGLE_TR_SUCCESS,\n    createJingleEvent\n} from '../../service/statistics/AnalyticsEvents';\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\nimport Statistics from '../statistics/statistics';\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\nimport RandomUtil from '../util/RandomUtil';\n\nimport ConnectionPlugin from './ConnectionPlugin';\nimport JingleSessionPC from './JingleSessionPC';\n\nconst logger = getLogger(__filename);\n\n// XXX Strophe is build around the idea of chaining function calls so allow long\n// function call chains.\n/* eslint-disable newline-per-chained-call */\n\n/**\n *\n */\nexport default class JingleConnectionPlugin extends ConnectionPlugin {\n    /**\n     * Creates new <tt>JingleConnectionPlugin</tt>\n     * @param {XMPP} xmpp\n     * @param {EventEmitter} eventEmitter\n     * @param {Object} iceConfig an object that holds the iceConfig to be passed\n     * to the p2p and the jvb <tt>PeerConnection</tt>.\n     */\n    constructor(xmpp, eventEmitter, iceConfig) {\n        super();\n        this.xmpp = xmpp;\n        this.eventEmitter = eventEmitter;\n        this.sessions = {};\n        this.jvbIceConfig = iceConfig.jvb;\n        this.p2pIceConfig = iceConfig.p2p;\n        this.mediaConstraints = {\n            offerToReceiveAudio: true,\n            offerToReceiveVideo: true\n        };\n    }\n\n    /**\n     *\n     * @param connection\n     */\n    init(connection) {\n        super.init(connection);\n        this.connection.addHandler(this.onJingle.bind(this),\n            'urn:xmpp:jingle:1', 'iq', 'set', null, null);\n    }\n\n    /**\n     *\n     * @param iq\n     */\n    onJingle(iq) {\n        const sid = $(iq).find('jingle').attr('sid');\n        const action = $(iq).find('jingle').attr('action');\n        const fromJid = iq.getAttribute('from');\n\n        // send ack first\n        const ack = $iq({ type: 'result',\n            to: fromJid,\n            id: iq.getAttribute('id')\n        });\n\n        logger.debug(`on jingle ${action} from ${fromJid}`, iq);\n        let sess = this.sessions[sid];\n\n        if (action !== 'session-initiate') {\n            if (!sess) {\n                ack.attrs({ type: 'error' });\n                ack.c('error', { type: 'cancel' })\n                    .c('item-not-found', {\n                        xmlns: 'urn:ietf:params:xml:ns:xmpp-stanzas'\n                    })\n                    .up()\n                    .c('unknown-session', {\n                        xmlns: 'urn:xmpp:jingle:errors:1'\n                    });\n                logger.warn(`invalid session id: ${sid}`);\n                logger.debug(iq);\n                this.connection.send(ack);\n\n                return true;\n            }\n\n            // local jid is not checked\n            if (fromJid !== sess.remoteJid) {\n                logger.warn(\n                    'jid mismatch for session id', sid, sess.remoteJid, iq);\n                ack.attrs({ type: 'error' });\n                ack.c('error', { type: 'cancel' })\n                    .c('item-not-found', {\n                        xmlns: 'urn:ietf:params:xml:ns:xmpp-stanzas'\n                    })\n                    .up()\n                    .c('unknown-session', {\n                        xmlns: 'urn:xmpp:jingle:errors:1'\n                    });\n                this.connection.send(ack);\n\n                return true;\n            }\n        } else if (sess !== undefined) {\n            // Existing session with same session id. This might be out-of-order\n            // if the sess.remoteJid is the same as from.\n            ack.attrs({ type: 'error' });\n            ack.c('error', { type: 'cancel' })\n                .c('service-unavailable', {\n                    xmlns: 'urn:ietf:params:xml:ns:xmpp-stanzas'\n                })\n                .up();\n            logger.warn('duplicate session id', sid, iq);\n            this.connection.send(ack);\n\n            return true;\n        }\n        const now = window.performance.now();\n\n        // FIXME that should work most of the time, but we'd have to\n        // think how secure it is to assume that user with \"focus\"\n        // nickname is Jicofo.\n        const isP2P = Strophe.getResourceFromJid(fromJid) !== 'focus';\n\n        // see http://xmpp.org/extensions/xep-0166.html#concepts-session\n\n        switch (action) {\n        case 'session-initiate': {\n            logger.log('(TIME) received session-initiate:\\t', now);\n            const startMuted = $(iq).find('jingle>startmuted');\n\n            if (startMuted && startMuted.length > 0) {\n                const audioMuted = startMuted.attr('audio');\n                const videoMuted = startMuted.attr('video');\n\n                this.eventEmitter.emit(\n                    XMPPEvents.START_MUTED_FROM_FOCUS,\n                    audioMuted === 'true',\n                    videoMuted === 'true');\n            }\n\n            logger.info(\n                `Marking session from ${fromJid\n                } as ${isP2P ? '' : '*not*'} P2P`);\n\n            const iceConfig = isP2P ? this.p2pIceConfig : this.jvbIceConfig;\n\n            sess\n                = new JingleSessionPC(\n                    $(iq).find('jingle').attr('sid'),\n                    $(iq).attr('to'),\n                    fromJid,\n                    this.connection,\n                    this.mediaConstraints,\n\n                    // Makes a copy in order to prevent exception thrown on RN when either this.p2pIceConfig or\n                    // this.jvbIceConfig is modified and there's a PeerConnection instance holding a reference\n                    JSON.parse(JSON.stringify(iceConfig)),\n                    isP2P,\n                    /* initiator */ false);\n\n            this.sessions[sess.sid] = sess;\n\n            this.eventEmitter.emit(XMPPEvents.CALL_INCOMING,\n                sess, $(iq).find('>jingle'), now);\n            break;\n        }\n        case 'session-accept': {\n            this.eventEmitter.emit(\n                XMPPEvents.CALL_ACCEPTED, sess, $(iq).find('>jingle'));\n            break;\n        }\n        case 'content-modify': {\n            sess.modifyContents($(iq).find('>jingle'));\n            break;\n        }\n        case 'transport-info': {\n            this.eventEmitter.emit(\n                XMPPEvents.TRANSPORT_INFO, sess, $(iq).find('>jingle'));\n            break;\n        }\n        case 'session-terminate': {\n            logger.log('terminating...', sess.sid);\n            let reasonCondition = null;\n            let reasonText = null;\n\n            if ($(iq).find('>jingle>reason').length) {\n                reasonCondition\n                    = $(iq).find('>jingle>reason>:first')[0].tagName;\n                reasonText = $(iq).find('>jingle>reason>text').text();\n            }\n            this.terminate(sess.sid, reasonCondition, reasonText);\n            this.eventEmitter.emit(XMPPEvents.CALL_ENDED,\n                sess, reasonCondition, reasonText);\n            break;\n        }\n        case 'transport-replace':\n            logger.info('(TIME) Start transport replace:\\t', now);\n            Statistics.sendAnalytics(createJingleEvent(\n                ACTION_JINGLE_TR_RECEIVED,\n                {\n                    p2p: isP2P,\n                    value: now\n                }));\n\n            sess.replaceTransport($(iq).find('>jingle'), () => {\n                const successTime = window.performance.now();\n\n                logger.info('(TIME) Transport replace success:\\t', successTime);\n                Statistics.sendAnalytics(createJingleEvent(\n                    ACTION_JINGLE_TR_SUCCESS,\n                    {\n                        p2p: isP2P,\n                        value: successTime\n                    }));\n            }, error => {\n                GlobalOnErrorHandler.callErrorHandler(error);\n                logger.error('Transport replace failed', error);\n                sess.sendTransportReject();\n            });\n            break;\n        case 'addsource': // FIXME: proprietary, un-jingleish\n        case 'source-add': // FIXME: proprietary\n            sess.addRemoteStream($(iq).find('>jingle>content'));\n            break;\n        case 'removesource': // FIXME: proprietary, un-jingleish\n        case 'source-remove': // FIXME: proprietary\n            sess.removeRemoteStream($(iq).find('>jingle>content'));\n            break;\n        default:\n            logger.warn('jingle action not implemented', action);\n            ack.attrs({ type: 'error' });\n            ack.c('error', { type: 'cancel' })\n                .c('bad-request',\n                    { xmlns: 'urn:ietf:params:xml:ns:xmpp-stanzas' })\n                .up();\n            break;\n        }\n        this.connection.send(ack);\n\n        return true;\n    }\n\n    /**\n     * Creates new <tt>JingleSessionPC</tt> meant to be used in a direct P2P\n     * connection, configured as 'initiator'.\n     * @param {string} me our JID\n     * @param {string} peer remote participant's JID\n     * @return {JingleSessionPC}\n     */\n    newP2PJingleSession(me, peer) {\n        const sess\n            = new JingleSessionPC(\n                RandomUtil.randomHexString(12),\n                me,\n                peer,\n                this.connection,\n                this.mediaConstraints,\n                this.p2pIceConfig,\n                /* P2P */ true,\n                /* initiator */ true);\n\n        this.sessions[sess.sid] = sess;\n\n        return sess;\n    }\n\n    /**\n     *\n     * @param sid\n     * @param reasonCondition\n     * @param reasonText\n     */\n    terminate(sid, reasonCondition, reasonText) {\n        if (this.sessions.hasOwnProperty(sid)) {\n            if (this.sessions[sid].state !== 'ended') {\n                this.sessions[sid].onTerminated(reasonCondition, reasonText);\n            }\n            delete this.sessions[sid];\n        }\n    }\n\n    /**\n     *\n     */\n    getStunAndTurnCredentials() {\n        // get stun and turn configuration from server via xep-0215\n        // uses time-limited credentials as described in\n        // http://tools.ietf.org/html/draft-uberti-behave-turn-rest-00\n        //\n        // See https://modules.prosody.im/mod_turncredentials.html\n        // for a prosody module which implements this.\n        // Or the new implementation https://modules.prosody.im/mod_external_services which will be in prosody 0.12\n        //\n        // Currently, this doesn't work with updateIce and therefore credentials\n        // with a long validity have to be fetched before creating the\n        // peerconnection.\n        // TODO: implement refresh via updateIce as described in\n        //      https://code.google.com/p/webrtc/issues/detail?id=1650\n        this.connection.sendIQ(\n            $iq({ type: 'get',\n                to: this.xmpp.options.hosts.domain })\n                .c('services', { xmlns: 'urn:xmpp:extdisco:2' }),\n            v2Res => this.onReceiveStunAndTurnCredentials(v2Res),\n            v2Err => {\n                logger.warn('getting turn credentials with extdisco:2 failed, trying extdisco:1', v2Err);\n                this.connection.sendIQ(\n                    $iq({ type: 'get',\n                        to: this.xmpp.options.hosts.domain })\n                        .c('services', { xmlns: 'urn:xmpp:extdisco:1' }),\n                    v1Res => this.onReceiveStunAndTurnCredentials(v1Res),\n                    v1Err => {\n                        logger.warn('getting turn credentials failed', v1Err);\n                        logger.warn('is mod_turncredentials or similar installed and configured?');\n                    }\n                );\n            });\n    }\n\n    /**\n     * Parses response when querying for services using urn:xmpp:extdisco:1 or urn:xmpp:extdisco:2.\n     * Stores results in jvbIceConfig and p2pIceConfig.\n     * @param res The response iq.\n     * @return {boolean} Whether something was processed from the supplied message.\n     */\n    onReceiveStunAndTurnCredentials(res) {\n        const iceservers = [];\n\n        $(res).find('>services>service').each((idx, el) => {\n            // eslint-disable-next-line no-param-reassign\n            el = $(el);\n            const dict = {};\n            const type = el.attr('type');\n\n            switch (type) {\n            case 'stun':\n                dict.urls = `stun:${el.attr('host')}`;\n                if (el.attr('port')) {\n                    dict.urls += `:${el.attr('port')}`;\n                }\n                iceservers.push(dict);\n                break;\n            case 'turn':\n            case 'turns': {\n                dict.urls = `${type}:`;\n                dict.username = el.attr('username');\n                dict.urls += el.attr('host');\n                const port = el.attr('port');\n\n                if (port) {\n                    dict.urls += `:${el.attr('port')}`;\n                }\n                const transport = el.attr('transport');\n\n                if (transport && transport !== 'udp') {\n                    dict.urls += `?transport=${transport}`;\n                }\n\n                dict.credential = el.attr('password')\n                        || dict.credential;\n                iceservers.push(dict);\n                break;\n            }\n            }\n        });\n\n        const options = this.xmpp.options;\n\n        // Shuffle ICEServers for loadbalancing\n        for (let i = iceservers.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            const temp = iceservers[i];\n\n            iceservers[i] = iceservers[j];\n            iceservers[j] = temp;\n        }\n\n        let filter;\n\n        if (options.useTurnUdp) {\n            filter = s => s.urls.startsWith('turn');\n        } else {\n            // By default we filter out STUN and TURN/UDP and leave only TURN/TCP.\n            filter = s => s.urls.startsWith('turn') && (s.urls.indexOf('transport=tcp') >= 0);\n        }\n\n        this.jvbIceConfig.iceServers = iceservers.filter(filter);\n        this.p2pIceConfig.iceServers = iceservers;\n\n        return iceservers.length > 0;\n    }\n\n    /**\n     * Returns the data saved in 'updateLog' in a format to be logged.\n     */\n    getLog() {\n        const data = {};\n\n        Object.keys(this.sessions).forEach(sid => {\n            const session = this.sessions[sid];\n            const pc = session.peerconnection;\n\n            if (pc && pc.updateLog) {\n                // FIXME: should probably be a .dump call\n                data[`jingle_${sid}`] = {\n                    updateLog: pc.updateLog,\n                    stats: pc.stats,\n                    url: window.location.href\n                };\n            }\n        });\n\n        return data;\n    }\n}\n\n/* eslint-enable newline-per-chained-call */\n","/* global __filename */\n\nimport async from 'async';\nimport { getLogger } from 'jitsi-meet-logger';\n\nconst logger = getLogger(__filename);\n\n/**\n * A queue for async task execution.\n */\nexport default class AsyncQueue {\n    /**\n     * Creates new instance.\n     */\n    constructor() {\n        this._queue = async.queue(this._processQueueTasks.bind(this), 1);\n        this._stopped = false;\n    }\n\n    /**\n     * Removes any pending tasks from the queue.\n     */\n    clear() {\n        this._queue.kill();\n    }\n\n    /**\n     * Internal task processing implementation which makes things work.\n     */\n    _processQueueTasks(task, finishedCallback) {\n        try {\n            task(finishedCallback);\n        } catch (error) {\n            logger.error(`Task failed: ${error}`);\n            finishedCallback(error);\n        }\n    }\n\n    /**\n     * The 'task' function will be given a callback it MUST call with either:\n     *  1) No arguments if it was successful or\n     *  2) An error argument if there was an error\n     * If the task wants to process the success or failure of the task, it\n     * should pass the {@code callback} to the push function, e.g.:\n     * queue.push(task, (err) => {\n     *     if (err) {\n     *         // error handling\n     *     } else {\n     *         // success handling\n     *     }\n     * });\n     *\n     * @param {function} task - The task to be executed. See the description above.\n     * @param {function} [callback] - Optional callback to be called after the task has been executed.\n     */\n    push(task, callback) {\n        if (this._stopped) {\n            callback && callback(new Error('The queue has been stopped'));\n\n            return;\n        }\n        this._queue.push(task, callback);\n    }\n\n    /**\n     * Shutdowns the queue. All already queued tasks will execute, but no future tasks can be added. If a task is added\n     * after the queue has been shutdown then the callback will be called with an error.\n     */\n    shutdown() {\n        this._stopped = true;\n    }\n}\n","/*!\n * async\n * https://github.com/caolan/async\n *\n * Copyright 2010-2014 Caolan McMahon\n * Released under the MIT license\n */\n/*jshint onevar: false, indent:4 */\n/*global setImmediate: false, setTimeout: false, console: false */\n(function () {\n\n    var async = {};\n\n    // global on the server, window in the browser\n    var root, previous_async;\n\n    root = this;\n    if (root != null) {\n      previous_async = root.async;\n    }\n\n    async.noConflict = function () {\n        root.async = previous_async;\n        return async;\n    };\n\n    function only_once(fn) {\n        var called = false;\n        return function() {\n            if (called) throw new Error(\"Callback was already called.\");\n            called = true;\n            fn.apply(root, arguments);\n        }\n    }\n\n    //// cross-browser compatiblity functions ////\n\n    var _toString = Object.prototype.toString;\n\n    var _isArray = Array.isArray || function (obj) {\n        return _toString.call(obj) === '[object Array]';\n    };\n\n    var _each = function (arr, iterator) {\n        if (arr.forEach) {\n            return arr.forEach(iterator);\n        }\n        for (var i = 0; i < arr.length; i += 1) {\n            iterator(arr[i], i, arr);\n        }\n    };\n\n    var _map = function (arr, iterator) {\n        if (arr.map) {\n            return arr.map(iterator);\n        }\n        var results = [];\n        _each(arr, function (x, i, a) {\n            results.push(iterator(x, i, a));\n        });\n        return results;\n    };\n\n    var _reduce = function (arr, iterator, memo) {\n        if (arr.reduce) {\n            return arr.reduce(iterator, memo);\n        }\n        _each(arr, function (x, i, a) {\n            memo = iterator(memo, x, i, a);\n        });\n        return memo;\n    };\n\n    var _keys = function (obj) {\n        if (Object.keys) {\n            return Object.keys(obj);\n        }\n        var keys = [];\n        for (var k in obj) {\n            if (obj.hasOwnProperty(k)) {\n                keys.push(k);\n            }\n        }\n        return keys;\n    };\n\n    //// exported async module functions ////\n\n    //// nextTick implementation with browser-compatible fallback ////\n    if (typeof process === 'undefined' || !(process.nextTick)) {\n        if (typeof setImmediate === 'function') {\n            async.nextTick = function (fn) {\n                // not a direct alias for IE10 compatibility\n                setImmediate(fn);\n            };\n            async.setImmediate = async.nextTick;\n        }\n        else {\n            async.nextTick = function (fn) {\n                setTimeout(fn, 0);\n            };\n            async.setImmediate = async.nextTick;\n        }\n    }\n    else {\n        async.nextTick = process.nextTick;\n        if (typeof setImmediate !== 'undefined') {\n            async.setImmediate = function (fn) {\n              // not a direct alias for IE10 compatibility\n              setImmediate(fn);\n            };\n        }\n        else {\n            async.setImmediate = async.nextTick;\n        }\n    }\n\n    async.each = function (arr, iterator, callback) {\n        callback = callback || function () {};\n        if (!arr.length) {\n            return callback();\n        }\n        var completed = 0;\n        _each(arr, function (x) {\n            iterator(x, only_once(done) );\n        });\n        function done(err) {\n          if (err) {\n              callback(err);\n              callback = function () {};\n          }\n          else {\n              completed += 1;\n              if (completed >= arr.length) {\n                  callback();\n              }\n          }\n        }\n    };\n    async.forEach = async.each;\n\n    async.eachSeries = function (arr, iterator, callback) {\n        callback = callback || function () {};\n        if (!arr.length) {\n            return callback();\n        }\n        var completed = 0;\n        var iterate = function () {\n            iterator(arr[completed], function (err) {\n                if (err) {\n                    callback(err);\n                    callback = function () {};\n                }\n                else {\n                    completed += 1;\n                    if (completed >= arr.length) {\n                        callback();\n                    }\n                    else {\n                        iterate();\n                    }\n                }\n            });\n        };\n        iterate();\n    };\n    async.forEachSeries = async.eachSeries;\n\n    async.eachLimit = function (arr, limit, iterator, callback) {\n        var fn = _eachLimit(limit);\n        fn.apply(null, [arr, iterator, callback]);\n    };\n    async.forEachLimit = async.eachLimit;\n\n    var _eachLimit = function (limit) {\n\n        return function (arr, iterator, callback) {\n            callback = callback || function () {};\n            if (!arr.length || limit <= 0) {\n                return callback();\n            }\n            var completed = 0;\n            var started = 0;\n            var running = 0;\n\n            (function replenish () {\n                if (completed >= arr.length) {\n                    return callback();\n                }\n\n                while (running < limit && started < arr.length) {\n                    started += 1;\n                    running += 1;\n                    iterator(arr[started - 1], function (err) {\n                        if (err) {\n                            callback(err);\n                            callback = function () {};\n                        }\n                        else {\n                            completed += 1;\n                            running -= 1;\n                            if (completed >= arr.length) {\n                                callback();\n                            }\n                            else {\n                                replenish();\n                            }\n                        }\n                    });\n                }\n            })();\n        };\n    };\n\n\n    var doParallel = function (fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [async.each].concat(args));\n        };\n    };\n    var doParallelLimit = function(limit, fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [_eachLimit(limit)].concat(args));\n        };\n    };\n    var doSeries = function (fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [async.eachSeries].concat(args));\n        };\n    };\n\n\n    var _asyncMap = function (eachfn, arr, iterator, callback) {\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        if (!callback) {\n            eachfn(arr, function (x, callback) {\n                iterator(x.value, function (err) {\n                    callback(err);\n                });\n            });\n        } else {\n            var results = [];\n            eachfn(arr, function (x, callback) {\n                iterator(x.value, function (err, v) {\n                    results[x.index] = v;\n                    callback(err);\n                });\n            }, function (err) {\n                callback(err, results);\n            });\n        }\n    };\n    async.map = doParallel(_asyncMap);\n    async.mapSeries = doSeries(_asyncMap);\n    async.mapLimit = function (arr, limit, iterator, callback) {\n        return _mapLimit(limit)(arr, iterator, callback);\n    };\n\n    var _mapLimit = function(limit) {\n        return doParallelLimit(limit, _asyncMap);\n    };\n\n    // reduce only has a series version, as doing reduce in parallel won't\n    // work in many situations.\n    async.reduce = function (arr, memo, iterator, callback) {\n        async.eachSeries(arr, function (x, callback) {\n            iterator(memo, x, function (err, v) {\n                memo = v;\n                callback(err);\n            });\n        }, function (err) {\n            callback(err, memo);\n        });\n    };\n    // inject alias\n    async.inject = async.reduce;\n    // foldl alias\n    async.foldl = async.reduce;\n\n    async.reduceRight = function (arr, memo, iterator, callback) {\n        var reversed = _map(arr, function (x) {\n            return x;\n        }).reverse();\n        async.reduce(reversed, memo, iterator, callback);\n    };\n    // foldr alias\n    async.foldr = async.reduceRight;\n\n    var _filter = function (eachfn, arr, iterator, callback) {\n        var results = [];\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        eachfn(arr, function (x, callback) {\n            iterator(x.value, function (v) {\n                if (v) {\n                    results.push(x);\n                }\n                callback();\n            });\n        }, function (err) {\n            callback(_map(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), function (x) {\n                return x.value;\n            }));\n        });\n    };\n    async.filter = doParallel(_filter);\n    async.filterSeries = doSeries(_filter);\n    // select alias\n    async.select = async.filter;\n    async.selectSeries = async.filterSeries;\n\n    var _reject = function (eachfn, arr, iterator, callback) {\n        var results = [];\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        eachfn(arr, function (x, callback) {\n            iterator(x.value, function (v) {\n                if (!v) {\n                    results.push(x);\n                }\n                callback();\n            });\n        }, function (err) {\n            callback(_map(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), function (x) {\n                return x.value;\n            }));\n        });\n    };\n    async.reject = doParallel(_reject);\n    async.rejectSeries = doSeries(_reject);\n\n    var _detect = function (eachfn, arr, iterator, main_callback) {\n        eachfn(arr, function (x, callback) {\n            iterator(x, function (result) {\n                if (result) {\n                    main_callback(x);\n                    main_callback = function () {};\n                }\n                else {\n                    callback();\n                }\n            });\n        }, function (err) {\n            main_callback();\n        });\n    };\n    async.detect = doParallel(_detect);\n    async.detectSeries = doSeries(_detect);\n\n    async.some = function (arr, iterator, main_callback) {\n        async.each(arr, function (x, callback) {\n            iterator(x, function (v) {\n                if (v) {\n                    main_callback(true);\n                    main_callback = function () {};\n                }\n                callback();\n            });\n        }, function (err) {\n            main_callback(false);\n        });\n    };\n    // any alias\n    async.any = async.some;\n\n    async.every = function (arr, iterator, main_callback) {\n        async.each(arr, function (x, callback) {\n            iterator(x, function (v) {\n                if (!v) {\n                    main_callback(false);\n                    main_callback = function () {};\n                }\n                callback();\n            });\n        }, function (err) {\n            main_callback(true);\n        });\n    };\n    // all alias\n    async.all = async.every;\n\n    async.sortBy = function (arr, iterator, callback) {\n        async.map(arr, function (x, callback) {\n            iterator(x, function (err, criteria) {\n                if (err) {\n                    callback(err);\n                }\n                else {\n                    callback(null, {value: x, criteria: criteria});\n                }\n            });\n        }, function (err, results) {\n            if (err) {\n                return callback(err);\n            }\n            else {\n                var fn = function (left, right) {\n                    var a = left.criteria, b = right.criteria;\n                    return a < b ? -1 : a > b ? 1 : 0;\n                };\n                callback(null, _map(results.sort(fn), function (x) {\n                    return x.value;\n                }));\n            }\n        });\n    };\n\n    async.auto = function (tasks, callback) {\n        callback = callback || function () {};\n        var keys = _keys(tasks);\n        var remainingTasks = keys.length\n        if (!remainingTasks) {\n            return callback();\n        }\n\n        var results = {};\n\n        var listeners = [];\n        var addListener = function (fn) {\n            listeners.unshift(fn);\n        };\n        var removeListener = function (fn) {\n            for (var i = 0; i < listeners.length; i += 1) {\n                if (listeners[i] === fn) {\n                    listeners.splice(i, 1);\n                    return;\n                }\n            }\n        };\n        var taskComplete = function () {\n            remainingTasks--\n            _each(listeners.slice(0), function (fn) {\n                fn();\n            });\n        };\n\n        addListener(function () {\n            if (!remainingTasks) {\n                var theCallback = callback;\n                // prevent final callback from calling itself if it errors\n                callback = function () {};\n\n                theCallback(null, results);\n            }\n        });\n\n        _each(keys, function (k) {\n            var task = _isArray(tasks[k]) ? tasks[k]: [tasks[k]];\n            var taskCallback = function (err) {\n                var args = Array.prototype.slice.call(arguments, 1);\n                if (args.length <= 1) {\n                    args = args[0];\n                }\n                if (err) {\n                    var safeResults = {};\n                    _each(_keys(results), function(rkey) {\n                        safeResults[rkey] = results[rkey];\n                    });\n                    safeResults[k] = args;\n                    callback(err, safeResults);\n                    // stop subsequent errors hitting callback multiple times\n                    callback = function () {};\n                }\n                else {\n                    results[k] = args;\n                    async.setImmediate(taskComplete);\n                }\n            };\n            var requires = task.slice(0, Math.abs(task.length - 1)) || [];\n            var ready = function () {\n                return _reduce(requires, function (a, x) {\n                    return (a && results.hasOwnProperty(x));\n                }, true) && !results.hasOwnProperty(k);\n            };\n            if (ready()) {\n                task[task.length - 1](taskCallback, results);\n            }\n            else {\n                var listener = function () {\n                    if (ready()) {\n                        removeListener(listener);\n                        task[task.length - 1](taskCallback, results);\n                    }\n                };\n                addListener(listener);\n            }\n        });\n    };\n\n    async.retry = function(times, task, callback) {\n        var DEFAULT_TIMES = 5;\n        var attempts = [];\n        // Use defaults if times not passed\n        if (typeof times === 'function') {\n            callback = task;\n            task = times;\n            times = DEFAULT_TIMES;\n        }\n        // Make sure times is a number\n        times = parseInt(times, 10) || DEFAULT_TIMES;\n        var wrappedTask = function(wrappedCallback, wrappedResults) {\n            var retryAttempt = function(task, finalAttempt) {\n                return function(seriesCallback) {\n                    task(function(err, result){\n                        seriesCallback(!err || finalAttempt, {err: err, result: result});\n                    }, wrappedResults);\n                };\n            };\n            while (times) {\n                attempts.push(retryAttempt(task, !(times-=1)));\n            }\n            async.series(attempts, function(done, data){\n                data = data[data.length - 1];\n                (wrappedCallback || callback)(data.err, data.result);\n            });\n        }\n        // If a callback is passed, run this as a controll flow\n        return callback ? wrappedTask() : wrappedTask\n    };\n\n    async.waterfall = function (tasks, callback) {\n        callback = callback || function () {};\n        if (!_isArray(tasks)) {\n          var err = new Error('First argument to waterfall must be an array of functions');\n          return callback(err);\n        }\n        if (!tasks.length) {\n            return callback();\n        }\n        var wrapIterator = function (iterator) {\n            return function (err) {\n                if (err) {\n                    callback.apply(null, arguments);\n                    callback = function () {};\n                }\n                else {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    var next = iterator.next();\n                    if (next) {\n                        args.push(wrapIterator(next));\n                    }\n                    else {\n                        args.push(callback);\n                    }\n                    async.setImmediate(function () {\n                        iterator.apply(null, args);\n                    });\n                }\n            };\n        };\n        wrapIterator(async.iterator(tasks))();\n    };\n\n    var _parallel = function(eachfn, tasks, callback) {\n        callback = callback || function () {};\n        if (_isArray(tasks)) {\n            eachfn.map(tasks, function (fn, callback) {\n                if (fn) {\n                    fn(function (err) {\n                        var args = Array.prototype.slice.call(arguments, 1);\n                        if (args.length <= 1) {\n                            args = args[0];\n                        }\n                        callback.call(null, err, args);\n                    });\n                }\n            }, callback);\n        }\n        else {\n            var results = {};\n            eachfn.each(_keys(tasks), function (k, callback) {\n                tasks[k](function (err) {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    if (args.length <= 1) {\n                        args = args[0];\n                    }\n                    results[k] = args;\n                    callback(err);\n                });\n            }, function (err) {\n                callback(err, results);\n            });\n        }\n    };\n\n    async.parallel = function (tasks, callback) {\n        _parallel({ map: async.map, each: async.each }, tasks, callback);\n    };\n\n    async.parallelLimit = function(tasks, limit, callback) {\n        _parallel({ map: _mapLimit(limit), each: _eachLimit(limit) }, tasks, callback);\n    };\n\n    async.series = function (tasks, callback) {\n        callback = callback || function () {};\n        if (_isArray(tasks)) {\n            async.mapSeries(tasks, function (fn, callback) {\n                if (fn) {\n                    fn(function (err) {\n                        var args = Array.prototype.slice.call(arguments, 1);\n                        if (args.length <= 1) {\n                            args = args[0];\n                        }\n                        callback.call(null, err, args);\n                    });\n                }\n            }, callback);\n        }\n        else {\n            var results = {};\n            async.eachSeries(_keys(tasks), function (k, callback) {\n                tasks[k](function (err) {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    if (args.length <= 1) {\n                        args = args[0];\n                    }\n                    results[k] = args;\n                    callback(err);\n                });\n            }, function (err) {\n                callback(err, results);\n            });\n        }\n    };\n\n    async.iterator = function (tasks) {\n        var makeCallback = function (index) {\n            var fn = function () {\n                if (tasks.length) {\n                    tasks[index].apply(null, arguments);\n                }\n                return fn.next();\n            };\n            fn.next = function () {\n                return (index < tasks.length - 1) ? makeCallback(index + 1): null;\n            };\n            return fn;\n        };\n        return makeCallback(0);\n    };\n\n    async.apply = function (fn) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        return function () {\n            return fn.apply(\n                null, args.concat(Array.prototype.slice.call(arguments))\n            );\n        };\n    };\n\n    var _concat = function (eachfn, arr, fn, callback) {\n        var r = [];\n        eachfn(arr, function (x, cb) {\n            fn(x, function (err, y) {\n                r = r.concat(y || []);\n                cb(err);\n            });\n        }, function (err) {\n            callback(err, r);\n        });\n    };\n    async.concat = doParallel(_concat);\n    async.concatSeries = doSeries(_concat);\n\n    async.whilst = function (test, iterator, callback) {\n        if (test()) {\n            iterator(function (err) {\n                if (err) {\n                    return callback(err);\n                }\n                async.whilst(test, iterator, callback);\n            });\n        }\n        else {\n            callback();\n        }\n    };\n\n    async.doWhilst = function (iterator, test, callback) {\n        iterator(function (err) {\n            if (err) {\n                return callback(err);\n            }\n            var args = Array.prototype.slice.call(arguments, 1);\n            if (test.apply(null, args)) {\n                async.doWhilst(iterator, test, callback);\n            }\n            else {\n                callback();\n            }\n        });\n    };\n\n    async.until = function (test, iterator, callback) {\n        if (!test()) {\n            iterator(function (err) {\n                if (err) {\n                    return callback(err);\n                }\n                async.until(test, iterator, callback);\n            });\n        }\n        else {\n            callback();\n        }\n    };\n\n    async.doUntil = function (iterator, test, callback) {\n        iterator(function (err) {\n            if (err) {\n                return callback(err);\n            }\n            var args = Array.prototype.slice.call(arguments, 1);\n            if (!test.apply(null, args)) {\n                async.doUntil(iterator, test, callback);\n            }\n            else {\n                callback();\n            }\n        });\n    };\n\n    async.queue = function (worker, concurrency) {\n        if (concurrency === undefined) {\n            concurrency = 1;\n        }\n        function _insert(q, data, pos, callback) {\n          if (!q.started){\n            q.started = true;\n          }\n          if (!_isArray(data)) {\n              data = [data];\n          }\n          if(data.length == 0) {\n             // call drain immediately if there are no tasks\n             return async.setImmediate(function() {\n                 if (q.drain) {\n                     q.drain();\n                 }\n             });\n          }\n          _each(data, function(task) {\n              var item = {\n                  data: task,\n                  callback: typeof callback === 'function' ? callback : null\n              };\n\n              if (pos) {\n                q.tasks.unshift(item);\n              } else {\n                q.tasks.push(item);\n              }\n\n              if (q.saturated && q.tasks.length === q.concurrency) {\n                  q.saturated();\n              }\n              async.setImmediate(q.process);\n          });\n        }\n\n        var workers = 0;\n        var q = {\n            tasks: [],\n            concurrency: concurrency,\n            saturated: null,\n            empty: null,\n            drain: null,\n            started: false,\n            paused: false,\n            push: function (data, callback) {\n              _insert(q, data, false, callback);\n            },\n            kill: function () {\n              q.drain = null;\n              q.tasks = [];\n            },\n            unshift: function (data, callback) {\n              _insert(q, data, true, callback);\n            },\n            process: function () {\n                if (!q.paused && workers < q.concurrency && q.tasks.length) {\n                    var task = q.tasks.shift();\n                    if (q.empty && q.tasks.length === 0) {\n                        q.empty();\n                    }\n                    workers += 1;\n                    var next = function () {\n                        workers -= 1;\n                        if (task.callback) {\n                            task.callback.apply(task, arguments);\n                        }\n                        if (q.drain && q.tasks.length + workers === 0) {\n                            q.drain();\n                        }\n                        q.process();\n                    };\n                    var cb = only_once(next);\n                    worker(task.data, cb);\n                }\n            },\n            length: function () {\n                return q.tasks.length;\n            },\n            running: function () {\n                return workers;\n            },\n            idle: function() {\n                return q.tasks.length + workers === 0;\n            },\n            pause: function () {\n                if (q.paused === true) { return; }\n                q.paused = true;\n                q.process();\n            },\n            resume: function () {\n                if (q.paused === false) { return; }\n                q.paused = false;\n                q.process();\n            }\n        };\n        return q;\n    };\n    \n    async.priorityQueue = function (worker, concurrency) {\n        \n        function _compareTasks(a, b){\n          return a.priority - b.priority;\n        };\n        \n        function _binarySearch(sequence, item, compare) {\n          var beg = -1,\n              end = sequence.length - 1;\n          while (beg < end) {\n            var mid = beg + ((end - beg + 1) >>> 1);\n            if (compare(item, sequence[mid]) >= 0) {\n              beg = mid;\n            } else {\n              end = mid - 1;\n            }\n          }\n          return beg;\n        }\n        \n        function _insert(q, data, priority, callback) {\n          if (!q.started){\n            q.started = true;\n          }\n          if (!_isArray(data)) {\n              data = [data];\n          }\n          if(data.length == 0) {\n             // call drain immediately if there are no tasks\n             return async.setImmediate(function() {\n                 if (q.drain) {\n                     q.drain();\n                 }\n             });\n          }\n          _each(data, function(task) {\n              var item = {\n                  data: task,\n                  priority: priority,\n                  callback: typeof callback === 'function' ? callback : null\n              };\n              \n              q.tasks.splice(_binarySearch(q.tasks, item, _compareTasks) + 1, 0, item);\n\n              if (q.saturated && q.tasks.length === q.concurrency) {\n                  q.saturated();\n              }\n              async.setImmediate(q.process);\n          });\n        }\n        \n        // Start with a normal queue\n        var q = async.queue(worker, concurrency);\n        \n        // Override push to accept second parameter representing priority\n        q.push = function (data, priority, callback) {\n          _insert(q, data, priority, callback);\n        };\n        \n        // Remove unshift function\n        delete q.unshift;\n\n        return q;\n    };\n\n    async.cargo = function (worker, payload) {\n        var working     = false,\n            tasks       = [];\n\n        var cargo = {\n            tasks: tasks,\n            payload: payload,\n            saturated: null,\n            empty: null,\n            drain: null,\n            drained: true,\n            push: function (data, callback) {\n                if (!_isArray(data)) {\n                    data = [data];\n                }\n                _each(data, function(task) {\n                    tasks.push({\n                        data: task,\n                        callback: typeof callback === 'function' ? callback : null\n                    });\n                    cargo.drained = false;\n                    if (cargo.saturated && tasks.length === payload) {\n                        cargo.saturated();\n                    }\n                });\n                async.setImmediate(cargo.process);\n            },\n            process: function process() {\n                if (working) return;\n                if (tasks.length === 0) {\n                    if(cargo.drain && !cargo.drained) cargo.drain();\n                    cargo.drained = true;\n                    return;\n                }\n\n                var ts = typeof payload === 'number'\n                            ? tasks.splice(0, payload)\n                            : tasks.splice(0, tasks.length);\n\n                var ds = _map(ts, function (task) {\n                    return task.data;\n                });\n\n                if(cargo.empty) cargo.empty();\n                working = true;\n                worker(ds, function () {\n                    working = false;\n\n                    var args = arguments;\n                    _each(ts, function (data) {\n                        if (data.callback) {\n                            data.callback.apply(null, args);\n                        }\n                    });\n\n                    process();\n                });\n            },\n            length: function () {\n                return tasks.length;\n            },\n            running: function () {\n                return working;\n            }\n        };\n        return cargo;\n    };\n\n    var _console_fn = function (name) {\n        return function (fn) {\n            var args = Array.prototype.slice.call(arguments, 1);\n            fn.apply(null, args.concat([function (err) {\n                var args = Array.prototype.slice.call(arguments, 1);\n                if (typeof console !== 'undefined') {\n                    if (err) {\n                        if (console.error) {\n                            console.error(err);\n                        }\n                    }\n                    else if (console[name]) {\n                        _each(args, function (x) {\n                            console[name](x);\n                        });\n                    }\n                }\n            }]));\n        };\n    };\n    async.log = _console_fn('log');\n    async.dir = _console_fn('dir');\n    /*async.info = _console_fn('info');\n    async.warn = _console_fn('warn');\n    async.error = _console_fn('error');*/\n\n    async.memoize = function (fn, hasher) {\n        var memo = {};\n        var queues = {};\n        hasher = hasher || function (x) {\n            return x;\n        };\n        var memoized = function () {\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            var key = hasher.apply(null, args);\n            if (key in memo) {\n                async.nextTick(function () {\n                    callback.apply(null, memo[key]);\n                });\n            }\n            else if (key in queues) {\n                queues[key].push(callback);\n            }\n            else {\n                queues[key] = [callback];\n                fn.apply(null, args.concat([function () {\n                    memo[key] = arguments;\n                    var q = queues[key];\n                    delete queues[key];\n                    for (var i = 0, l = q.length; i < l; i++) {\n                      q[i].apply(null, arguments);\n                    }\n                }]));\n            }\n        };\n        memoized.memo = memo;\n        memoized.unmemoized = fn;\n        return memoized;\n    };\n\n    async.unmemoize = function (fn) {\n      return function () {\n        return (fn.unmemoized || fn).apply(null, arguments);\n      };\n    };\n\n    async.times = function (count, iterator, callback) {\n        var counter = [];\n        for (var i = 0; i < count; i++) {\n            counter.push(i);\n        }\n        return async.map(counter, iterator, callback);\n    };\n\n    async.timesSeries = function (count, iterator, callback) {\n        var counter = [];\n        for (var i = 0; i < count; i++) {\n            counter.push(i);\n        }\n        return async.mapSeries(counter, iterator, callback);\n    };\n\n    async.seq = function (/* functions... */) {\n        var fns = arguments;\n        return function () {\n            var that = this;\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            async.reduce(fns, args, function (newargs, fn, cb) {\n                fn.apply(that, newargs.concat([function () {\n                    var err = arguments[0];\n                    var nextargs = Array.prototype.slice.call(arguments, 1);\n                    cb(err, nextargs);\n                }]))\n            },\n            function (err, results) {\n                callback.apply(that, [err].concat(results));\n            });\n        };\n    };\n\n    async.compose = function (/* functions... */) {\n      return async.seq.apply(null, Array.prototype.reverse.call(arguments));\n    };\n\n    var _applyEach = function (eachfn, fns /*args...*/) {\n        var go = function () {\n            var that = this;\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            return eachfn(fns, function (fn, cb) {\n                fn.apply(that, args.concat([cb]));\n            },\n            callback);\n        };\n        if (arguments.length > 2) {\n            var args = Array.prototype.slice.call(arguments, 2);\n            return go.apply(this, args);\n        }\n        else {\n            return go;\n        }\n    };\n    async.applyEach = doParallel(_applyEach);\n    async.applyEachSeries = doSeries(_applyEach);\n\n    async.forever = function (fn, callback) {\n        function next(err) {\n            if (err) {\n                if (callback) {\n                    return callback(err);\n                }\n                throw err;\n            }\n            fn(next);\n        }\n        next();\n    };\n\n    // Node.js\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = async;\n    }\n    // AMD / RequireJS\n    else if (typeof define !== 'undefined' && define.amd) {\n        define([], function () {\n            return async;\n        });\n    }\n    // included directly via <script> tag\n    else {\n        root.async = async;\n    }\n\n}());\n","/**\n * Implements a simple hash code for a string (see\n * https://en.wikipedia.org/wiki/Java_hashCode()).\n *\n * @param {string} The string to return a hash of.\n * @return {Number} the integer hash code of the string.\n */\nfunction integerHash(string) {\n    if (!string) {\n        return 0;\n    }\n\n    let char, hash = 0, i;\n\n    for (i = 0; i < string.length; i++) {\n        char = string.charCodeAt(i);\n        hash += char * Math.pow(31, string.length - 1 - i);\n        hash = Math.abs(hash | 0); // eslint-disable-line no-bitwise\n    }\n\n    return hash;\n}\n\nmodule.exports = { integerHash };\n","/* global __filename */\nimport { getLogger } from 'jitsi-meet-logger';\n\nimport Listenable from '../util/Listenable';\n\nimport * as JingleSessionState from './JingleSessionState';\n\nconst logger = getLogger(__filename);\n\n/**\n * JingleSession provides an API to manage a single Jingle session. We will\n * have different implementations depending on the underlying interface used\n * (i.e. WebRTC and ORTC) and here we hold the code common to all of them.\n */\nexport default class JingleSession extends Listenable {\n\n    /* eslint-disable max-params */\n\n    /**\n     * Creates new <tt>JingleSession</tt>.\n     * @param {string} sid the Jingle session identifier\n     * @param {string} localJid our JID\n     * @param {string} remoteJid the JID of the remote peer\n     * @param {XmppConnection} connection the XMPP connection\n     * @param {Object} mediaConstraints the media constraints object passed to\n     * the PeerConnection onCreateAnswer/Offer as defined by the WebRTC.\n     * @param {Object} iceConfig the ICE servers config object as defined by\n     * the WebRTC. Passed to the PeerConnection's constructor.\n     * @param {boolean} isInitiator indicates if it will be the side which\n     * initiates the session.\n     */\n    constructor(\n            sid,\n            localJid,\n            remoteJid,\n            connection,\n            mediaConstraints,\n            iceConfig,\n            isInitiator) {\n        super();\n        this.sid = sid;\n        this.localJid = localJid;\n        this.remoteJid = remoteJid;\n        this.connection = connection;\n        this.mediaConstraints = mediaConstraints;\n        this.iceConfig = iceConfig;\n\n        /**\n         * Indicates whether this instance is an initiator or an answerer of\n         * the Jingle session.\n         * @type {boolean}\n         */\n        this.isInitiator = isInitiator;\n\n        /**\n         * Whether to use dripping or not. Dripping is sending trickle\n         * candidates not one-by-one.\n         */\n        this.usedrip = true;\n\n        /**\n         *  When dripping is used, stores ICE candidates which are to be sent.\n         */\n        this.dripContainer = [];\n\n        /**\n         * The chat room instance associated with the session.\n         * @type {ChatRoom}\n         */\n        this.room = null;\n\n        /**\n         * Jingle session state - uninitialized until {@link initialize} is\n         * called @type {JingleSessionState}\n         */\n        this.state = null;\n\n        /**\n         * The RTC service instance\n         * @type {RTC}\n         */\n        this.rtc = null;\n    }\n\n    /**\n     * Returns XMPP address of this session's initiator.\n     * @return {string}\n     */\n    get initiatorJid() {\n        return this.isInitiator ? this.localJid : this.remoteJid;\n    }\n\n    /**\n     * Returns XMPP address of this session's responder.\n     * @return {string}\n     */\n    get responderJid() {\n        return this.isInitiator ? this.remoteJid : this.localJid;\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     * Prepares this object to initiate a session.\n     * @param {ChatRoom} room the chat room for the conference associated with\n     * this session\n     * @param {RTC} rtc the RTC service instance\n     * @param {object} options - the options, see implementing class's\n     * {@link #doInitialize} description for more details.\n     */\n    initialize(room, rtc, options) {\n        if (this.state !== null) {\n            const errmsg\n                = `attempt to initiate on session ${this.sid}\n                   in state ${this.state}`;\n\n            logger.error(errmsg);\n            throw new Error(errmsg);\n        }\n        this.room = room;\n        this.rtc = rtc;\n        this.state = JingleSessionState.PENDING;\n        this.doInitialize(options);\n    }\n\n    /**\n     * The implementing class finishes initialization here. Called at the end of\n     * {@link initialize}.\n     * @param {Object} options - The options specific to the implementing class.\n     * @protected\n     */\n    doInitialize(options) { } // eslint-disable-line no-unused-vars, no-empty-function, max-len\n\n    /* eslint-disable no-unused-vars, no-empty-function */\n\n    /**\n     * Adds the ICE candidates found in the 'contents' array as remote\n     * candidates?\n     * Note: currently only used on transport-info\n     *\n     * @param contents\n     */\n    addIceCandidates(contents) {}\n\n    /* eslint-enable no-unused-vars, no-empty-function */\n\n    /**\n     * Returns current state of this <tt>JingleSession</tt> instance.\n     * @returns {JingleSessionState} the current state of this session instance.\n     */\n    getState() {\n        return this.state;\n    }\n\n    /* eslint-disable no-unused-vars, no-empty-function */\n\n    /**\n     * Handles an 'add-source' event.\n     *\n     * @param contents an array of Jingle 'content' elements.\n     */\n    addSources(contents) {}\n\n    /**\n     * Handles a 'remove-source' event.\n     *\n     * @param contents an array of Jingle 'content' elements.\n     */\n    removeSources(contents) {}\n\n    /**\n     * Terminates this Jingle session by sending session-terminate\n     * @param success a callback called once the 'session-terminate' packet has\n     * been acknowledged with RESULT.\n     * @param failure a callback called when either timeout occurs or ERROR\n     * response is received.\n     * @param {Object} options\n     * @param {string} [options.reason] XMPP Jingle error condition\n     * @param {string} [options.reasonDescription] some meaningful error message\n     * @param {boolean} [options.requestRestart=false] set to true to ask Jicofo to start a new session one this once is\n     * terminated.\n     * @param {boolean} [options.sendSessionTerminate=true] set to false to skip\n     * sending session-terminate. It may not make sense to send it if the XMPP\n     * connection has been closed already or if the remote peer has disconnected\n     */\n    terminate(success, failure, options) {}\n\n    /**\n     * Handles an offer from the remote peer (prepares to accept a session).\n     * @param jingle the 'jingle' XML element.\n     * @param success callback called when we the incoming session has been\n     * accepted\n     * @param failure callback called when we fail for any reason, will supply\n     * error object with details(which is meant more to be printed to the logger\n     * than analysed in the code, as the error is unrecoverable anyway)\n     */\n    acceptOffer(jingle, success, failure) {}\n\n    /**\n     * Returns the JID of the initiator of the jingle session.\n     */\n    _getInitiatorJid() {\n        return this.isInitiator ? this.localJid : this.remoteJid;\n    }\n\n    /* eslint-enable no-unused-vars, no-empty-function */\n}\n","/* global __filename */\n\nimport { getLogger } from 'jitsi-meet-logger';\n\nimport * as MediaType from '../../service/RTC/MediaType';\nimport * as SignalingEvents from '../../service/RTC/SignalingEvents';\nimport SignalingLayer from '../../service/RTC/SignalingLayer';\n\nconst logger = getLogger(__filename);\n\n/**\n * Default XMPP implementation of the {@link SignalingLayer} interface. Obtains\n * the data from the MUC presence.\n */\nexport default class SignalingLayerImpl extends SignalingLayer {\n    /**\n     * Creates new instance.\n     */\n    constructor() {\n        super();\n\n        /**\n         * A map that stores SSRCs of remote streams. And is used only locally\n         * We store the mapping when jingle is received, and later is used\n         * onaddstream webrtc event where we have only the ssrc\n         * FIXME: This map got filled and never cleaned and can grow during long\n         * conference\n         * @type {Map<number, string>} maps SSRC number to jid\n         */\n        this.ssrcOwners = new Map();\n\n        /**\n         *\n         * @type {ChatRoom|null}\n         */\n        this.chatRoom = null;\n    }\n\n    /**\n     * Sets the <tt>ChatRoom</tt> instance used and binds presence listeners.\n     * @param {ChatRoom} room\n     */\n    setChatRoom(room) {\n        const oldChatRoom = this.chatRoom;\n\n        this.chatRoom = room;\n        if (oldChatRoom) {\n            oldChatRoom.removePresenceListener(\n                'audiomuted', this._audioMuteHandler);\n            oldChatRoom.removePresenceListener(\n                'videomuted', this._videoMuteHandler);\n            oldChatRoom.removePresenceListener(\n                'videoType', this._videoTypeHandler);\n        }\n        if (room) {\n            // SignalingEvents\n            this._audioMuteHandler = (node, from) => {\n                this.eventEmitter.emit(\n                    SignalingEvents.PEER_MUTED_CHANGED,\n                    from, MediaType.AUDIO, node.value === 'true');\n            };\n            room.addPresenceListener('audiomuted', this._audioMuteHandler);\n\n            this._videoMuteHandler = (node, from) => {\n                this.eventEmitter.emit(\n                    SignalingEvents.PEER_MUTED_CHANGED,\n                    from, MediaType.VIDEO, node.value === 'true');\n            };\n            room.addPresenceListener('videomuted', this._videoMuteHandler);\n\n            this._videoTypeHandler = (node, from) => {\n                this.eventEmitter.emit(\n                    SignalingEvents.PEER_VIDEO_TYPE_CHANGED,\n                    from, node.value);\n            };\n            room.addPresenceListener('videoType', this._videoTypeHandler);\n        }\n    }\n\n    /**\n     * @inheritDoc\n     */\n    getPeerMediaInfo(owner, mediaType) {\n        if (this.chatRoom) {\n            return this.chatRoom.getMediaPresenceInfo(owner, mediaType);\n        }\n        logger.error('Requested peer media info, before room was set');\n    }\n\n    /**\n     * @inheritDoc\n     */\n    getSSRCOwner(ssrc) {\n        return this.ssrcOwners.get(ssrc);\n    }\n\n    /**\n     * Set an SSRC owner.\n     * @param {number} ssrc an SSRC to be owned\n     * @param {string} endpointId owner's ID (MUC nickname)\n     * @throws TypeError if <tt>ssrc</tt> is not a number\n     */\n    setSSRCOwner(ssrc, endpointId) {\n        if (typeof ssrc !== 'number') {\n            throw new TypeError(`SSRC(${ssrc}) must be a number`);\n        }\n        this.ssrcOwners.set(ssrc, endpointId);\n    }\n}\n","\nimport Listenable from '../../modules/util/Listenable';\n\n/**\n * An object that carries the info about specific media type advertised by\n * participant in the signaling channel.\n * @typedef {Object} PeerMediaInfo\n * @property {boolean} muted indicates if the media is currently muted\n * @property {VideoType|undefined} videoType the type of the video if applicable\n */\n\n/**\n * Interface used to expose the information carried over the signaling channel\n * which is not available to the RTC module in the media SDP.\n *\n * @interface SignalingLayer\n */\nexport default class SignalingLayer extends Listenable {\n\n    /**\n     * Obtains the endpoint ID for given SSRC.\n     * @param {number} ssrc the SSRC number.\n     * @return {string|null} the endpoint ID for given media SSRC.\n     */\n    getSSRCOwner(ssrc) { // eslint-disable-line no-unused-vars\n        throw new Error('not implemented');\n    }\n\n    /**\n     * Obtains the info about given media advertised in the MUC presence of\n     * the participant identified by the given MUC JID.\n     * @param {string} owner the MUC jid of the participant for whom\n     * {@link PeerMediaInfo} will be obtained.\n     * @param {MediaType} mediaType the type of the media for which presence\n     * info will be obtained.\n     * @return {PeerMediaInfo|null} presenceInfo an object with media presence\n     * info or <tt>null</tt> either if there is no presence available for given\n     * JID or if the media type given is invalid.\n     */\n    getPeerMediaInfo(owner, mediaType) { // eslint-disable-line no-unused-vars\n        throw new Error('not implemented');\n    }\n}\n","import { Strophe } from 'strophe.js';\n\nimport ConnectionPlugin from './ConnectionPlugin';\n\n/**\n *  Logs raw stanzas and makes them available for download as JSON\n */\nclass StropheLogger extends ConnectionPlugin {\n    /**\n     *\n     */\n    constructor() {\n        super();\n        this.log = [];\n    }\n\n    /**\n     *\n     * @param connection\n     */\n    init(connection) {\n        super.init(connection);\n        this.connection.rawInput = this.logIncoming.bind(this);\n        this.connection.rawOutput = this.logOutgoing.bind(this);\n    }\n\n    /**\n     *\n     * @param stanza\n     */\n    logIncoming(stanza) {\n        this.log.push([ new Date().getTime(), 'incoming', stanza ]);\n    }\n\n    /**\n     *\n     * @param stanza\n     */\n    logOutgoing(stanza) {\n        this.log.push([ new Date().getTime(), 'outgoing', stanza ]);\n    }\n}\n\n/**\n *\n */\nexport default function() {\n    Strophe.addConnectionPlugin('logger', new StropheLogger());\n}\n","/* global $ */\n\nimport { getLogger } from 'jitsi-meet-logger';\nimport { $iq } from 'strophe.js';\n\nimport ConnectionPlugin from './ConnectionPlugin';\n\nconst logger = getLogger(__filename);\n\nconst RAYO_XMLNS = 'urn:xmpp:rayo:1';\n\n/**\n *\n */\nexport default class RayoConnectionPlugin extends ConnectionPlugin {\n    /**\n     *\n     * @param connection\n     */\n    init(connection) {\n        super.init(connection);\n\n        this.connection.addHandler(\n            this.onRayo.bind(this), RAYO_XMLNS, 'iq', 'set', null, null);\n    }\n\n    /**\n     *\n     * @param iq\n     */\n    onRayo(iq) {\n        logger.info('Rayo IQ', iq);\n    }\n\n    /* eslint-disable max-params */\n\n    /**\n     *\n     * @param to\n     * @param from\n     * @param roomName\n     * @param roomPass\n     * @param focusMucJid\n     */\n    dial(to, from, roomName, roomPass, focusMucJid) {\n        return new Promise((resolve, reject) => {\n            if (!focusMucJid) {\n                reject(new Error('Internal error!'));\n\n                return;\n            }\n            const req = $iq({\n                type: 'set',\n                to: focusMucJid\n            });\n\n            req.c('dial', {\n                xmlns: RAYO_XMLNS,\n                to,\n                from\n            });\n            req.c('header', {\n                name: 'JvbRoomName',\n                value: roomName\n            }).up();\n\n            if (roomPass && roomPass.length) {\n                req.c('header', {\n                    name: 'JvbRoomPassword',\n                    value: roomPass\n                }).up();\n            }\n\n            this.connection.sendIQ(\n                req,\n                result => {\n                    logger.info('Dial result ', result);\n\n                    // eslint-disable-next-line newline-per-chained-call\n                    const resource = $(result).find('ref').attr('uri');\n\n                    this.callResource = resource.substr('xmpp:'.length);\n                    logger.info(`Received call resource: ${this.callResource}`);\n                    resolve();\n                },\n                error => {\n                    logger.info('Dial error ', error);\n                    reject(error);\n                });\n        });\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     *\n     */\n    hangup() {\n        return new Promise((resolve, reject) => {\n            if (!this.callResource) {\n                reject(new Error('No call in progress'));\n                logger.warn('No call in progress');\n\n                return;\n            }\n\n            const req = $iq({\n                type: 'set',\n                to: this.callResource\n            });\n\n            req.c('hangup', {\n                xmlns: RAYO_XMLNS\n            });\n\n            this.connection.sendIQ(req, result => {\n                logger.info('Hangup result ', result);\n                this.callResource = null;\n                resolve();\n            }, error => {\n                logger.info('Hangup error ', error);\n                this.callResource = null;\n                reject(new Error('Hangup error '));\n            });\n        });\n    }\n}\n","/* global __filename */\n/**\n * Strophe logger implementation. Logs from level WARN and above.\n */\nimport { getLogger } from 'jitsi-meet-logger';\nimport { Strophe } from 'strophe.js';\n\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\n\nconst logger = getLogger(__filename);\n\n/**\n * This is the last HTTP error status captured from Strophe debug logs.\n * The purpose of storing it is to distinguish between the network and\n * infrastructure reason for connection being dropped (see connectionHandler in\n * xmpp.js). The value will be cleared (-1) if the subsequent request succeeds\n * which means that the failure could be transient.\n *\n * FIXME in the latest Strophe (not released on npm) there is API to handle\n * particular HTTP errors, but there is no way to learn if the subsequent\n * request succeeded in order to tell if the error was one time incident or if\n * it was the reason for dropping the connection by Strophe (the connection is\n * dropped after 5 subsequent failures). Ideally Strophe should provide more\n * details about the reason on why the connection stopped.\n *\n * @type {number}\n */\nlet lastErrorStatus = -1;\n\n/**\n * A regular expression used to catch Strophe's log message indicating that the\n * last BOSH request was successful. When there is such message seen the\n * {@link lastErrorStatus} will be set back to '-1'.\n * @type {RegExp}\n */\nconst resetLastErrorStatusRegExpr = /request id \\d+.\\d+ got 200/;\n\n/**\n * A regular expression used to capture the current value of the BOSH request\n * error status (HTTP error code or '0' or something else).\n * @type {RegExp}\n */\nconst lastErrorStatusRegExpr\n    = /request errored, status: (\\d+), number of errors: \\d+/;\n\n/**\n *\n */\nexport default function() {\n\n    Strophe.log = function(level, msg) {\n        // Our global handler reports uncaught errors to the stats which may\n        // interpret those as partial call failure.\n        // Strophe log entry about secondary request timeout does not mean that\n        // it's a final failure(the request will be restarted), so we lower it's\n        // level here to a warning.\n        logger.trace('Strophe', level, msg);\n        if (typeof msg === 'string'\n                && msg.indexOf('Request ') !== -1\n                && msg.indexOf('timed out (secondary), restarting') !== -1) {\n            // eslint-disable-next-line no-param-reassign\n            level = Strophe.LogLevel.WARN;\n        }\n\n        /* eslint-disable no-case-declarations */\n        switch (level) {\n        case Strophe.LogLevel.DEBUG:\n            // The log message which reports successful status is logged on\n            // Strophe's DEBUG level.\n            if (lastErrorStatus !== -1\n                    && resetLastErrorStatusRegExpr.test(msg)) {\n                logger.debug('Reset lastErrorStatus');\n                lastErrorStatus = -1;\n            }\n            break;\n        case Strophe.LogLevel.WARN:\n            logger.warn(`Strophe: ${msg}`);\n            const errStatusCapture = lastErrorStatusRegExpr.exec(msg);\n\n            if (errStatusCapture && errStatusCapture.length === 2) {\n                lastErrorStatus = parseInt(errStatusCapture[1], 10);\n                logger.debug(`lastErrorStatus set to: ${lastErrorStatus}`);\n            }\n            break;\n        case Strophe.LogLevel.ERROR:\n        case Strophe.LogLevel.FATAL:\n            // eslint-disable-next-line no-param-reassign\n            msg = `Strophe: ${msg}`;\n            GlobalOnErrorHandler.callErrorHandler(new Error(msg));\n            logger.error(msg);\n            break;\n        }\n\n        /* eslint-enable no-case-declarations */\n    };\n\n    /**\n     * Returns error status (HTTP error code) of the last BOSH request.\n     *\n     * @return {number} HTTP error code, '0' for unknown or \"god knows what\"\n     * (this is a hack).\n     */\n    Strophe.getLastErrorStatus = function() {\n        return lastErrorStatus;\n    };\n\n    Strophe.getStatusString = function(status) {\n        switch (status) {\n        case Strophe.Status.BINDREQUIRED:\n            return 'BINDREQUIRED';\n        case Strophe.Status.ERROR:\n            return 'ERROR';\n        case Strophe.Status.CONNECTING:\n            return 'CONNECTING';\n        case Strophe.Status.CONNFAIL:\n            return 'CONNFAIL';\n        case Strophe.Status.AUTHENTICATING:\n            return 'AUTHENTICATING';\n        case Strophe.Status.AUTHFAIL:\n            return 'AUTHFAIL';\n        case Strophe.Status.CONNECTED:\n            return 'CONNECTED';\n        case Strophe.Status.DISCONNECTED:\n            return 'DISCONNECTED';\n        case Strophe.Status.DISCONNECTING:\n            return 'DISCONNECTING';\n        case Strophe.Status.ATTACHED:\n            return 'ATTACHED';\n        default:\n            return 'unknown';\n        }\n    };\n}\n","\nimport { getLogger } from 'jitsi-meet-logger';\n\nimport * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\nimport CodecMimeType from '../../service/RTC/CodecMimeType';\nimport * as MediaType from '../../service/RTC/MediaType';\nimport browser from '../browser';\n\nconst logger = getLogger(__filename);\n\n/**\n * This class handles the codec selection mechanism for the conference based on the config.js settings.\n * The preferred codec is selected based on the settings and the list of codecs supported by the browser.\n * The preferred codec is published in presence which is then used by the other endpoints in the\n * conference to pick a supported codec at join time and when the call transitions between p2p and jvb\n * connections.\n */\nexport class CodecSelection {\n    /**\n     * Creates a new instance for a given conference.\n     *\n     * @param {JitsiConference} conference the conference instance\n     * @param {*} options\n     * @param {string} options.disabledCodec the codec that needs to be disabled.\n     * @param {boolean} options.enforcePreferredCodec whether codec preference has to be\n     * enforced even when an endpoints that doesn't support the preferred codec joins the call.\n     * Falling back to the standard codec will be skipped when this option is true, endpoints\n     * that do not support the preferred codec may not be able to encode/decode video when this happens.\n     * @param {string} options.jvbCodec the codec that is preferred on jvb connection.\n     * @param {string} options.p2pCodec the codec that is preferred on p2p connection.\n     */\n    constructor(conference, options) {\n        this.conference = conference;\n        this.options = options;\n\n        // VP8 cannot be disabled and it will be the default codec when no preference is set.\n        this.disabledCodec = options.disabledCodec === CodecMimeType.VP8\n            ? undefined\n            : this._getCodecMimeType(options.disabledCodec);\n\n        // Check if the codec values passed are valid.\n        const jvbCodec = this._getCodecMimeType(options.jvbCodec);\n        const p2pCodec = this._getCodecMimeType(options.p2pCodec);\n\n        this.jvbPreferredCodec = jvbCodec && this._isCodecSupported(jvbCodec) ? jvbCodec : CodecMimeType.VP8;\n        this.p2pPreferredCodec = p2pCodec && this._isCodecSupported(p2pCodec) ? p2pCodec : CodecMimeType.VP8;\n        logger.debug(`Codec preferences for the conference are JVB: ${this.jvbPreferredCodec},\n            P2P: ${this.p2pPreferredCodec}`);\n\n        // Do not prefer VP9 on Firefox because of the following bug.\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1633876\n        if (browser.isFirefox() && this.jvbPreferredCodec === CodecMimeType.VP9) {\n            this.jvbPreferredCodec = CodecMimeType.VP8;\n        }\n\n        this.conference.on(\n            JitsiConferenceEvents.USER_JOINED,\n            () => this._selectPreferredCodec());\n        this.conference.on(\n            JitsiConferenceEvents.USER_LEFT,\n            () => this._selectPreferredCodec());\n        this.conference.on(\n            JitsiConferenceEvents._MEDIA_SESSION_STARTED,\n            session => this._onMediaSessionStared(session));\n    }\n\n    /**\n     * Checks if a given string is a valid video codec mime type.\n     *\n     * @param {string} codec the codec string that needs to be validated.\n     * @returns {CodecMimeType|null} mime type if valid, null otherwise.\n     * @private\n     */\n    _getCodecMimeType(codec) {\n        if (typeof codec === 'string') {\n            return Object.values(CodecMimeType).find(value => value === codec.toLowerCase());\n        }\n\n        return null;\n    }\n\n    /**\n     * Checks if the given codec is supported by the browser.\n     *\n     * @param {CodecMimeType} preferredCodec codec to be checked.\n     * @returns {boolean} true if the given codec is supported, false otherwise.\n     * @private\n     */\n    _isCodecSupported(preferredCodec) {\n        // Skip the check on FF and RN because they do not support the getCapabilities API.\n        // It is safe to assume both of them support all the codecs supported by Chrome.\n        if (browser.isFirefox() || browser.isReactNative()) {\n            return true;\n        }\n\n        return window.RTCRtpReceiver\n            && window.RTCRtpReceiver.getCapabilities\n            && window.RTCRtpReceiver.getCapabilities('video').codecs\n            .some(codec => codec.mimeType.toLowerCase() === `video/${preferredCodec}`);\n    }\n\n    /**\n     * Handles the {@link JitsiConferenceEvents._MEDIA_SESSION_STARTED} event. Codecs need to be\n     * configured on the media session that is newly created.\n     *\n     * @param {JingleSessionPC} mediaSession media session that started.\n     * @returns {void}\n     * @private\n     */\n    _onMediaSessionStared(mediaSession) {\n        const preferredCodec = mediaSession.isP2P ? this.p2pPreferredCodec : this.jvbPreferredCodec;\n        const disabledCodec = this.disabledCodec && this._isCodecSupported(this.disabledCodec)\n            ? this.disabledCodec\n            : null;\n\n        this._selectPreferredCodec(mediaSession, preferredCodec, disabledCodec);\n    }\n\n    /**\n     * Sets the codec on the media session based on the preferred codec setting and the supported codecs\n     * published by the remote participants in their presence.\n     *\n     * @param {JingleSessionPC} mediaSession session for which the codec selection has to be made.\n     * @param {CodecMimeType} preferredCodec preferred codec.\n     * @param {CodecMimeType} disabledCodec codec that needs to be disabled.\n     */\n    _selectPreferredCodec(mediaSession = null, preferredCodec = null, disabledCodec = null) {\n        const session = mediaSession ? mediaSession : this.conference.jvbJingleSession;\n        const currentCodec = preferredCodec ? preferredCodec : this.jvbPreferredCodec;\n        let selectedCodec = currentCodec;\n\n        if (session && !session.isP2P && !this.options.enforcePreferredCodec) {\n            const remoteParticipants = this.conference.getParticipants().map(participant => participant.getId());\n\n            for (const remote of remoteParticipants) {\n                const peerMediaInfo = session.signalingLayer.getPeerMediaInfo(remote, MediaType.VIDEO);\n                const peerCodec = peerMediaInfo?.codecType;\n\n                // We do not want Firefox to switch to VP9 because of the following bug.\n                // https://bugzilla.mozilla.org/show_bug.cgi?id=1492500.\n                if (peerCodec\n                    && peerCodec !== currentCodec\n                    && !(browser.isFirefox() && peerCodec === CodecMimeType.VP9)) {\n                    selectedCodec = peerCodec;\n                }\n            }\n        }\n        session && session.setVideoCodecs(selectedCodec, disabledCodec);\n    }\n\n    /**\n     * Returns the preferred codec for the conference. The preferred codec for the JVB media session\n     * is the one that gets published in presence and a comparision is made whenever a participant joins\n     * or leaves the call.\n     *\n     * @returns {CodecMimeType} preferred codec.\n     */\n    getPreferredCodec() {\n        return this.jvbPreferredCodec;\n    }\n}\n","import { getLogger } from 'jitsi-meet-logger';\n\nimport RTCEvents from '../../service/RTC/RTCEvents';\nimport { createBridgeChannelClosedEvent } from '../../service/statistics/AnalyticsEvents';\nimport Statistics from '../statistics/statistics';\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\n\nconst logger = getLogger(__filename);\n\n/**\n * Handles a WebRTC RTCPeerConnection or a WebSocket instance to communicate\n * with the videobridge.\n */\nexport default class BridgeChannel {\n    /**\n     * Binds \"ondatachannel\" event listener on the given RTCPeerConnection\n     * instance, or creates a WebSocket connection with the videobridge.\n     * At least one of both, peerconnection or wsUrl parameters, must be\n     * given.\n     * @param {RTCPeerConnection} [peerconnection] WebRTC peer connection\n     * instance.\n     * @param {string} [wsUrl] WebSocket URL.\n     * @param {EventEmitter} emitter the EventEmitter instance to use for event emission.\n     */\n    constructor(peerconnection, wsUrl, emitter) {\n        if (!peerconnection && !wsUrl) {\n            throw new TypeError('At least peerconnection or wsUrl must be given');\n        } else if (peerconnection && wsUrl) {\n            throw new TypeError('Just one of peerconnection or wsUrl must be given');\n        }\n\n        if (peerconnection) {\n            logger.debug('constructor() with peerconnection');\n        } else {\n            logger.debug(`constructor() with wsUrl:\"${wsUrl}\"`);\n        }\n\n        // The underlying WebRTC RTCDataChannel or WebSocket instance.\n        // @type {RTCDataChannel|WebSocket}\n        this._channel = null;\n\n        // @type {EventEmitter}\n        this._eventEmitter = emitter;\n\n        // Whether a RTCDataChannel or WebSocket is internally used.\n        // @type {string} \"datachannel\" / \"websocket\"\n        this._mode = null;\n\n        // Indicates whether the connection retries are enabled or not.\n        this._areRetriesEnabled = false;\n\n        // Indicates whether the connection was closed from the client or not.\n        this._closedFromClient = false;\n\n        // If a RTCPeerConnection is given, listen for new RTCDataChannel\n        // event.\n        if (peerconnection) {\n            const datachannel\n                = peerconnection.createDataChannel(\n                    'JVB data channel', {\n                        protocol: 'http://jitsi.org/protocols/colibri'\n                    });\n\n            // Handle the RTCDataChannel.\n            this._handleChannel(datachannel);\n            this._mode = 'datachannel';\n\n        // Otherwise create a WebSocket connection.\n        } else if (wsUrl) {\n            this._areRetriesEnabled = true;\n            this._wsUrl = wsUrl;\n            this._initWebSocket();\n        }\n    }\n\n    /**\n     * Initializes the web socket channel.\n     *\n     * @returns {void}\n     */\n    _initWebSocket() {\n        // Create a WebSocket instance.\n        const ws = new WebSocket(this._wsUrl);\n\n        // Handle the WebSocket.\n        this._handleChannel(ws);\n        this._mode = 'websocket';\n    }\n\n    /**\n     * Starts the websocket connection retries.\n     *\n     * @returns {void}\n     */\n    _startConnectionRetries() {\n        let timeoutS = 1;\n\n        const reload = () => {\n            if (this.isOpen()) {\n                return;\n            }\n            this._initWebSocket(this._wsUrl);\n            timeoutS = Math.min(timeoutS * 2, 60);\n            this._retryTimeout = setTimeout(reload, timeoutS * 1000);\n        };\n\n        this._retryTimeout = setTimeout(reload, timeoutS * 1000);\n    }\n\n    /**\n     * Stops the websocket connection retries.\n     *\n     * @returns {void}\n     */\n    _stopConnectionRetries() {\n        if (this._retryTimeout) {\n            clearTimeout(this._retryTimeout);\n            this._retryTimeout = undefined;\n        }\n    }\n\n    /**\n     * Retries to establish the websocket connection after the connection was closed by the server.\n     *\n     * @param {CloseEvent} closeEvent - The close event that triggered the retries.\n     * @returns {void}\n     */\n    _retryWebSocketConnection(closeEvent) {\n        if (!this._areRetriesEnabled) {\n            return;\n        }\n        const { code, reason } = closeEvent;\n\n        Statistics.sendAnalytics(createBridgeChannelClosedEvent(code, reason));\n        this._areRetriesEnabled = false;\n        this._eventEmitter.once(RTCEvents.DATA_CHANNEL_OPEN, () => {\n            this._stopConnectionRetries();\n            this._areRetriesEnabled = true;\n        });\n        this._startConnectionRetries();\n    }\n\n    /**\n     * The channel mode.\n     * @return {string} \"datachannel\" or \"websocket\" (or null if not yet set).\n     */\n    get mode() {\n        return this._mode;\n    }\n\n    /**\n     * Closes the currently opened channel.\n     */\n    close() {\n        this._closedFromClient = true;\n        this._stopConnectionRetries();\n        this._areRetriesEnabled = false;\n        if (this._channel) {\n            try {\n                this._channel.close();\n            } catch (error) {} // eslint-disable-line no-empty\n\n            this._channel = null;\n        }\n    }\n\n    /**\n     * Whether there is an underlying RTCDataChannel or WebSocket and it's\n     * open.\n     * @return {boolean}\n     */\n    isOpen() {\n        return this._channel && (this._channel.readyState === 'open'\n            || this._channel.readyState === WebSocket.OPEN);\n    }\n\n    /**\n     * Sends local stats via the bridge channel.\n     * @param {Object} payload The payload of the message.\n     * @throws NetworkError/InvalidStateError/Error if the operation fails or if there is no data channel created.\n     */\n    sendEndpointStatsMessage(payload) {\n        this._send({\n            colibriClass: 'EndpointStats',\n            ...payload\n        });\n    }\n\n    /**\n     * Sends message via the channel.\n     * @param {string} to The id of the endpoint that should receive the\n     * message. If \"\" the message will be sent to all participants.\n     * @param  {object} payload The payload of the message.\n     * @throws NetworkError or InvalidStateError from RTCDataChannel#send (@see\n     * {@link https://developer.mozilla.org/docs/Web/API/RTCDataChannel/send})\n     * or from WebSocket#send or Error with \"No opened channel\" message.\n     */\n    sendMessage(to, payload) {\n        this._send({\n            colibriClass: 'EndpointMessage',\n            msgPayload: payload,\n            to\n        });\n    }\n\n    /**\n     * Sends a \"lastN value changed\" message via the channel.\n     * @param {number} value The new value for lastN. -1 means unlimited.\n     */\n    sendSetLastNMessage(value) {\n        logger.log(`Sending lastN=${value}.`);\n\n        this._send({\n            colibriClass: 'LastNChangedEvent',\n            lastN: value\n        });\n    }\n\n    /**\n     * Sends a \"selected endpoints changed\" message via the channel.\n     *\n     * @param {Array<string>} endpointIds - The ids of the selected endpoints.\n     * @throws NetworkError or InvalidStateError from RTCDataChannel#send (@see\n     * {@link https://developer.mozilla.org/docs/Web/API/RTCDataChannel/send})\n     * or from WebSocket#send or Error with \"No opened channel\" message.\n     */\n    sendSelectedEndpointsMessage(endpointIds) {\n        logger.log(`Sending selected endpoints: ${endpointIds}.`);\n\n        this._send({\n            colibriClass: 'SelectedEndpointsChangedEvent',\n            selectedEndpoints: endpointIds\n        });\n    }\n\n    /**\n     * Sends a \"receiver video constraint\" message via the channel.\n     * @param {Number} maxFrameHeightPixels the maximum frame height,\n     * in pixels, this receiver is willing to receive\n     */\n    sendReceiverVideoConstraintMessage(maxFrameHeightPixels) {\n        logger.log(`Sending ReceiverVideoConstraint with maxFrameHeight=${maxFrameHeightPixels}px`);\n        this._send({\n            colibriClass: 'ReceiverVideoConstraint',\n            maxFrameHeight: maxFrameHeightPixels\n        });\n    }\n\n    /**\n     * Sends a 'ReceiverVideoConstraints' message via the bridge channel.\n     *\n     * @param {ReceiverVideoConstraints} constraints video constraints.\n     */\n    sendNewReceiverVideoConstraintsMessage(constraints) {\n        logger.log(`Sending ReceiverVideoConstraints with ${JSON.stringify(constraints)}`);\n        this._send({\n            colibriClass: 'ReceiverVideoConstraints',\n            ...constraints\n        });\n    }\n\n    /**\n     * Sends a 'VideoTypeMessage' message via the bridge channel.\n     *\n     * @param {string} videoType 'camera', 'desktop' or 'none'.\n     */\n    sendVideoTypeMessage(videoType) {\n        logger.debug(`Sending VideoTypeMessage with video type as ${videoType}`);\n        this._send({\n            colibriClass: 'VideoTypeMessage',\n            videoType\n        });\n    }\n\n    /**\n     * Set events on the given RTCDataChannel or WebSocket instance.\n     */\n    _handleChannel(channel) {\n        const emitter = this._eventEmitter;\n\n        channel.onopen = () => {\n            logger.info(`${this._mode} channel opened`);\n\n            // Code sample for sending string and/or binary data.\n            // Sends string message to the bridge:\n            //     channel.send(\"Hello bridge!\");\n            // Sends 12 bytes binary message to the bridge:\n            //     channel.send(new ArrayBuffer(12));\n\n            emitter.emit(RTCEvents.DATA_CHANNEL_OPEN);\n        };\n\n        channel.onerror = event => {\n            // WS error events contain no information about the failure (this is available in the onclose event) and\n            // the event references the WS object itself, which causes hangs on mobile.\n            if (this._mode !== 'websocket') {\n                logger.error(`Channel error: ${event.message}`);\n            }\n        };\n\n        channel.onmessage = ({ data }) => {\n            // JSON object.\n            let obj;\n\n            try {\n                obj = JSON.parse(data);\n            } catch (error) {\n                GlobalOnErrorHandler.callErrorHandler(error);\n                logger.error('Failed to parse channel message as JSON: ', data, error);\n\n                return;\n            }\n\n            const colibriClass = obj.colibriClass;\n\n            switch (colibriClass) {\n            case 'DominantSpeakerEndpointChangeEvent': {\n                const { dominantSpeakerEndpoint, previousSpeakers = [] } = obj;\n\n                logger.debug(`Dominant speaker: ${dominantSpeakerEndpoint}, previous speakers: ${previousSpeakers}`);\n                emitter.emit(RTCEvents.DOMINANT_SPEAKER_CHANGED, dominantSpeakerEndpoint, previousSpeakers);\n                break;\n            }\n            case 'EndpointConnectivityStatusChangeEvent': {\n                const endpoint = obj.endpoint;\n                const isActive = obj.active === 'true';\n\n                logger.info(`Endpoint connection status changed: ${endpoint} active=${isActive}`);\n                emitter.emit(RTCEvents.ENDPOINT_CONN_STATUS_CHANGED, endpoint, isActive);\n\n                break;\n            }\n            case 'EndpointMessage': {\n                emitter.emit(RTCEvents.ENDPOINT_MESSAGE_RECEIVED, obj.from, obj.msgPayload);\n\n                break;\n            }\n            case 'EndpointStats': {\n                emitter.emit(RTCEvents.ENDPOINT_STATS_RECEIVED, obj.from, obj);\n\n                break;\n            }\n            case 'LastNEndpointsChangeEvent': {\n                // The new/latest list of last-n endpoint IDs (i.e. endpoints for which the bridge is sending video).\n                const lastNEndpoints = obj.lastNEndpoints;\n\n                logger.info(`New forwarded endpoints: ${lastNEndpoints}`);\n                emitter.emit(RTCEvents.LASTN_ENDPOINT_CHANGED, lastNEndpoints);\n\n                break;\n            }\n            case 'SenderVideoConstraints': {\n                const videoConstraints = obj.videoConstraints;\n\n                if (videoConstraints) {\n                    logger.info(`SenderVideoConstraints: ${JSON.stringify(videoConstraints)}`);\n                    emitter.emit(RTCEvents.SENDER_VIDEO_CONSTRAINTS_CHANGED, videoConstraints);\n                }\n                break;\n            }\n            case 'ServerHello': {\n                logger.info(`Received ServerHello, version=${obj.version}.`);\n                break;\n            }\n            default: {\n                logger.debug('Channel JSON-formatted message: ', obj);\n\n                // The received message appears to be appropriately formatted\n                // (i.e. is a JSON object which assigns a value to the\n                // mandatory property colibriClass) so don't just swallow it,\n                // expose it to public consumption.\n                emitter.emit(`rtc.datachannel.${colibriClass}`, obj);\n            }\n            }\n        };\n\n        channel.onclose = event => {\n            logger.info(`Channel closed by ${this._closedFromClient ? 'client' : 'server'}`);\n\n            if (this._mode === 'websocket') {\n                if (!this._closedFromClient) {\n                    logger.error(`Channel closed: ${event.code} ${event.reason}`);\n                    this._retryWebSocketConnection(event);\n                }\n            }\n\n            // Remove the channel.\n            this._channel = null;\n        };\n\n        // Store the channel.\n        this._channel = channel;\n    }\n\n    /**\n     * Sends passed object via the channel.\n     * @param {object} jsonObject The object that will be sent.\n     * @throws NetworkError or InvalidStateError from RTCDataChannel#send (@see\n     * {@link https://developer.mozilla.org/docs/Web/API/RTCDataChannel/send})\n     * or from WebSocket#send or Error with \"No opened channel\" message.\n     */\n    _send(jsonObject) {\n        const channel = this._channel;\n\n        if (!this.isOpen()) {\n            logger.error('Bridge Channel send: no opened channel.');\n            throw new Error('No opened channel');\n        }\n\n        channel.send(JSON.stringify(jsonObject));\n    }\n}\n","/* global __filename, Promise */\n\nimport { getLogger } from 'jitsi-meet-logger';\n\nimport JitsiTrackError from '../../JitsiTrackError';\nimport {\n    TRACK_IS_DISPOSED,\n    TRACK_NO_STREAM_FOUND\n} from '../../JitsiTrackErrors';\nimport {\n    LOCAL_TRACK_STOPPED,\n    NO_DATA_FROM_SOURCE,\n    TRACK_MUTE_CHANGED\n} from '../../JitsiTrackEvents';\nimport CameraFacingMode from '../../service/RTC/CameraFacingMode';\nimport * as MediaType from '../../service/RTC/MediaType';\nimport RTCEvents from '../../service/RTC/RTCEvents';\nimport VideoType from '../../service/RTC/VideoType';\nimport {\n    NO_BYTES_SENT,\n    TRACK_UNMUTED,\n    createNoDataFromSourceEvent\n} from '../../service/statistics/AnalyticsEvents';\nimport browser from '../browser';\nimport Statistics from '../statistics/statistics';\n\nimport JitsiTrack from './JitsiTrack';\nimport RTCUtils from './RTCUtils';\n\nconst logger = getLogger(__filename);\n\n/**\n * Represents a single media track(either audio or video).\n * One <tt>JitsiLocalTrack</tt> corresponds to one WebRTC MediaStreamTrack.\n */\nexport default class JitsiLocalTrack extends JitsiTrack {\n    /**\n     * Constructs new JitsiLocalTrack instance.\n     *\n     * @constructor\n     * @param {Object} trackInfo\n     * @param {number} trackInfo.rtcId the ID assigned by the RTC module\n     * @param trackInfo.stream WebRTC MediaStream, parent of the track\n     * @param trackInfo.track underlying WebRTC MediaStreamTrack for new\n     * JitsiRemoteTrack\n     * @param trackInfo.mediaType the MediaType of the JitsiRemoteTrack\n     * @param trackInfo.videoType the VideoType of the JitsiRemoteTrack\n     * @param trackInfo.effects the effects array contains the effect instance to use\n     * @param trackInfo.resolution the video resolution if it's a video track\n     * @param trackInfo.deviceId the ID of the local device for this track\n     * @param trackInfo.facingMode the camera facing mode used in getUserMedia\n     * call\n     * @param {sourceId} trackInfo.sourceId - The id of the desktop sharing\n     * source. NOTE: defined for desktop sharing tracks only.\n     */\n    constructor({\n        deviceId,\n        facingMode,\n        mediaType,\n        resolution,\n        rtcId,\n        sourceId,\n        sourceType,\n        stream,\n        track,\n        videoType,\n        effects = []\n    }) {\n        super(\n            /* conference */ null,\n            stream,\n            track,\n            /* streamInactiveHandler */ () => this.emit(LOCAL_TRACK_STOPPED),\n            mediaType,\n            videoType);\n\n        this._setEffectInProgress = false;\n        const effect = effects.find(e => e.isEnabled(this));\n\n        if (effect) {\n            this._startStreamEffect(effect);\n        }\n\n        /**\n         * The ID assigned by the RTC module on instance creation.\n         *\n         * @type {number}\n         */\n        this.rtcId = rtcId;\n        this.sourceId = sourceId;\n        this.sourceType = sourceType;\n\n        // Get the resolution from the track itself because it cannot be\n        // certain which resolution webrtc has fallen back to using.\n        this.resolution = track.getSettings().height;\n        this.maxEnabledResolution = resolution;\n\n        // Cache the constraints of the track in case of any this track\n        // model needs to call getUserMedia again, such as when unmuting.\n        this._constraints = track.getConstraints();\n\n        // Safari returns an empty constraints object, construct the constraints using getSettings.\n        if (!Object.keys(this._constraints).length && videoType === VideoType.CAMERA) {\n            this._constraints = {\n                height: track.getSettings().height,\n                width: track.getSettings().width\n            };\n        }\n\n        this.deviceId = deviceId;\n\n        /**\n         * The <tt>Promise</tt> which represents the progress of a previously\n         * queued/scheduled {@link _setMuted} (from the point of view of\n         * {@link _queueSetMuted}).\n         *\n         * @private\n         * @type {Promise}\n         */\n        this._prevSetMuted = Promise.resolve();\n\n        /**\n         * The facing mode of the camera from which this JitsiLocalTrack\n         * instance was obtained.\n         *\n         * @private\n         * @type {CameraFacingMode|undefined}\n         */\n        this._facingMode = facingMode;\n\n        // Currently there is no way to know the MediaStreamTrack ended due to\n        // to device disconnect in Firefox through e.g. \"readyState\" property.\n        // Instead we will compare current track's label with device labels from\n        // enumerateDevices() list.\n        this._trackEnded = false;\n\n        /**\n         * Indicates whether data has been sent or not.\n         */\n        this._hasSentData = false;\n\n        /**\n         * Used only for detection of audio problems. We want to check only once\n         * whether the track is sending data ot not. This flag is set to false\n         * after the check.\n         */\n        this._testDataSent = true;\n\n        // Currently there is no way to determine with what device track was\n        // created (until getConstraints() support), however we can associate\n        // tracks with real devices obtained from enumerateDevices() call as\n        // soon as it's called.\n        // NOTE: this.deviceId corresponds to the device id specified in GUM constraints and this._realDeviceId seems to\n        // correspond to the id of a matching device from the available device list.\n        this._realDeviceId = this.deviceId === '' ? undefined : this.deviceId;\n\n        this._trackMutedTS = 0;\n\n        this._onDeviceListWillChange = devices => {\n            const oldRealDeviceId = this._realDeviceId;\n\n            this._setRealDeviceIdFromDeviceList(devices);\n\n            if (\n                // Mark track as ended for those browsers that do not support\n                // \"readyState\" property. We do not touch tracks created with\n                // default device ID \"\".\n                (typeof this.getTrack().readyState === 'undefined'\n                    && typeof this._realDeviceId !== 'undefined'\n                    && !devices.find(d => d.deviceId === this._realDeviceId))\n\n                // If there was an associated realDeviceID and after the device change the realDeviceId is undefined\n                // then the associated device has been disconnected and the _trackEnded flag needs to be set. In\n                // addition on some Chrome versions the readyState property is set after the device change event is\n                // triggered which causes issues in jitsi-meet with the selection of a new device because we don't\n                // detect that the old one was removed.\n                || (typeof oldRealDeviceId !== 'undefined' && typeof this._realDeviceId === 'undefined')\n            ) {\n                this._trackEnded = true;\n            }\n        };\n\n        // Subscribe each created local audio track to\n        // RTCEvents.AUDIO_OUTPUT_DEVICE_CHANGED event. This is different from\n        // handling this event for remote tracks (which are handled in RTC.js),\n        // because there might be local tracks not attached to a conference.\n        if (this.isAudioTrack() && RTCUtils.isDeviceChangeAvailable('output')) {\n            this._onAudioOutputDeviceChanged = this.setAudioOutput.bind(this);\n            RTCUtils.addListener(\n                RTCEvents.AUDIO_OUTPUT_DEVICE_CHANGED,\n                this._onAudioOutputDeviceChanged);\n        }\n\n        RTCUtils.addListener(RTCEvents.DEVICE_LIST_WILL_CHANGE, this._onDeviceListWillChange);\n\n        this._initNoDataFromSourceHandlers();\n    }\n\n    /**\n     * Returns if associated MediaStreamTrack is in the 'ended' state\n     *\n     * @returns {boolean}\n     */\n    isEnded() {\n        if (this.isVideoTrack() && this.isMuted()) {\n            // If a video track is muted the readyState will be ended, that's why we need to rely only on the\n            // _trackEnded flag.\n            return this._trackEnded;\n        }\n\n        return this.getTrack().readyState === 'ended' || this._trackEnded;\n    }\n\n    /**\n     * Sets handlers to the MediaStreamTrack object that will detect camera\n     * issues.\n     */\n    _initNoDataFromSourceHandlers() {\n        if (!this._isNoDataFromSourceEventsEnabled()) {\n            return;\n        }\n\n        this._setHandler('track_mute', () => {\n            this._trackMutedTS = window.performance.now();\n            this._fireNoDataFromSourceEvent();\n        });\n\n        this._setHandler('track_unmute', () => {\n            this._fireNoDataFromSourceEvent();\n            Statistics.sendAnalyticsAndLog(\n                TRACK_UNMUTED,\n                {\n                    'media_type': this.getType(),\n                    'track_type': 'local',\n                    value: window.performance.now() - this._trackMutedTS\n                });\n        });\n\n        if (this.isVideoTrack() && this.videoType === VideoType.CAMERA) {\n            this._setHandler('track_ended', () => {\n                if (!this.isReceivingData()) {\n                    this._fireNoDataFromSourceEvent();\n                }\n            });\n        }\n    }\n\n    /**\n     * Returns true if no data from source events are enabled for this JitsiLocalTrack and false otherwise.\n     *\n     * @returns {boolean} - True if no data from source events are enabled for this JitsiLocalTrack and false otherwise.\n     */\n    _isNoDataFromSourceEventsEnabled() {\n        // Disable the events for screen sharing.\n        return !this.isVideoTrack() || this.videoType !== VideoType.DESKTOP;\n    }\n\n    /**\n     * Fires NO_DATA_FROM_SOURCE event and logs it to analytics and callstats.\n     */\n    _fireNoDataFromSourceEvent() {\n        const value = !this.isReceivingData();\n\n        this.emit(NO_DATA_FROM_SOURCE, value);\n\n        // FIXME: Should we report all of those events\n        Statistics.sendAnalytics(createNoDataFromSourceEvent(this.getType(), value));\n        Statistics.sendLog(JSON.stringify({\n            name: NO_DATA_FROM_SOURCE,\n            log: value\n        }));\n    }\n\n    /**\n     * Sets real device ID by comparing track information with device\n     * information. This is temporary solution until getConstraints() method\n     * will be implemented in browsers.\n     *\n     * @param {MediaDeviceInfo[]} devices - list of devices obtained from\n     * enumerateDevices() call\n     */\n    _setRealDeviceIdFromDeviceList(devices) {\n        const track = this.getTrack();\n        const kind = `${track.kind}input`;\n        let device = devices.find(d => d.kind === kind && d.label === track.label);\n\n        if (!device && this._realDeviceId === 'default') { // the default device has been changed.\n            // If the default device was 'A' and the default device is changed to 'B' the label for the track will\n            // remain 'Default - A' but the label for the device in the device list will be updated to 'A'. That's\n            // why in order to match it we need to remove the 'Default - ' part.\n            const label = (track.label || '').replace('Default - ', '');\n\n            device = devices.find(d => d.kind === kind && d.label === label);\n        }\n\n        if (device) {\n            this._realDeviceId = device.deviceId;\n        } else {\n            this._realDeviceId = undefined;\n        }\n    }\n\n    /**\n     * Sets the stream property of JitsiLocalTrack object and sets all stored\n     * handlers to it.\n     *\n     * @param {MediaStream} stream the new stream.\n     * @protected\n     */\n    _setStream(stream) {\n        super._setStream(stream);\n\n        if (stream) {\n            // Store the MSID for video mute/unmute purposes.\n            this.storedMSID = this.getMSID();\n            logger.debug(`Setting new MSID: ${this.storedMSID} on ${this}`);\n        } else {\n            logger.debug(`Setting 'null' stream on ${this}`);\n        }\n    }\n\n    /**\n     * Starts the effect process and returns the modified stream.\n     *\n     * @private\n     * @param {*} effect - Represents effect instance\n     * @returns {void}\n     */\n    _startStreamEffect(effect) {\n        this._streamEffect = effect;\n        this._originalStream = this.stream;\n        this._setStream(this._streamEffect.startEffect(this._originalStream));\n        this.track = this.stream.getTracks()[0];\n    }\n\n    /**\n     * Stops the effect process and returns the original stream.\n     *\n     * @private\n     * @returns {void}\n     */\n    _stopStreamEffect() {\n        if (this._streamEffect) {\n            this._streamEffect.stopEffect();\n            this._setStream(this._originalStream);\n            this._originalStream = null;\n            this.track = this.stream ? this.stream.getTracks()[0] : null;\n        }\n    }\n\n    /**\n     * Stops the currently used effect (if there is one) and starts the passed effect (if there is one).\n     *\n     * @param {Object|undefined} effect - The new effect to be set.\n     */\n    _switchStreamEffect(effect) {\n        if (this._streamEffect) {\n            this._stopStreamEffect();\n            this._streamEffect = undefined;\n        }\n        if (effect) {\n            this._startStreamEffect(effect);\n        }\n    }\n\n    /**\n     * Sets the effect and switches between the modified stream and original one.\n     *\n     * @param {Object} effect - Represents the effect instance to be used.\n     * @returns {Promise}\n     */\n    setEffect(effect) {\n        if (typeof this._streamEffect === 'undefined' && typeof effect === 'undefined') {\n            return Promise.resolve();\n        }\n\n        if (typeof effect !== 'undefined' && !effect.isEnabled(this)) {\n            return Promise.reject(new Error('Incompatible effect instance!'));\n        }\n\n        if (this._setEffectInProgress === true) {\n            return Promise.reject(new Error('setEffect already in progress!'));\n        }\n\n        // In case we have an audio track that is being enhanced with an effect, we still want it to be applied,\n        // even if the track is muted. Where as for video the actual track doesn't exists if it's muted.\n        if (this.isMuted() && !this.isAudioTrack()) {\n            this._streamEffect = effect;\n\n            return Promise.resolve();\n        }\n\n        const conference = this.conference;\n\n        if (!conference) {\n            this._switchStreamEffect(effect);\n            if (this.isVideoTrack()) {\n                this.containers.forEach(cont => RTCUtils.attachMediaStream(cont, this.stream));\n            }\n\n            return Promise.resolve();\n        }\n\n        this._setEffectInProgress = true;\n\n        // TODO: Create new JingleSessionPC method for replacing a stream in JitsiLocalTrack without offer answer.\n        return conference.removeTrack(this)\n            .then(() => {\n                this._switchStreamEffect(effect);\n                if (this.isVideoTrack()) {\n                    this.containers.forEach(cont => RTCUtils.attachMediaStream(cont, this.stream));\n                }\n\n                return conference.addTrack(this);\n            })\n            .then(() => {\n                this._setEffectInProgress = false;\n            })\n            .catch(error => {\n                // Any error will be not recovarable and will trigger CONFERENCE_FAILED event. But let's try to cleanup\n                // everyhting related to the effect functionality.\n                this._setEffectInProgress = false;\n                this._switchStreamEffect();\n                logger.error('Failed to switch to the new stream!', error);\n                throw error;\n            });\n    }\n\n    /**\n     * Asynchronously mutes this track.\n     *\n     * @returns {Promise}\n     */\n    mute() {\n        return this._queueSetMuted(true);\n    }\n\n    /**\n     * Asynchronously unmutes this track.\n     *\n     * @returns {Promise}\n     */\n    unmute() {\n        return this._queueSetMuted(false);\n    }\n\n    /**\n     * Initializes a new Promise to execute {@link #_setMuted}. May be called\n     * multiple times in a row and the invocations of {@link #_setMuted} and,\n     * consequently, {@link #mute} and/or {@link #unmute} will be resolved in a\n     * serialized fashion.\n     *\n     * @param {boolean} muted - The value to invoke <tt>_setMuted</tt> with.\n     * @returns {Promise}\n     */\n    _queueSetMuted(muted) {\n        const setMuted = this._setMuted.bind(this, muted);\n\n        this._prevSetMuted = this._prevSetMuted.then(setMuted, setMuted);\n\n        return this._prevSetMuted;\n    }\n\n    /**\n     * Mutes / unmutes this track.\n     *\n     * @param {boolean} muted - If <tt>true</tt>, this track will be muted;\n     * otherwise, this track will be unmuted.\n     * @private\n     * @returns {Promise}\n     */\n    _setMuted(muted) {\n        if (this.isMuted() === muted) {\n            return Promise.resolve();\n        }\n\n        if (this.disposed) {\n            return Promise.reject(new JitsiTrackError(TRACK_IS_DISPOSED));\n        }\n\n        let promise = Promise.resolve();\n\n        // A function that will print info about muted status transition\n        const logMuteInfo = () => logger.info(`Mute ${this}: ${muted}`);\n\n        if (this.isAudioTrack()\n                || this.videoType === VideoType.DESKTOP\n                || !browser.doesVideoMuteByStreamRemove()) {\n            logMuteInfo();\n\n            // If we have a stream effect that implements its own mute functionality, prioritize it before\n            // normal mute e.g. the stream effect that implements system audio sharing has a custom\n            // mute state in which if the user mutes, system audio still has to go through.\n            if (this._streamEffect && this._streamEffect.setMuted) {\n                this._streamEffect.setMuted(muted);\n            } else if (this.track) {\n                this.track.enabled = !muted;\n            }\n        } else if (muted) {\n            promise = new Promise((resolve, reject) => {\n                logMuteInfo();\n                this._removeStreamFromConferenceAsMute(\n                    () => {\n                        if (this._streamEffect) {\n                            this._stopStreamEffect();\n                        }\n\n                        // FIXME: Maybe here we should set the SRC for the\n                        // containers to something\n                        // We don't want any events to be fired on this stream\n                        this._unregisterHandlers();\n                        this.stopStream();\n                        this._setStream(null);\n                        resolve();\n                    },\n                    reject);\n            });\n        } else {\n            logMuteInfo();\n\n            // This path is only for camera.\n            const streamOptions = {\n                cameraDeviceId: this.getDeviceId(),\n                devices: [ MediaType.VIDEO ],\n                effects: this._streamEffect ? [ this._streamEffect ] : [],\n                facingMode: this.getCameraFacingMode()\n            };\n\n            promise\n                = RTCUtils.obtainAudioAndVideoPermissions(Object.assign(\n                    {},\n                    streamOptions,\n                    { constraints: { video: this._constraints } }));\n\n            promise = promise.then(streamsInfo => {\n                // The track kind for presenter track is video as well.\n                const mediaType = this.getType() === MediaType.PRESENTER ? MediaType.VIDEO : this.getType();\n                const streamInfo = streamsInfo.find(info => info.track.kind === mediaType);\n\n                if (streamInfo) {\n                    this._setStream(streamInfo.stream);\n                    this.track = streamInfo.track;\n\n                    // This is not good when video type changes after\n                    // unmute, but let's not crash here\n                    if (this.videoType !== streamInfo.videoType) {\n                        logger.warn(\n                            `${this}: video type has changed after unmute!`,\n                            this.videoType, streamInfo.videoType);\n                        this.videoType = streamInfo.videoType;\n                    }\n                } else {\n                    throw new JitsiTrackError(TRACK_NO_STREAM_FOUND);\n                }\n\n                if (this._streamEffect) {\n                    this._startStreamEffect(this._streamEffect);\n                }\n\n                this.containers.map(\n                    cont => RTCUtils.attachMediaStream(cont, this.stream));\n\n                return this._addStreamToConferenceAsUnmute();\n            });\n        }\n\n        return promise\n            .then(() => this._sendMuteStatus(muted))\n            .then(() => this.emit(TRACK_MUTE_CHANGED, this));\n    }\n\n    /**\n     * Adds stream to conference and marks it as \"unmute\" operation.\n     *\n     * @private\n     * @returns {Promise}\n     */\n    _addStreamToConferenceAsUnmute() {\n        if (!this.conference) {\n            return Promise.resolve();\n        }\n\n        // FIXME it would be good to not included conference as part of this\n        // process. Only TraceablePeerConnections to which the track is attached\n        // should care about this action. The TPCs to which the track is not\n        // attached can sync up when track is re-attached.\n        // A problem with that is that the \"modify sources\" queue is part of\n        // the JingleSessionPC and it would be excluded from the process. One\n        // solution would be to extract class between TPC and JingleSessionPC\n        // which would contain the queue and would notify the signaling layer\n        // when local SSRCs are changed. This would help to separate XMPP from\n        // the RTC module.\n        return new Promise((resolve, reject) => {\n            this.conference._addLocalTrackAsUnmute(this)\n                .then(resolve, error => reject(new Error(error)));\n        });\n    }\n\n    /**\n     * Removes stream from conference and marks it as \"mute\" operation.\n     *\n     * @param {Function} successCallback will be called on success\n     * @param {Function} errorCallback will be called on error\n     * @private\n     */\n    _removeStreamFromConferenceAsMute(successCallback, errorCallback) {\n        if (!this.conference) {\n            successCallback();\n\n            return;\n        }\n        this.conference._removeLocalTrackAsMute(this).then(\n            successCallback,\n            error => errorCallback(new Error(error)));\n    }\n\n    /**\n     * Sends mute status for a track to conference if any.\n     *\n     * @param {boolean} mute - If track is muted.\n     * @private\n     * @returns {Promise}\n     */\n    _sendMuteStatus(mute) {\n        if (!this.conference || !this.conference.room) {\n            return Promise.resolve();\n        }\n\n        return new Promise(resolve => {\n            this.conference.room[\n                this.isAudioTrack()\n                    ? 'setAudioMute'\n                    : 'setVideoMute'](mute, resolve);\n        });\n    }\n\n    /**\n     * @inheritdoc\n     *\n     * Stops sending the media track. And removes it from the HTML.\n     * NOTE: Works for local tracks only.\n     *\n     * @extends JitsiTrack#dispose\n     * @returns {Promise}\n     */\n    dispose() {\n        let promise = Promise.resolve();\n\n        // Remove the effect instead of stopping it so that the original stream is restored\n        // on both the local track and on the peerconnection.\n        if (this._streamEffect) {\n            promise = this.setEffect();\n        }\n\n        if (this.conference) {\n            promise = promise.then(() => this.conference.removeTrack(this));\n        }\n\n        if (this.stream) {\n            this.stopStream();\n            this.detach();\n        }\n\n        RTCUtils.removeListener(RTCEvents.DEVICE_LIST_WILL_CHANGE, this._onDeviceListWillChange);\n\n        if (this._onAudioOutputDeviceChanged) {\n            RTCUtils.removeListener(RTCEvents.AUDIO_OUTPUT_DEVICE_CHANGED,\n                this._onAudioOutputDeviceChanged);\n        }\n\n        return promise.then(() => super.dispose());\n    }\n\n    /**\n     * Returns <tt>true</tt> - if the stream is muted and <tt>false</tt>\n     * otherwise.\n     *\n     * @returns {boolean} <tt>true</tt> - if the stream is muted and\n     * <tt>false</tt> otherwise.\n     */\n    isMuted() {\n        // this.stream will be null when we mute local video on Chrome\n        if (!this.stream) {\n            return true;\n        }\n        if (this.isVideoTrack() && !this.isActive()) {\n            return true;\n        }\n\n        // If currently used stream effect has its own muted state, use that.\n        if (this._streamEffect && this._streamEffect.isMuted) {\n            return this._streamEffect.isMuted();\n        }\n\n        return !this.track || !this.track.enabled;\n    }\n\n    /**\n     * Sets the JitsiConference object associated with the track. This is temp\n     * solution.\n     *\n     * @param conference the JitsiConference object\n     */\n    _setConference(conference) {\n        this.conference = conference;\n\n        // We want to keep up with postponed events which should have been fired\n        // on \"attach\" call, but for local track we not always have the\n        // conference before attaching. However this may result in duplicated\n        // events if they have been triggered on \"attach\" already.\n        for (let i = 0; i < this.containers.length; i++) {\n            this._maybeFireTrackAttached(this.containers[i]);\n        }\n    }\n\n    /**\n     * Returns <tt>true</tt>.\n     *\n     * @returns {boolean} <tt>true</tt>\n     */\n    isLocal() {\n        return true;\n    }\n\n    /**\n     * Returns device id associated with track.\n     *\n     * @returns {string}\n     */\n    getDeviceId() {\n        return this._realDeviceId || this.deviceId;\n    }\n\n    /**\n     * Returns the participant id which owns the track.\n     *\n     * @returns {string} the id of the participants. It corresponds to the\n     * Colibri endpoint id/MUC nickname in case of Jitsi-meet.\n     */\n    getParticipantId() {\n        return this.conference && this.conference.myUserId();\n    }\n\n    /**\n     * Handles bytes sent statistics.\n     *\n     * @param {TraceablePeerConnection} tpc the source of the \"bytes sent\" stat\n     * @param {number} bytesSent the new value\n     * NOTE: used only for audio tracks to detect audio issues.\n     */\n    _onByteSentStatsReceived(tpc, bytesSent) {\n        if (bytesSent > 0) {\n            this._hasSentData = true;\n        }\n        const iceConnectionState = tpc.getConnectionState();\n\n        if (this._testDataSent && iceConnectionState === 'connected') {\n            setTimeout(() => {\n                if (!this._hasSentData) {\n                    logger.warn(`${this} 'bytes sent' <= 0: \\\n                        ${bytesSent}`);\n\n                    Statistics.analytics.sendEvent(NO_BYTES_SENT, { 'media_type': this.getType() });\n                }\n            }, 3000);\n            this._testDataSent = false;\n        }\n    }\n\n    /**\n     * Returns facing mode for video track from camera. For other cases (e.g.\n     * audio track or 'desktop' video track) returns undefined.\n     *\n     * @returns {CameraFacingMode|undefined}\n     */\n    getCameraFacingMode() {\n        if (this.isVideoTrack() && this.videoType === VideoType.CAMERA) {\n            // MediaStreamTrack#getSettings() is not implemented in many\n            // browsers, so we need feature checking here. Progress on the\n            // respective browser's implementation can be tracked at\n            // https://bugs.chromium.org/p/webrtc/issues/detail?id=2481 for\n            // Chromium and https://bugzilla.mozilla.org/show_bug.cgi?id=1213517\n            // for Firefox. Even if a browser implements getSettings() already,\n            // it might still not return anything for 'facingMode'.\n            const trackSettings = this.track.getSettings?.();\n\n            if (trackSettings && 'facingMode' in trackSettings) {\n                return trackSettings.facingMode;\n            }\n\n            if (typeof this._facingMode !== 'undefined') {\n                return this._facingMode;\n            }\n\n            // In most cases we are showing a webcam. So if we've gotten here,\n            // it should be relatively safe to assume that we are probably\n            // showing the user-facing camera.\n            return CameraFacingMode.USER;\n        }\n\n        return undefined;\n    }\n\n    /**\n     * Stops the associated MediaStream.\n     */\n    stopStream() {\n        /**\n         * Indicates that we are executing {@link #stopStream} i.e.\n         * {@link RTCUtils#stopMediaStream} for the <tt>MediaStream</tt>\n         * associated with this <tt>JitsiTrack</tt> instance.\n         *\n         * @private\n         * @type {boolean}\n         */\n        this._stopStreamInProgress = true;\n\n        try {\n            RTCUtils.stopMediaStream(this.stream);\n        } finally {\n            this._stopStreamInProgress = false;\n        }\n    }\n\n    /**\n     * Switches the camera facing mode if the WebRTC implementation supports the\n     * custom MediaStreamTrack._switchCamera method. Currently, the method in\n     * question is implemented in react-native-webrtc only. When such a WebRTC\n     * implementation is executing, the method is the preferred way to switch\n     * between the front/user-facing and the back/environment-facing cameras\n     * because it will likely be (as is the case of react-native-webrtc)\n     * noticeably faster that creating a new MediaStreamTrack via a new\n     * getUserMedia call with the switched facingMode constraint value.\n     * Moreover, the approach with a new getUserMedia call may not even work:\n     * WebRTC on Android and iOS is either very slow to open the camera a second\n     * time or plainly freezes attempting to do that.\n     */\n    _switchCamera() {\n        if (this.isVideoTrack()\n                && this.videoType === VideoType.CAMERA\n                && typeof this.track._switchCamera === 'function') {\n            this.track._switchCamera();\n\n            this._facingMode\n                = this._facingMode === CameraFacingMode.ENVIRONMENT\n                    ? CameraFacingMode.USER\n                    : CameraFacingMode.ENVIRONMENT;\n        }\n    }\n\n    /**\n     * Checks whether the attached MediaStream is receiving data from source or\n     * not. If the stream property is null(because of mute or another reason)\n     * this method will return false.\n     * NOTE: This method doesn't indicate problem with the streams directly.\n     * For example in case of video mute the method will return false or if the\n     * user has disposed the track.\n     *\n     * @returns {boolean} true if the stream is receiving data and false\n     * this otherwise.\n     */\n    isReceivingData() {\n        if (this.isVideoTrack()\n            && (this.isMuted() || this._stopStreamInProgress || this.videoType === VideoType.DESKTOP)) {\n            return true;\n        }\n\n        if (!this.stream) {\n            return false;\n        }\n\n        // In older version of the spec there is no muted property and\n        // readyState can have value muted. In the latest versions\n        // readyState can have values \"live\" and \"ended\" and there is\n        // muted boolean property. If the stream is muted that means that\n        // we aren't receiving any data from the source. We want to notify\n        // the users for error if the stream is muted or ended on it's\n        // creation.\n\n        // For video blur enabled use the original video stream\n        const stream = this._effectEnabled ? this._originalStream : this.stream;\n\n        return stream.getTracks().some(track =>\n            (!('readyState' in track) || track.readyState === 'live')\n                && (!('muted' in track) || track.muted !== true));\n    }\n\n    /**\n     * Creates a text representation of this local track instance.\n     *\n     * @return {string}\n     */\n    toString() {\n        return `LocalTrack[${this.rtcId},${this.getType()}]`;\n    }\n}\n","/* global __filename, RTCSessionDescription */\n\nimport { Interop } from '@jitsi/sdp-interop';\nimport { getLogger } from 'jitsi-meet-logger';\nimport transform from 'sdp-transform';\n\nimport * as CodecMimeType from '../../service/RTC/CodecMimeType';\nimport MediaDirection from '../../service/RTC/MediaDirection';\nimport * as MediaType from '../../service/RTC/MediaType';\nimport RTCEvents from '../../service/RTC/RTCEvents';\nimport * as SignalingEvents from '../../service/RTC/SignalingEvents';\nimport * as VideoType from '../../service/RTC/VideoType';\nimport { SS_DEFAULT_FRAME_RATE } from '../RTC/ScreenObtainer';\nimport browser from '../browser';\nimport LocalSdpMunger from '../sdp/LocalSdpMunger';\nimport RtxModifier from '../sdp/RtxModifier';\nimport SDP from '../sdp/SDP';\nimport SDPUtil from '../sdp/SDPUtil';\nimport SdpConsistency from '../sdp/SdpConsistency';\nimport { SdpTransformWrap } from '../sdp/SdpTransformUtil';\nimport * as GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\n\nimport JitsiRemoteTrack from './JitsiRemoteTrack';\nimport RTC from './RTC';\nimport RTCUtils from './RTCUtils';\nimport { SIM_LAYER_RIDS, TPCUtils } from './TPCUtils';\n\n// FIXME SDP tools should end up in some kind of util module\n\nconst logger = getLogger(__filename);\nconst DEGRADATION_PREFERENCE_CAMERA = 'maintain-framerate';\nconst DEGRADATION_PREFERENCE_DESKTOP = 'maintain-resolution';\nconst DESKTOP_SHARE_RATE = 500000;\nconst HD_BITRATE = 2500000;\nconst LD_BITRATE = 200000;\nconst SD_BITRATE = 700000;\n\n/* eslint-disable max-params */\n\n/**\n * Creates new instance of 'TraceablePeerConnection'.\n *\n * @param {RTC} rtc the instance of <tt>RTC</tt> service\n * @param {number} id the peer connection id assigned by the parent RTC module.\n * @param {SignalingLayer} signalingLayer the signaling layer instance\n * @param {object} iceConfig WebRTC 'PeerConnection' ICE config\n * @param {object} constraints WebRTC 'PeerConnection' constraints\n * @param {boolean} isP2P indicates whether or not the new instance will be used in a peer to peer connection.\n * @param {object} options <tt>TracablePeerConnection</tt> config options.\n * @param {boolean} options.disableSimulcast if set to 'true' will disable the simulcast.\n * @param {boolean} options.disableRtx if set to 'true' will disable the RTX.\n * @param {string} options.disabledCodec the mime type of the code that should not be negotiated on the peerconnection.\n * @param {string} options.preferredCodec the mime type of the codec that needs to be made the preferred codec for the\n * peerconnection.\n * @param {boolean} options.startSilent If set to 'true' no audio will be sent or received.\n * @param {boolean} options.usesUnifiedPlan Indicates if the  browser is running in unified plan mode.\n *\n * FIXME: initially the purpose of TraceablePeerConnection was to be able to\n * debug the peer connection. Since many other responsibilities have been added\n * it would make sense to extract a separate class from it and come up with\n * a more suitable name.\n *\n * @constructor\n */\nexport default function TraceablePeerConnection(\n        rtc,\n        id,\n        signalingLayer,\n        iceConfig,\n        constraints,\n        isP2P,\n        options) {\n\n    /**\n     * Indicates whether or not this peer connection instance is actively\n     * sending/receiving audio media. When set to <tt>false</tt> the SDP audio\n     * media direction will be adjusted to 'inactive' in order to suspend\n     * the transmission.\n     * @type {boolean}\n     * @private\n     */\n    this.audioTransferActive = !(options.startSilent === true);\n\n    /**\n     * The DTMF sender instance used to send DTMF tones.\n     *\n     * @type {RTCDTMFSender|undefined}\n     * @private\n     */\n    this._dtmfSender = undefined;\n\n    /**\n     * @typedef {Object} TouchToneRequest\n     * @property {string} tones - The DTMF tones string as defined by\n     * {@code RTCDTMFSender.insertDTMF}, 'tones' argument.\n     * @property {number} duration - The amount of time in milliseconds that\n     * each DTMF should last.\n     * @property {string} interToneGap - The length of time in miliseconds to\n     * wait between tones.\n     */\n    /**\n     * TouchToneRequests which are waiting to be played. This queue is filled\n     * if there are touch tones currently being played.\n     *\n     * @type {Array<TouchToneRequest>}\n     * @private\n     */\n    this._dtmfTonesQueue = [];\n\n    /**\n     * Indicates whether or not this peer connection instance is actively\n     * sending/receiving video media. When set to <tt>false</tt> the SDP video\n     * media direction will be adjusted to 'inactive' in order to suspend\n     * the transmission.\n     * @type {boolean}\n     * @private\n     */\n    this.videoTransferActive = true;\n\n    /**\n     * The parent instance of RTC service which created this\n     * <tt>TracablePeerConnection</tt>.\n     * @type {RTC}\n     */\n    this.rtc = rtc;\n\n    /**\n     * The peer connection identifier assigned by the RTC module.\n     * @type {number}\n     */\n    this.id = id;\n\n    /**\n     * Indicates whether or not this instance is used in a peer to peer\n     * connection.\n     * @type {boolean}\n     */\n    this.isP2P = isP2P;\n\n    // FIXME: We should support multiple streams per jid.\n    /**\n     * The map holds remote tracks associated with this peer connection.\n     * It maps user's JID to media type and remote track\n     * (one track per media type per user's JID).\n     * @type {Map<string, Map<MediaType, JitsiRemoteTrack>>}\n     */\n    this.remoteTracks = new Map();\n\n    /**\n     * A map which stores local tracks mapped by {@link JitsiLocalTrack.rtcId}\n     * @type {Map<number, JitsiLocalTrack>}\n     */\n    this.localTracks = new Map();\n\n    /**\n     * Keeps tracks of the WebRTC <tt>MediaStream</tt>s that have been added to\n     * the underlying WebRTC PeerConnection.\n     * @type {Array}\n     * @private\n     */\n    this._addedStreams = [];\n\n    /**\n     * @typedef {Object} TPCGroupInfo\n     * @property {string} semantics the SSRC groups semantics\n     * @property {Array<number>} ssrcs group's SSRCs in order where the first\n     * one is group's primary SSRC, the second one is secondary (RTX) and so\n     * on...\n     */\n    /**\n     * @typedef {Object} TPCSSRCInfo\n     * @property {Array<number>} ssrcs an array which holds all track's SSRCs\n     * @property {Array<TPCGroupInfo>} groups an array stores all track's SSRC\n     * groups\n     */\n    /**\n     * Holds the info about local track's SSRCs mapped per their\n     * {@link JitsiLocalTrack.rtcId}\n     * @type {Map<number, TPCSSRCInfo>}\n     */\n    this.localSSRCs = new Map();\n\n    /**\n     * The local ICE username fragment for this session.\n     */\n    this.localUfrag = null;\n\n    /**\n     * The remote ICE username fragment for this session.\n     */\n    this.remoteUfrag = null;\n\n    /**\n     * The signaling layer which operates this peer connection.\n     * @type {SignalingLayer}\n     */\n    this.signalingLayer = signalingLayer;\n\n    // SignalingLayer listeners\n    this._peerVideoTypeChanged = this._peerVideoTypeChanged.bind(this);\n    this.signalingLayer.on(\n        SignalingEvents.PEER_VIDEO_TYPE_CHANGED,\n        this._peerVideoTypeChanged);\n\n    this._peerMutedChanged = this._peerMutedChanged.bind(this);\n    this.signalingLayer.on(\n        SignalingEvents.PEER_MUTED_CHANGED,\n        this._peerMutedChanged);\n    this.options = options;\n\n    // Make sure constraints is properly formatted in order to provide information about whether or not this\n    // connection is P2P to rtcstats.\n    const safeConstraints = constraints || {};\n\n    safeConstraints.optional = safeConstraints.optional || [];\n\n    // The `optional` parameter needs to be of type array, otherwise chrome will throw an error.\n    // Firefox and Safari just ignore it.\n    if (Array.isArray(safeConstraints.optional)) {\n        safeConstraints.optional.push({ rtcStatsSFUP2P: this.isP2P });\n    } else {\n        logger.warn('Optional param is not an array, rtcstats p2p data is omitted.');\n    }\n\n    this.peerconnection\n        = new RTCUtils.RTCPeerConnectionType(iceConfig, safeConstraints);\n\n    // The standard video bitrates are used in Unified plan when switching\n    // between camera/desktop tracks on the same sender.\n    const standardVideoBitrates = {\n        low: LD_BITRATE,\n        standard: SD_BITRATE,\n        high: HD_BITRATE\n    };\n\n    // Check if the max. bitrates for video are specified through config.js videoQuality settings.\n    // These bitrates will be applied on all browsers for camera sources in both simulcast and p2p mode.\n    this.videoBitrates = this.options.videoQuality && this.options.videoQuality.maxBitratesVideo\n        ? this.options.videoQuality.maxBitratesVideo\n        : standardVideoBitrates;\n\n    this.tpcUtils = new TPCUtils(this, this.videoBitrates);\n    this.updateLog = [];\n    this.stats = {};\n    this.statsinterval = null;\n\n    /**\n     * Flag used to indicate if simulcast is turned off and a cap of 500 Kbps is applied on screensharing.\n     */\n    this._capScreenshareBitrate = this.options.capScreenshareBitrate;\n\n    /**\n    * Flag used to indicate if the browser is running in unified  plan mode.\n    */\n    this._usesUnifiedPlan = options.usesUnifiedPlan;\n\n    /**\n     * Flag used to indicate if RTCRtpTransceiver#setCodecPreferences is to be used instead of SDP\n     * munging for codec selection.\n     */\n    this._usesTransceiverCodecPreferences = browser.supportsCodecPreferences() && this._usesUnifiedPlan;\n    this._usesTransceiverCodecPreferences\n        && logger.info('Using RTCRtpTransceiver#setCodecPreferences for codec selection');\n\n    /**\n     * @type {number} The max number of stats to keep in this.stats. Limit to\n     * 300 values, i.e. 5 minutes; set to 0 to disable\n     */\n    this.maxstats = options.maxstats;\n\n    this.interop = new Interop();\n    const Simulcast = require('@jitsi/sdp-simulcast');\n\n    this.simulcast = new Simulcast(\n        {\n            numOfLayers: SIM_LAYER_RIDS.length,\n            explodeRemoteSimulcast: false,\n            usesUnifiedPlan: this._usesUnifiedPlan\n        });\n    this.sdpConsistency = new SdpConsistency(this.toString());\n\n    /**\n     * Munges local SDP provided to the Jingle Session in order to prevent from\n     * sending SSRC updates on attach/detach and mute/unmute (for video).\n     * @type {LocalSdpMunger}\n     */\n    this.localSdpMunger = new LocalSdpMunger(this, this.rtc.getLocalEndpointId());\n\n    /**\n     * TracablePeerConnection uses RTC's eventEmitter\n     * @type {EventEmitter}\n     */\n    this.eventEmitter = rtc.eventEmitter;\n    this.rtxModifier = new RtxModifier();\n\n    /**\n     * The height constraint applied on the video sender.\n     */\n    this.senderVideoMaxHeight = null;\n\n    // override as desired\n    this.trace = (what, info) => {\n        logger.debug(what, info);\n\n        this.updateLog.push({\n            time: new Date(),\n            type: what,\n            value: info || ''\n        });\n    };\n    this.onicecandidate = null;\n    this.peerconnection.onicecandidate = event => {\n        this.trace(\n            'onicecandidate',\n            JSON.stringify(event.candidate, null, ' '));\n\n        if (this.onicecandidate !== null) {\n            this.onicecandidate(event);\n        }\n    };\n\n    // Use track events when browser is running in unified plan mode and stream events in plan-b mode.\n    if (this._usesUnifiedPlan) {\n        this.onTrack = evt => {\n            const stream = evt.streams[0];\n\n            this._remoteTrackAdded(stream, evt.track, evt.transceiver);\n            stream.addEventListener('removetrack', e => {\n                this._remoteTrackRemoved(stream, e.track);\n            });\n        };\n        this.peerconnection.addEventListener('track', this.onTrack);\n    } else {\n        this.peerconnection.onaddstream = event => this._remoteStreamAdded(event.stream);\n        this.peerconnection.onremovestream = event => this._remoteStreamRemoved(event.stream);\n    }\n    this.onsignalingstatechange = null;\n    this.peerconnection.onsignalingstatechange = event => {\n        this.trace('onsignalingstatechange', this.signalingState);\n        if (this.onsignalingstatechange !== null) {\n            this.onsignalingstatechange(event);\n        }\n    };\n    this.oniceconnectionstatechange = null;\n    this.peerconnection.oniceconnectionstatechange = event => {\n        this.trace('oniceconnectionstatechange', this.iceConnectionState);\n        if (this.oniceconnectionstatechange !== null) {\n            this.oniceconnectionstatechange(event);\n        }\n    };\n    this.onnegotiationneeded = null;\n    this.peerconnection.onnegotiationneeded = event => {\n        this.trace('onnegotiationneeded');\n        if (this.onnegotiationneeded !== null) {\n            this.onnegotiationneeded(event);\n        }\n    };\n    this.ondatachannel = null;\n    this.peerconnection.ondatachannel = event => {\n        this.trace('ondatachannel');\n        if (this.ondatachannel !== null) {\n            this.ondatachannel(event);\n        }\n    };\n\n    if (this.maxstats) {\n        this.statsinterval = window.setInterval(() => {\n            this.getStats().then(stats => {\n                if (typeof stats?.result === 'function') {\n                    const results = stats.result();\n\n                    for (let i = 0; i < results.length; ++i) {\n                        const res = results[i];\n\n                        res.names().forEach(name => {\n                            this._processStat(res, name, res.stat(name));\n                        });\n                    }\n                } else {\n                    stats.forEach(r => this._processStat(r, '', r));\n                }\n            });\n        }, 1000);\n    }\n\n    logger.info(`Create new ${this}`);\n}\n\n/* eslint-enable max-params */\n\n/**\n * Process stat and adds it to the array of stats we store.\n * @param report the current stats report.\n * @param name the name of the report, if available\n * @param statValue the value to add.\n * @private\n */\nTraceablePeerConnection.prototype._processStat\n    = function(report, name, statValue) {\n        const id = `${report.id}-${name}`;\n        let s = this.stats[id];\n        const now = new Date();\n\n        if (!s) {\n            this.stats[id] = s = {\n                startTime: now,\n                endTime: now,\n                values: [],\n                times: []\n            };\n        }\n        s.values.push(statValue);\n        s.times.push(now.getTime());\n        if (s.values.length > this.maxstats) {\n            s.values.shift();\n            s.times.shift();\n        }\n        s.endTime = now;\n    };\n\n/**\n * Returns a string representation of a SessionDescription object.\n */\nconst dumpSDP = function(description) {\n    if (typeof description === 'undefined' || description === null) {\n        return '';\n    }\n\n    return `type: ${description.type}\\r\\n${description.sdp}`;\n};\n\n\n/**\n * Forwards the {@link peerconnection.iceConnectionState} state except that it\n * will convert \"completed\" into \"connected\" where both mean that the ICE has\n * succeeded and is up and running. We never see \"completed\" state for\n * the JVB connection, but it started appearing for the P2P one. This method\n * allows to adapt old logic to this new situation.\n * @return {string}\n */\nTraceablePeerConnection.prototype.getConnectionState = function() {\n    const state = this.peerconnection.iceConnectionState;\n\n    if (state === 'completed') {\n        return 'connected';\n    }\n\n    return state;\n};\n\n/**\n * Obtains the media direction for given {@link MediaType}. The method takes\n * into account whether or not there are any local tracks for media and\n * the {@link audioTransferActive} and {@link videoTransferActive} flags.\n * @param {MediaType} mediaType\n * @param {boolean} isAddOperation whether the direction is to be calculated after a source-add action.\n * @return {string} one of the SDP direction constants ('sendrecv, 'recvonly'\n * etc.) which should be used when setting local description on the peer\n * connection.\n * @private\n */\nTraceablePeerConnection.prototype.getDesiredMediaDirection = function(mediaType, isAddOperation = false) {\n    const hasLocalSource = this.hasAnyTracksOfType(mediaType);\n\n    if (this._usesUnifiedPlan) {\n        return isAddOperation\n            ? hasLocalSource ? MediaDirection.SENDRECV : MediaDirection.SENDONLY\n            : hasLocalSource ? MediaDirection.RECVONLY : MediaDirection.INACTIVE;\n    }\n\n    const mediaTransferActive = mediaType === MediaType.AUDIO ? this.audioTransferActive : this.videoTransferActive;\n\n    if (mediaTransferActive) {\n        return hasLocalSource ? MediaDirection.SENDRECV : MediaDirection.RECVONLY;\n    }\n\n    return MediaDirection.INACTIVE;\n};\n\n/**\n * Returns the list of RTCRtpReceivers created for the source of the given media type associated with\n * the set of remote endpoints specified.\n * @param {Array<string>} endpoints list of the endpoints\n * @param {string} mediaType 'audio' or 'video'\n * @returns {Array<RTCRtpReceiver>} list of receivers created by the peerconnection.\n */\nTraceablePeerConnection.prototype._getReceiversByEndpointIds = function(endpoints, mediaType) {\n    let remoteTracks = [];\n    let receivers = [];\n\n    for (const endpoint of endpoints) {\n        remoteTracks = remoteTracks.concat(this.getRemoteTracks(endpoint, mediaType));\n    }\n\n    // Get the ids of the MediaStreamTracks associated with each of these remote tracks.\n    const remoteTrackIds = remoteTracks.map(remote => remote.track?.id);\n\n    receivers = this.peerconnection.getReceivers()\n        .filter(receiver => receiver.track\n            && receiver.track.kind === mediaType\n            && remoteTrackIds.find(trackId => trackId === receiver.track.id));\n\n    return receivers;\n};\n\n/**\n * Tells whether or not this TPC instance is using Simulcast.\n * @return {boolean} <tt>true</tt> if simulcast is enabled and active or\n * <tt>false</tt> if it's turned off.\n */\nTraceablePeerConnection.prototype.isSimulcastOn = function() {\n    return !this.options.disableSimulcast;\n};\n\n/**\n * Handles {@link SignalingEvents.PEER_VIDEO_TYPE_CHANGED}\n * @param {string} endpointId the video owner's ID (MUC nickname)\n * @param {VideoType} videoType the new value\n * @private\n */\nTraceablePeerConnection.prototype._peerVideoTypeChanged = function(\n        endpointId,\n        videoType) {\n    // Check if endpointId has a value to avoid action on random track\n    if (!endpointId) {\n        logger.error(`${this} No endpointID on peerVideoTypeChanged`);\n\n        return;\n    }\n    const videoTrack = this.getRemoteTracks(endpointId, MediaType.VIDEO);\n\n    if (videoTrack.length) {\n        // NOTE 1 track per media type is assumed\n        videoTrack[0]._setVideoType(videoType);\n    }\n};\n\n/**\n * Handles remote track mute / unmute events.\n * @param {string} endpointId the track owner's identifier (MUC nickname)\n * @param {MediaType} mediaType \"audio\" or \"video\"\n * @param {boolean} isMuted the new mute state\n * @private\n */\nTraceablePeerConnection.prototype._peerMutedChanged = function(\n        endpointId,\n        mediaType,\n        isMuted) {\n    // Check if endpointId is a value to avoid doing action on all remote tracks\n    if (!endpointId) {\n        logger.error(`${this} On peerMuteChanged - no endpoint ID`);\n\n        return;\n    }\n    const track = this.getRemoteTracks(endpointId, mediaType);\n\n    if (track.length) {\n        // NOTE 1 track per media type is assumed\n        track[0].setMute(isMuted);\n    }\n};\n\n/**\n * Obtains audio levels of the remote audio tracks by getting the source information on the RTCRtpReceivers.\n * The information relevant to the ssrc is updated each time a RTP packet constaining the ssrc is received.\n * @param {Array<string>} speakerList list of endpoint ids for which audio levels are to be gathered.\n * @returns {Object} containing ssrc and audio level information as a key-value pair.\n */\nTraceablePeerConnection.prototype.getAudioLevels = function(speakerList = []) {\n    const audioLevels = {};\n    const audioReceivers = speakerList.length\n        ? this._getReceiversByEndpointIds(speakerList, MediaType.AUDIO)\n        : this.peerconnection.getReceivers()\n            .filter(receiver => receiver.track && receiver.track.kind === MediaType.AUDIO && receiver.track.enabled);\n\n    audioReceivers.forEach(remote => {\n        const ssrc = remote.getSynchronizationSources();\n\n        if (ssrc && ssrc.length) {\n            // As per spec, this audiolevel is a value between 0..1 (linear), where 1.0\n            // represents 0 dBov, 0 represents silence, and 0.5 represents approximately\n            // 6 dBSPL change in the sound pressure level from 0 dBov.\n            // https://www.w3.org/TR/webrtc/#dom-rtcrtpcontributingsource-audiolevel\n            audioLevels[ssrc[0].source] = ssrc[0].audioLevel;\n        }\n    });\n\n    return audioLevels;\n};\n\n/**\n * Obtains local tracks for given {@link MediaType}. If the <tt>mediaType</tt>\n * argument is omitted the list of all local tracks will be returned.\n * @param {MediaType} [mediaType]\n * @return {Array<JitsiLocalTrack>}\n */\nTraceablePeerConnection.prototype.getLocalTracks = function(mediaType) {\n    let tracks = Array.from(this.localTracks.values());\n\n    if (mediaType !== undefined) {\n        tracks = tracks.filter(track => track.getType() === mediaType);\n    }\n\n    return tracks;\n};\n\n/**\n * Retrieves the local video track.\n *\n * @returns {JitsiLocalTrack|undefined} - local video track.\n */\nTraceablePeerConnection.prototype.getLocalVideoTrack = function() {\n    return this.getLocalTracks(MediaType.VIDEO)[0];\n};\n\n/**\n * Checks whether or not this {@link TraceablePeerConnection} instance contains\n * any local tracks for given <tt>mediaType</tt>.\n * @param {MediaType} mediaType\n * @return {boolean}\n */\nTraceablePeerConnection.prototype.hasAnyTracksOfType = function(mediaType) {\n    if (!mediaType) {\n        throw new Error('\"mediaType\" is required');\n    }\n\n    return this.getLocalTracks(mediaType).length > 0;\n};\n\n/**\n * Obtains all remote tracks currently known to this PeerConnection instance.\n * @param {string} [endpointId] the track owner's identifier (MUC nickname)\n * @param {MediaType} [mediaType] the remote tracks will be filtered\n * by their media type if this argument is specified.\n * @return {Array<JitsiRemoteTrack>}\n */\nTraceablePeerConnection.prototype.getRemoteTracks = function(\n        endpointId,\n        mediaType) {\n    const remoteTracks = [];\n    const endpoints\n        = endpointId ? [ endpointId ] : this.remoteTracks.keys();\n\n    for (const endpoint of endpoints) {\n        const endpointTrackMap = this.remoteTracks.get(endpoint);\n\n        if (!endpointTrackMap) {\n\n            // Otherwise an empty Map() would have to be allocated above\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n\n        for (const trackMediaType of endpointTrackMap.keys()) {\n            // per media type filtering\n            if (!mediaType || mediaType === trackMediaType) {\n                const mediaTrack = endpointTrackMap.get(trackMediaType);\n\n                if (mediaTrack) {\n                    remoteTracks.push(mediaTrack);\n                }\n            }\n        }\n    }\n\n    return remoteTracks;\n};\n\n/**\n * Parses the remote description and returns the sdp lines of the sources associated with a remote participant.\n *\n * @param {string} id Endpoint id of the remote participant.\n * @returns {Array<string>} The sdp lines that have the ssrc information.\n */\nTraceablePeerConnection.prototype.getRemoteSourceInfoByParticipant = function(id) {\n    const removeSsrcInfo = [];\n    const remoteTracks = this.getRemoteTracks(id);\n\n    if (!remoteTracks?.length) {\n        return removeSsrcInfo;\n    }\n    const primarySsrcs = remoteTracks.map(track => track.getSSRC());\n    const sdp = new SDP(this.remoteDescription.sdp);\n\n    primarySsrcs.forEach((ssrc, idx) => {\n        for (const media of sdp.media) {\n            let lines = '';\n            let ssrcLines = SDPUtil.findLines(media, `a=ssrc:${ssrc}`);\n\n            if (ssrcLines.length) {\n                if (!removeSsrcInfo[idx]) {\n                    removeSsrcInfo[idx] = '';\n                }\n\n                // Check if there are any FID groups present for the primary ssrc.\n                const fidLines = SDPUtil.findLines(media, `a=ssrc-group:FID ${ssrc}`);\n\n                if (fidLines.length) {\n                    const secondarySsrc = fidLines[0].split(' ')[2];\n\n                    lines += `${fidLines[0]}\\r\\n`;\n                    ssrcLines = ssrcLines.concat(SDPUtil.findLines(media, `a=ssrc:${secondarySsrc}`));\n                }\n                removeSsrcInfo[idx] += `${ssrcLines.join('\\r\\n')}\\r\\n`;\n                removeSsrcInfo[idx] += lines;\n            }\n        }\n    });\n\n    return removeSsrcInfo;\n};\n\n/**\n * Returns the target bitrates configured for the local video source.\n *\n * @returns {Object}\n */\nTraceablePeerConnection.prototype.getTargetVideoBitrates = function() {\n    const currentCodec = this.getConfiguredVideoCodec();\n\n    return this.videoBitrates[currentCodec.toUpperCase()] || this.videoBitrates;\n};\n\n/**\n * Tries to find {@link JitsiTrack} for given SSRC number. It will search both\n * local and remote tracks bound to this instance.\n * @param {number} ssrc\n * @return {JitsiTrack|null}\n */\nTraceablePeerConnection.prototype.getTrackBySSRC = function(ssrc) {\n    if (typeof ssrc !== 'number') {\n        throw new Error(`SSRC ${ssrc} is not a number`);\n    }\n    for (const localTrack of this.localTracks.values()) {\n        if (this.getLocalSSRC(localTrack) === ssrc) {\n            return localTrack;\n        }\n    }\n    for (const remoteTrack of this.getRemoteTracks()) {\n        if (remoteTrack.getSSRC() === ssrc) {\n            return remoteTrack;\n        }\n    }\n\n    return null;\n};\n\n/**\n * Tries to find SSRC number for given {@link JitsiTrack} id. It will search\n * both local and remote tracks bound to this instance.\n * @param {string} id\n * @return {number|null}\n */\nTraceablePeerConnection.prototype.getSsrcByTrackId = function(id) {\n\n    const findTrackById = track => track.getTrack().id === id;\n    const localTrack = this.getLocalTracks().find(findTrackById);\n\n    if (localTrack) {\n        return this.getLocalSSRC(localTrack);\n    }\n\n    const remoteTrack = this.getRemoteTracks().find(findTrackById);\n\n    if (remoteTrack) {\n        return remoteTrack.getSSRC();\n    }\n\n    return null;\n};\n\n/**\n * Called when new remote MediaStream is added to the PeerConnection.\n * @param {MediaStream} stream the WebRTC MediaStream for remote participant\n */\nTraceablePeerConnection.prototype._remoteStreamAdded = function(stream) {\n    const streamId = RTC.getStreamID(stream);\n\n    if (!RTC.isUserStreamById(streamId)) {\n        logger.info(`${this} ignored remote 'stream added' event for non-user stream[id=${streamId}]`);\n\n        return;\n    }\n\n    // Bind 'addtrack'/'removetrack' event handlers\n    if (browser.isChromiumBased()) {\n        stream.onaddtrack = event => {\n            this._remoteTrackAdded(stream, event.track);\n        };\n        stream.onremovetrack = event => {\n            this._remoteTrackRemoved(stream, event.track);\n        };\n    }\n\n    // Call remoteTrackAdded for each track in the stream\n    const streamAudioTracks = stream.getAudioTracks();\n\n    for (const audioTrack of streamAudioTracks) {\n        this._remoteTrackAdded(stream, audioTrack);\n    }\n    const streamVideoTracks = stream.getVideoTracks();\n\n    for (const videoTrack of streamVideoTracks) {\n        this._remoteTrackAdded(stream, videoTrack);\n    }\n};\n\n\n/**\n * Called on \"track added\" and \"stream added\" PeerConnection events (because we\n * handle streams on per track basis). Finds the owner and the SSRC for\n * the track and passes that to ChatRoom for further processing.\n * @param {MediaStream} stream the WebRTC MediaStream instance which is\n * the parent of the track\n * @param {MediaStreamTrack} track the WebRTC MediaStreamTrack added for remote\n * participant.\n * @param {RTCRtpTransceiver} transceiver the WebRTC transceiver that is created\n * for the remote participant in unified plan.\n */\nTraceablePeerConnection.prototype._remoteTrackAdded = function(stream, track, transceiver = null) {\n    const streamId = RTC.getStreamID(stream);\n    const mediaType = track.kind;\n\n    if (!this.isP2P && !RTC.isUserStreamById(streamId)) {\n        logger.info(`${this} ignored remote 'stream added' event for non-user stream[id=${streamId}]`);\n\n        return;\n    }\n    logger.info(`${this} adding remote track for stream[id=${streamId},type=${mediaType}]`);\n\n    // look up an associated JID for a stream id\n    if (!mediaType) {\n        GlobalOnErrorHandler.callErrorHandler(\n            new Error(\n                `MediaType undefined for remote track, stream id: ${streamId}`\n            ));\n\n        // Abort\n        return;\n    }\n\n    const remoteSDP = this._usesUnifiedPlan\n        ? new SDP(this.peerconnection.remoteDescription.sdp)\n        : new SDP(this.remoteDescription.sdp);\n    let mediaLines;\n\n    // In unified plan mode, find the matching mline using 'mid' if its availble, otherwise use the\n    // 'msid' attribute of the stream.\n    if (this._usesUnifiedPlan) {\n        if (transceiver && transceiver.mid) {\n            const mid = transceiver.mid;\n\n            mediaLines = remoteSDP.media.filter(mls => SDPUtil.findLine(mls, `a=mid:${mid}`));\n        } else {\n            mediaLines = remoteSDP.media.filter(mls => {\n                const msid = SDPUtil.findLine(mls, 'a=msid:');\n\n                return typeof msid !== 'undefined' && streamId === msid.substring(7).split(' ')[0];\n            });\n        }\n    } else {\n        mediaLines = remoteSDP.media.filter(mls => mls.startsWith(`m=${mediaType}`));\n    }\n\n    if (!mediaLines.length) {\n        GlobalOnErrorHandler.callErrorHandler(\n            new Error(`No media lines found in remote SDP for remote stream[id=${streamId},type=${mediaType}]`));\n\n        // Abort\n        return;\n    }\n\n    let ssrcLines = SDPUtil.findLines(mediaLines[0], 'a=ssrc:');\n\n    ssrcLines\n        = ssrcLines.filter(line => line.indexOf(`msid:${streamId}`) !== -1);\n    if (!ssrcLines.length) {\n        GlobalOnErrorHandler.callErrorHandler(\n            new Error(`No SSRC lines found in remote SDP for remote stream[msid=${streamId},type=${mediaType}]`));\n\n        // Abort\n        return;\n    }\n\n    // FIXME the length of ssrcLines[0] not verified, but it will fail\n    // with global error handler anyway\n    const ssrcStr = ssrcLines[0].substring(7).split(' ')[0];\n    const trackSsrc = Number(ssrcStr);\n    const ownerEndpointId = this.signalingLayer.getSSRCOwner(trackSsrc);\n\n    if (isNaN(trackSsrc) || trackSsrc < 0) {\n        GlobalOnErrorHandler.callErrorHandler(\n            new Error(\n                `Invalid SSRC for remote stream[ssrc=${trackSsrc},id=${streamId},type=${mediaType}]`));\n\n        // Abort\n        return;\n    } else if (!ownerEndpointId) {\n        GlobalOnErrorHandler.callErrorHandler(\n            new Error(\n                `No SSRC owner known for remote stream[ssrc=${trackSsrc},id=${streamId},type=${mediaType}]`));\n\n        // Abort\n        return;\n    }\n\n    logger.info(`${this} creating remote track[endpoint=${ownerEndpointId},ssrc=${trackSsrc},type=${mediaType}]`);\n\n    const peerMediaInfo\n        = this.signalingLayer.getPeerMediaInfo(ownerEndpointId, mediaType);\n\n    if (!peerMediaInfo) {\n        GlobalOnErrorHandler.callErrorHandler(\n            new Error(`${this}: no peer media info available for ${ownerEndpointId}`));\n\n        return;\n    }\n\n    const muted = peerMediaInfo.muted;\n    const videoType = peerMediaInfo.videoType; // can be undefined\n\n    this._createRemoteTrack(\n        ownerEndpointId, stream, track, mediaType, videoType, trackSsrc, muted);\n};\n\n// FIXME cleanup params\n/* eslint-disable max-params */\n\n/**\n * Initializes a new JitsiRemoteTrack instance with the data provided by\n * the signaling layer and SDP.\n *\n * @param {string} ownerEndpointId the owner's endpoint ID (MUC nickname)\n * @param {MediaStream} stream the WebRTC stream instance\n * @param {MediaStreamTrack} track the WebRTC track instance\n * @param {MediaType} mediaType the track's type of the media\n * @param {VideoType} [videoType] the track's type of the video (if applicable)\n * @param {number} ssrc the track's main SSRC number\n * @param {boolean} muted the initial muted status\n */\nTraceablePeerConnection.prototype._createRemoteTrack = function(\n        ownerEndpointId,\n        stream,\n        track,\n        mediaType,\n        videoType,\n        ssrc,\n        muted) {\n    let remoteTracksMap = this.remoteTracks.get(ownerEndpointId);\n\n    if (!remoteTracksMap) {\n        remoteTracksMap = new Map();\n        this.remoteTracks.set(ownerEndpointId, remoteTracksMap);\n    }\n\n    const existingTrack = remoteTracksMap.get(mediaType);\n\n    if (existingTrack && existingTrack.getTrack() === track) {\n        // Ignore duplicated event which can originate either from 'onStreamAdded' or 'onTrackAdded'.\n        logger.info(`${this} ignored duplicated track event for track[endpoint=${ownerEndpointId},type=${mediaType}]`);\n\n        return;\n    } else if (existingTrack) {\n        logger.error(`${this} received a second remote track for track[endpoint=${ownerEndpointId},type=${mediaType}]`\n            + 'deleting the existing track');\n\n        // The exisiting track needs to be removed here. We can get here when Jicofo reverses the order of source-add\n        // and source-remove messages. Ideally, when a remote endpoint changes source, like switching devices, it sends\n        // a source-remove (for old ssrc) followed by a source-add (for new ssrc) and Jicofo then should forward these\n        // two messages to all the other endpoints in the conference in the same order. However, sometimes, these\n        // messages arrive at the client in the reverse order resulting in two remote tracks (of same media type) being\n        // created and in case of video, a black strip (that of the first track which has ended) appears over the live\n        // track obscuring it. Removing the existing track when that happens will fix this issue.\n        this._remoteTrackRemoved(existingTrack.getOriginalStream(), existingTrack.getTrack());\n    }\n\n    const remoteTrack\n        = new JitsiRemoteTrack(\n                this.rtc,\n                this.rtc.conference,\n                ownerEndpointId,\n                stream,\n                track,\n                mediaType,\n                videoType,\n                ssrc,\n                muted,\n                this.isP2P);\n\n    remoteTracksMap.set(mediaType, remoteTrack);\n\n    this.eventEmitter.emit(RTCEvents.REMOTE_TRACK_ADDED, remoteTrack, this);\n};\n\n/* eslint-enable max-params */\n\n/**\n * Handles remote stream removal.\n * @param stream the WebRTC MediaStream object which is being removed from the\n * PeerConnection\n */\nTraceablePeerConnection.prototype._remoteStreamRemoved = function(stream) {\n    if (!RTC.isUserStream(stream)) {\n        const id = RTC.getStreamID(stream);\n\n        logger.info(`Ignored remote 'stream removed' event for stream[id=${id}]`);\n\n        return;\n    }\n\n    // Call remoteTrackRemoved for each track in the stream\n    const streamVideoTracks = stream.getVideoTracks();\n\n    for (const videoTrack of streamVideoTracks) {\n        this._remoteTrackRemoved(stream, videoTrack);\n    }\n    const streamAudioTracks = stream.getAudioTracks();\n\n    for (const audioTrack of streamAudioTracks) {\n        this._remoteTrackRemoved(stream, audioTrack);\n    }\n};\n\n/**\n * Handles remote media track removal.\n * @param {MediaStream} stream WebRTC MediaStream instance which is the parent\n * of the track.\n * @param {MediaStreamTrack} track the WebRTC MediaStreamTrack which has been\n * removed from the PeerConnection.\n */\nTraceablePeerConnection.prototype._remoteTrackRemoved = function(\n        stream,\n        track) {\n    const streamId = RTC.getStreamID(stream);\n    const trackId = track && RTC.getTrackID(track);\n\n    if (!RTC.isUserStreamById(streamId)) {\n        logger.info(`${this} ignored remote 'stream removed' event for non-user stream[id=${streamId}]`);\n\n        return;\n    }\n    logger.info(`${this} remote track removed stream[id=${streamId},trackId=${trackId}]`);\n\n    if (!streamId) {\n        GlobalOnErrorHandler.callErrorHandler(new Error(`${this} remote track removal failed - no stream ID`));\n\n        return;\n    }\n\n    if (!trackId) {\n        GlobalOnErrorHandler.callErrorHandler(new Error(`${this} remote track removal failed - no track ID`));\n\n        return;\n    }\n\n    if (!this._removeRemoteTrackById(streamId, trackId)) {\n        // NOTE this warning is always printed when user leaves the room,\n        // because we remove remote tracks manually on MUC member left event,\n        // before the SSRCs are removed by Jicofo. In most cases it is fine to\n        // ignore this warning, but still it's better to keep it printed for\n        // debugging purposes.\n        //\n        // We could change the behaviour to emit track removed only from here,\n        // but the order of the events will change and consuming apps could\n        // behave unexpectedly (the \"user left\" event would come before \"track\n        // removed\" events).\n        logger.warn(`${this} Removed track not found for stream[id=${streamId},trackId=${trackId}]`);\n    }\n};\n\n/**\n * Finds remote track by it's stream and track ids.\n * @param {string} streamId the media stream id as defined by the WebRTC\n * @param {string} trackId the media track id as defined by the WebRTC\n * @return {JitsiRemoteTrack|undefined} the track's instance or\n * <tt>undefined</tt> if not found.\n * @private\n */\nTraceablePeerConnection.prototype._getRemoteTrackById = function(\n        streamId,\n        trackId) {\n    // .find will break the loop once the first match is found\n    for (const endpointTrackMap of this.remoteTracks.values()) {\n        for (const mediaTrack of endpointTrackMap.values()) {\n            // FIXME verify and try to use ===\n            /* eslint-disable eqeqeq */\n            if (mediaTrack.getStreamId() == streamId\n                && mediaTrack.getTrackId() == trackId) {\n                return mediaTrack;\n            }\n\n            /* eslint-enable eqeqeq */\n        }\n    }\n\n    return undefined;\n};\n\n/**\n * Removes all JitsiRemoteTracks associated with given MUC nickname\n * (resource part of the JID). Returns array of removed tracks.\n *\n * @param {string} owner - The resource part of the MUC JID.\n * @returns {JitsiRemoteTrack[]}\n */\nTraceablePeerConnection.prototype.removeRemoteTracks = function(owner) {\n    const removedTracks = [];\n    const remoteTracksMap = this.remoteTracks.get(owner);\n\n    if (remoteTracksMap) {\n        const removedAudioTrack = remoteTracksMap.get(MediaType.AUDIO);\n        const removedVideoTrack = remoteTracksMap.get(MediaType.VIDEO);\n\n        removedAudioTrack && removedTracks.push(removedAudioTrack);\n        removedVideoTrack && removedTracks.push(removedVideoTrack);\n\n        this.remoteTracks.delete(owner);\n    }\n    logger.debug(`${this} removed remote tracks[endpoint=${owner},count=${removedTracks.length}`);\n\n    return removedTracks;\n};\n\n/**\n * Removes and disposes given <tt>JitsiRemoteTrack</tt> instance. Emits\n * {@link RTCEvents.REMOTE_TRACK_REMOVED}.\n * @param {JitsiRemoteTrack} toBeRemoved\n */\nTraceablePeerConnection.prototype._removeRemoteTrack = function(toBeRemoved) {\n    toBeRemoved.dispose();\n    const participantId = toBeRemoved.getParticipantId();\n    const remoteTracksMap = this.remoteTracks.get(participantId);\n\n    if (!remoteTracksMap) {\n        logger.error(`${this} removeRemoteTrack: no remote tracks map for endpoint=${participantId}`);\n    } else if (!remoteTracksMap.delete(toBeRemoved.getType())) {\n        logger.error(`${this} Failed to remove ${toBeRemoved} - type mapping messed up ?`);\n    }\n    this.eventEmitter.emit(RTCEvents.REMOTE_TRACK_REMOVED, toBeRemoved);\n};\n\n/**\n * Removes and disposes <tt>JitsiRemoteTrack</tt> identified by given stream and\n * track ids.\n *\n * @param {string} streamId the media stream id as defined by the WebRTC\n * @param {string} trackId the media track id as defined by the WebRTC\n * @returns {JitsiRemoteTrack|undefined} the track which has been removed or\n * <tt>undefined</tt> if no track matching given stream and track ids was\n * found.\n */\nTraceablePeerConnection.prototype._removeRemoteTrackById = function(\n        streamId,\n        trackId) {\n    const toBeRemoved = this._getRemoteTrackById(streamId, trackId);\n\n    if (toBeRemoved) {\n        this._removeRemoteTrack(toBeRemoved);\n    }\n\n    return toBeRemoved;\n};\n\n/**\n * Returns a map with keys msid/mediaType and <tt>TrackSSRCInfo</tt> values.\n * @param {RTCSessionDescription} desc the local description.\n * @return {Map<string,TrackSSRCInfo>}\n */\nTraceablePeerConnection.prototype._extractSSRCMap = function(desc) {\n    /**\n     * Track SSRC infos mapped by stream ID (msid) or mediaType (unfied-plan)\n     * @type {Map<string,TrackSSRCInfo>}\n     */\n    const ssrcMap = new Map();\n\n    /**\n     * Groups mapped by primary SSRC number\n     * @type {Map<number,Array<SSRCGroupInfo>>}\n     */\n    const groupsMap = new Map();\n\n    if (typeof desc !== 'object' || desc === null\n        || typeof desc.sdp !== 'string') {\n        logger.warn('An empty description was passed as an argument');\n\n        return ssrcMap;\n    }\n\n    const session = transform.parse(desc.sdp);\n\n    if (!Array.isArray(session.media)) {\n        return ssrcMap;\n    }\n\n    let media = session.media;\n\n    // For unified plan clients, only the first audio and video mlines will have ssrcs for the local sources.\n    // The rest of the m-lines are for the recv-only sources, one for each remote source.\n    if (this._usesUnifiedPlan) {\n        media = [];\n        [ MediaType.AUDIO, MediaType.VIDEO ].forEach(mediaType => {\n            media.push(session.media.find(m => m.type === mediaType));\n        });\n    }\n\n    for (const mLine of media) {\n        if (!Array.isArray(mLine.ssrcs)) {\n            continue; // eslint-disable-line no-continue\n        }\n\n        if (Array.isArray(mLine.ssrcGroups)) {\n            for (const group of mLine.ssrcGroups) {\n                if (typeof group.semantics !== 'undefined'\n                    && typeof group.ssrcs !== 'undefined') {\n                    // Parse SSRCs and store as numbers\n                    const groupSSRCs = group.ssrcs.split(' ').map(ssrcStr => parseInt(ssrcStr, 10));\n                    const primarySSRC = groupSSRCs[0];\n\n                    // Note that group.semantics is already present\n                    group.ssrcs = groupSSRCs;\n\n                    // eslint-disable-next-line max-depth\n                    if (!groupsMap.has(primarySSRC)) {\n                        groupsMap.set(primarySSRC, []);\n                    }\n                    groupsMap.get(primarySSRC).push(group);\n                }\n            }\n        }\n\n        let ssrcs = mLine.ssrcs;\n\n        // Filter the ssrcs with 'msid' attribute for plan-b clients and 'cname' for unified-plan clients.\n        ssrcs = this._usesUnifiedPlan\n            ? ssrcs.filter(s => s.attribute === 'cname')\n            : ssrcs.filter(s => s.attribute === 'msid');\n\n        for (const ssrc of ssrcs) {\n            // Use the mediaType as key for the source map for unified plan clients since msids are not part of\n            // the standard and the unified plan SDPs do not have a proper msid attribute for the sources.\n            // Also the ssrcs for sources do not change for Unified plan clients since RTCRtpSender#replaceTrack is\n            // used for switching the tracks so it is safe to use the mediaType as the key for the TrackSSRCInfo map.\n            const key = this._usesUnifiedPlan ? mLine.type : ssrc.value;\n            const ssrcNumber = ssrc.id;\n            let ssrcInfo = ssrcMap.get(key);\n\n            if (!ssrcInfo) {\n                ssrcInfo = {\n                    ssrcs: [],\n                    groups: [],\n                    msid: key\n                };\n                ssrcMap.set(key, ssrcInfo);\n            }\n            ssrcInfo.ssrcs.push(ssrcNumber);\n\n            if (groupsMap.has(ssrcNumber)) {\n                const ssrcGroups = groupsMap.get(ssrcNumber);\n\n                for (const group of ssrcGroups) {\n                    ssrcInfo.groups.push(group);\n                }\n            }\n        }\n    }\n\n    return ssrcMap;\n};\n\n/**\n * Takes a SessionDescription object and returns a \"normalized\" version.\n * Currently it takes care of ordering the a=ssrc lines and denoting receive\n * only SSRCs.\n */\nconst normalizePlanB = function(desc) {\n    if (typeof desc !== 'object' || desc === null\n        || typeof desc.sdp !== 'string') {\n        logger.warn('An empty description was passed as an argument');\n\n        return desc;\n    }\n\n    // eslint-disable-next-line no-shadow\n    const transform = require('sdp-transform');\n    const session = transform.parse(desc.sdp);\n\n    if (typeof session !== 'undefined'\n            && typeof session.media !== 'undefined'\n            && Array.isArray(session.media)) {\n        session.media.forEach(mLine => {\n\n            // Chrome appears to be picky about the order in which a=ssrc lines\n            // are listed in an m-line when rtx is enabled (and thus there are\n            // a=ssrc-group lines with FID semantics). Specifically if we have\n            // \"a=ssrc-group:FID S1 S2\" and the \"a=ssrc:S2\" lines appear before\n            // the \"a=ssrc:S1\" lines, SRD fails.\n            // So, put SSRC which appear as the first SSRC in an FID ssrc-group\n            // first.\n            const firstSsrcs = [];\n            const newSsrcLines = [];\n\n            if (typeof mLine.ssrcGroups !== 'undefined'\n                && Array.isArray(mLine.ssrcGroups)) {\n                mLine.ssrcGroups.forEach(group => {\n                    if (typeof group.semantics !== 'undefined'\n                        && group.semantics === 'FID') {\n                        if (typeof group.ssrcs !== 'undefined') {\n                            firstSsrcs.push(Number(group.ssrcs.split(' ')[0]));\n                        }\n                    }\n                });\n            }\n\n            if (Array.isArray(mLine.ssrcs)) {\n                let i;\n\n                for (i = 0; i < mLine.ssrcs.length; i++) {\n                    if (typeof mLine.ssrcs[i] === 'object'\n                        && typeof mLine.ssrcs[i].id !== 'undefined'\n                        && firstSsrcs.indexOf(mLine.ssrcs[i].id) >= 0) {\n                        newSsrcLines.push(mLine.ssrcs[i]);\n                        delete mLine.ssrcs[i];\n                    }\n                }\n\n                for (i = 0; i < mLine.ssrcs.length; i++) {\n                    if (typeof mLine.ssrcs[i] !== 'undefined') {\n                        newSsrcLines.push(mLine.ssrcs[i]);\n                    }\n                }\n\n                mLine.ssrcs = replaceDefaultUnifiedPlanMsid(newSsrcLines);\n            }\n        });\n    }\n\n    const resStr = transform.write(session);\n\n\n    return new RTCSessionDescription({\n        type: desc.type,\n        sdp: resStr\n    });\n};\n\n/**\n * Unified plan differentiates a remote track not associated with a stream using\n * the msid \"-\", which can incorrectly trigger an onaddstream event in plan-b.\n * For jitsi, these tracks are actually receive-only ssrcs. To prevent\n * onaddstream from firing, remove the ssrcs with msid \"-\" except the cname\n * line. Normally the ssrcs are not used by the client, as the bridge controls\n * media flow, but keep one reference to the ssrc for the p2p case.\n *\n * @param {Array<Object>} ssrcLines - The ssrc lines from a remote description.\n * @private\n * @returns {Array<Object>} ssrcLines with removed lines referencing msid \"-\".\n */\nfunction replaceDefaultUnifiedPlanMsid(ssrcLines = []) {\n    if (!browser.isChrome() || !browser.isVersionGreaterThan(70)) {\n        return ssrcLines;\n    }\n\n    let filteredLines = [ ...ssrcLines ];\n\n    const problematicSsrcIds = ssrcLines.filter(ssrcLine =>\n        ssrcLine.attribute === 'mslabel' && ssrcLine.value === '-')\n        .map(ssrcLine => ssrcLine.id);\n\n    problematicSsrcIds.forEach(ssrcId => {\n        // Find the cname which is to be modified and left in.\n        const cnameLine = filteredLines.find(line =>\n            line.id === ssrcId && line.attribute === 'cname');\n\n        cnameLine.value = `${MediaDirection.RECVONLY}-${ssrcId}`;\n\n        // Remove all of lines for the ssrc.\n        filteredLines\n            = filteredLines.filter(line => line.id !== ssrcId);\n\n        // But re-add the cname line so there is a reference kept to the ssrc\n        // in the SDP.\n        filteredLines.push(cnameLine);\n    });\n\n    return filteredLines;\n}\n\n/**\n * Makes sure that both audio and video directions are configured as 'sendrecv'.\n * @param {Object} localDescription the SDP object as defined by WebRTC.\n * @param {object} options <tt>TracablePeerConnection</tt> config options.\n */\nconst enforceSendRecv = function(localDescription, options) {\n    if (!localDescription) {\n        throw new Error('No local description passed in.');\n    }\n\n    const transformer = new SdpTransformWrap(localDescription.sdp);\n    const audioMedia = transformer.selectMedia(MediaType.AUDIO);\n    let changed = false;\n\n    if (audioMedia && audioMedia.direction !== MediaDirection.SENDRECV) {\n        if (options.startSilent) {\n            audioMedia.direction = MediaDirection.INACTIVE;\n        } else {\n            audioMedia.direction = MediaDirection.SENDRECV;\n        }\n\n        changed = true;\n    }\n\n    const videoMedia = transformer.selectMedia(MediaType.VIDEO);\n\n    if (videoMedia && videoMedia.direction !== MediaDirection.SENDRECV) {\n        videoMedia.direction = MediaDirection.SENDRECV;\n        changed = true;\n    }\n\n    if (changed) {\n        return new RTCSessionDescription({\n            type: localDescription.type,\n            sdp: transformer.toRawSDP()\n        });\n    }\n\n    return localDescription;\n};\n\n/**\n *\n * @param {JitsiLocalTrack} localTrack\n */\nTraceablePeerConnection.prototype.getLocalSSRC = function(localTrack) {\n    const ssrcInfo = this._getSSRC(localTrack.rtcId);\n\n    return ssrcInfo && ssrcInfo.ssrcs[0];\n};\n\n/**\n * When doing unified plan simulcast, we'll have a set of ssrcs with the\n * same msid but no ssrc-group, since unified plan signals the simulcast\n * group via the a=simulcast line.  Unfortunately, Jicofo will complain\n * if it sees ssrcs with matching msids but no ssrc-group, so we'll inject\n * an ssrc-group line to make Jicofo happy.\n * @param desc A session description object (with 'type' and 'sdp' fields)\n * @return A session description object with its sdp field modified to\n * contain an inject ssrc-group for simulcast\n */\nTraceablePeerConnection.prototype._injectSsrcGroupForUnifiedSimulcast\n    = function(desc) {\n        const sdp = transform.parse(desc.sdp);\n        const video = sdp.media.find(mline => mline.type === 'video');\n\n        // Check if the browser supports RTX, add only the primary ssrcs to the\n        // SIM group if that is the case.\n        video.ssrcGroups = video.ssrcGroups || [];\n        const fidGroups = video.ssrcGroups.filter(group => group.semantics === 'FID');\n\n        if (video.simulcast || video.simulcast_03) {\n            const ssrcs = [];\n\n            if (fidGroups && fidGroups.length) {\n                fidGroups.forEach(group => {\n                    ssrcs.push(group.ssrcs.split(' ')[0]);\n                });\n            } else {\n                video.ssrcs.forEach(ssrc => {\n                    if (ssrc.attribute === 'msid') {\n                        ssrcs.push(ssrc.id);\n                    }\n                });\n            }\n            if (video.ssrcGroups.find(group => group.semantics === 'SIM')) {\n                // Group already exists, no need to do anything\n                return desc;\n            }\n            video.ssrcGroups.push({\n                semantics: 'SIM',\n                ssrcs: ssrcs.join(' ')\n            });\n        }\n\n        return new RTCSessionDescription({\n            type: desc.type,\n            sdp: transform.write(sdp)\n        });\n    };\n\n/* eslint-disable-next-line vars-on-top */\nconst getters = {\n    signalingState() {\n        return this.peerconnection.signalingState;\n    },\n    iceConnectionState() {\n        return this.peerconnection.iceConnectionState;\n    },\n    localDescription() {\n        let desc = this.peerconnection.localDescription;\n\n        if (!desc) {\n            logger.debug(`${this} getLocalDescription no localDescription found`);\n\n            return {};\n        }\n\n        this.trace('getLocalDescription::preTransform', dumpSDP(desc));\n\n        // If the browser is running in unified plan mode and this is a jvb connection,\n        // transform the SDP to Plan B first.\n        if (this._usesUnifiedPlan && !this.isP2P) {\n            desc = this.interop.toPlanB(desc);\n            this.trace('getLocalDescription::postTransform (Plan B)',\n                dumpSDP(desc));\n\n            desc = this._injectSsrcGroupForUnifiedSimulcast(desc);\n            this.trace('getLocalDescription::postTransform (inject ssrc group)',\n                dumpSDP(desc));\n        } else if (!this._usesUnifiedPlan) {\n            if (browser.doesVideoMuteByStreamRemove()) {\n                desc = this.localSdpMunger.maybeAddMutedLocalVideoTracksToSDP(desc);\n                logger.debug(\n                    'getLocalDescription::postTransform (munge local SDP)', desc);\n            }\n\n            // What comes out of this getter will be signalled over Jingle to\n            // the other peer, so we need to make sure the media direction is\n            // 'sendrecv' because we won't change the direction later and don't want\n            // the other peer to think we can't send or receive.\n            //\n            // Note that the description we set in chrome does have the accurate\n            // direction (e.g. 'recvonly'), since that is technically what is\n            // happening (check setLocalDescription impl).\n            desc = enforceSendRecv(desc, this.options);\n        }\n\n        // See the method's doc for more info about this transformation.\n        desc = this.localSdpMunger.transformStreamIdentifiers(desc);\n\n        return desc;\n    },\n    remoteDescription() {\n        let desc = this.peerconnection.remoteDescription;\n\n        if (!desc) {\n            logger.debug(`${this} getRemoteDescription no remoteDescription found`);\n\n            return {};\n        }\n        this.trace('getRemoteDescription::preTransform', dumpSDP(desc));\n\n        if (this._usesUnifiedPlan) {\n            if (this.isP2P) {\n                // Adjust the media direction for p2p based on whether a local source has been added.\n                desc = this._adjustRemoteMediaDirection(desc);\n            } else {\n                // If this is a jvb connection, transform the SDP to Plan B first.\n                desc = this.interop.toPlanB(desc);\n                this.trace('getRemoteDescription::postTransform (Plan B)', dumpSDP(desc));\n            }\n        }\n\n        return desc;\n    }\n};\n\nObject.keys(getters).forEach(prop => {\n    Object.defineProperty(\n        TraceablePeerConnection.prototype,\n        prop, {\n            get: getters[prop]\n        }\n    );\n});\n\nTraceablePeerConnection.prototype._getSSRC = function(rtcId) {\n    return this.localSSRCs.get(rtcId);\n};\n\n/**\n * Checks if low fps screensharing is in progress.\n *\n * @private\n * @returns {boolean} Returns true if 5 fps screensharing is in progress, false otherwise.\n */\nTraceablePeerConnection.prototype._isSharingLowFpsScreen = function() {\n    return this._isSharingScreen() && this._capScreenshareBitrate;\n};\n\n/**\n * Checks if screensharing is in progress.\n *\n * @returns {boolean}  Returns true if a desktop track has been added to the\n * peerconnection, false otherwise.\n */\nTraceablePeerConnection.prototype._isSharingScreen = function() {\n    const track = this.getLocalVideoTrack();\n\n    return track && track.videoType === VideoType.DESKTOP;\n};\n\n/**\n * Munges the order of the codecs in the SDP passed based on the preference\n * set through config.js settings. All instances of the specified codec are\n * moved up to the top of the list when it is preferred. The specified codec\n * is deleted from the list if the configuration specifies that the codec be\n * disabled.\n * @param {RTCSessionDescription} description that needs to be munged.\n * @returns {RTCSessionDescription} the munged description.\n */\nTraceablePeerConnection.prototype._mungeCodecOrder = function(description) {\n    if (!this.codecPreference) {\n        return description;\n    }\n\n    const parsedSdp = transform.parse(description.sdp);\n\n    // Only the m-line that defines the source the browser will be sending should need to change.\n    // This is typically the first m-line with the matching media type.\n    const mLine = parsedSdp.media.find(m => m.type === this.codecPreference.mediaType);\n\n    if (!mLine) {\n        return description;\n    }\n\n    if (this.codecPreference.enable) {\n        SDPUtil.preferCodec(mLine, this.codecPreference.mimeType);\n\n        // Strip the high profile H264 codecs on mobile clients for p2p connection.\n        // High profile codecs give better quality at the expense of higher load which\n        // we do not want on mobile clients.\n        // Jicofo offers only the baseline code for the jvb connection.\n        // TODO - add check for mobile browsers once js-utils provides that check.\n        if (this.codecPreference.mimeType === CodecMimeType.H264 && browser.isReactNative() && this.isP2P) {\n            SDPUtil.stripCodec(mLine, this.codecPreference.mimeType, true /* high profile */);\n        }\n\n        // Set the max bitrate here on the SDP so that the configured max. bitrate is effective\n        // as soon as the browser switches to VP9.\n        if (this.codecPreference.mimeType === CodecMimeType.VP9) {\n            const bitrates = this.videoBitrates.VP9 || this.videoBitrates;\n            const hdBitrate = bitrates.high ? bitrates.high : HD_BITRATE;\n            const limit = Math.floor((this._isSharingScreen() ? HD_BITRATE : hdBitrate) / 1000);\n\n            // Use only the HD bitrate for now as there is no API available yet for configuring\n            // the bitrates on the individual SVC layers.\n            mLine.bandwidth = [ {\n                type: 'AS',\n                limit\n            } ];\n        } else {\n            // Clear the bandwidth limit in SDP when VP9 is no longer the preferred codec.\n            // This is needed on react native clients as react-native-webrtc returns the\n            // SDP that the application passed instead of returning the SDP off the native side.\n            // This line automatically gets cleared on web on every renegotiation.\n            mLine.bandwidth = undefined;\n        }\n    } else {\n        SDPUtil.stripCodec(mLine, this.codecPreference.mimeType);\n    }\n\n    return new RTCSessionDescription({\n        type: description.type,\n        sdp: transform.write(parsedSdp)\n    });\n};\n\n/**\n * Checks if given track belongs to this peerconnection instance.\n *\n * @param {JitsiLocalTrack|JitsiRemoteTrack} track - The track to be checked.\n * @returns {boolean}\n */\nTraceablePeerConnection.prototype.containsTrack = function(track) {\n    if (track.isLocal()) {\n        return this.localTracks.has(track.rtcId);\n    }\n\n    const participantId = track.getParticipantId();\n    const remoteTracksMap = this.remoteTracks.get(participantId);\n\n    return Boolean(remoteTracksMap && remoteTracksMap.get(track.getType()) === track);\n};\n\n/**\n * Add {@link JitsiLocalTrack} to this TPC.\n * @param {JitsiLocalTrack} track\n * @param {boolean} isInitiator indicates if the endpoint is the offerer.\n * @returns {Promise<void>} - resolved when done.\n */\nTraceablePeerConnection.prototype.addTrack = function(track, isInitiator = false) {\n    const rtcId = track.rtcId;\n\n    logger.info(`${this} adding ${track}`);\n\n    if (this.localTracks.has(rtcId)) {\n\n        return Promise.reject(new Error(`${track} is already in ${this}`));\n    }\n\n    this.localTracks.set(rtcId, track);\n\n    if (this._usesUnifiedPlan) {\n        try {\n            this.tpcUtils.addTrack(track, isInitiator);\n        } catch (error) {\n            logger.error(`${this} Adding track=${track} failed: ${error?.message}`);\n\n            return Promise.reject(error);\n        }\n    } else {\n        // Use addStream API for the plan-b case.\n        const webrtcStream = track.getOriginalStream();\n\n        if (webrtcStream) {\n            this._addStream(webrtcStream);\n\n        // It's not ok for a track to not have a WebRTC stream if:\n        } else if (!browser.doesVideoMuteByStreamRemove()\n                    || track.isAudioTrack()\n                    || (track.isVideoTrack() && !track.isMuted())) {\n            return Promise.reject(new Error(`${this} no WebRTC stream for track=${track}`));\n        }\n\n        // Muted video tracks do not have WebRTC stream\n        if (browser.doesVideoMuteByStreamRemove() && track.isVideoTrack() && track.isMuted()) {\n            const ssrcInfo = this.generateNewStreamSSRCInfo(track);\n\n            this.sdpConsistency.setPrimarySsrc(ssrcInfo.ssrcs[0]);\n            const simGroup\n                = ssrcInfo.groups.find(groupInfo => groupInfo.semantics === 'SIM');\n\n            if (simGroup) {\n                this.simulcast.setSsrcCache(simGroup.ssrcs);\n            }\n            const fidGroups\n                = ssrcInfo.groups.filter(\n                    groupInfo => groupInfo.semantics === 'FID');\n\n            if (fidGroups) {\n                const rtxSsrcMapping = new Map();\n\n                fidGroups.forEach(fidGroup => {\n                    const primarySsrc = fidGroup.ssrcs[0];\n                    const rtxSsrc = fidGroup.ssrcs[1];\n\n                    rtxSsrcMapping.set(primarySsrc, rtxSsrc);\n                });\n                this.rtxModifier.setSsrcCache(rtxSsrcMapping);\n            }\n        }\n    }\n    let promiseChain = Promise.resolve();\n\n    // On Firefox, the encodings have to be configured on the sender only after the transceiver is created.\n    if (browser.isFirefox()) {\n        promiseChain = promiseChain.then(() => this.tpcUtils.setEncodings(track));\n    }\n\n    return promiseChain;\n};\n\n/**\n * Adds local track as part of the unmute operation.\n * @param {JitsiLocalTrack} track the track to be added as part of the unmute\n * operation\n * @return {Promise<boolean>} Promise that resolves to true if the underlying PeerConnection's\n * state has changed and renegotiation is required, false if no renegotiation is needed or\n * Promise is rejected when something goes wrong.\n */\nTraceablePeerConnection.prototype.addTrackUnmute = function(track) {\n    if (!this._assertTrackBelongs('addTrackUnmute', track)) {\n        // Abort\n        return Promise.reject('Track not found on the peerconnection');\n    }\n\n    logger.info(`${this} Adding track=${track} as unmute`);\n    const webRtcStream = track.getOriginalStream();\n\n    if (!webRtcStream) {\n        logger.error(`${this} Unable to add track=${track} as unmute - no WebRTC stream`);\n\n        return Promise.reject('Stream not found');\n    }\n\n    if (this._usesUnifiedPlan) {\n        return this.tpcUtils.addTrackUnmute(track);\n    }\n\n    this._addStream(webRtcStream);\n\n    return Promise.resolve(true);\n};\n\n/**\n * Adds WebRTC media stream to the underlying PeerConnection\n * @param {MediaStream} mediaStream\n * @private\n */\nTraceablePeerConnection.prototype._addStream = function(mediaStream) {\n    this.peerconnection.addStream(mediaStream);\n    this._addedStreams.push(mediaStream);\n};\n\n/**\n * Removes WebRTC media stream from the underlying PeerConection\n * @param {MediaStream} mediaStream\n */\nTraceablePeerConnection.prototype._removeStream = function(mediaStream) {\n    this.peerconnection.removeStream(mediaStream);\n    this._addedStreams\n        = this._addedStreams.filter(stream => stream !== mediaStream);\n};\n\n/**\n * This method when called will check if given <tt>localTrack</tt> belongs to\n * this TPC (that it has been previously added using {@link addTrack}). If the\n * track does not belong an error message will be logged.\n * @param {string} methodName the method name that will be logged in an error\n * message\n * @param {JitsiLocalTrack} localTrack\n * @return {boolean} <tt>true</tt> if given local track belongs to this TPC or\n * <tt>false</tt> otherwise.\n * @private\n */\nTraceablePeerConnection.prototype._assertTrackBelongs = function(\n        methodName,\n        localTrack) {\n    const doesBelong = this.localTracks.has(localTrack.rtcId);\n\n    if (!doesBelong) {\n        logger.error(`${this} ${methodName}: track=${localTrack} does not belong to pc`);\n    }\n\n    return doesBelong;\n};\n\n/**\n * Returns the codec that is configured on the client as the preferred video codec.\n * This takes into account the current order of codecs in the local description sdp.\n *\n * @returns {CodecMimeType} The codec that is set as the preferred codec to receive\n * video in the local SDP.\n */\nTraceablePeerConnection.prototype.getConfiguredVideoCodec = function() {\n    const sdp = this.peerconnection.localDescription?.sdp;\n    const defaultCodec = CodecMimeType.VP8;\n\n    if (!sdp) {\n        return defaultCodec;\n    }\n    const parsedSdp = transform.parse(sdp);\n    const mLine = parsedSdp.media.find(m => m.type === MediaType.VIDEO);\n    const codec = mLine.rtp[0].codec;\n\n    if (codec) {\n        return Object.values(CodecMimeType).find(value => value === codec.toLowerCase());\n    }\n\n    return defaultCodec;\n};\n\n/**\n * Enables or disables simulcast for screenshare based on the frame rate requested for desktop track capture.\n *\n * @param {number} maxFps framerate to be used for desktop track capture.\n */\nTraceablePeerConnection.prototype.setDesktopSharingFrameRate = function(maxFps) {\n    const lowFps = maxFps <= SS_DEFAULT_FRAME_RATE;\n\n    this._capScreenshareBitrate = this.isSimulcastOn() && lowFps;\n};\n\n/**\n * Sets the codec preference on the peerconnection. The codec preference goes into effect when\n * the next renegotiation happens.\n *\n * @param {CodecMimeType} preferredCodec the preferred codec.\n * @param {CodecMimeType} disabledCodec the codec that needs to be disabled.\n * @returns {void}\n */\nTraceablePeerConnection.prototype.setVideoCodecs = function(preferredCodec = null, disabledCodec = null) {\n    // If both enable and disable are set, disable settings will prevail.\n    const enable = disabledCodec === null;\n    const mimeType = disabledCodec ? disabledCodec : preferredCodec;\n\n    if (this.codecPreference && (preferredCodec || disabledCodec)) {\n        this.codecPreference.enable = enable;\n        this.codecPreference.mimeType = mimeType;\n    } else if (preferredCodec || disabledCodec) {\n        this.codecPreference = {\n            enable,\n            mediaType: MediaType.VIDEO,\n            mimeType\n        };\n    } else {\n        logger.warn(`${this} Invalid codec settings[preferred=${preferredCodec},disabled=${disabledCodec}],\n            atleast one value is needed`);\n    }\n};\n\n/**\n * Tells if the given WebRTC <tt>MediaStream</tt> has been added to\n * the underlying WebRTC PeerConnection.\n * @param {MediaStream} mediaStream\n * @returns {boolean}\n */\nTraceablePeerConnection.prototype.isMediaStreamInPc = function(mediaStream) {\n    return this._addedStreams.indexOf(mediaStream) > -1;\n};\n\n/**\n * Remove local track from this TPC.\n * @param {JitsiLocalTrack} localTrack the track to be removed from this TPC.\n *\n * FIXME It should probably remove a boolean just like {@link removeTrackMute}\n *       The same applies to addTrack.\n */\nTraceablePeerConnection.prototype.removeTrack = function(localTrack) {\n    const webRtcStream = localTrack.getOriginalStream();\n\n    this.trace(\n        'removeStream',\n        localTrack.rtcId, webRtcStream ? webRtcStream.id : undefined);\n\n    if (!this._assertTrackBelongs('removeStream', localTrack)) {\n        // Abort - nothing to be done here\n        return;\n    }\n    this.localTracks.delete(localTrack.rtcId);\n    this.localSSRCs.delete(localTrack.rtcId);\n\n    if (webRtcStream) {\n        this.peerconnection.removeStream(webRtcStream);\n    }\n};\n\n/**\n * Returns the sender corresponding to the given media type.\n * @param {MEDIA_TYPE} mediaType - The media type 'audio' or 'video' to be used for the search.\n * @returns {RTPSender|undefined} - The found sender or undefined if no sender\n * was found.\n */\nTraceablePeerConnection.prototype.findSenderByKind = function(mediaType) {\n    return this.peerconnection.getSenders().find(s => s.track && s.track.kind === mediaType);\n};\n\n/**\n * Returns the receiver corresponding to the given MediaStreamTrack.\n *\n * @param {MediaSreamTrack} track - The media stream track used for the search.\n * @returns {RTCRtpReceiver|undefined} - The found receiver or undefined if no receiver\n * was found.\n */\nTraceablePeerConnection.prototype.findReceiverForTrack = function(track) {\n    return this.peerconnection.getReceivers().find(r => r.track === track);\n};\n\n/**\n * Returns the sender corresponding to the given MediaStreamTrack.\n *\n * @param {MediaSreamTrack} track - The media stream track used for the search.\n * @returns {RTCRtpSender|undefined} - The found sender or undefined if no sender\n * was found.\n */\nTraceablePeerConnection.prototype.findSenderForTrack = function(track) {\n    return this.peerconnection.getSenders().find(s => s.track === track);\n};\n\n/**\n * Replaces <tt>oldTrack</tt> with <tt>newTrack</tt> from the peer connection.\n * Either <tt>oldTrack</tt> or <tt>newTrack</tt> can be null; replacing a valid\n * <tt>oldTrack</tt> with a null <tt>newTrack</tt> effectively just removes\n * <tt>oldTrack</tt>\n *\n * @param {JitsiLocalTrack|null} oldTrack - The current track in use to be\n * replaced\n * @param {JitsiLocalTrack|null} newTrack - The new track to use\n * @returns {Promise<boolean>} - If the promise resolves with true,\n * renegotiation will be needed. Otherwise no renegotiation is needed.\n */\nTraceablePeerConnection.prototype.replaceTrack = function(oldTrack, newTrack) {\n    if (this._usesUnifiedPlan) {\n        logger.debug(`${this} TPC.replaceTrack using unified plan`);\n\n        return this.tpcUtils.replaceTrack(oldTrack, newTrack)\n\n            // Renegotiate when SDP is used for simulcast munging or when in p2p mode.\n            .then(() => (this.isSimulcastOn() && browser.usesSdpMungingForSimulcast()) || this.isP2P);\n    }\n\n    logger.debug(`${this} TPC.replaceTrack using plan B`);\n\n    let promiseChain = Promise.resolve();\n\n    if (oldTrack) {\n        this.removeTrack(oldTrack);\n    }\n    if (newTrack) {\n        promiseChain = this.addTrack(newTrack);\n    }\n\n    return promiseChain.then(() => true);\n};\n\n/**\n * Removes local track as part of the mute operation.\n * @param {JitsiLocalTrack} localTrack the local track to be remove as part of\n * the mute operation.\n * @return {Promise<boolean>} Promise that resolves to true if the underlying PeerConnection's\n * state has changed and renegotiation is required, false if no renegotiation is needed or\n * Promise is rejected when something goes wrong.\n */\nTraceablePeerConnection.prototype.removeTrackMute = function(localTrack) {\n    const webRtcStream = localTrack.getOriginalStream();\n\n    this.trace(\n        'removeStreamMute',\n        localTrack.rtcId, webRtcStream ? webRtcStream.id : null);\n\n    if (!this._assertTrackBelongs('removeStreamMute', localTrack)) {\n        // Abort - nothing to be done here\n        return Promise.reject('Track not found in the peerconnection');\n    }\n\n    if (this._usesUnifiedPlan) {\n        return this.tpcUtils.removeTrackMute(localTrack);\n    }\n\n    if (webRtcStream) {\n        logger.info(`${this} Removing track=${localTrack} as mute`);\n        this._removeStream(webRtcStream);\n\n        return Promise.resolve(true);\n    }\n\n    logger.error(`${this} removeStreamMute - no WebRTC stream for track=${localTrack}`);\n\n    return Promise.reject('Stream not found');\n};\n\nTraceablePeerConnection.prototype.createDataChannel = function(label, opts) {\n    this.trace('createDataChannel', label, opts);\n\n    return this.peerconnection.createDataChannel(label, opts);\n};\n\n/**\n * Ensures that the simulcast ssrc-group appears after any other ssrc-groups\n * in the SDP so that simulcast is properly activated.\n *\n * @param {Object} localSdp the WebRTC session description instance for\n * the local description.\n * @private\n */\nTraceablePeerConnection.prototype._ensureSimulcastGroupIsLast = function(\n        localSdp) {\n    let sdpStr = localSdp.sdp;\n\n    const videoStartIndex = sdpStr.indexOf('m=video');\n    const simStartIndex = sdpStr.indexOf('a=ssrc-group:SIM', videoStartIndex);\n    let otherStartIndex = sdpStr.lastIndexOf('a=ssrc-group');\n\n    if (simStartIndex === -1\n        || otherStartIndex === -1\n        || otherStartIndex === simStartIndex) {\n        return localSdp;\n    }\n\n    const simEndIndex = sdpStr.indexOf('\\r\\n', simStartIndex);\n    const simStr = sdpStr.substring(simStartIndex, simEndIndex + 2);\n\n    sdpStr = sdpStr.replace(simStr, '');\n    otherStartIndex = sdpStr.lastIndexOf('a=ssrc-group');\n    const otherEndIndex = sdpStr.indexOf('\\r\\n', otherStartIndex);\n    const sdpHead = sdpStr.slice(0, otherEndIndex);\n    const simStrTrimmed = simStr.trim();\n    const sdpTail = sdpStr.slice(otherEndIndex);\n\n    sdpStr = `${sdpHead}\\r\\n${simStrTrimmed}${sdpTail}`;\n\n    return new RTCSessionDescription({\n        type: localSdp.type,\n        sdp: sdpStr\n    });\n};\n\n/**\n * Will adjust audio and video media direction in the given SDP object to\n * reflect the current status of the {@link audioTransferActive} and\n * {@link videoTransferActive} flags.\n * @param {RTCSessionDescription} localDescription the WebRTC session description instance for\n * the local description.\n * @private\n */\nTraceablePeerConnection.prototype._adjustLocalMediaDirection = function(localDescription) {\n    const transformer = new SdpTransformWrap(localDescription.sdp);\n    let modifiedDirection = false;\n    const audioMedia = transformer.selectMedia(MediaType.AUDIO);\n\n    if (audioMedia) {\n        const desiredAudioDirection = this.getDesiredMediaDirection(MediaType.AUDIO);\n\n        if (audioMedia.direction !== desiredAudioDirection) {\n            audioMedia.direction = desiredAudioDirection;\n            logger.info(`${this} Adjusted local audio direction to ${desiredAudioDirection}`);\n            modifiedDirection = true;\n        }\n    } else {\n        logger.warn(`${this} No \"audio\" media found in the local description`);\n    }\n\n    const videoMedia = transformer.selectMedia(MediaType.VIDEO);\n\n    if (videoMedia) {\n        const desiredVideoDirection = this.getDesiredMediaDirection(MediaType.VIDEO);\n\n        if (videoMedia.direction !== desiredVideoDirection) {\n            videoMedia.direction = desiredVideoDirection;\n            logger.info(`${this} Adjusted local video direction to ${desiredVideoDirection}`);\n            modifiedDirection = true;\n        }\n    } else {\n        logger.warn(`${this} No \"video\" media found in the local description`);\n    }\n\n    if (modifiedDirection) {\n        return new RTCSessionDescription({\n            type: localDescription.type,\n            sdp: transformer.toRawSDP()\n        });\n    }\n\n    return localDescription;\n};\n\n/**\n * Adjusts the media direction on the remote description based on availability of local and remote sources in a p2p\n * media connection.\n *\n * @param {RTCSessionDescription} remoteDescription the WebRTC session description instance for the remote description.\n * @returns the transformed remoteDescription.\n * @private\n */\nTraceablePeerConnection.prototype._adjustRemoteMediaDirection = function(remoteDescription) {\n    const transformer = new SdpTransformWrap(remoteDescription.sdp);\n\n    [ MediaType.AUDIO, MediaType.VIDEO ].forEach(mediaType => {\n        const media = transformer.selectMedia(mediaType);\n        const hasLocalSource = this.hasAnyTracksOfType(mediaType);\n        const hasRemoteSource = this.getRemoteTracks(null, mediaType).length > 0;\n\n        media.direction = hasLocalSource && hasRemoteSource\n            ? MediaDirection.SENDRECV\n            : hasLocalSource\n                ? MediaDirection.RECVONLY\n                : hasRemoteSource ? MediaDirection.SENDONLY : MediaDirection.INACTIVE;\n    });\n\n    return new RTCSessionDescription({\n        type: remoteDescription.type,\n        sdp: transformer.toRawSDP()\n    });\n};\n\n/**\n * Munges the stereo flag as well as the opusMaxAverageBitrate in the SDP, based\n * on values set through config.js, if present.\n *\n * @param {RTCSessionDescription} description that needs to be munged.\n * @returns {RTCSessionDescription} the munged description.\n */\nTraceablePeerConnection.prototype._mungeOpus = function(description) {\n    const { audioQuality } = this.options;\n\n    if (!audioQuality?.stereo && !audioQuality?.opusMaxAverageBitrate) {\n        return description;\n    }\n\n    const parsedSdp = transform.parse(description.sdp);\n    const mLines = parsedSdp.media;\n\n    for (const mLine of mLines) {\n        if (mLine.type === 'audio') {\n            const { payload } = mLine.rtp.find(protocol => protocol.codec === CodecMimeType.OPUS);\n\n            if (!payload) {\n                // eslint-disable-next-line no-continue\n                continue;\n            }\n\n            let fmtpOpus = mLine.fmtp.find(protocol => protocol.payload === payload);\n\n            if (!fmtpOpus) {\n                fmtpOpus = {\n                    payload,\n                    config: ''\n                };\n            }\n\n            const fmtpConfig = transform.parseParams(fmtpOpus.config);\n            let sdpChanged = false;\n\n            if (audioQuality?.stereo) {\n                fmtpConfig.stereo = 1;\n                sdpChanged = true;\n            }\n\n            if (audioQuality?.opusMaxAverageBitrate) {\n                fmtpConfig.maxaveragebitrate = audioQuality.opusMaxAverageBitrate;\n                sdpChanged = true;\n            }\n\n            if (!sdpChanged) {\n                // eslint-disable-next-line no-continue\n                continue;\n            }\n\n            let mungedConfig = '';\n\n            for (const key of Object.keys(fmtpConfig)) {\n                mungedConfig += `${key}=${fmtpConfig[key]}; `;\n            }\n\n            fmtpOpus.config = mungedConfig.trim();\n        }\n    }\n\n    return new RTCSessionDescription({\n        type: description.type,\n        sdp: transform.write(parsedSdp)\n    });\n};\n\nTraceablePeerConnection.prototype.setLocalDescription = function(description) {\n    let localSdp = description;\n\n    this.trace('setLocalDescription::preTransform', dumpSDP(localSdp));\n\n    // Munge stereo flag and opusMaxAverageBitrate based on config.js\n    localSdp = this._mungeOpus(localSdp);\n\n    if (!this._usesUnifiedPlan) {\n        localSdp = this._adjustLocalMediaDirection(localSdp);\n        localSdp = this._ensureSimulcastGroupIsLast(localSdp);\n    } else if (!this.isP2P) {\n\n        // if we're using unified plan, transform to it first.\n        localSdp = this.interop.toUnifiedPlan(localSdp);\n        this.trace(\n            'setLocalDescription::postTransform (Unified Plan)',\n            dumpSDP(localSdp));\n    }\n\n    // Munge the order of the codecs based on the preferences set through config.js if we are using SDP munging.\n    if (!this._usesTransceiverCodecPreferences) {\n        localSdp = this._mungeCodecOrder(localSdp);\n    }\n\n    return new Promise((resolve, reject) => {\n        this.peerconnection.setLocalDescription(localSdp)\n            .then(() => {\n                this.trace('setLocalDescriptionOnSuccess');\n                const localUfrag = SDPUtil.getUfrag(localSdp.sdp);\n\n                if (localUfrag !== this.localUfrag) {\n                    this.localUfrag = localUfrag;\n                    this.eventEmitter.emit(\n                        RTCEvents.LOCAL_UFRAG_CHANGED, this, localUfrag);\n                }\n                resolve();\n            }, err => {\n                this.trace('setLocalDescriptionOnFailure', err);\n                this.eventEmitter.emit(\n                    RTCEvents.SET_LOCAL_DESCRIPTION_FAILED,\n                    err, this);\n                reject(err);\n            });\n    });\n};\n\n/**\n * Enables/disables audio media transmission on this peer connection. When\n * disabled the SDP audio media direction in the local SDP will be adjusted to\n * 'inactive' which means that no data will be sent nor accepted, but\n * the connection should be kept alive.\n * @param {boolean} active <tt>true</tt> to enable audio media transmission or\n * <tt>false</tt> to disable. If the value is not a boolean the call will have\n * no effect.\n * @return {boolean} <tt>true</tt> if the value has changed and sRD/sLD cycle\n * needs to be executed in order for the changes to take effect or\n * <tt>false</tt> if the given value was the same as the previous one.\n * @public\n */\nTraceablePeerConnection.prototype.setAudioTransferActive = function(active) {\n    logger.debug(`${this} audio transfer active: ${active}`);\n    const changed = this.audioTransferActive !== active;\n\n    this.audioTransferActive = active;\n\n    if (this._usesUnifiedPlan) {\n        this.tpcUtils.setAudioTransferActive(active);\n\n        // false means no renegotiation up the chain which is not needed in the Unified mode\n        return false;\n    }\n\n    return changed;\n};\n\n/**\n * Sets the degradation preference on the video sender. This setting determines if\n * resolution or framerate will be preferred when bandwidth or cpu is constrained.\n * Sets it to 'maintain-framerate' when a camera track is added to the pc, sets it\n * to 'maintain-resolution' when a desktop track is being shared instead.\n * @returns {Promise<void>}\n */\nTraceablePeerConnection.prototype.setSenderVideoDegradationPreference = function() {\n    if (!this.peerconnection.getSenders) {\n        logger.debug(`${this} Browser does not support RTCRtpSender`);\n\n        return Promise.resolve();\n    }\n    const localVideoTrack = this.getLocalVideoTrack();\n    const videoSender = this.findSenderByKind(MediaType.VIDEO);\n\n    if (!videoSender) {\n        return Promise.resolve();\n    }\n    const parameters = videoSender.getParameters();\n    const preference = this._isSharingLowFpsScreen()\n\n        // Prefer resolution for low fps share.\n        ? DEGRADATION_PREFERENCE_DESKTOP\n\n        // Prefer frame-rate for high fps share and camera.\n        : DEGRADATION_PREFERENCE_CAMERA;\n\n    logger.info(`${this} Setting a degradation preference [preference=${preference},track=${localVideoTrack}`);\n    parameters.degradationPreference = preference;\n    this.tpcUtils.updateEncodingsResolution(parameters);\n\n    return videoSender.setParameters(parameters);\n};\n\n/**\n * Sets the max bitrate on the RTCRtpSender so that the\n * bitrate of the enocder doesn't exceed the configured value.\n * This is needed for the desktop share until spec-complaint\n * simulcast is implemented.\n * @param {JitsiLocalTrack} localTrack - the local track whose\n * max bitrate is to be configured.\n * @returns {Promise<void>}\n */\nTraceablePeerConnection.prototype.setMaxBitRate = function() {\n    // For VP9, max bitrate is configured by setting b=AS value in SDP. Browsers do\n    // not yet support setting max bitrates for individual VP9 SVC layers.\n    if (this.getConfiguredVideoCodec() === CodecMimeType.VP9 || !window.RTCRtpSender) {\n        return Promise.resolve();\n    }\n    const localVideoTrack = this.getLocalVideoTrack();\n\n    if (!localVideoTrack) {\n        return Promise.resolve();\n    }\n\n    const videoType = localVideoTrack.getVideoType();\n\n    // Apply the maxbitrates on the video track when one of the conditions is met.\n    // 1. Max. bitrates for video are specified through videoQuality settings in config.js\n    // 2. Track is a low fps desktop track.\n    // 3. The client is running in Unified plan mode (the same sender is re-used for different types\n    // of tracks so bitrates have to be configured whenever the local tracks are replaced).\n    if (!(this.options?.videoQuality?.maxBitratesVideo || this._isSharingLowFpsScreen() || this._usesUnifiedPlan)) {\n        return Promise.resolve();\n    }\n\n    const presenterEnabled = localVideoTrack._originalStream\n        && localVideoTrack._originalStream.id !== localVideoTrack.getStreamId();\n    const videoSender = this.findSenderByKind(MediaType.VIDEO);\n\n    if (!videoSender) {\n        return Promise.resolve();\n    }\n    const parameters = videoSender.getParameters();\n\n    if (!parameters.encodings?.length) {\n        return Promise.resolve();\n    }\n\n    if (this.isSimulcastOn()) {\n        for (const encoding in parameters.encodings) {\n            if (parameters.encodings.hasOwnProperty(encoding)) {\n                const bitrate = this._isSharingLowFpsScreen()\n\n                    // For low fps screensharing, set a max bitrate of 500 Kbps when presenter is not turned on.\n                    // FIXME the top 'isSimulcastOn' condition is confusing for screensharing, because\n                    // if capScreenshareBitrate option is enabled then simulcast is turned off for the stream.\n                    ? presenterEnabled ? HD_BITRATE : DESKTOP_SHARE_RATE\n\n                    // For high fps screenshare, 'maxBitrate' setting must be cleared on Chrome, because if simulcast is\n                    // enabled for screen and maxBitrates are set then Chrome will not send the desktop stream.\n                    : videoType === VideoType.DESKTOP && browser.isChromiumBased()\n                        ? undefined\n                        : this.tpcUtils.localStreamEncodingsConfig[encoding].maxBitrate;\n\n                logger.info(`${this} Setting a max bitrate of ${bitrate} bps on layer `\n                    + `${this.tpcUtils.localStreamEncodingsConfig[encoding].rid}`);\n                parameters.encodings[encoding].maxBitrate = bitrate;\n            }\n        }\n    } else {\n        // Do not change the max bitrate for desktop tracks in non-simulcast mode.\n        let bitrate = this.getTargetVideoBitrates()?.high;\n\n        if (videoType === VideoType.CAMERA) {\n            // Determine the bitrates based on the sender constraint applied for unicast tracks.\n            const scaleFactor = this.senderVideoMaxHeight\n                ? Math.floor(localVideoTrack.resolution / this.senderVideoMaxHeight)\n                : 1;\n            const encoding = this.tpcUtils.localStreamEncodingsConfig\n                .find(layer => layer.scaleResolutionDownBy === scaleFactor);\n\n            if (encoding) {\n                logger.info(`${this} Setting max bitrate=${encoding.maxBitrate} bps on track=${localVideoTrack}`);\n                bitrate = encoding.maxBitrate;\n            }\n        }\n        parameters.encodings[0].maxBitrate = bitrate;\n    }\n    this.tpcUtils.updateEncodingsResolution(parameters);\n\n    return videoSender.setParameters(parameters);\n};\n\nTraceablePeerConnection.prototype.setRemoteDescription = function(description) {\n    this.trace('setRemoteDescription::preTransform', dumpSDP(description));\n\n    /* eslint-disable no-param-reassign */\n    // Munge stereo flag and opusMaxAverageBitrate based on config.js\n    description = this._mungeOpus(description);\n\n    /* eslint-enable no-param-reassign */\n\n    if (!this._usesUnifiedPlan) {\n        // TODO the focus should squeze or explode the remote simulcast\n        if (this.isSimulcastOn()) {\n            // eslint-disable-next-line no-param-reassign\n            description = this.simulcast.mungeRemoteDescription(description, true /* add x-google-conference flag */);\n            this.trace(\n                'setRemoteDescription::postTransform (simulcast)',\n                dumpSDP(description));\n        }\n\n        // eslint-disable-next-line no-param-reassign\n        description = normalizePlanB(description);\n    } else if (!this.isP2P) {\n        const currentDescription = this.peerconnection.remoteDescription;\n\n        // eslint-disable-next-line no-param-reassign\n        description = this.interop.toUnifiedPlan(description, currentDescription);\n        this.trace(\n            'setRemoteDescription::postTransform (Unified)',\n            dumpSDP(description));\n\n        if (this.isSimulcastOn()) {\n            // eslint-disable-next-line no-param-reassign\n            description = this.simulcast.mungeRemoteDescription(description);\n\n            // eslint-disable-next-line no-param-reassign\n            description = this.tpcUtils.insertUnifiedPlanSimulcastReceive(description);\n            this.trace(\n                'setRemoteDescription::postTransform (sim receive)',\n                dumpSDP(description));\n        }\n    }\n\n    // Munge the order of the codecs based on the preferences set through config.js.\n    // eslint-disable-next-line no-param-reassign\n    description = this._mungeCodecOrder(description);\n\n    if (this._usesUnifiedPlan) {\n        // eslint-disable-next-line no-param-reassign\n        description = this.tpcUtils.ensureCorrectOrderOfSsrcs(description);\n    }\n\n    return new Promise((resolve, reject) => {\n        this.peerconnection.setRemoteDescription(description)\n            .then(() => {\n                this.trace('setRemoteDescriptionOnSuccess');\n                const remoteUfrag = SDPUtil.getUfrag(description.sdp);\n\n                if (remoteUfrag !== this.remoteUfrag) {\n                    this.remoteUfrag = remoteUfrag;\n                    this.eventEmitter.emit(\n                        RTCEvents.REMOTE_UFRAG_CHANGED, this, remoteUfrag);\n                }\n                resolve();\n            }, err => {\n                this.trace('setRemoteDescriptionOnFailure', err);\n                this.eventEmitter.emit(\n                    RTCEvents.SET_REMOTE_DESCRIPTION_FAILED,\n                    err,\n                    this);\n                reject(err);\n            });\n    });\n};\n\n/**\n * Changes the resolution of the video stream that is sent to the peer based on\n * the user preferred value. If simulcast is enabled on the peerconection, all the\n * simulcast encodings that have a resolution height lower or equal to the value\n * provided will remain active. For the non-simulcast case, video constraint is\n * applied on the track.\n * @param {number} frameHeight - The user preferred max frame height.\n * @returns {Promise} promise that will be resolved when the operation is\n * successful and rejected otherwise.\n */\nTraceablePeerConnection.prototype.setSenderVideoConstraint = function(frameHeight = null) {\n    if (frameHeight < 0) {\n        throw new Error(`Invalid frameHeight: ${frameHeight}`);\n    }\n\n    // XXX: This is not yet supported on mobile.\n    if (browser.isReactNative()) {\n        return Promise.resolve();\n    }\n\n    // Need to explicitly check for null as 0 is falsy, but a valid value\n    const newHeight = frameHeight === null ? this.senderVideoMaxHeight : frameHeight;\n\n    this.senderVideoMaxHeight = newHeight;\n\n    // If layer suspension is disabled and sender constraint is not configured for the conference,\n    // resolve here so that the encodings stay enabled. This can happen in custom apps built using\n    // lib-jitsi-meet.\n    if (newHeight === null) {\n        return Promise.resolve();\n    }\n\n    logger.log(`${this} senderVideoMaxHeight: ${newHeight}`);\n\n    const localVideoTrack = this.getLocalVideoTrack();\n\n    if (!localVideoTrack || localVideoTrack.isMuted()) {\n        return Promise.resolve();\n    }\n    const videoSender = this.findSenderByKind(MediaType.VIDEO);\n\n    if (!videoSender) {\n        return Promise.resolve();\n    }\n    const parameters = videoSender.getParameters();\n\n    if (!parameters?.encodings?.length) {\n        return Promise.resolve();\n    }\n\n    if (this.isSimulcastOn()) {\n        // Determine the encodings that need to stay enabled based on the new frameHeight provided.\n        this.encodingsEnabledState = this.tpcUtils.getLocalStreamHeightConstraints(localVideoTrack.track)\n            .map(height => height <= newHeight);\n\n        // Always keep the LD stream enabled, specifically when the LD stream's resolution is higher than of the\n        // requested resolution. This can happen when camera is captured at resolutions higher than 720p but the\n        // requested resolution is 180. Since getParameters doesn't give us information about the resolutions\n        // of the simulcast encodings, we have to rely on our initial config for the simulcast streams.\n        const ldStreamIndex = this.tpcUtils.localStreamEncodingsConfig\n            .findIndex(layer => layer.scaleResolutionDownBy === 4.0);\n\n        if (newHeight > 0 && ldStreamIndex !== -1) {\n            this.encodingsEnabledState[ldStreamIndex] = true;\n        }\n\n        // Disable the lower spatial layers for screensharing in Unified plan when low fps screensharing is in progress\n        // There is no way to enable or disable simulcast during the call since we are re-using the same sender.\n        // Safari is an exception here since it does not send the desktop stream at all if only the high resolution\n        // stream is enabled.\n        if (this._isSharingLowFpsScreen() && this._usesUnifiedPlan && !browser.isWebKitBased()) {\n            const highResolutionEncoding = browser.isFirefox() ? 0 : this.encodingsEnabledState.length - 1;\n\n            this.encodingsEnabledState = this.encodingsEnabledState\n                .map((encoding, idx) => idx === highResolutionEncoding);\n        }\n\n        for (const encoding in parameters.encodings) {\n            if (parameters.encodings.hasOwnProperty(encoding)) {\n                parameters.encodings[encoding].active = this.encodingsEnabledState[encoding];\n            }\n        }\n        this.tpcUtils.updateEncodingsResolution(parameters);\n    } else if (newHeight > 0) {\n        // Do not scale down encodings for desktop tracks for non-simulcast case.\n        parameters.encodings[0].scaleResolutionDownBy\n            = localVideoTrack.videoType === VideoType.DESKTOP || localVideoTrack.resolution <= newHeight\n                ? 1\n                : Math.floor(localVideoTrack.resolution / newHeight);\n        parameters.encodings[0].active = true;\n    } else {\n        parameters.encodings[0].scaleResolutionDownBy = undefined;\n        parameters.encodings[0].active = false;\n    }\n\n    logger.info(`${this} setting max height=${newHeight},encodings=${JSON.stringify(parameters.encodings)}`);\n\n    return videoSender.setParameters(parameters).then(() => {\n        localVideoTrack.maxEnabledResolution = newHeight;\n        this.eventEmitter.emit(RTCEvents.LOCAL_TRACK_MAX_ENABLED_RESOLUTION_CHANGED, localVideoTrack);\n\n        // Max bitrate needs to be reconfigured on the sender in p2p/non-simulcast case if needed when\n        // the send resolution changes.\n        if (this.isP2P || !this.isSimulcastOn()) {\n            return this.setMaxBitRate();\n        }\n    });\n};\n\n/**\n * Enables/disables video media transmission on this peer connection. When\n * disabled the SDP video media direction in the local SDP will be adjusted to\n * 'inactive' which means that no data will be sent nor accepted, but\n * the connection should be kept alive.\n * @param {boolean} active <tt>true</tt> to enable video media transmission or\n * <tt>false</tt> to disable. If the value is not a boolean the call will have\n * no effect.\n * @return {boolean} <tt>true</tt> if the value has changed and sRD/sLD cycle\n * needs to be executed in order for the changes to take effect or\n * <tt>false</tt> if the given value was the same as the previous one.\n * @public\n */\nTraceablePeerConnection.prototype.setVideoTransferActive = function(active) {\n    logger.debug(`${this} video transfer active: ${active}`);\n    const changed = this.videoTransferActive !== active;\n\n    this.videoTransferActive = active;\n\n    if (this._usesUnifiedPlan) {\n        this.tpcUtils.setVideoTransferActive(active);\n\n        // false means no renegotiation up the chain which is not needed in the Unified mode\n        return false;\n    }\n\n    return changed;\n};\n\n/**\n * Sends DTMF tones if possible.\n *\n * @param {string} tones - The DTMF tones string as defined by {@code RTCDTMFSender.insertDTMF}, 'tones' argument.\n * @param {number} duration - The amount of time in milliseconds that each DTMF should last. It's 200ms by default.\n * @param {number} interToneGap - The length of time in miliseconds to wait between tones. It's 200ms by default.\n *\n * @returns {void}\n */\nTraceablePeerConnection.prototype.sendTones = function(tones, duration = 200, interToneGap = 200) {\n    if (!this._dtmfSender) {\n        if (this.peerconnection.getSenders) {\n            const rtpSender = this.peerconnection.getSenders().find(s => s.dtmf);\n\n            this._dtmfSender = rtpSender && rtpSender.dtmf;\n            this._dtmfSender && logger.info(`${this} initialized DTMFSender using getSenders`);\n        }\n\n        if (!this._dtmfSender) {\n            const localAudioTrack = Array.from(this.localTracks.values()).find(t => t.isAudioTrack());\n\n            if (this.peerconnection.createDTMFSender && localAudioTrack) {\n                this._dtmfSender = this.peerconnection.createDTMFSender(localAudioTrack.getTrack());\n            }\n            this._dtmfSender && logger.info(`${this} initialized DTMFSender using deprecated createDTMFSender`);\n        }\n\n        if (this._dtmfSender) {\n            this._dtmfSender.ontonechange = this._onToneChange.bind(this);\n        }\n    }\n\n    if (this._dtmfSender) {\n        if (this._dtmfSender.toneBuffer) {\n            this._dtmfTonesQueue.push({\n                tones,\n                duration,\n                interToneGap\n            });\n\n            return;\n        }\n\n        this._dtmfSender.insertDTMF(tones, duration, interToneGap);\n    } else {\n        logger.warn(`${this} sendTones - failed to select DTMFSender`);\n    }\n};\n\n/**\n * Callback ivoked by {@code this._dtmfSender} when it has finished playing\n * a single tone.\n *\n * @param {Object} event - The tonechange event which indicates what characters\n * are left to be played for the current tone.\n * @private\n * @returns {void}\n */\nTraceablePeerConnection.prototype._onToneChange = function(event) {\n    // An empty event.tone indicates the current tones have finished playing.\n    // Automatically start playing any queued tones on finish.\n    if (this._dtmfSender && event.tone === '' && this._dtmfTonesQueue.length) {\n        const { tones, duration, interToneGap } = this._dtmfTonesQueue.shift();\n\n        this._dtmfSender.insertDTMF(tones, duration, interToneGap);\n    }\n};\n\n/**\n * Makes the underlying TraceablePeerConnection generate new SSRC for\n * the recvonly video stream.\n */\nTraceablePeerConnection.prototype.generateRecvonlySsrc = function() {\n    const newSSRC = SDPUtil.generateSsrc();\n\n    logger.info(`${this} generated new recvonly SSRC=${newSSRC}`);\n    this.sdpConsistency.setPrimarySsrc(newSSRC);\n};\n\n/**\n * Makes the underlying TraceablePeerConnection forget the current primary video\n * SSRC.\n */\nTraceablePeerConnection.prototype.clearRecvonlySsrc = function() {\n    logger.info(`${this} Clearing primary video SSRC!`);\n    this.sdpConsistency.clearVideoSsrcCache();\n};\n\n/**\n * Closes underlying WebRTC PeerConnection instance and removes all remote\n * tracks by emitting {@link RTCEvents.REMOTE_TRACK_REMOVED} for each one of\n * them.\n */\nTraceablePeerConnection.prototype.close = function() {\n    this.trace('stop');\n\n    // Off SignalingEvents\n    this.signalingLayer.off(SignalingEvents.PEER_MUTED_CHANGED, this._peerMutedChanged);\n    this.signalingLayer.off(SignalingEvents.PEER_VIDEO_TYPE_CHANGED, this._peerVideoTypeChanged);\n    this._usesUnifiedPlan && this.peerconnection.removeEventListener('track', this.onTrack);\n\n    for (const peerTracks of this.remoteTracks.values()) {\n        for (const remoteTrack of peerTracks.values()) {\n            this._removeRemoteTrack(remoteTrack);\n        }\n    }\n    this.remoteTracks.clear();\n\n    this._addedStreams = [];\n\n    this._dtmfSender = null;\n    this._dtmfTonesQueue = [];\n\n    if (!this.rtc._removePeerConnection(this)) {\n        logger.error(`${this} RTC._removePeerConnection returned false`);\n    }\n    if (this.statsinterval !== null) {\n        window.clearInterval(this.statsinterval);\n        this.statsinterval = null;\n    }\n    logger.info(`${this} Closing peerconnection`);\n    this.peerconnection.close();\n};\n\nTraceablePeerConnection.prototype.createAnswer = function(constraints) {\n    return this._createOfferOrAnswer(false /* answer */, constraints);\n};\n\nTraceablePeerConnection.prototype.createOffer = function(constraints) {\n    return this._createOfferOrAnswer(true /* offer */, constraints);\n};\n\nTraceablePeerConnection.prototype._createOfferOrAnswer = function(\n        isOffer,\n        constraints) {\n    const logName = isOffer ? 'Offer' : 'Answer';\n\n    this.trace(`create${logName}`, JSON.stringify(constraints, null, ' '));\n\n    const handleSuccess = (resultSdp, resolveFn, rejectFn) => {\n        try {\n            this.trace(\n                `create${logName}OnSuccess::preTransform`, dumpSDP(resultSdp));\n\n            if (!this._usesUnifiedPlan) {\n                // If there are no local video tracks, then a \"recvonly\"\n                // SSRC needs to be generated\n                if (!this.hasAnyTracksOfType(MediaType.VIDEO)\n                    && !this.sdpConsistency.hasPrimarySsrcCached()) {\n                    this.generateRecvonlySsrc();\n                }\n\n                // eslint-disable-next-line no-param-reassign\n                resultSdp = new RTCSessionDescription({\n                    type: resultSdp.type,\n                    sdp: this.sdpConsistency.makeVideoPrimarySsrcsConsistent(\n                        resultSdp.sdp)\n                });\n\n                this.trace(\n                    `create${logName}OnSuccess::postTransform `\n                         + '(make primary audio/video ssrcs consistent)',\n                    dumpSDP(resultSdp));\n            }\n\n            const localVideoTrack = this.getLocalVideoTrack();\n\n            // Configure simulcast for camera tracks and for desktop tracks that need simulcast.\n            if (this.isSimulcastOn() && browser.usesSdpMungingForSimulcast()\n                && (localVideoTrack?.getVideoType() === VideoType.CAMERA\n                || this._usesUnifiedPlan\n                || !this._isSharingLowFpsScreen())) {\n                // eslint-disable-next-line no-param-reassign\n                resultSdp = this.simulcast.mungeLocalDescription(resultSdp);\n                this.trace(\n                    `create${logName}`\n                        + 'OnSuccess::postTransform (simulcast)',\n                    dumpSDP(resultSdp));\n            }\n\n            if (!this.options.disableRtx && browser.usesSdpMungingForSimulcast()) {\n                // eslint-disable-next-line no-param-reassign\n                resultSdp = new RTCSessionDescription({\n                    type: resultSdp.type,\n                    sdp: this.rtxModifier.modifyRtxSsrcs(resultSdp.sdp)\n                });\n\n                this.trace(\n                    `create${logName}`\n                         + 'OnSuccess::postTransform (rtx modifier)',\n                    dumpSDP(resultSdp));\n            }\n\n            const ssrcMap = this._extractSSRCMap(resultSdp);\n\n            this._processLocalSSRCsMap(ssrcMap);\n\n            resolveFn(resultSdp);\n        } catch (e) {\n            this.trace(`create${logName}OnError`, e);\n            this.trace(`create${logName}OnError`, dumpSDP(resultSdp));\n            logger.error(`${this} create${logName}OnError`, e, dumpSDP(resultSdp));\n\n            rejectFn(e);\n        }\n    };\n\n    const handleFailure = (err, rejectFn) => {\n        this.trace(`create${logName}OnFailure`, err);\n        const eventType\n            = isOffer\n                ? RTCEvents.CREATE_OFFER_FAILED\n                : RTCEvents.CREATE_ANSWER_FAILED;\n\n        this.eventEmitter.emit(eventType, err, this);\n\n        rejectFn(err);\n    };\n\n    // Set the codec preference before creating an offer or answer so that the generated SDP will have\n    // the correct preference order.\n    if (this._usesTransceiverCodecPreferences) {\n        const transceiver = this.peerconnection.getTransceivers()\n            .find(t => t.receiver && t.receiver?.track?.kind === MediaType.VIDEO);\n\n        if (transceiver) {\n            let capabilities = RTCRtpReceiver.getCapabilities(MediaType.VIDEO)?.codecs;\n            const mimeType = this.codecPreference?.mimeType;\n            const enable = this.codecPreference?.enable;\n\n            if (capabilities && mimeType && enable) {\n                // Move the desired codec (all variations of it as well) to the beginning of the list.\n                /* eslint-disable-next-line arrow-body-style */\n                capabilities.sort(caps => {\n                    return caps.mimeType.toLowerCase() === `${MediaType.VIDEO}/${mimeType}` ? -1 : 1;\n                });\n            } else if (capabilities && mimeType) {\n                capabilities = capabilities\n                    .filter(caps => caps.mimeType.toLowerCase() !== `${MediaType.VIDEO}/${mimeType}`);\n            }\n\n            try {\n                transceiver.setCodecPreferences(capabilities);\n            } catch (err) {\n                logger.warn(`${this} Setting codec[preference=${mimeType},enable=${enable}] failed`, err);\n            }\n        }\n    }\n\n    return new Promise((resolve, reject) => {\n        let oaPromise;\n\n        if (isOffer) {\n            oaPromise = this.peerconnection.createOffer(constraints);\n        } else {\n            oaPromise = this.peerconnection.createAnswer(constraints);\n        }\n\n        oaPromise\n            .then(\n                sdp => handleSuccess(sdp, resolve, reject),\n                error => handleFailure(error, reject));\n    });\n};\n\n/**\n * Extract primary SSRC from given {@link TrackSSRCInfo} object.\n * @param {TrackSSRCInfo} ssrcObj\n * @return {number|null} the primary SSRC or <tt>null</tt>\n */\nTraceablePeerConnection.prototype._extractPrimarySSRC = function(ssrcObj) {\n    if (ssrcObj && ssrcObj.groups && ssrcObj.groups.length) {\n        return ssrcObj.groups[0].ssrcs[0];\n    } else if (ssrcObj && ssrcObj.ssrcs && ssrcObj.ssrcs.length) {\n        return ssrcObj.ssrcs[0];\n    }\n\n    return null;\n};\n\n/**\n * Goes over the SSRC map extracted from the latest local description and tries\n * to match them with the local tracks (by MSID). Will update the values\n * currently stored in the {@link TraceablePeerConnection.localSSRCs} map.\n * @param {Map<string,TrackSSRCInfo>} ssrcMap\n * @private\n */\nTraceablePeerConnection.prototype._processLocalSSRCsMap = function(ssrcMap) {\n    for (const track of this.localTracks.values()) {\n        const sourceIdentifier = this._usesUnifiedPlan ? track.getType() : track.storedMSID;\n\n        if (ssrcMap.has(sourceIdentifier)) {\n            const newSSRC = ssrcMap.get(sourceIdentifier);\n\n            if (!newSSRC) {\n                logger.error(`${this} No SSRC found for stream=${sourceIdentifier}`);\n\n                return;\n            }\n            const oldSSRC = this.localSSRCs.get(track.rtcId);\n            const newSSRCNum = this._extractPrimarySSRC(newSSRC);\n            const oldSSRCNum = this._extractPrimarySSRC(oldSSRC);\n\n            // eslint-disable-next-line no-negated-condition\n            if (newSSRCNum !== oldSSRCNum) {\n                oldSSRCNum && logger.error(`${this} Overwriting SSRC for track=${track}] with ssrc=${newSSRC}`);\n                this.localSSRCs.set(track.rtcId, newSSRC);\n                this.eventEmitter.emit(RTCEvents.LOCAL_TRACK_SSRC_UPDATED, track, newSSRCNum);\n            }\n        } else if (!track.isVideoTrack() && !track.isMuted()) {\n            // It is normal to find no SSRCs for a muted video track in\n            // the local SDP as the recv-only SSRC is no longer munged in.\n            // So log the warning only if it's not a muted video track.\n            logger.warn(`${this} No SSRCs found in the local SDP for track=${track}, stream=${sourceIdentifier}`);\n        }\n    }\n};\n\nTraceablePeerConnection.prototype.addIceCandidate = function(candidate) {\n    this.trace('addIceCandidate', JSON.stringify({\n        candidate: candidate.candidate,\n        sdpMid: candidate.sdpMid,\n        sdpMLineIndex: candidate.sdpMLineIndex,\n        usernameFragment: candidate.usernameFragment\n    }, null, ' '));\n\n    return this.peerconnection.addIceCandidate(candidate);\n};\n\n/**\n * Returns the number of simulcast streams that are currently enabled on the peerconnection.\n *\n * @returns {number} The number of simulcast streams currently enabled or 1 when simulcast is disabled.\n */\nTraceablePeerConnection.prototype.getActiveSimulcastStreams = function() {\n    let activeStreams = 1;\n\n    if (this.isSimulcastOn() && this.encodingsEnabledState) {\n        activeStreams = this.encodingsEnabledState.filter(stream => Boolean(stream))?.length;\n    } else if (this.isSimulcastOn()) {\n        activeStreams = SIM_LAYER_RIDS.length;\n    }\n\n    return activeStreams;\n};\n\n/**\n * Obtains call-related stats from the peer connection.\n *\n * @returns {Promise<Object>} Promise which resolves with data providing statistics about\n * the peerconnection.\n */\nTraceablePeerConnection.prototype.getStats = function() {\n    return this.peerconnection.getStats();\n};\n\n/**\n * Generates and stores new SSRC info object for given local track.\n * The method should be called only for a video track being added to this TPC\n * in the muted state (given that the current browser uses this strategy).\n * @param {JitsiLocalTrack} track\n * @return {TPCSSRCInfo}\n */\nTraceablePeerConnection.prototype.generateNewStreamSSRCInfo = function(track) {\n    const rtcId = track.rtcId;\n    let ssrcInfo = this._getSSRC(rtcId);\n\n    if (ssrcInfo) {\n        logger.error(`${this} Overwriting local SSRCs for track id=${rtcId}`);\n    }\n\n    // Configure simulcast for camera tracks and desktop tracks that need simulcast.\n    if (this.isSimulcastOn()\n        && (track.getVideoType() === VideoType.CAMERA || !this._isSharingLowFpsScreen())) {\n        ssrcInfo = {\n            ssrcs: [],\n            groups: []\n        };\n        for (let i = 0; i < SIM_LAYER_RIDS.length; i++) {\n            ssrcInfo.ssrcs.push(SDPUtil.generateSsrc());\n        }\n        ssrcInfo.groups.push({\n            ssrcs: ssrcInfo.ssrcs.slice(),\n            semantics: 'SIM'\n        });\n    } else {\n        ssrcInfo = {\n            ssrcs: [ SDPUtil.generateSsrc() ],\n            groups: []\n        };\n    }\n    if (!this.options.disableRtx) {\n        // Specifically use a for loop here because we'll\n        //  be adding to the list we're iterating over, so we\n        //  only want to iterate through the items originally\n        //  on the list\n        const currNumSsrcs = ssrcInfo.ssrcs.length;\n\n        for (let i = 0; i < currNumSsrcs; ++i) {\n            const primarySsrc = ssrcInfo.ssrcs[i];\n            const rtxSsrc = SDPUtil.generateSsrc();\n\n            ssrcInfo.ssrcs.push(rtxSsrc);\n            ssrcInfo.groups.push({\n                ssrcs: [ primarySsrc, rtxSsrc ],\n                semantics: 'FID'\n            });\n        }\n    }\n    ssrcInfo.msid = track.storedMSID;\n    this.localSSRCs.set(rtcId, ssrcInfo);\n\n    return ssrcInfo;\n};\n\n/**\n * Returns if the peer connection uses Unified plan implementation.\n *\n * @returns {boolean} True if the pc uses Unified plan, false otherwise.\n */\nTraceablePeerConnection.prototype.usesUnifiedPlan = function() {\n    return this._usesUnifiedPlan;\n};\n\n/**\n * Creates a text representation of this <tt>TraceablePeerConnection</tt>\n * instance.\n * @return {string}\n */\nTraceablePeerConnection.prototype.toString = function() {\n    return `TPC[id=${this.id},type=${this.isP2P ? 'P2P' : 'JVB'}]`;\n};\n","/* global __filename */\n\nimport { getLogger } from 'jitsi-meet-logger';\n\nimport MediaDirection from '../../service/RTC/MediaDirection';\nimport * as MediaType from '../../service/RTC/MediaType';\n\nimport { SdpTransformWrap } from './SdpTransformUtil';\n\nconst logger = getLogger(__filename);\n\n/**\n * Fakes local SDP exposed to {@link JingleSessionPC} through the local\n * description getter. Modifies the SDP, so that it will contain muted local\n * video tracks description, even though their underlying {MediaStreamTrack}s\n * are no longer in the WebRTC peerconnection. That prevents from SSRC updates\n * being sent to Jicofo/remote peer and prevents sRD/sLD cycle on the remote\n * side.\n */\nexport default class LocalSdpMunger {\n\n    /**\n     * Creates new <tt>LocalSdpMunger</tt> instance.\n     *\n     * @param {TraceablePeerConnection} tpc\n     * @param {string} localEndpointId - The endpoint id of the local user.\n     */\n    constructor(tpc, localEndpointId) {\n        this.tpc = tpc;\n        this.localEndpointId = localEndpointId;\n    }\n\n    /**\n     * Makes sure that muted local video tracks associated with the parent\n     * {@link TraceablePeerConnection} are described in the local SDP. It's done\n     * in order to prevent from sending 'source-remove'/'source-add' Jingle\n     * notifications when local video track is muted (<tt>MediaStream</tt> is\n     * removed from the peerconnection).\n     *\n     * NOTE 1 video track is assumed\n     *\n     * @param {SdpTransformWrap} transformer the transformer instance which will\n     * be used to process the SDP.\n     * @return {boolean} <tt>true</tt> if there were any modifications to\n     * the SDP wrapped by <tt>transformer</tt>.\n     * @private\n     */\n    _addMutedLocalVideoTracksToSDP(transformer) {\n        // Go over each video tracks and check if the SDP has to be changed\n        const localVideos = this.tpc.getLocalTracks(MediaType.VIDEO);\n\n        if (!localVideos.length) {\n            return false;\n        } else if (localVideos.length !== 1) {\n            logger.error(\n                `${this.tpc} there is more than 1 video track ! `\n                    + 'Strange things may happen !', localVideos);\n        }\n\n        const videoMLine = transformer.selectMedia('video');\n\n        if (!videoMLine) {\n            logger.debug(\n                `${this.tpc} unable to hack local video track SDP`\n                    + '- no \"video\" media');\n\n            return false;\n        }\n\n        let modified = false;\n\n        for (const videoTrack of localVideos) {\n            const muted = videoTrack.isMuted();\n            const mediaStream = videoTrack.getOriginalStream();\n\n            // During the mute/unmute operation there are periods of time when\n            // the track's underlying MediaStream is not added yet to\n            // the PeerConnection. The SDP needs to be munged in such case.\n            const isInPeerConnection\n                = mediaStream && this.tpc.isMediaStreamInPc(mediaStream);\n            const shouldFakeSdp = muted || !isInPeerConnection;\n\n            if (!shouldFakeSdp) {\n                continue; // eslint-disable-line no-continue\n            }\n\n            // Inject removed SSRCs\n            const requiredSSRCs\n                = this.tpc.isSimulcastOn()\n                    ? this.tpc.simulcast.ssrcCache\n                    : [ this.tpc.sdpConsistency.cachedPrimarySsrc ];\n\n            if (!requiredSSRCs.length) {\n                logger.error(`No SSRCs stored for: ${videoTrack} in ${this.tpc}`);\n\n                continue; // eslint-disable-line no-continue\n            }\n\n            modified = true;\n\n            // We need to fake sendrecv.\n            // NOTE the SDP produced here goes only to Jicofo and is never set\n            // as localDescription. That's why\n            // TraceablePeerConnection.mediaTransferActive is ignored here.\n            videoMLine.direction = MediaDirection.SENDRECV;\n\n            // Check if the recvonly has MSID\n            const primarySSRC = requiredSSRCs[0];\n\n            // FIXME The cname could come from the stream, but may turn out to\n            // be too complex. It is fine to come up with any value, as long as\n            // we only care about the actual SSRC values when deciding whether\n            // or not an update should be sent.\n            const primaryCname = `injected-${primarySSRC}`;\n\n            for (const ssrcNum of requiredSSRCs) {\n                // Remove old attributes\n                videoMLine.removeSSRC(ssrcNum);\n\n                // Inject\n                videoMLine.addSSRCAttribute({\n                    id: ssrcNum,\n                    attribute: 'cname',\n                    value: primaryCname\n                });\n                videoMLine.addSSRCAttribute({\n                    id: ssrcNum,\n                    attribute: 'msid',\n                    value: videoTrack.storedMSID\n                });\n            }\n            if (requiredSSRCs.length > 1) {\n                const group = {\n                    ssrcs: requiredSSRCs.join(' '),\n                    semantics: 'SIM'\n                };\n\n                if (!videoMLine.findGroup(group.semantics, group.ssrcs)) {\n                    // Inject the group\n                    videoMLine.addSSRCGroup(group);\n                }\n            }\n\n            // Insert RTX\n            // FIXME in P2P RTX is used by Chrome regardless of config option\n            // status. Because of that 'source-remove'/'source-add'\n            // notifications are still sent to remove/add RTX SSRC and FID group\n            if (!this.tpc.options.disableRtx) {\n                this.tpc.rtxModifier.modifyRtxSsrcs2(videoMLine);\n            }\n        }\n\n        return modified;\n    }\n\n    /**\n     * Returns a string that can be set as the MSID attribute for a source.\n     *\n     * @param {string} mediaType - Media type of the source.\n     * @param {string} trackId - Id of the MediaStreamTrack associated with the source.\n     * @param {string} streamId - Id of the MediaStream associated with the source.\n     * @returns {string|null}\n     */\n    _generateMsidAttribute(mediaType, trackId, streamId = null) {\n        if (!(mediaType && trackId)) {\n            logger.warn(`Unable to munge local MSID - track id=${trackId} or media type=${mediaType} is missing`);\n\n            return null;\n        }\n        const pcId = this.tpc.id;\n\n        // Handle a case on Firefox when the browser doesn't produce a 'a:ssrc' line with the 'msid' attribute or has\n        // '-' for the stream id part of the msid line. Jicofo needs an unique identifier to be associated with a ssrc\n        // and uses the msid for that.\n        if (streamId === '-' || !streamId) {\n            return `${this.localEndpointId}-${mediaType}-${pcId} ${trackId}-${pcId}`;\n        }\n\n        return `${streamId}-${pcId} ${trackId}-${pcId}`;\n    }\n\n    /**\n     * Modifies 'cname', 'msid', 'label' and 'mslabel' by appending\n     * the id of {@link LocalSdpMunger#tpc} at the end, preceding by a dash\n     * sign.\n     *\n     * @param {MLineWrap} mediaSection - The media part (audio or video) of the\n     * session description which will be modified in place.\n     * @returns {void}\n     * @private\n     */\n    _transformMediaIdentifiers(mediaSection) {\n        const pcId = this.tpc.id;\n\n        for (const ssrcLine of mediaSection.ssrcs) {\n            switch (ssrcLine.attribute) {\n            case 'cname':\n            case 'label':\n            case 'mslabel':\n                ssrcLine.value = ssrcLine.value && `${ssrcLine.value}-${pcId}`;\n                break;\n            case 'msid': {\n                if (ssrcLine.value) {\n                    const streamAndTrackIDs = ssrcLine.value.split(' ');\n\n                    if (streamAndTrackIDs.length === 2) {\n                        ssrcLine.value\n                            = this._generateMsidAttribute(\n                                mediaSection.mLine?.type,\n                                streamAndTrackIDs[1],\n                                streamAndTrackIDs[0]);\n                    } else {\n                        logger.warn(`Unable to munge local MSID - weird format detected: ${ssrcLine.value}`);\n                    }\n                }\n                break;\n            }\n            }\n        }\n\n        // Additional transformations related to MSID are applicable to Unified-plan implementation only.\n        if (!this.tpc.usesUnifiedPlan()) {\n            return;\n        }\n\n        // If the msid attribute is missing, then remove the ssrc from the transformed description so that a\n        // source-remove is signaled to Jicofo. This happens when the direction of the transceiver (or m-line)\n        // is set to 'inactive' or 'recvonly' on Firefox, Chrome (unified) and Safari.\n        const mediaDirection = mediaSection.mLine?.direction;\n\n        if (mediaDirection === MediaDirection.RECVONLY || mediaDirection === MediaDirection.INACTIVE) {\n            mediaSection.ssrcs = undefined;\n            mediaSection.ssrcGroups = undefined;\n\n        // Add the msid attribute if it is missing when the direction is sendrecv/sendonly. Firefox doesn't produce a\n        // a=ssrc line with msid attribute for p2p connection.\n        } else {\n            const msidLine = mediaSection.mLine?.msid;\n            const trackId = msidLine && msidLine.split(' ')[1];\n            const sources = [ ...new Set(mediaSection.mLine?.ssrcs?.map(s => s.id)) ];\n\n            for (const source of sources) {\n                const msidExists = mediaSection.ssrcs\n                    .find(ssrc => ssrc.id === source && ssrc.attribute === 'msid');\n\n                if (!msidExists) {\n                    const generatedMsid = this._generateMsidAttribute(mediaSection.mLine?.type, trackId);\n\n                    mediaSection.ssrcs.push({\n                        id: source,\n                        attribute: 'msid',\n                        value: generatedMsid\n                    });\n                }\n            }\n        }\n    }\n\n    /**\n     * Maybe modifies local description to fake local video tracks SDP when\n     * those are muted.\n     *\n     * @param {object} desc the WebRTC SDP object instance for the local\n     * description.\n     * @returns {RTCSessionDescription}\n     */\n    maybeAddMutedLocalVideoTracksToSDP(desc) {\n        if (!desc) {\n            throw new Error('No local description passed in.');\n        }\n\n        const transformer = new SdpTransformWrap(desc.sdp);\n\n        if (this._addMutedLocalVideoTracksToSDP(transformer)) {\n            return new RTCSessionDescription({\n                type: desc.type,\n                sdp: transformer.toRawSDP()\n            });\n        }\n\n        return desc;\n    }\n\n    /**\n     * This transformation will make sure that stream identifiers are unique\n     * across all of the local PeerConnections even if the same stream is used\n     * by multiple instances at the same time.\n     * Each PeerConnection assigns different SSRCs to the same local\n     * MediaStream, but the MSID remains the same as it's used to identify\n     * the stream by the WebRTC backend. The transformation will append\n     * {@link TraceablePeerConnection#id} at the end of each stream's identifier\n     * (\"cname\", \"msid\", \"label\" and \"mslabel\").\n     *\n     * @param {RTCSessionDescription} sessionDesc - The local session\n     * description (this instance remains unchanged).\n     * @return {RTCSessionDescription} - Transformed local session description\n     * (a modified copy of the one given as the input).\n     */\n    transformStreamIdentifiers(sessionDesc) {\n        // FIXME similar check is probably duplicated in all other transformers\n        if (!sessionDesc || !sessionDesc.sdp || !sessionDesc.type) {\n            return sessionDesc;\n        }\n\n        const transformer = new SdpTransformWrap(sessionDesc.sdp);\n        const audioMLine = transformer.selectMedia('audio');\n\n        if (audioMLine) {\n            this._transformMediaIdentifiers(audioMLine);\n        }\n\n        const videoMLine = transformer.selectMedia('video');\n\n        if (videoMLine) {\n            this._transformMediaIdentifiers(videoMLine);\n        }\n\n        return new RTCSessionDescription({\n            type: sessionDesc.type,\n            sdp: transformer.toRawSDP()\n        });\n    }\n}\n","/* global __filename */\n\nimport { getLogger } from 'jitsi-meet-logger';\n\nimport SDPUtil from './SDPUtil';\nimport { parseSecondarySSRC, SdpTransformWrap } from './SdpTransformUtil';\n\nconst logger = getLogger(__filename);\n\n/**\n * Begin helper functions\n */\n/**\n * Updates or inserts the appropriate rtx information for primarySsrc with\n *  the given rtxSsrc.  If no rtx ssrc for primarySsrc currently exists, it will\n *  add the appropriate ssrc and ssrc group lines.  If primarySsrc already has\n *  an rtx ssrc, the appropriate ssrc and group lines will be updated\n * @param {MLineWrap} mLine\n * @param {object} primarySsrcInfo the info (ssrc, msid & cname) for the\n *  primary ssrc\n * @param {number} rtxSsrc the rtx ssrc to associate with the primary ssrc\n */\nfunction updateAssociatedRtxStream(mLine, primarySsrcInfo, rtxSsrc) {\n    const primarySsrc = primarySsrcInfo.id;\n    const primarySsrcMsid = primarySsrcInfo.msid;\n    const primarySsrcCname = primarySsrcInfo.cname;\n\n    const previousRtxSSRC = mLine.getRtxSSRC(primarySsrc);\n\n    if (previousRtxSSRC === rtxSsrc) {\n        return;\n    }\n    if (previousRtxSSRC) {\n        // Stream already had an rtx ssrc that is different than the one given,\n        //  remove all trace of the old one\n        mLine.removeSSRC(previousRtxSSRC);\n        mLine.removeGroupsWithSSRC(previousRtxSSRC);\n    }\n    mLine.addSSRCAttribute({\n        id: rtxSsrc,\n        attribute: 'cname',\n        value: primarySsrcCname\n    });\n    mLine.addSSRCAttribute({\n        id: rtxSsrc,\n        attribute: 'msid',\n        value: primarySsrcMsid\n    });\n    mLine.addSSRCGroup({\n        semantics: 'FID',\n        ssrcs: `${primarySsrc} ${rtxSsrc}`\n    });\n}\n\n/**\n * End helper functions\n */\n\n/**\n * Adds any missing RTX streams for video streams\n *  and makes sure that they remain consistent\n */\nexport default class RtxModifier {\n    /**\n     * Constructor\n     */\n    constructor() {\n        /**\n         * Map of video ssrc to corresponding RTX\n         *  ssrc\n         */\n        this.correspondingRtxSsrcs = new Map();\n    }\n\n    /**\n     * Clear the cached map of primary video ssrcs to\n     *  their corresponding rtx ssrcs so that they will\n     *  not be used for the next call to modifyRtxSsrcs\n     */\n    clearSsrcCache() {\n        this.correspondingRtxSsrcs.clear();\n    }\n\n    /**\n     * Explicitly set the primary video ssrc -> rtx ssrc\n     *  mapping to be used in modifyRtxSsrcs\n     * @param {Map} ssrcMapping a mapping of primary video\n     *  ssrcs to their corresponding rtx ssrcs\n     */\n    setSsrcCache(ssrcMapping) {\n        logger.debug('Setting ssrc cache to ', ssrcMapping);\n        this.correspondingRtxSsrcs = ssrcMapping;\n    }\n\n    /**\n     * Adds RTX ssrcs for any video ssrcs that don't\n     *  already have them.  If the video ssrc has been\n     *  seen before, and already had an RTX ssrc generated,\n     *  the same RTX ssrc will be used again.\n     * @param {string} sdpStr sdp in raw string format\n     */\n    modifyRtxSsrcs(sdpStr) {\n        const sdpTransformer = new SdpTransformWrap(sdpStr);\n        const videoMLine = sdpTransformer.selectMedia('video');\n\n        if (!videoMLine) {\n            logger.debug(`No 'video' media found in the sdp: ${sdpStr}`);\n\n            return sdpStr;\n        }\n\n        return this.modifyRtxSsrcs2(videoMLine)\n            ? sdpTransformer.toRawSDP() : sdpStr;\n    }\n\n    /**\n     * Does the same thing as {@link modifyRtxSsrcs}, but takes the\n     *  {@link MLineWrap} instance wrapping video media as an argument.\n     * @param {MLineWrap} videoMLine\n     * @return {boolean} <tt>true</tt> if the SDP wrapped by\n     *  {@link SdpTransformWrap} has been modified or <tt>false</tt> otherwise.\n     */\n    modifyRtxSsrcs2(videoMLine) {\n        if (videoMLine.direction === 'recvonly') {\n\n            return false;\n        }\n        if (videoMLine.getSSRCCount() < 1) {\n\n            return false;\n        }\n        const primaryVideoSsrcs = videoMLine.getPrimaryVideoSSRCs();\n\n        for (const ssrc of primaryVideoSsrcs) {\n            const msid = videoMLine.getSSRCAttrValue(ssrc, 'msid');\n            const cname = videoMLine.getSSRCAttrValue(ssrc, 'cname');\n            let correspondingRtxSsrc = this.correspondingRtxSsrcs.get(ssrc);\n\n            if (!correspondingRtxSsrc) {\n                // If there's one in the sdp already for it, we'll just set\n                //  that as the corresponding one\n                const previousAssociatedRtxStream = videoMLine.getRtxSSRC(ssrc);\n\n                if (previousAssociatedRtxStream) {\n                    correspondingRtxSsrc = previousAssociatedRtxStream;\n                } else {\n                    correspondingRtxSsrc = SDPUtil.generateSsrc();\n                }\n                this.correspondingRtxSsrcs.set(ssrc, correspondingRtxSsrc);\n            }\n            updateAssociatedRtxStream(\n                videoMLine,\n                {\n                    id: ssrc,\n                    cname,\n                    msid\n                },\n                correspondingRtxSsrc);\n        }\n\n        // FIXME we're not looking into much details whether the SDP has been\n        // modified or not once the precondition requirements are met.\n        return true;\n    }\n\n    /**\n     * Strip all rtx streams from the given sdp\n     * @param {string} sdpStr sdp in raw string format\n     * @returns {string} sdp string with all rtx streams stripped\n     */\n    stripRtx(sdpStr) {\n        const sdpTransformer = new SdpTransformWrap(sdpStr);\n        const videoMLine = sdpTransformer.selectMedia('video');\n\n        if (!videoMLine) {\n            logger.debug(`No 'video' media found in the sdp: ${sdpStr}`);\n\n            return sdpStr;\n        }\n        if (videoMLine.direction === 'recvonly') {\n            logger.debug('RtxModifier doing nothing, video m line is recvonly');\n\n            return sdpStr;\n        }\n        if (videoMLine.getSSRCCount() < 1) {\n            logger.debug('RtxModifier doing nothing, no video ssrcs present');\n\n            return sdpStr;\n        }\n        if (!videoMLine.containsAnySSRCGroups()) {\n            logger.debug('RtxModifier doing nothing, '\n              + 'no video ssrcGroups present');\n\n            return sdpStr;\n        }\n        const fidGroups = videoMLine.findGroups('FID');\n\n        // Remove the fid groups from the mline\n\n        videoMLine.removeGroupsBySemantics('FID');\n\n        // Get the rtx ssrcs and remove them from the mline\n        for (const fidGroup of fidGroups) {\n            const rtxSsrc = parseSecondarySSRC(fidGroup);\n\n            videoMLine.removeSSRC(rtxSsrc);\n        }\n\n        return sdpTransformer.toRawSDP();\n    }\n}\n","/* global __filename */\n\nimport { getLogger } from 'jitsi-meet-logger';\n\nimport {\n    parsePrimarySSRC,\n    parseSecondarySSRC,\n    SdpTransformWrap\n} from './SdpTransformUtil';\n\nconst logger = getLogger(__filename);\n\n/**\n * Handles the work of keeping video ssrcs consistent across multiple\n * o/a cycles, making it such that all stream operations can be\n * kept local and do not need to be signaled.\n * NOTE: This only keeps the 'primary' video ssrc consistent: meaning\n * the primary video stream\n */\nexport default class SdpConsistency {\n    /**\n     * Constructor\n     * @param {string} logPrefix the log prefix appended to every logged\n     * message, currently used to distinguish for which\n     * <tt>TraceablePeerConnection</tt> the instance works.\n     */\n    constructor(logPrefix) {\n        this.clearVideoSsrcCache();\n        this.logPrefix = logPrefix;\n    }\n\n    /**\n     * Clear the cached video primary and primary rtx ssrcs so that\n     *  they will not be used for the next call to\n     *  makeVideoPrimarySsrcsConsistent\n     */\n    clearVideoSsrcCache() {\n        this.cachedPrimarySsrc = null;\n        this.injectRecvOnly = false;\n    }\n\n    /**\n     * Explicitly set the primary ssrc to be used in\n     *  makeVideoPrimarySsrcsConsistent\n     * @param {number} primarySsrc the primarySsrc to be used\n     *  in future calls to makeVideoPrimarySsrcsConsistent\n     * @throws Error if <tt>primarySsrc</tt> is not a number\n     */\n    setPrimarySsrc(primarySsrc) {\n        if (typeof primarySsrc !== 'number') {\n            throw new Error('Primary SSRC must be a number!');\n        }\n        this.cachedPrimarySsrc = primarySsrc;\n    }\n\n    /**\n     * Checks whether or not there is a primary video SSRC cached already.\n     * @return {boolean}\n     */\n    hasPrimarySsrcCached() {\n        return Boolean(this.cachedPrimarySsrc);\n    }\n\n    /**\n     * Given an sdp string, either:\n     *  1) record the primary video and primary rtx ssrcs to be\n     *   used in future calls to makeVideoPrimarySsrcsConsistent or\n     *  2) change the primary and primary rtx ssrcs in the given sdp\n     *   to match the ones previously cached\n     * @param {string} sdpStr the sdp string to (potentially)\n     *  change to make the video ssrcs consistent\n     * @returns {string} a (potentially) modified sdp string\n     *  with ssrcs consistent with this class' cache\n     */\n    makeVideoPrimarySsrcsConsistent(sdpStr) {\n        const sdpTransformer = new SdpTransformWrap(sdpStr);\n        const videoMLine = sdpTransformer.selectMedia('video');\n\n        if (!videoMLine) {\n            logger.debug(`${this.logPrefix} no 'video' media found in the sdp: ${sdpStr}`);\n\n            return sdpStr;\n        }\n\n        if (videoMLine.direction === 'recvonly') {\n            // If the mline is recvonly, we'll add the primary\n            //  ssrc as a recvonly ssrc\n            if (this.cachedPrimarySsrc && this.injectRecvOnly) {\n                videoMLine.addSSRCAttribute({\n                    id: this.cachedPrimarySsrc,\n                    attribute: 'cname',\n                    value: `recvonly-${this.cachedPrimarySsrc}`\n                });\n            } else {\n                logger.info(`${this.logPrefix} no SSRC found for the recvonly video stream!`);\n            }\n        } else {\n            const newPrimarySsrc = videoMLine.getPrimaryVideoSsrc();\n\n            if (!newPrimarySsrc) {\n                logger.info(`${this.logPrefix} sdp-consistency couldn't parse new primary ssrc`);\n\n                return sdpStr;\n            }\n            if (this.cachedPrimarySsrc) {\n                videoMLine.replaceSSRC(newPrimarySsrc, this.cachedPrimarySsrc);\n                for (const group of videoMLine.ssrcGroups) {\n                    if (group.semantics === 'FID') {\n                        const primarySsrc = parsePrimarySSRC(group);\n                        const rtxSsrc = parseSecondarySSRC(group);\n\n                        // eslint-disable-next-line max-depth\n                        if (primarySsrc === newPrimarySsrc) {\n                            group.ssrcs\n                                = `${this.cachedPrimarySsrc} ${rtxSsrc}`;\n                        }\n                    }\n                }\n            } else {\n                this.cachedPrimarySsrc = newPrimarySsrc;\n            }\n            this.injectRecvOnly = true;\n        }\n\n        return sdpTransformer.toRawSDP();\n    }\n}\n","import * as JitsiTrackEvents from '../../JitsiTrackEvents';\nimport { createTtfmEvent } from '../../service/statistics/AnalyticsEvents';\nimport Statistics from '../statistics/statistics';\n\nimport JitsiTrack from './JitsiTrack';\n\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\n\nconst RTCEvents = require('../../service/RTC/RTCEvents');\n\nlet ttfmTrackerAudioAttached = false;\nlet ttfmTrackerVideoAttached = false;\n\n/**\n * List of container events that we are going to process. _onContainerEventHandler will be added as listener to the\n * container for every event in the list.\n */\nconst containerEvents = [\n    'abort', 'canplay', 'canplaythrough', 'emptied', 'ended', 'error', 'loadeddata', 'loadedmetadata', 'loadstart',\n    'pause', 'play', 'playing', 'ratechange', 'stalled', 'suspend', 'waiting'\n];\n\n/* eslint-disable max-params */\n\n/**\n * Represents a single media track (either audio or video).\n */\nexport default class JitsiRemoteTrack extends JitsiTrack {\n    /**\n     * Creates new JitsiRemoteTrack instance.\n     * @param {RTC} rtc the RTC service instance.\n     * @param {JitsiConference} conference the conference to which this track\n     *        belongs to\n     * @param {string} ownerEndpointId the endpoint ID of the track owner\n     * @param {MediaStream} stream WebRTC MediaStream, parent of the track\n     * @param {MediaStreamTrack} track underlying WebRTC MediaStreamTrack for\n     *        the new JitsiRemoteTrack\n     * @param {MediaType} mediaType the type of the media\n     * @param {VideoType} videoType the type of the video if applicable\n     * @param {number} ssrc the SSRC number of the Media Stream\n     * @param {boolean} muted the initial muted state\n     * @param {boolean} isP2P indicates whether or not this track belongs to a\n     * P2P session\n     * @throws {TypeError} if <tt>ssrc</tt> is not a number.\n     * @constructor\n     */\n    constructor(\n            rtc,\n            conference,\n            ownerEndpointId,\n            stream,\n            track,\n            mediaType,\n            videoType,\n            ssrc,\n            muted,\n            isP2P) {\n        super(\n            conference,\n            stream,\n            track,\n            () => {\n                // Nothing to do if the track is inactive.\n            },\n            mediaType,\n            videoType);\n        this.rtc = rtc;\n\n        // Prevent from mixing up type of SSRC which should be a number\n        if (typeof ssrc !== 'number') {\n            throw new TypeError(`SSRC ${ssrc} is not a number`);\n        }\n        this.ssrc = ssrc;\n        this.ownerEndpointId = ownerEndpointId;\n        this.muted = muted;\n        this.isP2P = isP2P;\n\n        logger.debug(`New remote track added: ${this}`);\n\n        // we want to mark whether the track has been ever muted\n        // to detect ttfm events for startmuted conferences, as it can\n        // significantly increase ttfm values\n        this.hasBeenMuted = muted;\n\n        // Bind 'onmute' and 'onunmute' event handlers\n        if (this.rtc && this.track) {\n            this._bindTrackHandlers();\n        }\n        this._containerHandlers = {};\n        containerEvents.forEach(event => {\n            this._containerHandlers[event] = this._containerEventHandler.bind(this, event);\n        });\n    }\n\n    /* eslint-enable max-params */\n    /**\n     * Attaches the track handlers.\n     *\n     * @returns {void}\n     */\n    _bindTrackHandlers() {\n        this.track.addEventListener('mute', () => this._onTrackMute());\n        this.track.addEventListener('unmute', () => this._onTrackUnmute());\n        this.track.addEventListener('ended', () => {\n            logger.debug(`\"onended\" event(${Date.now()}): ${this}`);\n        });\n    }\n\n    /**\n     * Callback invoked when the track is muted. Emits an event notifying\n     * listeners of the mute event.\n     *\n     * @private\n     * @returns {void}\n     */\n    _onTrackMute() {\n        logger.debug(`\"onmute\" event(${Date.now()}): ${this}`);\n\n        this.rtc.eventEmitter.emit(RTCEvents.REMOTE_TRACK_MUTE, this);\n    }\n\n    /**\n     * Callback invoked when the track is unmuted. Emits an event notifying\n     * listeners of the mute event.\n     *\n     * @private\n     * @returns {void}\n     */\n    _onTrackUnmute() {\n        logger.debug(`\"onunmute\" event(${Date.now()}): ${this}`);\n\n        this.rtc.eventEmitter.emit(RTCEvents.REMOTE_TRACK_UNMUTE, this);\n    }\n\n    /**\n     * Sets current muted status and fires an events for the change.\n     * @param value the muted status.\n     */\n    setMute(value) {\n        if (this.muted === value) {\n            return;\n        }\n\n        if (value) {\n            this.hasBeenMuted = true;\n        }\n\n        // we can have a fake video stream\n        if (this.stream) {\n            this.stream.muted = value;\n        }\n\n        this.muted = value;\n        this.emit(JitsiTrackEvents.TRACK_MUTE_CHANGED, this);\n    }\n\n    /**\n     * Returns the current muted status of the track.\n     * @returns {boolean|*|JitsiRemoteTrack.muted} <tt>true</tt> if the track is\n     * muted and <tt>false</tt> otherwise.\n     */\n    isMuted() {\n        return this.muted;\n    }\n\n    /**\n     * Returns the participant id which owns the track.\n     *\n     * @returns {string} the id of the participants. It corresponds to the\n     * Colibri endpoint id/MUC nickname in case of Jitsi-meet.\n     */\n    getParticipantId() {\n        return this.ownerEndpointId;\n    }\n\n    /**\n     * Return false;\n     */\n    isLocal() {\n        return false;\n    }\n\n    /**\n     * Returns the synchronization source identifier (SSRC) of this remote\n     * track.\n     *\n     * @returns {number} the SSRC of this remote track.\n     */\n    getSSRC() {\n        return this.ssrc;\n    }\n\n    /**\n     * Changes the video type of the track.\n     *\n     * @param {string} type - The new video type(\"camera\", \"desktop\").\n     */\n    _setVideoType(type) {\n        if (this.videoType === type) {\n            return;\n        }\n        this.videoType = type;\n        this.emit(JitsiTrackEvents.TRACK_VIDEOTYPE_CHANGED, type);\n    }\n\n    /**\n     * Handles track play events.\n     */\n    _playCallback() {\n        const type = this.isVideoTrack() ? 'video' : 'audio';\n\n        const now = window.performance.now();\n\n        console.log(`(TIME) Render ${type}:\\t`, now);\n        this.conference.getConnectionTimes()[`${type}.render`] = now;\n\n        // The conference can be started without calling GUM\n        // FIXME if there would be a module for connection times this kind\n        // of logic (gumDuration or ttfm) should end up there\n        const gumStart = window.connectionTimes['obtainPermissions.start'];\n        const gumEnd = window.connectionTimes['obtainPermissions.end'];\n        const gumDuration\n            = !isNaN(gumEnd) && !isNaN(gumStart) ? gumEnd - gumStart : 0;\n\n        // Subtract the muc.joined-to-session-initiate duration because jicofo\n        // waits until there are 2 participants to start Jingle sessions.\n        const ttfm = now\n            - (this.conference.getConnectionTimes()['session.initiate']\n                - this.conference.getConnectionTimes()['muc.joined'])\n            - gumDuration;\n\n        this.conference.getConnectionTimes()[`${type}.ttfm`] = ttfm;\n        console.log(`(TIME) TTFM ${type}:\\t`, ttfm);\n\n        Statistics.sendAnalytics(createTtfmEvent(\n            {\n                'media_type': type,\n                muted: this.hasBeenMuted,\n                value: ttfm\n            }));\n\n    }\n\n    /**\n     * Attach time to first media tracker only if there is conference and only\n     * for the first element.\n     * @param container the HTML container which can be 'video' or 'audio'\n     * element.\n     * @private\n     */\n    _attachTTFMTracker(container) {\n        if ((ttfmTrackerAudioAttached && this.isAudioTrack())\n            || (ttfmTrackerVideoAttached && this.isVideoTrack())) {\n            return;\n        }\n\n        if (this.isAudioTrack()) {\n            ttfmTrackerAudioAttached = true;\n        }\n        if (this.isVideoTrack()) {\n            ttfmTrackerVideoAttached = true;\n        }\n\n        container.addEventListener('canplay', this._playCallback.bind(this));\n    }\n\n    /**\n     * Called when the track has been attached to a new container.\n     *\n     * @param {HTMLElement} container the HTML container which can be 'video' or\n     * 'audio' element.\n     * @private\n     */\n    _onTrackAttach(container) {\n        logger.debug(`Track has been attached to a container: ${this}`);\n\n        containerEvents.forEach(event => {\n            container.addEventListener(event, this._containerHandlers[event]);\n        });\n    }\n\n    /**\n     * Called when the track has been detached from a container.\n     *\n     * @param {HTMLElement} container the HTML container which can be 'video' or\n     * 'audio' element.\n     * @private\n     */\n    _onTrackDetach(container) {\n        logger.debug(`Track has been detached from a container: ${this}`);\n\n        containerEvents.forEach(event => {\n            container.removeEventListener(event, this._containerHandlers[event]);\n        });\n    }\n\n    /**\n     * An event handler for events triggered by the attached container.\n     *\n     * @param {string} type - The type of the event.\n     */\n    _containerEventHandler(type) {\n        logger.debug(`${type} handler was called for a container with attached ${this}`);\n    }\n\n    /**\n     * Returns a string with a description of the current status of the track.\n     *\n     * @returns {string}\n     */\n    _getStatus() {\n        const { enabled, muted, readyState } = this.track;\n\n        return `readyState: ${readyState}, muted: ${muted}, enabled: ${enabled}`;\n    }\n\n    /**\n     * Creates a text representation of this remote track instance.\n     * @return {string}\n     */\n    toString() {\n        return `RemoteTrack[userID: ${this.getParticipantId()}, type: ${this.getType()}, ssrc: ${\n            this.getSSRC()}, p2p: ${this.isP2P}, status: ${this._getStatus()}]`;\n    }\n}\n","import { getLogger } from 'jitsi-meet-logger';\n\nimport * as ConferenceEvents from '../../JitsiConferenceEvents';\nimport CodecMimeType from '../../service/RTC/CodecMimeType';\nimport * as RTCEvents from '../../service/RTC/RTCEvents';\nimport * as ConnectionQualityEvents from '../../service/connectivity/ConnectionQualityEvents';\nimport browser from '../browser';\n\nconst Resolutions = require('../../service/RTC/Resolutions');\nconst VideoType = require('../../service/RTC/VideoType');\nconst XMPPEvents = require('../../service/xmpp/XMPPEvents');\n\nconst logger = getLogger(__filename);\n\n/**\n * The value to use for the \"type\" field for messages sent by ConnectionQuality\n * over the data channel.\n */\nconst STATS_MESSAGE_TYPE = 'stats';\n\nconst kSimulcastFormats = [\n    { width: 1920,\n        height: 1080,\n        layers: 3,\n        target: 'high',\n        targetRN: 4000000 },\n    { width: 1280,\n        height: 720,\n        layers: 3,\n        target: 'high',\n        targetRN: 2500000 },\n    { width: 960,\n        height: 540,\n        layers: 3,\n        target: 'standard',\n        targetRN: 900000 },\n    { width: 640,\n        height: 360,\n        layers: 2,\n        target: 'standard',\n        targetRN: 500000 },\n    { width: 480,\n        height: 270,\n        layers: 2,\n        target: 'low',\n        targetRN: 350000 },\n    { width: 320,\n        height: 180,\n        layers: 1,\n        target: 'low',\n        targetRN: 150000 }\n];\n\n/**\n * The maximum bitrate to use as a measurement against the participant's current\n * bitrate. This cap helps in the cases where the participant's bitrate is high\n * but not enough to fulfill high targets, such as with 1080p.\n */\nconst MAX_TARGET_BITRATE = 2500;\n\n/**\n * The initial bitrate for video in kbps.\n */\nlet startBitrate = 800;\n\n/**\n * Gets the expected bitrate (in kbps) in perfect network conditions.\n * @param simulcast {boolean} whether simulcast is enabled or not.\n * @param resolution {Resolution} the resolution.\n * @param millisSinceStart {number} the number of milliseconds since sending video started.\n * @param videoQualitySettings {Object} the bitrate and codec settings for the local video source.\n */\nfunction getTarget(simulcast, resolution, millisSinceStart, videoQualitySettings) {\n    // Completely ignore the bitrate in the first 5 seconds, as the first\n    // event seems to fire very early and the value is suspicious and causes\n    // false positives.\n    if (millisSinceStart < 15000) {\n        return 1;\n    }\n\n    let target = 0;\n    let height = Math.min(resolution.height, resolution.width);\n\n    // Find the first format with height no bigger than ours.\n    let simulcastFormat = kSimulcastFormats.find(f => f.height <= height);\n\n    if (simulcastFormat && simulcast && videoQualitySettings.codec === CodecMimeType.VP8) {\n        // Sum the target fields from all simulcast layers for the given\n        // resolution (e.g. 720p + 360p + 180p) for VP8 simulcast.\n        for (height = simulcastFormat.height; height >= 180; height /= 2) {\n            const targetHeight = height;\n\n            simulcastFormat = kSimulcastFormats.find(f => f.height === targetHeight);\n            if (simulcastFormat) {\n                target += browser.isReactNative()\n                    ? simulcastFormat.targetRN\n                    : videoQualitySettings[simulcastFormat.target];\n            } else {\n                break;\n            }\n        }\n    } else if (simulcastFormat) {\n        // For VP9 SVC, H.264 (simulcast automatically disabled) and p2p, target bitrate will be\n        // same as that of the individual stream bitrate.\n        target = browser.isReactNative()\n            ? simulcastFormat.targetRN\n            : videoQualitySettings[simulcastFormat.target];\n    }\n\n    // Allow for an additional 1 second for ramp up -- delay any initial drop\n    // of connection quality by 1 second. Convert target from bps to kbps.\n    return Math.min(target / 1000, rampUp(Math.max(0, millisSinceStart - 1000)));\n}\n\n/**\n * Gets the bitrate to which GCC would have ramped up in perfect network\n * conditions after millisSinceStart milliseconds.\n * @param millisSinceStart {number} the number of milliseconds since sending\n * video was enabled.\n */\nfunction rampUp(millisSinceStart) {\n    if (millisSinceStart > 60000) {\n        return Number.MAX_SAFE_INTEGER;\n    }\n\n    // According to GCC the send side bandwidth estimation grows with at most\n    // 8% per second.\n    // https://tools.ietf.org/html/draft-ietf-rmcat-gcc-02#section-5.5\n    return startBitrate * Math.pow(1.08, millisSinceStart / 1000);\n}\n\n/**\n * A class which monitors the local statistics coming from the RTC modules, and\n * calculates a \"connection quality\" value, in percent, for the media\n * connection. A value of 100% indicates a very good network connection, and a\n * value of 0% indicates a poor connection.\n */\nexport default class ConnectionQuality {\n    /**\n     *\n     * @param conference\n     * @param eventEmitter\n     * @param options\n     */\n    constructor(conference, eventEmitter, options) {\n        this.eventEmitter = eventEmitter;\n\n        /**\n         * The owning JitsiConference.\n         */\n        this._conference = conference;\n\n        /**\n         * Holds statistics about the local connection quality.\n         */\n        this._localStats = {\n            connectionQuality: 100,\n            jvbRTT: undefined\n        };\n\n        /**\n         * The time this._localStats.connectionQuality was last updated.\n         */\n        this._lastConnectionQualityUpdate = -1;\n\n        /**\n         * Maps a participant ID to an object holding connection quality\n         * statistics received from this participant.\n         */\n        this._remoteStats = {};\n\n        /**\n         * The time that the ICE state last changed to CONNECTED. We use this\n         * to calculate how much time we as a sender have had to ramp-up.\n         */\n        this._timeIceConnected = -1;\n\n        /**\n         * The time that local video was unmuted. We use this to calculate how\n         * much time we as a sender have had to ramp-up.\n         */\n        this._timeVideoUnmuted = -1;\n\n        // We assume a global startBitrate value for the sake of simplicity.\n        if (options.config.startBitrate && options.config.startBitrate > 0) {\n            startBitrate = options.config.startBitrate;\n        }\n\n        // TODO: consider ignoring these events and letting the user of\n        // lib-jitsi-meet handle these separately.\n        conference.on(\n            ConferenceEvents.CONNECTION_INTERRUPTED,\n            () => {\n                this._updateLocalConnectionQuality(0);\n                this.eventEmitter.emit(\n                    ConnectionQualityEvents.LOCAL_STATS_UPDATED,\n                    this._localStats);\n                this._broadcastLocalStats();\n            });\n\n        conference.room.addListener(\n            XMPPEvents.ICE_CONNECTION_STATE_CHANGED,\n            (jingleSession, newState) => {\n                if (!jingleSession.isP2P && newState === 'connected') {\n                    this._timeIceConnected = window.performance.now();\n                }\n            });\n\n        // Listen to DataChannel message from other participants in the\n        // conference, and update the _remoteStats field accordingly.\n        // TODO - Delete this when all the mobile endpoints switch to using the new Colibri\n        // message format for sending the endpoint stats.\n        conference.on(\n            ConferenceEvents.ENDPOINT_MESSAGE_RECEIVED,\n            (participant, payload) => {\n                if (payload.type === STATS_MESSAGE_TYPE) {\n                    this._updateRemoteStats(\n                        participant.getId(), payload.values);\n                }\n            });\n\n        conference.on(\n            ConferenceEvents.ENDPOINT_STATS_RECEIVED,\n            (participant, payload) => {\n                this._updateRemoteStats(participant.getId(), payload);\n            });\n\n        // Listen to local statistics events originating from the RTC module and update the _localStats field.\n        conference.statistics.addConnectionStatsListener(this._updateLocalStats.bind(this));\n\n        // Save the last time we were unmuted.\n        conference.on(\n            ConferenceEvents.TRACK_MUTE_CHANGED,\n            track => {\n                if (track.isVideoTrack()) {\n                    if (track.isMuted()) {\n                        this._timeVideoUnmuted = -1;\n                    } else {\n                        this._maybeUpdateUnmuteTime();\n                    }\n                }\n            });\n        conference.on(\n            ConferenceEvents.TRACK_ADDED,\n            track => {\n                if (track.isVideoTrack() && !track.isMuted()) {\n                    this._maybeUpdateUnmuteTime();\n                }\n            });\n        conference.rtc.on(\n            RTCEvents.LOCAL_TRACK_MAX_ENABLED_RESOLUTION_CHANGED,\n            track => {\n                this._localStats.maxEnabledResolution = track.maxEnabledResolution;\n            });\n\n        conference.on(\n            ConferenceEvents.SERVER_REGION_CHANGED,\n            serverRegion => {\n                this._localStats.serverRegion = serverRegion;\n            });\n\n        conference.on(\n            ConferenceEvents.PROPERTIES_CHANGED,\n            properties => {\n                this._localStats.bridgeCount\n                    = Number((properties || {})['bridge-count']);\n            }\n        );\n    }\n\n    /**\n     * Sets _timeVideoUnmuted if it was previously unset. If it was already set,\n     * doesn't change it.\n     */\n    _maybeUpdateUnmuteTime() {\n        if (this._timeVideoUnmuted < 0) {\n            this._timeVideoUnmuted = window.performance.now();\n        }\n    }\n\n    /**\n     * Calculates a new \"connection quality\" value.\n     * @param videoType {VideoType} the type of the video source (camera or a screen capture).\n     * @param isMuted {boolean} whether the local video is muted.\n     * @param resolutionName {Resolution} the input resolution used by the camera.\n     * @returns {*} the newly calculated connection quality.\n     */\n    _calculateConnectionQuality(videoType, isMuted, resolutionName) {\n\n        // resolutionName is an index into Resolutions (where \"720\" is\n        // \"1280x720\" and \"960\" is \"960x720\" ...).\n        const resolution = Resolutions[resolutionName];\n\n        let quality = 100;\n        let packetLoss;\n\n        // TODO: take into account packet loss for received streams\n\n        if (this._localStats.packetLoss) {\n            packetLoss = this._localStats.packetLoss.upload;\n\n            // Ugly Hack Alert (UHA):\n            // The packet loss for the upload direction is calculated based on\n            // incoming RTCP Receiver Reports. Since we don't have RTCP\n            // termination for audio, these reports come from the actual\n            // receivers in the conference and therefore the reported packet\n            // loss includes loss from the bridge to the receiver.\n            // When we are sending video this effect is small, because the\n            // number of video packets is much larger than the number of audio\n            // packets (and our calculation is based on the total number of\n            // received and lost packets).\n            // When video is muted, however, the effect might be significant,\n            // but we don't know what it is. We do know that it is positive, so\n            // as a temporary solution, until RTCP termination is implemented\n            // for the audio streams, we relax the packet loss checks here.\n            if (isMuted) {\n                packetLoss *= 0.5;\n            }\n        }\n\n        if (isMuted || !resolution || videoType === VideoType.DESKTOP\n            || this._timeIceConnected < 0\n            || this._timeVideoUnmuted < 0) {\n\n            // Calculate a value based on packet loss only.\n            if (packetLoss === undefined) {\n                logger.error('Cannot calculate connection quality, unknown '\n                    + 'packet loss.');\n                quality = 100;\n            } else if (packetLoss <= 2) {\n                quality = 100; // Full 5 bars.\n            } else if (packetLoss <= 4) {\n                quality = 70; // 4 bars\n            } else if (packetLoss <= 6) {\n                quality = 50; // 3 bars\n            } else if (packetLoss <= 8) {\n                quality = 30; // 2 bars\n            } else if (packetLoss <= 12) {\n                quality = 10; // 1 bars\n            } else {\n                quality = 0; // Still 1 bar, but slower climb-up.\n            }\n        } else {\n            // Calculate a value based on the send video bitrate on the active TPC.\n            const activeTPC = this._conference.getActivePeerConnection();\n\n            if (activeTPC) {\n                const isSimulcastOn = activeTPC.isSimulcastOn();\n                const videoQualitySettings = activeTPC.getTargetVideoBitrates();\n\n                // Add the codec info as well.\n                videoQualitySettings.codec = activeTPC.getConfiguredVideoCodec();\n\n                // Time since sending of video was enabled.\n                const millisSinceStart = window.performance.now()\n                    - Math.max(this._timeVideoUnmuted, this._timeIceConnected);\n\n                // Expected sending bitrate in perfect conditions.\n                let target = getTarget(isSimulcastOn, resolution, millisSinceStart, videoQualitySettings);\n\n                target = Math.min(target, MAX_TARGET_BITRATE);\n                quality = 100 * this._localStats.bitrate.upload / target;\n            }\n\n            // Whatever the bitrate, drop early if there is significant loss\n            if (packetLoss && packetLoss >= 10) {\n                quality = Math.min(quality, 30);\n            }\n        }\n\n        // Make sure that the quality doesn't climb quickly\n        if (this._lastConnectionQualityUpdate > 0) {\n            const maxIncreasePerSecond = 2;\n            const prevConnectionQuality = this._localStats.connectionQuality;\n            const diffSeconds = (window.performance.now() - this._lastConnectionQualityUpdate) / 1000;\n\n            quality = Math.min(quality, prevConnectionQuality + (diffSeconds * maxIncreasePerSecond));\n        }\n\n        return Math.min(100, quality);\n    }\n\n    /**\n     * Updates the localConnectionQuality value\n     * @param values {number} the new value. Should be in [0, 100].\n     */\n    _updateLocalConnectionQuality(value) {\n        this._localStats.connectionQuality = value;\n        this._lastConnectionQualityUpdate = window.performance.now();\n    }\n\n    /**\n     * Broadcasts the local statistics to all other participants in the\n     * conference.\n     */\n    _broadcastLocalStats() {\n        // Send only the data that remote participants care about.\n        const data = {\n            bitrate: this._localStats.bitrate,\n            packetLoss: this._localStats.packetLoss,\n            connectionQuality: this._localStats.connectionQuality,\n            jvbRTT: this._localStats.jvbRTT,\n            serverRegion: this._localStats.serverRegion,\n            maxEnabledResolution: this._localStats.maxEnabledResolution,\n            avgAudioLevels: this._localStats.localAvgAudioLevels\n        };\n\n        try {\n            this._conference.sendEndpointStatsMessage(data);\n        } catch (err) {\n            // Ignore the error as we might hit it in the beginning of the call before the channel is ready.\n            // The statistics will be sent again after few seconds and error is logged elseware as well.\n        }\n    }\n\n    /**\n     * Updates the local statistics\n     * @param {TraceablePeerConnection} tpc the peerconnection which emitted\n     * the stats\n     * @param data new statistics\n     */\n    _updateLocalStats(tpc, data) {\n        // Update jvbRTT\n        if (!tpc.isP2P) {\n            const jvbRTT\n                = data.transport\n                    && data.transport.length && data.transport[0].rtt;\n\n            this._localStats.jvbRTT = jvbRTT ? jvbRTT : undefined;\n        }\n\n        // Do not continue with processing of other stats if they do not\n        // originate from the active peerconnection\n        if (tpc !== this._conference.getActivePeerConnection()) {\n            return;\n        }\n\n        let key;\n        const updateLocalConnectionQuality\n            = !this._conference.isConnectionInterrupted();\n        const localVideoTrack\n            = this._conference.getLocalVideoTrack();\n        const videoType\n            = localVideoTrack ? localVideoTrack.videoType : undefined;\n        const isMuted = localVideoTrack ? localVideoTrack.isMuted() : true;\n        const resolution = localVideoTrack\n            ? Math.min(localVideoTrack.resolution, localVideoTrack.maxEnabledResolution) : null;\n\n        if (!isMuted) {\n            this._maybeUpdateUnmuteTime();\n        }\n\n        // Copy the fields already in 'data'.\n        for (key in data) {\n            if (data.hasOwnProperty(key)) {\n                this._localStats[key] = data[key];\n            }\n        }\n\n        // And re-calculate the connectionQuality field.\n        if (updateLocalConnectionQuality) {\n            this._updateLocalConnectionQuality(\n                this._calculateConnectionQuality(\n                    videoType,\n                    isMuted,\n                    resolution));\n        }\n\n        this.eventEmitter.emit(\n            ConnectionQualityEvents.LOCAL_STATS_UPDATED,\n            this._localStats);\n        this._broadcastLocalStats();\n    }\n\n    /**\n     * Updates remote statistics\n     * @param id the id of the remote participant\n     * @param data the statistics received\n     */\n    _updateRemoteStats(id, data) {\n        // Use only the fields we need\n        this._remoteStats[id] = {\n            bitrate: data.bitrate,\n            packetLoss: data.packetLoss,\n            connectionQuality: data.connectionQuality,\n            jvbRTT: data.jvbRTT,\n            serverRegion: data.serverRegion,\n            maxEnabledResolution: data.maxEnabledResolution,\n            avgAudioLevels: data.avgAudioLevels\n        };\n\n        this.eventEmitter.emit(\n            ConnectionQualityEvents.REMOTE_STATS_UPDATED,\n            id,\n            this._remoteStats[id]);\n    }\n\n    /**\n     * Returns the local statistics.\n     * Exported only for use in jitsi-meet-torture.\n     */\n    getStats() {\n        return this._localStats;\n    }\n}\n","/* global __filename */\nimport { getLogger } from 'jitsi-meet-logger';\n\nimport * as JitsiConferenceErrors from '../../JitsiConferenceErrors';\nimport * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\n\nconst logger = getLogger(__filename);\n\n/**\n * This class deals with shenanigans around JVB media session's ICE failed status handling.\n *\n * If ICE restarts are NOT explicitly enabled by the {@code enableIceRestart} config option, then the conference will\n * delay emitting the {@JitsiConferenceErrors.ICE_FAILED} event by 15 seconds. If the network info module reports\n * the internet offline status then the time will start counting after the internet comes back online.\n *\n * If ICE restart are enabled, then a delayed ICE failed notification to Jicofo will be sent, only if the ICE connection\n * does not recover soon after or before the XMPP connection is restored (if it was ever broken). If ICE fails while\n * the XMPP connection is not broken then the notifications will be sent after 2 seconds delay.\n */\nexport default class IceFailedHandling {\n    /**\n     * Creates new {@code DelayedIceFailed} task.\n     * @param {JitsiConference} conference\n     */\n    constructor(conference) {\n        this._conference = conference;\n    }\n\n    /**\n     * After making sure there's no way for the ICE connection to recover this method either sends ICE failed\n     * notification to Jicofo or emits the ice failed conference event.\n     * @private\n     * @returns {void}\n     */\n    _actOnIceFailed() {\n        const { enableForcedReload, enableIceRestart } = this._conference.options.config;\n        const explicitlyDisabled = typeof enableIceRestart !== 'undefined' && !enableIceRestart;\n        const supportsRestartByTerminate = this._conference.room.supportsRestartByTerminate();\n        const useTerminateForRestart = supportsRestartByTerminate && !enableIceRestart;\n        const reloadClient = this._conference.restartInProgress && enableForcedReload;\n\n        logger.info('ICE failed,'\n            + ` enableForcedReload: ${enableForcedReload},`\n            + ` enableIceRestart: ${enableIceRestart},`\n            + ` restartInProgress: ${this._conference.restartInProgress},`\n            + ` supports restart by terminate: ${supportsRestartByTerminate}`);\n\n        if (explicitlyDisabled || (!enableIceRestart && !supportsRestartByTerminate) || reloadClient) {\n            logger.info('ICE failed, but ICE restarts are disabled');\n            this._conference.eventEmitter.emit(\n                JitsiConferenceEvents.CONFERENCE_FAILED,\n                JitsiConferenceErrors.ICE_FAILED);\n\n            return;\n        }\n\n        const jvbConnection = this._conference.jvbJingleSession;\n        const jvbConnIceState = jvbConnection && jvbConnection.getIceConnectionState();\n\n        if (!jvbConnection) {\n            logger.warn('Not sending ICE failed - no JVB connection');\n        } else if (jvbConnIceState === 'connected') {\n            logger.info('ICE connection restored - not sending ICE failed');\n        } else {\n            logger.info('Sending ICE failed - the connection did not recover, '\n                + `ICE state: ${jvbConnIceState}, `\n                + `use 'session-terminate': ${useTerminateForRestart}`);\n            if (useTerminateForRestart) {\n                this._conference.jvbJingleSession.terminate(\n                    () => {\n                        logger.info('session-terminate for ice restart - done');\n                    },\n                    error => {\n                        logger.error(`session-terminate for ice restart - error: ${error.message}`);\n                    }, {\n                        reason: 'connectivity-error',\n                        reasonDescription: 'ICE FAILED',\n                        requestRestart: true,\n                        sendSessionTerminate: true\n                    });\n            } else {\n                this._conference.jvbJingleSession.sendIceFailedNotification();\n            }\n        }\n    }\n\n    /**\n     * Starts the task.\n     */\n    start() {\n        //  Using xmpp.ping allows to handle both XMPP being disconnected and internet offline cases. The ping function\n        // uses sendIQ2 method which is resilient to XMPP connection disconnected state and will patiently wait until it\n        // gets reconnected.\n        //  This also handles the case about waiting for the internet to come back online, because ping\n        // will only succeed when the internet is online and then there's a chance for the ICE to recover from FAILED to\n        // CONNECTED which is the extra 2 second timeout after ping.\n        //  The 65 second timeout is given on purpose as there's no chance for XMPP to recover after 65 seconds of no\n        // communication with the server. Such resume attempt will result in unrecoverable conference failed event due\n        // to 'item-not-found' error returned by the server.\n        this._conference.xmpp.ping(65000).then(\n            () => {\n                if (!this._canceled) {\n                    this._iceFailedTimeout = window.setTimeout(() => {\n                        this._iceFailedTimeout = undefined;\n                        this._actOnIceFailed();\n                    }, 2000);\n                }\n            },\n            error => {\n                logger.error('PING error/timeout - not sending ICE failed', error);\n            });\n    }\n\n    /**\n     * Cancels the task.\n     */\n    cancel() {\n        this._canceled = true;\n        window.clearTimeout(this._iceFailedTimeout);\n    }\n}\n","import EventEmitter from 'events';\n\nimport * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\nimport * as JitsiTrackEvents from '../../JitsiTrackEvents';\nimport browser from '../browser';\n\nimport * as DetectionEvents from './DetectionEvents';\n\n// We wait a certain time interval for constant silence input from the current device to account for\n// potential abnormalities and for a better use experience i.e. don't generate event the instant\n// an audio track is added to the tcr.\n// Potential improvement - add this as a configurable parameter.\nconst SILENCE_PERIOD_MS = 4000;\n\n/**\n * Detect if there is no audio input on the current TraceAblePeerConnection selected track. The no audio\n * state must be constant for a configured amount of time in order for the event to be triggered.\n * @fires DetectionEvents.AUDIO_INPUT_STATE_CHANGE\n * @fires DetectionEvents.NO_AUDIO_INPUT\n */\nexport default class NoAudioSignalDetection extends EventEmitter {\n    /**\n     * Creates new NoAudioSignalDetection.\n     *\n     * @param conference the JitsiConference instance that created us.\n     * @constructor\n     */\n    constructor(conference) {\n        super();\n\n        this._conference = conference;\n        this._timeoutTrigger = null;\n        this._hasAudioInput = null;\n\n        if (!browser.supportsReceiverStats()) {\n            conference.statistics.addAudioLevelListener(this._audioLevel.bind(this));\n        }\n        conference.on(JitsiConferenceEvents.TRACK_ADDED, this._trackAdded.bind(this));\n    }\n\n    /**\n     * Clear the timeout state.\n     */\n    _clearTriggerTimeout() {\n        clearTimeout(this._timeoutTrigger);\n        this._timeoutTrigger = null;\n    }\n\n\n    /**\n     * Generated event triggered by a change in the current conference audio input state.\n     *\n     * @param {*} audioLevel - The audio level of the ssrc.\n     * @fires DetectionEvents.AUDIO_INPUT_STATE_CHANGE\n     */\n    _handleAudioInputStateChange(audioLevel) {\n        // Current audio input state of the active local track in the conference, true for audio input false for no\n        // audio input.\n        const status = audioLevel !== 0;\n\n        // If this is the first audio event picked up or the current status is different from the previous trigger\n        // the event.\n        if (this._hasAudioInput === null || this._hasAudioInput !== status) {\n            this._hasAudioInput = status;\n            this.emit(DetectionEvents.AUDIO_INPUT_STATE_CHANGE, this._hasAudioInput);\n        }\n    }\n\n    /**\n     * Generate event triggered by a prolonged period of no audio input.\n     *\n     * @param {number} audioLevel - The audio level of the ssrc.\n     * @fires DetectionEvents.NO_AUDIO_INPUT\n     */\n    _handleNoAudioInputDetection(audioLevel) {\n        if (this._eventFired) {\n            return;\n        }\n\n        if (audioLevel === 0 && !this._timeoutTrigger) {\n            this._timeoutTrigger = setTimeout(() => {\n                this._eventFired = true;\n\n                this.emit(DetectionEvents.NO_AUDIO_INPUT);\n            }, SILENCE_PERIOD_MS);\n        } else if (audioLevel !== 0 && this._timeoutTrigger) {\n            this._clearTriggerTimeout();\n        }\n    }\n\n    /**\n     * Receives audio level events for all send and receive streams on the current TraceablePeerConnection.\n     *\n     * @param {TraceablePeerConnection} tpc - TraceablePeerConnection of the owning conference.\n     * @param {number} ssrc - The synchronization source identifier (SSRC) of the endpoint/participant/stream\n     * being reported.\n     * @param {number} audioLevel - The audio level of the ssrc.\n     * @param {boolean} isLocal - true for local/send streams or false for remote/receive streams.\n     */\n    _audioLevel(tpc, ssrc, audioLevel, isLocal) {\n        // We are interested in the local audio streams\n        if (!isLocal || !this._audioTrack) {\n            return;\n        }\n\n        // Get currently active local tracks from the TraceablePeerConnection\n        const localSSRCs = tpc.localSSRCs.get(this._audioTrack.rtcId);\n\n        // Only target the current active track in the tpc. For some reason audio levels for previous\n        // devices are also picked up from the PeerConnection so we filter them out.\n        if (!localSSRCs || !localSSRCs.ssrcs.includes(ssrc)) {\n            return;\n        }\n\n        // First handle audio input state change. In case the state changed to no input the no audio input event\n        // can try to fire again.\n        this._handleAudioInputStateChange(audioLevel);\n        this._handleNoAudioInputDetection(audioLevel);\n    }\n\n    /**\n     * Notifies NoAudioSignalDetection that a JitsiTrack was added to the associated JitsiConference.\n     * Only take into account local audio tracks.\n     *\n     * @param {JitsiTrack} track - The added JitsiTrack.\n     */\n    _trackAdded(track) {\n        if (track.isLocalAudioTrack()) {\n            // Reset state for the new track.\n            this._audioTrack = track;\n            this._eventFired = false;\n            this._clearTriggerTimeout();\n\n            // Listen for the audio levels on the newly added audio track\n            if (browser.supportsReceiverStats()) {\n                track.on(\n                    JitsiTrackEvents.NO_AUDIO_INPUT,\n                    audioLevel => {\n                        this._handleNoAudioInputDetection(audioLevel);\n                    }\n                );\n                track.on(\n                    JitsiTrackEvents.TRACK_AUDIO_LEVEL_CHANGED,\n                    audioLevel => {\n                        this._handleNoAudioInputDetection(audioLevel);\n                        this._handleAudioInputStateChange(audioLevel);\n                    }\n                );\n            }\n        }\n    }\n}\n","import * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\nimport RTCEvents from '../../service/RTC/RTCEvents';\n\n/**\n * The value which we use to say, every sound over this threshold\n * is talking on the mic.\n * @type {number}\n */\nconst SPEECH_DETECT_THRESHOLD = 0.6;\n\n/**\n * The <tt>P2PDominantSpeakerDetection</tt> is activated only when p2p is\n * currently used.\n * Listens for changes in the audio level changes of the local p2p audio track\n * or remote p2p one and fires dominant speaker events to be able to use\n * features depending on those events (speaker stats), to make them work without\n * the video bridge.\n */\nexport default class P2PDominantSpeakerDetection {\n    /**\n     * Creates P2PDominantSpeakerDetection\n     * @param conference the JitsiConference instance that created us.\n     * @constructor\n     */\n    constructor(conference) {\n        this.conference = conference;\n\n        conference.addEventListener(\n            JitsiConferenceEvents.TRACK_AUDIO_LEVEL_CHANGED,\n            this._audioLevel.bind(this));\n\n        this.myUserID = this.conference.myUserId();\n    }\n\n    /**\n     * Receives audio level events for all streams in the conference.\n     *\n     * @param {String} id - The participant id\n     * @param {number} audioLevel - The audio level.\n     */\n    _audioLevel(id, audioLevel) {\n\n        // we do not process if p2p is not active\n        // or audio level is under certain threshold\n        // or if the audio level is for local audio track which is muted\n        if (!this.conference.isP2PActive()\n            || audioLevel <= SPEECH_DETECT_THRESHOLD\n            || (id === this.myUserID\n                    && this.conference.getLocalAudioTrack().isMuted())) {\n            return;\n        }\n\n        this.conference.rtc.eventEmitter.emit(\n            RTCEvents.DOMINANT_SPEAKER_CHANGED,\n            id);\n    }\n}\n","import { EventEmitter } from 'events';\n\nimport { calculateAverage, filterPositiveValues } from '../util/MathUtil';\n\nimport { VAD_NOISY_DEVICE, DETECTOR_STATE_CHANGE } from './DetectionEvents';\n\n/**\n * The average value VAD needs to be under over a period of time to be considered noise.\n * @type {number}\n */\nconst VAD_NOISE_AVG_THRESHOLD = 0.2;\n\n/**\n * The average values that audio input need to be over to be considered loud.\n * @type {number}\n */\nconst NOISY_AUDIO_LEVEL_THRESHOLD = 0.040;\n\n/**\n * The value that a VAD score needs to be under in order for processing to begin.\n * @type {number}\n */\nconst VAD_SCORE_TRIGGER = 0.2;\n\n/**\n * The value that a VAD score needs to be under in order for processing to begin.\n * @type {number}\n */\nconst AUDIO_LEVEL_SCORE_TRIGGER = 0.020;\n\n/**\n * Time span over which we calculate an average score used to determine if we trigger the event.\n * @type {number}\n */\nconst PROCESS_TIME_FRAME_SPAN_MS = 1500;\n\n/**\n * Detect if provided VAD score and PCM data is considered noise.\n */\nexport default class VADNoiseDetection extends EventEmitter {\n    /**\n     * Creates <tt>VADNoiseDetection</tt>\n     *\n     * @constructor\n     */\n    constructor() {\n        super();\n\n        /**\n         * Flag which denotes the current state of the detection service i.e.if there is already a processing operation\n         * ongoing.\n         */\n        this._processing = false;\n\n        /**\n         * Buffer that keeps the VAD scores for a period of time.\n         */\n        this._scoreArray = [];\n\n        /**\n         * Buffer that keeps audio level samples for a period of time.\n         */\n        this._audioLvlArray = [];\n\n        /**\n         * Current state of the service, if it's not active no processing will occur.\n         */\n        this._active = false;\n\n        this._calculateNoisyScore = this._calculateNoisyScore.bind(this);\n    }\n\n    /**\n     * Compute cumulative VAD score and PCM audio levels once the PROCESS_TIME_FRAME_SPAN_MS timeout has elapsed.\n     * If the score is above the set threshold fire the event.\n     * @returns {void}\n     * @fires VAD_NOISY_DEVICE\n     */\n    _calculateNoisyScore() {\n        const scoreAvg = calculateAverage(this._scoreArray);\n        const audioLevelAvg = calculateAverage(this._audioLvlArray);\n\n        if (scoreAvg < VAD_NOISE_AVG_THRESHOLD && audioLevelAvg > NOISY_AUDIO_LEVEL_THRESHOLD) {\n            this.emit(VAD_NOISY_DEVICE);\n\n            this._setActiveState(false);\n        }\n\n        // We reset the context in case a new process phase needs to be triggered.\n        this.reset();\n    }\n\n    /**\n     * Record the vad score and average volume in the appropriate buffers.\n     *\n     * @param {number} vadScore\n     * @param {number} avgAudioLvl - average audio level of the PCM sample associated with the VAD score.s\n     */\n    _recordValues(vadScore, avgAudioLvl) {\n        this._scoreArray.push(vadScore);\n        this._audioLvlArray.push(avgAudioLvl);\n    }\n\n    /**\n     * Set the active state of the detection service and notify any listeners.\n     *\n     * @param {boolean} active\n     * @fires DETECTOR_STATE_CHANGE\n     */\n    _setActiveState(active) {\n        this._active = active;\n        this.emit(DETECTOR_STATE_CHANGE, this._active);\n    }\n\n    /**\n     * Change the state according to the muted status of the tracked device.\n     *\n     * @param {boolean} isMuted - Is the device muted or not.\n     */\n    changeMuteState(isMuted) {\n        // This service only needs to run when the microphone is not muted.\n        this._setActiveState(!isMuted);\n        this.reset();\n    }\n\n    /**\n     * Check whether or not the service is active or not.\n     *\n     * @returns {boolean}\n     */\n    isActive() {\n        return this._active;\n    }\n\n    /**\n     * Reset the processing context, clear buffers, cancel the timeout trigger.\n     *\n     * @returns {void}\n     */\n    reset() {\n        this._processing = false;\n        this._scoreArray = [];\n        this._audioLvlArray = [];\n        clearTimeout(this._processTimeout);\n    }\n\n    /**\n     * Listens for {@link TrackVADEmitter} events and processes them.\n     *\n     * @param {Object} vadScore -VAD score emitted by {@link TrackVADEmitter}\n     * @param {Date}   vadScore.timestamp - Exact time at which processed PCM sample was generated.\n     * @param {number} vadScore.score - VAD score on a scale from 0 to 1 (i.e. 0.7)\n     * @param {Float32Array} vadScore.pcmData - Raw PCM Data associated with the VAD score.\n     * @param {string} vadScore.deviceId - Device id of the associated track.\n     * @listens VAD_SCORE_PUBLISHED\n     */\n    processVADScore(vadScore) {\n        if (!this._active) {\n            return;\n        }\n\n        // There is a processing phase on going, add score to buffer array.\n        if (this._processing) {\n            // Filter and calculate sample average so we don't have to process one large array at a time.\n            const posAudioLevels = filterPositiveValues(vadScore.pcmData);\n\n            this._recordValues(vadScore.score, calculateAverage(posAudioLevels));\n\n            return;\n        }\n\n        // If the VAD score for the sample is low and audio level has a high enough level we can start listening for\n        // noise\n        if (vadScore.score < VAD_SCORE_TRIGGER) {\n            const posAudioLevels = filterPositiveValues(vadScore.pcmData);\n            const avgAudioLvl = calculateAverage(posAudioLevels);\n\n            if (avgAudioLvl > AUDIO_LEVEL_SCORE_TRIGGER) {\n                this._processing = true;\n                this._recordValues(vadScore.score, avgAudioLvl);\n\n                // Once the preset timeout executes the final score will be calculated.\n                this._processTimeout = setTimeout(this._calculateNoisyScore, PROCESS_TIME_FRAME_SPAN_MS);\n            }\n        }\n    }\n}\n","import { EventEmitter } from 'events';\n\nimport { calculateAverage } from '../util/MathUtil';\n\nimport { VAD_TALK_WHILE_MUTED, DETECTOR_STATE_CHANGE } from './DetectionEvents';\n\n\n/**\n * The threshold which the average VAD values for a span of time needs to exceed to trigger an event.\n * @type {number}\n */\nconst VAD_AVG_THRESHOLD = 0.6;\n\n/**\n * The VAD score needed to trigger the processing algorithm, i.e. if a sample has the VAD score >= VAD_VOICE_LEVEL\n * we start processing all scores for a time span defined by const PROCESS_TIME_FRAME_SPAN_MS.\n * @type {number}\n */\nconst VAD_VOICE_LEVEL = 0.9;\n\n/**\n * Sample rate of TrackVADEmitter, it defines how many audio samples are processed at a time.\n * @type {number}\n */\n\n/**\n * Time span over which we calculate an average score used to determine if we trigger the event.\n * @type {number}\n */\nconst PROCESS_TIME_FRAME_SPAN_MS = 700;\n\n/**\n * Detect if provided VAD score which is generated on a muted device is voice and fires an event.\n */\nexport default class VADTalkMutedDetection extends EventEmitter {\n    /**\n     * Creates <tt>VADTalkMutedDetection</tt>\n     * @constructor\n     */\n    constructor() {\n        super();\n\n        /**\n         * Flag which denotes the current state of the detection service i.e.if there is already a processing operation\n         * ongoing.\n         */\n        this._processing = false;\n\n        /**\n         * Buffer that keeps the VAD scores for a period of time.\n         */\n        this._scoreArray = [];\n\n        /**\n         * Current mute state of the audio track being monitored.\n         */\n        this._active = false;\n\n        this._calculateVADScore = this._calculateVADScore.bind(this);\n    }\n\n    /**\n     * Compute cumulative VAD score function called once the PROCESS_TIME_FRAME_SPAN_MS timeout has elapsed.\n     * @returns {void}\n     * @fires VAD_TALK_WHILE_MUTED\n     */\n    _calculateVADScore() {\n        const score = calculateAverage(this._scoreArray);\n\n        if (score > VAD_AVG_THRESHOLD) {\n            this.emit(VAD_TALK_WHILE_MUTED);\n\n            // Event was fired. Stop event emitter and remove listeners so no residue events kick off after this point\n            // and a single VAD_TALK_WHILE_MUTED is generated per mic muted state.\n            this._setActiveState(false);\n        }\n\n        // We reset the context in case a new process phase needs to be triggered.\n        this.reset();\n    }\n\n    /**\n     * Set the active state of the detection service and notify any listeners.\n     *\n     * @param {boolean} active\n     * @fires DETECTOR_STATE_CHANGE\n     */\n    _setActiveState(active) {\n        this._active = active;\n        this.emit(DETECTOR_STATE_CHANGE, this._active);\n    }\n\n    /**\n     * Change the state according to the muted status of the tracked device.\n     *\n     * @param {boolean} isMuted - Is the device muted or not.\n     */\n    changeMuteState(isMuted) {\n        // This service only needs to run when the microphone is muted.\n        this._setActiveState(isMuted);\n        this.reset();\n    }\n\n    /**\n     * Check whether or not the service is active or not.\n     *\n     * @returns {boolean}\n     */\n    isActive() {\n        return this._active;\n    }\n\n    /**\n     * Listens for {@link TrackVADEmitter} events and processes them.\n     *\n     * @param {Object} vadScore -VAD score emitted by {@link TrackVADEmitter}\n     * @param {Date}   vadScore.timestamp - Exact time at which processed PCM sample was generated.\n     * @param {number} vadScore.score - VAD score on a scale from 0 to 1 (i.e. 0.7)\n     * @param {string} vadScore.deviceId - Device id of the associated track.\n     * @listens VAD_SCORE_PUBLISHED\n     */\n    processVADScore(vadScore) {\n        if (!this._active) {\n            return;\n        }\n\n        // There is a processing phase on going, add score to buffer array.\n        if (this._processing) {\n            this._scoreArray.push(vadScore.score);\n\n            return;\n        }\n\n        // Because we remove all listeners on the vadEmitter once the main event is triggered,\n        // there is no need to check for rogue events.\n        if (vadScore.score > VAD_VOICE_LEVEL) {\n            this._processing = true;\n            this._scoreArray.push(vadScore.score);\n\n            // Start gathering VAD scores for the configured period of time.\n            this._processTimeout = setTimeout(this._calculateVADScore, PROCESS_TIME_FRAME_SPAN_MS);\n        }\n    }\n\n    /**\n     * Reset the processing context, clear buffer, cancel the timeout trigger.\n     *\n     * @returns {void}\n     */\n    reset() {\n        this._processing = false;\n        this._scoreArray = [];\n        clearTimeout(this._processTimeout);\n    }\n}\n","/* global __filename */\nimport { getLogger } from 'jitsi-meet-logger';\n\nimport * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\nimport * as E2ePingEvents\n    from '../../service/e2eping/E2ePingEvents';\nimport { createE2eRttEvent } from '../../service/statistics/AnalyticsEvents';\nimport Statistics from '../statistics/statistics';\n\nconst logger = getLogger(__filename);\n\n/**\n * The 'type' of a message which designates an e2e ping request.\n * @type {string}\n */\nconst E2E_PING_REQUEST = 'e2e-ping-request';\n\n/**\n * The 'type' of a message which designates an e2e ping response.\n * @type {string}\n */\nconst E2E_PING_RESPONSE = 'e2e-ping-response';\n\n/**\n * Saves e2e ping related state for a single JitsiParticipant.\n */\nclass ParticipantWrapper {\n    /**\n     * Creates a ParticipantWrapper\n     * @param {JitsiParticipant} participant - The remote participant that this\n     * object wraps.\n     * @param {E2ePing} e2eping\n     */\n    constructor(participant, e2eping) {\n        // The JitsiParticipant\n        this.participant = participant;\n\n        // The E2ePing\n        this.e2eping = e2eping;\n\n        // Caches the ID\n        this.id = participant.getId();\n\n        // Recently sent requests\n        this.requests = {};\n\n        // The ID of the last sent request. We just increment it for each new\n        // request. Start at 1 so we can consider only thruthy values valid.\n        this.lastRequestId = 1;\n\n        this.clearIntervals = this.clearIntervals.bind(this);\n        this.sendRequest = this.sendRequest.bind(this);\n        this.handleResponse = this.handleResponse.bind(this);\n        this.maybeSendAnalytics = this.maybeSendAnalytics.bind(this);\n        this.sendAnalytics = this.sendAnalytics.bind(this);\n\n        // If the data channel was already open (this is likely a participant\n        // joining an existing conference) send a request immediately.\n        if (e2eping.isDataChannelOpen) {\n            this.sendRequest();\n        }\n\n        this.pingInterval = window.setInterval(\n            this.sendRequest, e2eping.pingIntervalMs);\n        this.analyticsInterval = window.setTimeout(\n            this.maybeSendAnalytics, this.e2eping.analyticsIntervalMs);\n    }\n\n    /**\n     * Clears the interval which sends pings.\n     * @type {*}\n     */\n    clearIntervals() {\n        if (this.pingInterval) {\n            window.clearInterval(this.pingInterval);\n        }\n        if (this.analyticsInterval) {\n            window.clearInterval(this.analyticsInterval);\n        }\n    }\n\n    /**\n     * Sends the next ping request.\n     * @type {*}\n     */\n    sendRequest() {\n        const requestId = this.lastRequestId++;\n        const requestMessage = {\n            type: E2E_PING_REQUEST,\n            id: requestId\n        };\n\n        this.e2eping.sendMessage(requestMessage, this.id);\n        this.requests[requestId] = {\n            id: requestId,\n            timeSent: window.performance.now()\n        };\n    }\n\n    /**\n     * Handles a response from this participant.\n     * @type {*}\n     */\n    handleResponse(response) {\n        const request = this.requests[response.id];\n\n        if (request) {\n            request.rtt = window.performance.now() - request.timeSent;\n            this.e2eping.eventEmitter.emit(\n                E2ePingEvents.E2E_RTT_CHANGED,\n                this.participant,\n                request.rtt);\n        }\n\n        this.maybeSendAnalytics();\n    }\n\n    /**\n     * Goes over the requests, clearing ones which we don't need anymore, and\n     * if it finds at least one request with a valid RTT in the last\n     * 'analyticsIntervalMs' then sends an analytics event.\n     * @type {*}\n     */\n    maybeSendAnalytics() {\n        const now = window.performance.now();\n\n        // The RTT we'll report is the minimum RTT measured in the last\n        // analyticsInterval\n        let rtt = Infinity;\n        let request, requestId;\n\n        // It's time to send analytics. Clean up all requests and find the\n        for (requestId in this.requests) {\n            if (this.requests.hasOwnProperty(requestId)) {\n                request = this.requests[requestId];\n\n                if (request.timeSent < now - this.e2eping.analyticsIntervalMs) {\n                    // An old request. We don't care about it anymore.\n                    delete this.requests[requestId];\n                } else if (request.rtt) {\n                    rtt = Math.min(rtt, request.rtt);\n                }\n            }\n        }\n\n        if (rtt < Infinity) {\n            this.sendAnalytics(rtt);\n        }\n    }\n\n    /**\n     * Sends an analytics event for this participant with the given RTT.\n     * @type {*}\n     */\n    sendAnalytics(rtt) {\n        Statistics.sendAnalytics(createE2eRttEvent(\n            this.id,\n            this.participant.getProperty('region'),\n            rtt));\n    }\n}\n\n/**\n * Implements end-to-end ping (from one conference participant to another) via\n * the jitsi-videobridge channel (either WebRTC data channel or web socket).\n *\n * TODO: use a broadcast message instead of individual pings to each remote\n * participant.\n *\n * This class:\n * 1. Sends periodic ping requests to all other participants in the\n * conference.\n * 2. Responds to ping requests from other participants.\n * 3. Fires events with the end-to-end RTT to each participant whenever a\n * response is received.\n * 4. Fires analytics events with the end-to-end RTT periodically.\n */\nexport default class E2ePing {\n    /**\n     * @param {JitsiConference} conference - The conference.\n     * @param {Function} sendMessage - The function to use to send a message.\n     * @param {Object} options\n     */\n    constructor(conference, options, sendMessage) {\n        this.conference = conference;\n        this.eventEmitter = conference.eventEmitter;\n        this.sendMessage = sendMessage;\n\n        // The interval at which pings will be sent (<= 0 disables sending).\n        this.pingIntervalMs = 10000;\n\n        // The interval at which analytics events will be sent.\n        this.analyticsIntervalMs = 60000;\n\n        // Maps a participant ID to its ParticipantWrapper\n        this.participants = {};\n\n        // Whether the WebRTC channel has been opened or not.\n        this.isDataChannelOpen = false;\n\n        if (options && options.e2eping) {\n            if (typeof options.e2eping.pingInterval === 'number') {\n                this.pingIntervalMs = options.e2eping.pingInterval;\n            }\n            if (typeof options.e2eping.analyticsInterval === 'number') {\n                this.analyticsIntervalMs = options.e2eping.analyticsInterval;\n            }\n\n            // We want to report at most once a ping interval.\n            if (this.analyticsIntervalMs > 0 && this.analyticsIntervalMs\n                < this.pingIntervalMs) {\n                this.analyticsIntervalMs = this.pingIntervalMs;\n            }\n        }\n        logger.info(\n            `Initializing e2e ping; pingInterval=${\n                this.pingIntervalMs}, analyticsInterval=${\n                this.analyticsIntervalMs}.`);\n\n        this.participantJoined = this.participantJoined.bind(this);\n        conference.on(\n            JitsiConferenceEvents.USER_JOINED,\n            this.participantJoined);\n\n        this.participantLeft = this.participantLeft.bind(this);\n        conference.on(\n            JitsiConferenceEvents.USER_LEFT,\n            this.participantLeft);\n\n        this.messageReceived = this.messageReceived.bind(this);\n        conference.on(\n            JitsiConferenceEvents.ENDPOINT_MESSAGE_RECEIVED,\n            this.messageReceived);\n\n        this.dataChannelOpened = this.dataChannelOpened.bind(this);\n        conference.on(\n            JitsiConferenceEvents.DATA_CHANNEL_OPENED,\n            this.dataChannelOpened);\n    }\n\n    /**\n     * Notifies this instance that the communications channel has been opened\n     * and it can now send messages via sendMessage.\n     */\n    dataChannelOpened() {\n        this.isDataChannelOpen = true;\n\n        // We don't want to wait the whole interval before sending the first\n        // request, but we can't send it immediately after the participant joins\n        // either, because our data channel might not have initialized.\n        // So once the data channel initializes, send requests to everyone.\n        // Wait an additional 200ms to give a chance to the remote side (if it\n        // also just connected as is the case for the first 2 participants in a\n        // conference) to open its data channel.\n        for (const id in this.participants) {\n            if (this.participants.hasOwnProperty(id)) {\n                const participantWrapper = this.participants[id];\n\n                window.setTimeout(participantWrapper.sendRequest, 200);\n            }\n        }\n    }\n\n    /**\n     * Handles a message that was received.\n     *\n     * @param participant - The message sender.\n     * @param payload - The payload of the message.\n     */\n    messageReceived(participant, payload) {\n        // Listen to E2E PING requests and responses from other participants\n        // in the conference.\n        if (payload.type === E2E_PING_REQUEST) {\n            this.handleRequest(participant.getId(), payload);\n        } else if (payload.type === E2E_PING_RESPONSE) {\n            this.handleResponse(participant.getId(), payload);\n        }\n    }\n\n    /**\n     * Handles a participant joining the conference. Starts to send ping\n     * requests to the participant.\n     *\n     * @param {String} id - The ID of the participant.\n     * @param {JitsiParticipant} participant - The participant that joined.\n     */\n    participantJoined(id, participant) {\n        if (this.pingIntervalMs <= 0) {\n            return;\n        }\n\n        if (this.participants[id]) {\n            logger.info(\n                `Participant wrapper already exists for ${id}. Clearing.`);\n            this.participants[id].clearIntervals();\n            delete this.participants[id];\n        }\n\n        this.participants[id] = new ParticipantWrapper(participant, this);\n    }\n\n    /**\n     * Handles a participant leaving the conference. Stops sending requests.\n     *\n     * @param {String} id - The ID of the participant.\n     */\n    participantLeft(id) {\n        if (this.pingIntervalMs <= 0) {\n            return;\n        }\n\n        if (this.participants[id]) {\n            this.participants[id].clearIntervals();\n            delete this.participants[id];\n        }\n    }\n\n    /**\n     * Handles a ping request coming from another participant.\n     *\n     * @param {string} participantId - The ID of the participant who sent the\n     * request.\n     * @param {Object} request - The request.\n     */\n    handleRequest(participantId, request) {\n        // If it's a valid request, just send a response.\n        if (request && request.id) {\n            const response = {\n                type: E2E_PING_RESPONSE,\n                id: request.id\n            };\n\n            this.sendMessage(response, participantId);\n        } else {\n            logger.info(\n                `Received an invalid e2e ping request from ${participantId}.`);\n        }\n    }\n\n    /**\n     * Handles a ping response coming from another participant\n     * @param {string} participantId - The ID of the participant who sent the\n     * response.\n     * @param {Object} response - The response.\n     */\n    handleResponse(participantId, response) {\n        const participantWrapper = this.participants[participantId];\n\n        if (participantWrapper) {\n            participantWrapper.handleResponse(response);\n        }\n    }\n\n    /**\n     * Stops this E2ePing (i.e. stop sending requests).\n     */\n    stop() {\n        logger.info('Stopping e2eping');\n\n        this.conference.off(\n            JitsiConferenceEvents.USER_JOINED,\n            this.participantJoined);\n        this.conference.off(\n            JitsiConferenceEvents.USER_LEFT,\n            this.participantLeft);\n        this.conference.off(\n            JitsiConferenceEvents.ENDPOINT_MESSAGE_RECEIVED,\n            this.messageReceived);\n        this.conference.off(\n            JitsiConferenceEvents.DATA_CHANNEL_OPENED,\n            this.dataChannelOpened);\n\n        for (const id in this.participants) {\n            if (this.participants.hasOwnProperty(id)) {\n                this.participants[id].clearIntervals();\n            }\n        }\n\n        this.participants = {};\n    }\n}\n\n","/* global __filename */\n\nimport { getLogger } from 'jitsi-meet-logger';\n\nimport * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\n\nconst logger = getLogger(__filename);\n\n/**\n * Emits {@link JitsiConferenceEvents.JVB121_STATUS} events based on the current\n * P2P status and the conference participants count. See the event description\n * for more info.\n */\nexport default class Jvb121EventGenerator {\n    /**\n     * Creates new <tt>Jvb121EventGenerator</tt> for the given conference.\n     * @param {JitsiConference} conference\n     */\n    constructor(conference) {\n        this._conference = conference;\n\n        /**\n         * Indicates whether it's a one to one JVB conference (<tt>true</tt>)\n         * or a multiparty (<tt>false</tt>). Will be also <tt>false</tt> if\n         * the conference is currently in the P2P mode.\n         * @type {boolean}\n         * @private\n         */\n        this._jvb121 = true;\n\n        this._conference.addEventListener(\n            JitsiConferenceEvents.USER_JOINED, () => this.evaluateStatus());\n        this._conference.addEventListener(\n            JitsiConferenceEvents.USER_LEFT, () => this.evaluateStatus());\n        this._conference.addEventListener(\n            JitsiConferenceEvents.P2P_STATUS, () => this.evaluateStatus());\n    }\n\n    /**\n     * Checks whether the JVB121 value should be updated and a new event\n     * emitted.\n     */\n    evaluateStatus() {\n        const oldStatus = this._jvb121;\n        const newStatus\n            = !this._conference.isP2PActive()\n                && this._conference.getParticipantCount() <= 2;\n\n        if (oldStatus !== newStatus) {\n            this._jvb121 = newStatus;\n            logger.debug(`JVB121 status ${oldStatus} => ${newStatus}`);\n            this._conference.eventEmitter.emit(\n                JitsiConferenceEvents.JVB121_STATUS, oldStatus, newStatus);\n        }\n    }\n}\n","import { getLogger } from 'jitsi-meet-logger';\nimport isEqual from 'lodash.isequal';\n\nimport * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\n\nconst logger = getLogger(__filename);\nconst MAX_HEIGHT_ONSTAGE = 2160;\nconst MAX_HEIGHT_THUMBNAIL = 180;\nconst LASTN_UNLIMITED = -1;\n\n/**\n * This class translates the legacy signaling format between the client and the bridge (that affects bandwidth\n * allocation) to the new format described here https://github.com/jitsi/jitsi-videobridge/blob/master/doc/allocation.md\n */\nexport class ReceiverVideoConstraints {\n    /**\n     * Creates a new instance.\n     */\n    constructor() {\n        // Default constraints used for endpoints that are not explicitly included in constraints.\n        // These constraints are used for endpoints that are thumbnails in the stage view.\n        this._defaultConstraints = { 'maxHeight': MAX_HEIGHT_THUMBNAIL };\n\n        // The number of videos requested from the bridge.\n        this._lastN = LASTN_UNLIMITED;\n\n        // The number representing the maximum video height the local client should receive from the bridge.\n        this._maxFrameHeight = MAX_HEIGHT_ONSTAGE;\n\n        // The endpoint IDs of the participants that are currently selected.\n        this._selectedEndpoints = [];\n\n        this._receiverVideoConstraints = {\n            constraints: {},\n            defaultConstraints: this.defaultConstraints,\n            lastN: this._lastN,\n            onStageEndpoints: [],\n            selectedEndpoints: this._selectedEndpoints\n        };\n    }\n\n    /**\n     * Returns the receiver video constraints that need to be sent on the bridge channel.\n     */\n    get constraints() {\n        this._receiverVideoConstraints.lastN = this._lastN;\n\n        if (!this._selectedEndpoints.length) {\n            return this._receiverVideoConstraints;\n        }\n\n        // The client is assumed to be in TileView if it has selected more than one endpoint, otherwise it is\n        // assumed to be in StageView.\n        this._receiverVideoConstraints.constraints = {};\n        if (this._selectedEndpoints.length > 1) {\n            /**\n             * Tile view.\n             * Only the default constraints are specified here along with lastN (if it is set).\n             * {\n             *  'colibriClass': 'ReceiverVideoConstraints',\n             *  'defaultConstraints': { 'maxHeight': 360 }\n             * }\n             */\n            this._receiverVideoConstraints.defaultConstraints = { 'maxHeight': this._maxFrameHeight };\n            this._receiverVideoConstraints.onStageEndpoints = [];\n            this._receiverVideoConstraints.selectedEndpoints = [];\n        } else {\n            /**\n             * Stage view.\n             * The participant on stage is specified in onStageEndpoints and a higher maxHeight is specified\n             * for that endpoint while a default maxHeight of 180 is applied to all the other endpoints.\n             * {\n             *  'colibriClass': 'ReceiverVideoConstraints',\n             *  'onStageEndpoints': ['A'],\n             *  'defaultConstraints': { 'maxHeight':  180 },\n             *  'constraints': {\n             *      'A': { 'maxHeight': 720 }\n             *   }\n             * }\n             */\n            this._receiverVideoConstraints.constraints[this._selectedEndpoints[0]] = {\n                'maxHeight': this._maxFrameHeight\n            };\n            this._receiverVideoConstraints.defaultConstraints = this._defaultConstraints;\n            this._receiverVideoConstraints.onStageEndpoints = this._selectedEndpoints;\n            this._receiverVideoConstraints.selectedEndpoints = [];\n        }\n\n        return this._receiverVideoConstraints;\n    }\n\n    /**\n     * Updates the lastN field of the ReceiverVideoConstraints sent to the bridge.\n     *\n     * @param {number} value\n     * @returns {boolean} Returns true if the the value has been updated, false otherwise.\n     */\n    updateLastN(value) {\n        const changed = this._lastN !== value;\n\n        if (changed) {\n            this._lastN = value;\n            logger.debug(`Updating ReceiverVideoConstraints lastN(${value})`);\n        }\n\n        return changed;\n    }\n\n    /**\n     * Updates the resolution (height requested) in the contraints field of the ReceiverVideoConstraints\n     * sent to the bridge.\n     *\n     * @param {number} maxFrameHeight\n     * @requires {boolean} Returns true if the the value has been updated, false otherwise.\n     */\n    updateReceiveResolution(maxFrameHeight) {\n        const changed = this._maxFrameHeight !== maxFrameHeight;\n\n        if (changed) {\n            this._maxFrameHeight = maxFrameHeight;\n            logger.debug(`Updating receive maxFrameHeight: ${maxFrameHeight}`);\n        }\n\n        return changed;\n    }\n\n    /**\n     * Updates the receiver constraints sent to the bridge.\n     *\n     * @param {Object} videoConstraints\n     * @returns {boolean} Returns true if the the value has been updated, false otherwise.\n     */\n    updateReceiverVideoConstraints(videoConstraints) {\n        const changed = !isEqual(this._receiverVideoConstraints, videoConstraints);\n\n        if (changed) {\n            this._receiverVideoConstraints = videoConstraints;\n            logger.debug(`Updating ReceiverVideoConstraints ${JSON.stringify(videoConstraints)}`);\n        }\n\n        return changed;\n    }\n\n    /**\n     * Updates the list of selected endpoints.\n     *\n     * @param {Array<string>} ids\n     * @returns {void}\n     */\n    updateSelectedEndpoints(ids) {\n        logger.debug(`Updating selected endpoints: ${JSON.stringify(ids)}`);\n        this._selectedEndpoints = ids;\n    }\n}\n\n/**\n * This class manages the receive video contraints for a given {@link JitsiConference}. These constraints are\n * determined by the application based on how the remote video streams need to be displayed. This class is responsible\n * for communicating these constraints to the bridge over the bridge channel.\n */\nexport class ReceiveVideoController {\n    /**\n     * Creates a new instance for a given conference.\n     *\n     * @param {JitsiConference} conference the conference instance for which the new instance will be managing\n     * the receive video quality constraints.\n     * @param {RTC} rtc the rtc instance which is responsible for initializing the bridge channel.\n     */\n    constructor(conference, rtc) {\n        this._conference = conference;\n        this._rtc = rtc;\n\n        const { config } = conference.options;\n\n        // The number of videos requested from the bridge, -1 represents unlimited or all available videos.\n        this._lastN = config?.startLastN ?? (config?.channelLastN || LASTN_UNLIMITED);\n\n        // The number representing the maximum video height the local client should receive from the bridge.\n        this._maxFrameHeight = MAX_HEIGHT_ONSTAGE;\n\n        // Enable new receiver constraints by default unless it is explicitly disabled through config.js.\n        const useNewReceiverConstraints = config?.useNewBandwidthAllocationStrategy ?? true;\n\n        if (useNewReceiverConstraints) {\n            this._receiverVideoConstraints = new ReceiverVideoConstraints();\n            const lastNUpdated = this._receiverVideoConstraints.updateLastN(this._lastN);\n\n            lastNUpdated && this._rtc.setNewReceiverVideoConstraints(this._receiverVideoConstraints.constraints);\n        } else {\n            this._rtc.setLastN(this._lastN);\n        }\n\n        // The endpoint IDs of the participants that are currently selected.\n        this._selectedEndpoints = [];\n\n        this._conference.on(\n            JitsiConferenceEvents._MEDIA_SESSION_STARTED,\n            session => this._onMediaSessionStarted(session));\n    }\n\n    /**\n     * Handles the {@link JitsiConferenceEvents.MEDIA_SESSION_STARTED}, that is when the conference creates new media\n     * session. The preferred receive frameHeight is applied on the media session.\n     *\n     * @param {JingleSessionPC} mediaSession - the started media session.\n     * @returns {void}\n     * @private\n     */\n    _onMediaSessionStarted(mediaSession) {\n        if (mediaSession.isP2P || !this._receiverVideoConstraints) {\n            mediaSession.setReceiverVideoConstraint(this._maxFrameHeight);\n        } else {\n            this._receiverVideoConstraints.updateReceiveResolution(this._maxFrameHeight);\n            this._rtc.setNewReceiverVideoConstraints(this._receiverVideoConstraints.constraints);\n        }\n    }\n\n    /**\n     * Returns the lastN value for the conference.\n     *\n     * @returns {number}\n     */\n    getLastN() {\n        return this._lastN;\n    }\n\n    /**\n     * Elects the participants with the given ids to be the selected participants in order to always receive video\n     * for this participant (even when last n is enabled).\n     *\n     * @param {Array<string>} ids - The user ids.\n     * @returns {void}\n     */\n    selectEndpoints(ids) {\n        this._selectedEndpoints = ids;\n\n        if (this._receiverVideoConstraints) {\n            // Filter out the local endpointId from the list of selected endpoints.\n            const remoteEndpointIds = ids.filter(id => id !== this._conference.myUserId());\n            const oldConstraints = JSON.parse(JSON.stringify(this._receiverVideoConstraints.constraints));\n\n            remoteEndpointIds.length && this._receiverVideoConstraints.updateSelectedEndpoints(remoteEndpointIds);\n            const newConstraints = this._receiverVideoConstraints.constraints;\n\n            // Send bridge message only when the constraints change.\n            if (!isEqual(newConstraints, oldConstraints)) {\n                this._rtc.setNewReceiverVideoConstraints(newConstraints);\n            }\n\n            return;\n        }\n        this._rtc.selectEndpoints(ids);\n    }\n\n    /**\n     * Selects a new value for \"lastN\". The requested amount of videos are going to be delivered after the value is\n     * in effect. Set to -1 for unlimited or all available videos.\n     *\n     * @param {number} value the new value for lastN.\n     * @returns {void}\n     */\n    setLastN(value) {\n        if (this._lastN !== value) {\n            this._lastN = value;\n\n            if (this._receiverVideoConstraints) {\n                const lastNUpdated = this._receiverVideoConstraints.updateLastN(value);\n\n                // Send out the message on the bridge channel if lastN was updated.\n                lastNUpdated && this._rtc.setNewReceiverVideoConstraints(this._receiverVideoConstraints.constraints);\n\n                return;\n            }\n            this._rtc.setLastN(value);\n        }\n    }\n\n    /**\n     * Sets the maximum video resolution the local participant should receive from remote participants.\n     *\n     * @param {number|undefined} maxFrameHeight - the new value.\n     * @returns {void}\n     */\n    setPreferredReceiveMaxFrameHeight(maxFrameHeight) {\n        this._maxFrameHeight = maxFrameHeight;\n\n        for (const session of this._conference._getMediaSessions()) {\n            if (session.isP2P || !this._receiverVideoConstraints) {\n                maxFrameHeight && session.setReceiverVideoConstraint(maxFrameHeight);\n            } else {\n                const resolutionUpdated = this._receiverVideoConstraints.updateReceiveResolution(maxFrameHeight);\n\n                resolutionUpdated\n                    && this._rtc.setNewReceiverVideoConstraints(this._receiverVideoConstraints.constraints);\n            }\n        }\n    }\n\n    /**\n     * Sets the receiver constraints for the conference.\n     *\n     * @param {Object} constraints The video constraints.\n     */\n    setReceiverConstraints(constraints) {\n        if (!this._receiverVideoConstraints) {\n            this._receiverVideoConstraints = new ReceiverVideoConstraints();\n        }\n\n        const constraintsChanged = this._receiverVideoConstraints.updateReceiverVideoConstraints(constraints);\n\n        if (constraintsChanged) {\n            this._lastN = constraints.lastN ?? this._lastN;\n            this._selectedEndpoints = constraints.selectedEndpoints ?? this._selectedEndpoints;\n            this._rtc.setNewReceiverVideoConstraints(constraints);\n\n            const p2pSession = this._conference._getMediaSessions().find(session => session.isP2P);\n\n            if (p2pSession) {\n                let maxFrameHeight = Object.values(constraints.constraints)[0]?.maxHeight;\n\n                if (!maxFrameHeight) {\n                    maxFrameHeight = constraints.defaultConstraints?.maxHeight;\n                }\n                maxFrameHeight && p2pSession.setReceiverVideoConstraint(maxFrameHeight);\n            }\n        }\n    }\n}\n","import * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\nimport RTCEvents from '../../service/RTC/RTCEvents';\nimport MediaSessionEvents from '../xmpp/MediaSessionEvents';\n\n/**\n * The class manages send video constraints across media sessions({@link JingleSessionPC}) which belong to\n * {@link JitsiConference}. It finds the lowest common value, between the local user's send preference and\n * the remote party's receive preference. Also this module will consider only the active session's receive value,\n * because local tracks are shared and while JVB may have no preference, the remote p2p may have and they may be totally\n * different.\n */\nexport class SendVideoController {\n    /**\n     * Creates new instance for a given conference.\n     *\n     * @param {JitsiConference} conference - the conference instance for which the new instance will be managing\n     * the send video quality constraints.\n     * @param {RTC} rtc - the rtc instance that is responsible for sending the messages on the bridge channel.\n     */\n    constructor(conference, rtc) {\n        this.conference = conference;\n        this.layerSuspensionEnabled = conference.options?.config?.enableLayerSuspension;\n        this.rtc = rtc;\n        this.conference.on(\n            JitsiConferenceEvents._MEDIA_SESSION_STARTED,\n            session => this._onMediaSessionStarted(session));\n        this.conference.on(\n            JitsiConferenceEvents._MEDIA_SESSION_ACTIVE_CHANGED,\n            () => this._propagateSendMaxFrameHeight());\n        this.rtc.on(\n            RTCEvents.SENDER_VIDEO_CONSTRAINTS_CHANGED,\n            videoConstraints => {\n                // Propagate the sender constraint only if it has changed.\n                if (this._senderVideoConstraints?.idealHeight !== videoConstraints.idealHeight) {\n                    this._senderVideoConstraints = videoConstraints;\n                    this._propagateSendMaxFrameHeight();\n                }\n            });\n    }\n\n    /**\n     * Handles the {@link JitsiConferenceEvents.MEDIA_SESSION_STARTED}, that is when the conference creates new media\n     * session. It doesn't mean it's already active though. For example the JVB connection may be created after\n     * the conference has entered the p2p mode already.\n     *\n     * @param {JingleSessionPC} mediaSession - the started media session.\n     * @private\n     */\n    _onMediaSessionStarted(mediaSession) {\n        mediaSession.addListener(\n            MediaSessionEvents.REMOTE_VIDEO_CONSTRAINTS_CHANGED,\n            session => {\n                if (session === this.conference._getActiveMediaSession()) {\n                    this._propagateSendMaxFrameHeight();\n                }\n            });\n\n        // Set the degradation preference on the local video track.\n        mediaSession.setSenderVideoDegradationPreference();\n\n        // Set the max bitrates on video sender if they are specified in config.js videoQuality settings.\n        mediaSession.setSenderMaxBitrates();\n    }\n\n    /**\n     * Figures out the send video constraint as specified by {@link selectSendMaxFrameHeight} and sets it on all media\n     * sessions for the reasons mentioned in this class description.\n     *\n     * @returns {Promise<void[]>}\n     * @private\n     */\n    _propagateSendMaxFrameHeight() {\n        const sendMaxFrameHeight = this.selectSendMaxFrameHeight();\n        const promises = [];\n\n        if (sendMaxFrameHeight >= 0) {\n            for (const session of this.conference._getMediaSessions()) {\n                promises.push(session.setSenderVideoConstraint(sendMaxFrameHeight));\n            }\n        }\n\n        return Promise.all(promises);\n    }\n\n    /**\n     * Selects the lowest common value for the local video send constraint by looking at local user's preference and\n     * the active media session's receive preference set by the remote party.\n     *\n     * @returns {number|undefined}\n     */\n    selectSendMaxFrameHeight() {\n        const activeMediaSession = this.conference._getActiveMediaSession();\n        const remoteRecvMaxFrameHeight = activeMediaSession\n            ? activeMediaSession.isP2P\n                ? activeMediaSession.getRemoteRecvMaxFrameHeight()\n                : this.layerSuspensionEnabled ? this._senderVideoConstraints?.idealHeight : undefined\n            : undefined;\n\n        if (this.preferredSendMaxFrameHeight >= 0 && remoteRecvMaxFrameHeight >= 0) {\n            return Math.min(this.preferredSendMaxFrameHeight, remoteRecvMaxFrameHeight);\n        } else if (remoteRecvMaxFrameHeight >= 0) {\n            return remoteRecvMaxFrameHeight;\n        }\n\n        return this.preferredSendMaxFrameHeight;\n    }\n\n    /**\n     * Sets local preference for max send video frame height.\n     *\n     * @param {number} maxFrameHeight - the new value to set.\n     * @returns {Promise<void[]>} - resolved when the operation is complete.\n     */\n    setPreferredSendMaxFrameHeight(maxFrameHeight) {\n        this.preferredSendMaxFrameHeight = maxFrameHeight;\n\n        return this._propagateSendMaxFrameHeight();\n    }\n}\n","import { getLogger } from 'jitsi-meet-logger';\n\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\n\nimport JibriSession from './JibriSession';\nimport recordingXMLUtils from './recordingXMLUtils';\n\nconst logger = getLogger(__filename);\n\n/**\n * A class responsible for starting and stopping recording sessions and emitting\n * state updates for them.\n */\nclass RecordingManager {\n    /**\n     * Initialize {@code RecordingManager} with other objects that are necessary\n     * for starting a recording.\n     *\n     * @param {ChatRoom} chatRoom - The chat room to handle.\n     * @returns {void}\n     */\n    constructor(chatRoom) {\n        /**\n         * All known recording sessions from the current conference.\n         */\n        this._sessions = {};\n\n        this._chatRoom = chatRoom;\n\n        this.onPresence = this.onPresence.bind(this);\n\n        this._chatRoom.eventEmitter.addListener(\n            XMPPEvents.PRESENCE_RECEIVED, this.onPresence);\n    }\n\n    /**\n     * Finds an existing recording session by session ID.\n     *\n     * @param {string} sessionID - The session ID associated with the recording.\n     * @returns {JibriSession|undefined}\n     */\n    getSession(sessionID) {\n        return this._sessions[sessionID];\n    }\n\n    /**\n     * Callback to invoke to parse through a presence update to find recording\n     * related updates (from Jibri participant doing the recording and the\n     * focus which controls recording).\n     *\n     * @param {Object} event - The presence data from the pubsub event.\n     * @param {Node} event.presence - An XMPP presence update.\n     * @param {boolean} event.fromHiddenDomain - Whether or not the update comes\n     * from a participant that is trusted but not visible, as would be the case\n     * with the Jibri recorder participant.\n     * @returns {void}\n     */\n    onPresence({ fromHiddenDomain, presence }) {\n        if (recordingXMLUtils.isFromFocus(presence)) {\n            this._handleFocusPresence(presence);\n        } else if (fromHiddenDomain) {\n            this._handleJibriPresence(presence);\n        }\n    }\n\n    /**\n     * Start a recording session.\n     *\n     * @param {Object} options - Configuration for the recording.\n     * @param {string} [options.appData] - Data specific to the app/service that\n     * the result file will be uploaded.\n     * @param {string} [optional] options.broadcastId - The channel on which a\n     * live stream will occur.\n     * @param {string} options.mode - The mode in which recording should be\n     * started. Recognized values are \"file\" and \"stream\".\n     * @param {string} [optional] options.streamId - The stream key to be used\n     * for live stream broadcasting. Required for live streaming.\n     * @returns {Promise} A promise for starting a recording, which will pass\n     * back the session on success. The promise resolves after receiving an\n     * acknowledgment of the start request success or fail.\n     */\n    startRecording(options) {\n        const session = new JibriSession({\n            ...options,\n            connection: this._chatRoom.connection\n        });\n\n        return session.start({\n            appData: options.appData,\n            broadcastId: options.broadcastId,\n            focusMucJid: this._chatRoom.focusMucJid,\n            streamId: options.streamId\n        })\n            .then(() => {\n                // Only store the session and emit if the session has not been\n                // added already. This is a workaround for the session getting\n                // created due to a presence update to announce a \"pending\"\n                // recording being received before JibriSession#start finishes.\n                if (!this.getSession(session.getID())) {\n                    this._addSession(session);\n                    this._emitSessionUpdate(session);\n                }\n\n                return session;\n            })\n            .catch(error => {\n                this._emitSessionUpdate(session);\n\n                return Promise.reject(error);\n            });\n    }\n\n    /**\n     * Stop a recording session.\n     *\n     * @param {string} sessionID - The ID associated with the recording session\n     * to be stopped.\n     * @returns {Promise} The promise resolves after receiving an\n     * acknowledgment of the stop request success or fail.\n     */\n    stopRecording(sessionID) {\n        const session = this.getSession(sessionID);\n\n        if (session) {\n            return session.stop({ focusMucJid: this._chatRoom.focusMucJid });\n        }\n\n        return Promise.reject(new Error('Could not find session'));\n    }\n\n    /**\n     * Stores a reference to the passed in JibriSession.\n     *\n     * @param {string} session - The JibriSession instance to store.\n     * @returns {void}\n     */\n    _addSession(session) {\n        this._sessions[session.getID()] = session;\n    }\n\n    /**\n     * Create a new instance of a recording session and stores a reference to\n     * it.\n     *\n     * @param {string} sessionID - The session ID of the recording in progress.\n     * @param {string} status - The current status of the recording session.\n     * @param {string} mode - The recording mode of the session.\n     * @returns {JibriSession}\n     */\n    _createSession(sessionID, status, mode) {\n        const session = new JibriSession({\n            connection: this._chatRoom.connection,\n            focusMucJid: this._chatRoom.focusMucJid,\n            mode,\n            sessionID,\n            status\n        });\n\n        this._addSession(session);\n\n        return session;\n    }\n\n    /**\n     * Notifies listeners of an update to a recording session.\n     *\n     * @param {JibriSession} session - The session that has been updated.\n     * @param {string|undefined} initiator - The jid of the initiator of the update.\n     */\n    _emitSessionUpdate(session, initiator) {\n        this._chatRoom.eventEmitter.emit(\n            XMPPEvents.RECORDER_STATE_CHANGED, session, initiator);\n    }\n\n    /**\n     * Parses presence to update an existing JibriSession or to create a new\n     * JibriSession.\n     *\n     * @param {Node} presence - An XMPP presence update.\n     * @returns {void}\n     */\n    _handleFocusPresence(presence) {\n        const jibriStatus = recordingXMLUtils.getFocusRecordingUpdate(presence);\n\n        if (!jibriStatus) {\n            return;\n        }\n\n        const { error, initiator, recordingMode, sessionID, status } = jibriStatus;\n\n        // We'll look for an existing session or create one (in case we're a\n        // participant joining a call with an existing recording going on).\n        let session = this.getSession(sessionID);\n\n        // Handle the case where a status update is received in presence but\n        // the local participant has joined while the JibriSession has already\n        // ended.\n        if (!session && status === 'off') {\n            logger.warn(\n                'Ignoring recording presence update',\n                'Received a new session with status off.');\n\n            return;\n        }\n\n        // Jicofo sends updates via presence, and any extension in presence\n        // is sent until it is explicitly removed.  It's difficult for\n        // Jicofo to know when a presence has been sent once, so it won't\n        // remove jibri status extension.  This means we may receive the same\n        // status update more than once, so check for that here\n        if (session\n            && session.getStatus() === status\n            && session.getError() === error) {\n            logger.warn('Ignoring duplicate presence update: ',\n                JSON.stringify(jibriStatus));\n\n            return;\n        }\n\n        if (!session) {\n            session = this._createSession(sessionID, status, recordingMode);\n        }\n\n        session.setStatus(status);\n\n        if (error) {\n            session.setError(error);\n        }\n\n        this._emitSessionUpdate(session, initiator);\n    }\n\n    /**\n     * Handles updates from the Jibri which can broadcast a YouTube URL that\n     * needs to be updated in a JibriSession.\n     *\n     * @param {Node} presence - An XMPP presence update.\n     * @returns {void}\n     */\n    _handleJibriPresence(presence) {\n        const { liveStreamViewURL, mode, sessionID }\n            = recordingXMLUtils.getHiddenDomainUpdate(presence);\n\n        if (!sessionID) {\n            logger.warn(\n                'Ignoring potential jibri presence due to no session id.');\n\n            return;\n        }\n\n        let session = this.getSession(sessionID);\n\n        if (!session) {\n            session = this._createSession(sessionID, '', mode);\n        }\n\n        session.setLiveStreamViewURL(liveStreamViewURL);\n\n        this._emitSessionUpdate(session);\n    }\n}\n\nexport default RecordingManager;\n","import { getLogger } from 'jitsi-meet-logger';\n\nimport * as ConferenceEvents from '../../JitsiConferenceEvents';\nimport * as MediaType from '../../service/RTC/MediaType';\nimport * as ConnectionQualityEvents from '../../service/connectivity/ConnectionQualityEvents';\nimport { createAudioOutputProblemEvent } from '../../service/statistics/AnalyticsEvents';\n\nimport Statistics from './statistics';\n\nconst logger = getLogger(__filename);\n\n/**\n * Number of local samples that will be used for comparison before and after the remote sample is received.\n */\nconst NUMBER_OF_LOCAL_SAMPLES = 2;\n\n/**\n * Collects the average audio levels per participant from the local stats and the stats received by every remote\n * participant and compares them to detect potential audio problem for a participant.\n */\nexport default class AudioOutputProblemDetector {\n\n    /**\n     * Creates new <tt>AudioOutputProblemDetector</tt> instance.\n     *\n     * @param {JitsiCofnerence} conference - The conference instance to be monitored.\n     */\n    constructor(conference) {\n        this._conference = conference;\n        this._localAudioLevelCache = {};\n        this._reportedParticipants = [];\n        this._audioProblemCandidates = {};\n        this._numberOfRemoteAudioLevelsReceived = {};\n        this._onLocalAudioLevelsReport = this._onLocalAudioLevelsReport.bind(this);\n        this._onRemoteAudioLevelReceived = this._onRemoteAudioLevelReceived.bind(this);\n        this._clearUserData = this._clearUserData.bind(this);\n        this._conference.on(ConnectionQualityEvents.REMOTE_STATS_UPDATED, this._onRemoteAudioLevelReceived);\n        this._conference.statistics.addConnectionStatsListener(this._onLocalAudioLevelsReport);\n        this._conference.on(ConferenceEvents.USER_LEFT, this._clearUserData);\n    }\n\n    /**\n     * A listener for audio level data received by a remote participant.\n     *\n     * @param {string} userID - The user id of the participant that sent the data.\n     * @param {number} audioLevel - The average audio level value.\n     * @returns {void}\n     */\n    _onRemoteAudioLevelReceived(userID, { avgAudioLevels }) {\n        const numberOfReports = (this._numberOfRemoteAudioLevelsReceived[userID] + 1) || 0;\n\n        this._numberOfRemoteAudioLevelsReceived[userID] = numberOfReports;\n\n        if (this._reportedParticipants.indexOf(userID) !== -1 || (userID in this._audioProblemCandidates)\n                || avgAudioLevels <= 0 || numberOfReports < 3) {\n            return;\n        }\n\n        const participant = this._conference.getParticipantById(userID);\n\n        if (participant) {\n            const tracks = participant.getTracksByMediaType(MediaType.AUDIO);\n\n            if (tracks.length > 0 && participant.isAudioMuted()) {\n                // We don't need to report an error if everything seems fine with the participant and its tracks but\n                // the participant is audio muted. Since those are average audio levels we potentially can receive non\n                // zero values for muted track.\n                return;\n            }\n        }\n\n        const localAudioLevels = this._localAudioLevelCache[userID];\n\n        if (!Array.isArray(localAudioLevels) || localAudioLevels.every(audioLevel => audioLevel === 0)) {\n            this._audioProblemCandidates[userID] = {\n                remoteAudioLevels: avgAudioLevels,\n                localAudioLevels: []\n            };\n        }\n    }\n\n    /**\n     * A listener for audio level data retrieved by the local stats.\n     *\n     * @param {TraceablePeerConnection} tpc - The <tt>TraceablePeerConnection</tt> instance used to gather the data.\n     * @param {Object} avgAudioLevels - The average audio levels per participant.\n     * @returns {void}\n     */\n    _onLocalAudioLevelsReport(tpc, { avgAudioLevels }) {\n        if (tpc !== this._conference.getActivePeerConnection()) {\n            return;\n        }\n\n        Object.keys(avgAudioLevels).forEach(userID => {\n            if (this._reportedParticipants.indexOf(userID) !== -1) {\n                return;\n            }\n\n            const localAudioLevels = this._localAudioLevelCache[userID];\n\n            if (!Array.isArray(localAudioLevels)) {\n                this._localAudioLevelCache[userID] = [ ];\n            } else if (localAudioLevels.length >= NUMBER_OF_LOCAL_SAMPLES) {\n                localAudioLevels.shift();\n            }\n\n            this._localAudioLevelCache[userID].push(avgAudioLevels[userID]);\n        });\n\n\n        Object.keys(this._audioProblemCandidates).forEach(userID => {\n            const { localAudioLevels, remoteAudioLevels } = this._audioProblemCandidates[userID];\n\n            localAudioLevels.push(avgAudioLevels[userID]);\n\n            if (localAudioLevels.length === NUMBER_OF_LOCAL_SAMPLES) {\n                if (localAudioLevels.every(audioLevel => typeof audioLevel === 'undefined' || audioLevel === 0)) {\n                    const localAudioLevelsString = JSON.stringify(localAudioLevels);\n\n                    Statistics.sendAnalytics(\n                        createAudioOutputProblemEvent(userID, localAudioLevelsString, remoteAudioLevels));\n                    logger.warn(`A potential problem is detected with the audio output for participant ${\n                        userID}, local audio levels: ${localAudioLevelsString}, remote audio levels: ${\n                        remoteAudioLevels}`);\n                    this._reportedParticipants.push(userID);\n                    this._clearUserData(userID);\n                }\n\n                delete this._audioProblemCandidates[userID];\n            }\n        });\n    }\n\n    /**\n     * Clears the data stored for a participant.\n     *\n     * @param {string} userID - The id of the participant.\n     * @returns {void}\n     */\n    _clearUserData(userID) {\n        delete this._localAudioLevelCache[userID];\n    }\n\n    /**\n     * Disposes the allocated resources.\n     *\n     * @returns {void}\n     */\n    dispose() {\n        this._conference.off(ConnectionQualityEvents.REMOTE_STATS_UPDATED, this._onRemoteAudioLevelReceived);\n        this._conference.off(ConferenceEvents.USER_LEFT, this._clearUserData);\n        this._conference.statistics.removeConnectionStatsListener(this._onLocalAudioLevelsReport);\n        this._localAudioLevelCache = undefined;\n        this._audioProblemCandidates = undefined;\n        this._reportedParticipants = undefined;\n        this._numberOfRemoteAudioLevelsReceived = undefined;\n        this._conference = undefined;\n    }\n}\n","/* global __filename */\nimport { getLogger } from 'jitsi-meet-logger';\nimport isEqual from 'lodash.isequal';\n\nimport * as ConferenceEvents from '../../JitsiConferenceEvents';\nimport * as MediaType from '../../service/RTC/MediaType';\nimport * as VideoType from '../../service/RTC/VideoType';\nimport * as ConnectionQualityEvents\n    from '../../service/connectivity/ConnectionQualityEvents';\nimport {\n    createRtpStatsEvent,\n    createTransportStatsEvent\n} from '../../service/statistics/AnalyticsEvents';\nimport browser from '../browser';\n\nimport Statistics from './statistics';\n\n\nconst logger = getLogger(__filename);\n\n/**\n * This will calculate an average for one, named stat and submit it to\n * the analytics module when requested. It automatically counts the samples.\n */\nclass AverageStatReport {\n    /**\n     * Creates new <tt>AverageStatReport</tt> for given name.\n     * @param {string} name that's the name of the event that will be reported\n     * to the analytics module.\n     */\n    constructor(name) {\n        this.name = name;\n        this.count = 0;\n        this.sum = 0;\n        this.samples = [];\n    }\n\n    /**\n     * Adds the next value that will be included in the average when\n     * {@link calculate} is called.\n     * @param {number} nextValue\n     */\n    addNext(nextValue) {\n        if (typeof nextValue !== 'number') {\n            logger.error(\n                `${this.name} - invalid value for idx: ${this.count}`,\n                nextValue);\n        } else if (!isNaN(nextValue)) {\n            this.sum += nextValue;\n            this.samples.push(nextValue);\n            this.count += 1;\n        }\n    }\n\n    /**\n     * Calculates an average for the samples collected using {@link addNext}.\n     * @return {number|NaN} an average of all collected samples or <tt>NaN</tt>\n     * if no samples were collected.\n     */\n    calculate() {\n        return this.sum / this.count;\n    }\n\n    /**\n     * Appends the report to the analytics \"data\" object. The object will be\n     * set under <tt>prefix</tt> + {@link this.name} key.\n     * @param {Object} report the analytics \"data\" object\n     */\n    appendReport(report) {\n        report[`${this.name}_avg`] = this.calculate();\n        report[`${this.name}_samples`] = JSON.stringify(this.samples);\n    }\n\n    /**\n     * Clears all memory of any samples collected, so that new average can be\n     * calculated using this instance.\n     */\n    reset() {\n        this.samples = [];\n        this.sum = 0;\n        this.count = 0;\n    }\n}\n\n/**\n * Class gathers the stats that are calculated and reported for a\n * {@link TraceablePeerConnection} even if it's not currently active. For\n * example we want to monitor RTT for the JVB connection while in P2P mode.\n */\nclass ConnectionAvgStats {\n    /**\n     * Creates new <tt>ConnectionAvgStats</tt>\n     * @param {AvgRTPStatsReporter} avgRtpStatsReporter\n     * @param {boolean} isP2P\n     * @param {number} n the number of samples, before arithmetic mean is to be\n     * calculated and values submitted to the analytics module.\n     */\n    constructor(avgRtpStatsReporter, isP2P, n) {\n        /**\n         * Is this instance for JVB or P2P connection ?\n         * @type {boolean}\n         */\n        this.isP2P = isP2P;\n\n        /**\n         * How many samples are to be included in arithmetic mean calculation.\n         * @type {number}\n         * @private\n         */\n        this._n = n;\n\n        /**\n         * The current sample index. Starts from 0 and goes up to {@link _n})\n         * when analytics report will be submitted.\n         * @type {number}\n         * @private\n         */\n        this._sampleIdx = 0;\n\n        /**\n         * Average round trip time reported by the ICE candidate pair.\n         * @type {AverageStatReport}\n         */\n        this._avgRTT = new AverageStatReport('rtt');\n\n        /**\n         * Map stores average RTT to the JVB reported by remote participants.\n         * Mapped per participant id {@link JitsiParticipant.getId}.\n         *\n         * This is used only when {@link ConnectionAvgStats.isP2P} equals to\n         * <tt>false</tt>.\n         *\n         * @type {Map<string,AverageStatReport>}\n         * @private\n         */\n        this._avgRemoteRTTMap = new Map();\n\n        /**\n         * The conference for which stats will be collected and reported.\n         * @type {JitsiConference}\n         * @private\n         */\n        this._avgRtpStatsReporter = avgRtpStatsReporter;\n\n        /**\n         * The latest average E2E RTT for the JVB connection only.\n         *\n         * This is used only when {@link ConnectionAvgStats.isP2P} equals to\n         * <tt>false</tt>.\n         *\n         * @type {number}\n         */\n        this._avgEnd2EndRTT = undefined;\n\n        this._onConnectionStats = (tpc, stats) => {\n            if (this.isP2P === tpc.isP2P) {\n                this._calculateAvgStats(stats);\n            }\n        };\n\n        const conference = avgRtpStatsReporter._conference;\n\n        conference.statistics.addConnectionStatsListener(\n            this._onConnectionStats);\n\n        if (!this.isP2P) {\n            this._onUserLeft = id => this._avgRemoteRTTMap.delete(id);\n            conference.on(ConferenceEvents.USER_LEFT, this._onUserLeft);\n\n            this._onRemoteStatsUpdated\n                = (id, data) => this._processRemoteStats(id, data);\n            conference.on(\n                ConnectionQualityEvents.REMOTE_STATS_UPDATED,\n                this._onRemoteStatsUpdated);\n        }\n    }\n\n    /**\n     * Processes next batch of stats.\n     * @param {go figure} data\n     * @private\n     */\n    _calculateAvgStats(data) {\n        if (!data) {\n            logger.error('No stats');\n\n            return;\n        }\n\n        if (browser.supportsRTTStatistics()) {\n            if (data.transport && data.transport.length) {\n                this._avgRTT.addNext(data.transport[0].rtt);\n            }\n        }\n\n        this._sampleIdx += 1;\n\n        if (this._sampleIdx >= this._n) {\n            if (browser.supportsRTTStatistics()) {\n                const conference = this._avgRtpStatsReporter._conference;\n\n                const batchReport = {\n                    p2p: this.isP2P,\n                    'conference_size': conference.getParticipantCount()\n                };\n\n                if (data.transport && data.transport.length) {\n                    Object.assign(batchReport, {\n                        'local_candidate_type':\n                            data.transport[0].localCandidateType,\n                        'remote_candidate_type':\n                            data.transport[0].remoteCandidateType,\n                        'transport_type': data.transport[0].type\n                    });\n                }\n\n                this._avgRTT.appendReport(batchReport);\n\n                if (this.isP2P) {\n                    // Report RTT diff only for P2P.\n                    const jvbEnd2EndRTT = this\n                        ._avgRtpStatsReporter.jvbStatsMonitor._avgEnd2EndRTT;\n\n                    if (!isNaN(jvbEnd2EndRTT)) {\n                        // eslint-disable-next-line dot-notation\n                        batchReport['rtt_diff']\n                            = this._avgRTT.calculate() - jvbEnd2EndRTT;\n                    }\n                } else {\n                    // Report end to end RTT only for JVB.\n                    const avgRemoteRTT = this._calculateAvgRemoteRTT();\n                    const avgLocalRTT = this._avgRTT.calculate();\n\n                    this._avgEnd2EndRTT = avgLocalRTT + avgRemoteRTT;\n\n                    if (!isNaN(avgLocalRTT) && !isNaN(avgRemoteRTT)) {\n                        // eslint-disable-next-line dot-notation\n                        batchReport['end2end_rtt_avg'] = this._avgEnd2EndRTT;\n                    }\n                }\n\n                Statistics.sendAnalytics(createRtpStatsEvent(batchReport));\n            }\n\n            this._resetAvgStats();\n        }\n    }\n\n    /**\n     * Calculates arithmetic mean of all RTTs towards the JVB reported by\n     * participants.\n     * @return {number|NaN} NaN if not available (not enough data)\n     * @private\n     */\n    _calculateAvgRemoteRTT() {\n        let count = 0, sum = 0;\n\n        // FIXME should we ignore RTT for participant\n        // who \"is having connectivity issues\" ?\n        for (const remoteAvg of this._avgRemoteRTTMap.values()) {\n            const avg = remoteAvg.calculate();\n\n            if (!isNaN(avg)) {\n                sum += avg;\n                count += 1;\n                remoteAvg.reset();\n            }\n        }\n\n        return sum / count;\n    }\n\n    /**\n     * Processes {@link ConnectionQualityEvents.REMOTE_STATS_UPDATED} to analyse\n     * RTT towards the JVB reported by each participant.\n     * @param {string} id {@link JitsiParticipant.getId}\n     * @param {go figure in ConnectionQuality.js} data\n     * @private\n     */\n    _processRemoteStats(id, data) {\n        const validData = typeof data.jvbRTT === 'number';\n        let rttAvg = this._avgRemoteRTTMap.get(id);\n\n        if (!rttAvg && validData) {\n            rttAvg = new AverageStatReport(`${id}_stat_rtt`);\n            this._avgRemoteRTTMap.set(id, rttAvg);\n        }\n\n        if (validData) {\n            rttAvg.addNext(data.jvbRTT);\n        } else if (rttAvg) {\n            this._avgRemoteRTTMap.delete(id);\n        }\n    }\n\n    /**\n     * Reset cache of all averages and {@link _sampleIdx}.\n     * @private\n     */\n    _resetAvgStats() {\n        this._avgRTT.reset();\n        if (this._avgRemoteRTTMap) {\n            this._avgRemoteRTTMap.clear();\n        }\n        this._sampleIdx = 0;\n    }\n\n    /**\n     *\n     */\n    dispose() {\n\n        const conference = this._avgRtpStatsReporter._conference;\n\n        conference.statistics.removeConnectionStatsListener(\n            this._onConnectionStats);\n        if (!this.isP2P) {\n            conference.off(\n                ConnectionQualityEvents.REMOTE_STATS_UPDATED,\n                this._onRemoteStatsUpdated);\n            conference.off(\n                ConferenceEvents.USER_LEFT,\n                this._onUserLeft);\n        }\n    }\n}\n\n/**\n * Reports average RTP statistics values (arithmetic mean) to the analytics\n * module for things like bit rate, bandwidth, packet loss etc. It keeps track\n * of the P2P vs JVB conference modes and submits the values under different\n * namespaces (the events for P2P mode have 'p2p.' prefix). Every switch between\n * P2P mode resets the data collected so far and averages are calculated from\n * scratch.\n */\nexport default class AvgRTPStatsReporter {\n    /**\n     * Creates new instance of <tt>AvgRTPStatsReporter</tt>\n     * @param {JitsiConference} conference\n     * @param {number} n the number of samples, before arithmetic mean is to be\n     * calculated and values submitted to the analytics module.\n     */\n    constructor(conference, n) {\n        /**\n         * How many {@link ConnectionQualityEvents.LOCAL_STATS_UPDATED} samples\n         * are to be included in arithmetic mean calculation.\n         * @type {number}\n         * @private\n         */\n        this._n = n;\n\n        if (n > 0) {\n            logger.info(`Avg RTP stats will be calculated every ${n} samples`);\n        } else {\n            logger.info('Avg RTP stats reports are disabled.');\n\n            // Do not initialize\n            return;\n        }\n\n        /**\n         * The current sample index. Starts from 0 and goes up to {@link _n})\n         * when analytics report will be submitted.\n         * @type {number}\n         * @private\n         */\n        this._sampleIdx = 0;\n\n        /**\n         * The conference for which stats will be collected and reported.\n         * @type {JitsiConference}\n         * @private\n         */\n        this._conference = conference;\n\n        /**\n         * Average audio upload bitrate\n         * XXX What are the units?\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgAudioBitrateUp\n            = new AverageStatReport('bitrate_audio_upload');\n\n        /**\n         * Average audio download bitrate\n         * XXX What are the units?\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgAudioBitrateDown\n            = new AverageStatReport('bitrate_audio_download');\n\n        /**\n         * Average video upload bitrate\n         * XXX What are the units?\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgVideoBitrateUp\n            = new AverageStatReport('bitrate_video_upload');\n\n        /**\n         * Average video download bitrate\n         * XXX What are the units?\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgVideoBitrateDown\n            = new AverageStatReport('bitrate_video_download');\n\n        /**\n         * Average upload bandwidth\n         * XXX What are the units?\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgBandwidthUp\n            = new AverageStatReport('bandwidth_upload');\n\n        /**\n         * Average download bandwidth\n         * XXX What are the units?\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgBandwidthDown\n            = new AverageStatReport('bandwidth_download');\n\n        /**\n         * Average total packet loss\n         * XXX What are the units?\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgPacketLossTotal\n            = new AverageStatReport('packet_loss_total');\n\n        /**\n         * Average upload packet loss\n         * XXX What are the units?\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgPacketLossUp\n            = new AverageStatReport('packet_loss_upload');\n\n        /**\n         * Average download packet loss\n         * XXX What are the units?\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgPacketLossDown\n            = new AverageStatReport('packet_loss_download');\n\n        /**\n         * Average FPS for remote videos\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgRemoteFPS = new AverageStatReport('framerate_remote');\n\n        /**\n         * Average FPS for remote screen streaming videos (reported only if not\n         * a <tt>NaN</tt>).\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgRemoteScreenFPS\n            = new AverageStatReport('framerate_screen_remote');\n\n        /**\n         * Average FPS for local video (camera)\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgLocalFPS = new AverageStatReport('framerate_local');\n\n        /**\n         * Average FPS for local screen streaming video (reported only if not\n         * a <tt>NaN</tt>).\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgLocalScreenFPS\n            = new AverageStatReport('framerate_screen_local');\n\n        /**\n         * Average pixels for remote screen streaming videos (reported only if\n         * not a <tt>NaN</tt>).\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgRemoteCameraPixels\n            = new AverageStatReport('pixels_remote');\n\n        /**\n         * Average pixels for remote screen streaming videos (reported only if\n         * not a <tt>NaN</tt>).\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgRemoteScreenPixels\n            = new AverageStatReport('pixels_screen_remote');\n\n        /**\n         * Average pixels for local video (camera)\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgLocalCameraPixels\n            = new AverageStatReport('pixels_local');\n\n        /**\n         * Average pixels for local screen streaming video (reported only if not\n         * a <tt>NaN</tt>).\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgLocalScreenPixels\n            = new AverageStatReport('pixels_screen_local');\n\n        /**\n         * Average connection quality as defined by\n         * the {@link ConnectionQuality} module.\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgCQ = new AverageStatReport('connection_quality');\n\n        this._cachedTransportStats = undefined;\n\n        this._onLocalStatsUpdated = data => {\n            this._calculateAvgStats(data);\n            this._maybeSendTransportAnalyticsEvent(data);\n        };\n        conference.on(\n            ConnectionQualityEvents.LOCAL_STATS_UPDATED,\n            this._onLocalStatsUpdated);\n\n        this._onP2PStatusChanged = () => {\n            logger.debug('Resetting average stats calculation');\n            this._resetAvgStats();\n            this.jvbStatsMonitor._resetAvgStats();\n            this.p2pStatsMonitor._resetAvgStats();\n        };\n        conference.on(\n            ConferenceEvents.P2P_STATUS,\n            this._onP2PStatusChanged);\n\n        this._onJvb121StatusChanged = (oldStatus, newStatus) => {\n            // We want to reset only on the transition from false => true,\n            // because otherwise those stats are resetted on JVB <=> P2P\n            // transition.\n            if (newStatus === true) {\n                logger.info('Resetting JVB avg RTP stats');\n                this._resetAvgJvbStats();\n            }\n        };\n        conference.on(\n            ConferenceEvents.JVB121_STATUS,\n            this._onJvb121StatusChanged);\n\n        this.jvbStatsMonitor\n            = new ConnectionAvgStats(this, false /* JVB */, n);\n\n        this.p2pStatsMonitor\n            = new ConnectionAvgStats(this, true /* P2P */, n);\n    }\n\n    /**\n     * Processes next batch of stats reported on\n     * {@link ConnectionQualityEvents.LOCAL_STATS_UPDATED}.\n     * @param {go figure} data\n     * @private\n     */\n    _calculateAvgStats(data) {\n\n        if (!data) {\n            logger.error('No stats');\n\n            return;\n        }\n\n        const isP2P = this._conference.isP2PActive();\n        const confSize = this._conference.getParticipantCount();\n\n        if (!isP2P && confSize < 2) {\n\n            // There's no point in collecting stats for a JVB conference of 1.\n            // That happens for short period of time after everyone leaves\n            // the room, until Jicofo terminates the session.\n            return;\n        }\n\n        /* Uncomment to figure out stats structure\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                logger.info(`local stat ${key}: `, data[key]);\n            }\n        } */\n\n        const bitrate = data.bitrate;\n        const bandwidth = data.bandwidth;\n        const packetLoss = data.packetLoss;\n        const frameRate = data.framerate;\n        const resolution = data.resolution;\n\n        if (!bitrate) {\n            logger.error('No \"bitrate\"');\n\n            return;\n        } else if (!bandwidth) {\n            logger.error('No \"bandwidth\"');\n\n            return;\n        } else if (!packetLoss) {\n            logger.error('No \"packetloss\"');\n\n            return;\n        } else if (!frameRate) {\n            logger.error('No \"framerate\"');\n\n            return;\n        } else if (!resolution) {\n            logger.error('No resolution');\n\n            return;\n        }\n\n        this._avgAudioBitrateUp.addNext(bitrate.audio.upload);\n        this._avgAudioBitrateDown.addNext(bitrate.audio.download);\n\n        this._avgVideoBitrateUp.addNext(bitrate.video.upload);\n        this._avgVideoBitrateDown.addNext(bitrate.video.download);\n\n        if (browser.supportsBandwidthStatistics()) {\n            this._avgBandwidthUp.addNext(bandwidth.upload);\n            this._avgBandwidthDown.addNext(bandwidth.download);\n        }\n\n        this._avgPacketLossUp.addNext(packetLoss.upload);\n        this._avgPacketLossDown.addNext(packetLoss.download);\n        this._avgPacketLossTotal.addNext(packetLoss.total);\n\n        this._avgCQ.addNext(data.connectionQuality);\n\n        if (frameRate) {\n            this._avgRemoteFPS.addNext(\n                this._calculateAvgVideoFps(\n                    frameRate, false /* remote */, VideoType.CAMERA));\n            this._avgRemoteScreenFPS.addNext(\n                this._calculateAvgVideoFps(\n                    frameRate, false /* remote */, VideoType.DESKTOP));\n\n            this._avgLocalFPS.addNext(\n                this._calculateAvgVideoFps(\n                    frameRate, true /* local */, VideoType.CAMERA));\n            this._avgLocalScreenFPS.addNext(\n                this._calculateAvgVideoFps(\n                    frameRate, true /* local */, VideoType.DESKTOP));\n        }\n\n        if (resolution) {\n            this._avgRemoteCameraPixels.addNext(\n                this._calculateAvgVideoPixels(\n                    resolution, false /* remote */, VideoType.CAMERA));\n\n            this._avgRemoteScreenPixels.addNext(\n                this._calculateAvgVideoPixels(\n                    resolution, false /* remote */, VideoType.DESKTOP));\n\n            this._avgLocalCameraPixels.addNext(\n                this._calculateAvgVideoPixels(\n                    resolution, true /* local */, VideoType.CAMERA));\n\n            this._avgLocalScreenPixels.addNext(\n                this._calculateAvgVideoPixels(\n                    resolution, true /* local */, VideoType.DESKTOP));\n        }\n\n        this._sampleIdx += 1;\n\n        if (this._sampleIdx >= this._n) {\n\n            const batchReport = {\n                p2p: isP2P,\n                'conference_size': confSize\n            };\n\n            if (data.transport && data.transport.length) {\n                Object.assign(batchReport, {\n                    'local_candidate_type':\n                        data.transport[0].localCandidateType,\n                    'remote_candidate_type':\n                        data.transport[0].remoteCandidateType,\n                    'transport_type': data.transport[0].type\n                });\n            }\n\n            this._avgAudioBitrateUp.appendReport(batchReport);\n            this._avgAudioBitrateDown.appendReport(batchReport);\n\n            this._avgVideoBitrateUp.appendReport(batchReport);\n            this._avgVideoBitrateDown.appendReport(batchReport);\n\n            if (browser.supportsBandwidthStatistics()) {\n                this._avgBandwidthUp.appendReport(batchReport);\n                this._avgBandwidthDown.appendReport(batchReport);\n            }\n            this._avgPacketLossUp.appendReport(batchReport);\n            this._avgPacketLossDown.appendReport(batchReport);\n            this._avgPacketLossTotal.appendReport(batchReport);\n\n            this._avgRemoteFPS.appendReport(batchReport);\n            if (!isNaN(this._avgRemoteScreenFPS.calculate())) {\n                this._avgRemoteScreenFPS.appendReport(batchReport);\n            }\n            this._avgLocalFPS.appendReport(batchReport);\n            if (!isNaN(this._avgLocalScreenFPS.calculate())) {\n                this._avgLocalScreenFPS.appendReport(batchReport);\n            }\n\n            this._avgRemoteCameraPixels.appendReport(batchReport);\n            if (!isNaN(this._avgRemoteScreenPixels.calculate())) {\n                this._avgRemoteScreenPixels.appendReport(batchReport);\n            }\n            this._avgLocalCameraPixels.appendReport(batchReport);\n            if (!isNaN(this._avgLocalScreenPixels.calculate())) {\n                this._avgLocalScreenPixels.appendReport(batchReport);\n            }\n\n            this._avgCQ.appendReport(batchReport);\n\n            Statistics.sendAnalytics(createRtpStatsEvent(batchReport));\n\n            this._resetAvgStats();\n        }\n    }\n\n    /**\n     * Calculates average number of pixels for the report\n     *\n     * @param {map} peerResolutions a map of peer resolutions\n     * @param {boolean} isLocal if the average is to be calculated for the local\n     * video or <tt>false</tt> if for remote videos.\n     * @param {VideoType} videoType\n     * @return {number|NaN} average number of pixels or <tt>NaN</tt> if there\n     * are no samples.\n     * @private\n     */\n    _calculateAvgVideoPixels(peerResolutions, isLocal, videoType) {\n        let peerPixelsSum = 0;\n        let peerCount = 0;\n        const myID = this._conference.myUserId();\n\n        for (const peerID of Object.keys(peerResolutions)) {\n            if (isLocal ? peerID === myID : peerID !== myID) {\n                const participant\n                    = isLocal\n                        ? null\n                        : this._conference.getParticipantById(peerID);\n                const videosResolution = peerResolutions[peerID];\n\n                // Do not continue without participant for non local peerID\n                if ((isLocal || participant) && videosResolution) {\n                    const peerAvgPixels = this._calculatePeerAvgVideoPixels(\n                        videosResolution, participant, videoType);\n\n                    if (!isNaN(peerAvgPixels)) {\n                        peerPixelsSum += peerAvgPixels;\n                        peerCount += 1;\n                    }\n                }\n            }\n        }\n\n        return peerPixelsSum / peerCount;\n    }\n\n    /**\n     * Calculate average pixels for either remote or local participant\n     * @param {object} videos maps resolution per video SSRC\n     * @param {JitsiParticipant|null} participant remote participant or\n     * <tt>null</tt> for local video pixels calculation.\n     * @param {VideoType} videoType the type of the video for which an average\n     * will be calculated.\n     * @return {number|NaN} average video pixels of all participant's videos or\n     * <tt>NaN</tt> if currently not available\n     * @private\n     */\n    _calculatePeerAvgVideoPixels(videos, participant, videoType) {\n        let ssrcs = Object.keys(videos).map(ssrc => Number(ssrc));\n        let videoTracks = null;\n\n        // NOTE that this method is supposed to be called for the stats\n        // received from the current peerconnection.\n        const tpc = this._conference.getActivePeerConnection();\n\n        if (participant) {\n            videoTracks = participant.getTracksByMediaType(MediaType.VIDEO);\n            if (videoTracks) {\n                ssrcs\n                    = ssrcs.filter(\n                        ssrc => videoTracks.find(\n                            track =>\n                                !track.isMuted()\n                                    && track.getSSRC() === ssrc\n                                    && track.videoType === videoType));\n            }\n        } else {\n            videoTracks = this._conference.getLocalTracks(MediaType.VIDEO);\n            ssrcs\n                = ssrcs.filter(\n                    ssrc => videoTracks.find(\n                        track =>\n                            !track.isMuted()\n                                && tpc.getLocalSSRC(track) === ssrc\n                                && track.videoType === videoType));\n        }\n\n        let peerPixelsSum = 0;\n        let peerSsrcCount = 0;\n\n        for (const ssrc of ssrcs) {\n            const peerSsrcPixels\n                = Number(videos[ssrc].height) * Number(videos[ssrc].width);\n\n            // FPS is reported as 0 for users with no video\n            if (!isNaN(peerSsrcPixels) && peerSsrcPixels > 0) {\n                peerPixelsSum += peerSsrcPixels;\n                peerSsrcCount += 1;\n            }\n        }\n\n        return peerPixelsSum / peerSsrcCount;\n    }\n\n\n    /**\n     * Calculates average FPS for the report\n     * @param {go figure} frameRate\n     * @param {boolean} isLocal if the average is to be calculated for the local\n     * video or <tt>false</tt> if for remote videos.\n     * @param {VideoType} videoType\n     * @return {number|NaN} average FPS or <tt>NaN</tt> if there are no samples.\n     * @private\n     */\n    _calculateAvgVideoFps(frameRate, isLocal, videoType) {\n        let peerFpsSum = 0;\n        let peerCount = 0;\n        const myID = this._conference.myUserId();\n\n        for (const peerID of Object.keys(frameRate)) {\n            if (isLocal ? peerID === myID : peerID !== myID) {\n                const participant\n                    = isLocal\n                        ? null : this._conference.getParticipantById(peerID);\n                const videosFps = frameRate[peerID];\n\n                // Do not continue without participant for non local peerID\n                if ((isLocal || participant) && videosFps) {\n                    const peerAvgFPS\n                        = this._calculatePeerAvgVideoFps(\n                            videosFps, participant, videoType);\n\n                    if (!isNaN(peerAvgFPS)) {\n                        peerFpsSum += peerAvgFPS;\n                        peerCount += 1;\n                    }\n                }\n            }\n        }\n\n        return peerFpsSum / peerCount;\n    }\n\n    /**\n     * Calculate average FPS for either remote or local participant\n     * @param {object} videos maps FPS per video SSRC\n     * @param {JitsiParticipant|null} participant remote participant or\n     * <tt>null</tt> for local FPS calculation.\n     * @param {VideoType} videoType the type of the video for which an average\n     * will be calculated.\n     * @return {number|NaN} average FPS of all participant's videos or\n     * <tt>NaN</tt> if currently not available\n     * @private\n     */\n    _calculatePeerAvgVideoFps(videos, participant, videoType) {\n        let ssrcs = Object.keys(videos).map(ssrc => Number(ssrc));\n        let videoTracks = null;\n\n        // NOTE that this method is supposed to be called for the stats\n        // received from the current peerconnection.\n        const tpc = this._conference.getActivePeerConnection();\n\n        if (participant) {\n            videoTracks = participant.getTracksByMediaType(MediaType.VIDEO);\n            if (videoTracks) {\n                ssrcs\n                    = ssrcs.filter(\n                        ssrc => videoTracks.find(\n                            track => !track.isMuted()\n                                && track.getSSRC() === ssrc\n                                && track.videoType === videoType));\n            }\n        } else {\n            videoTracks = this._conference.getLocalTracks(MediaType.VIDEO);\n            ssrcs\n                = ssrcs.filter(\n                    ssrc => videoTracks.find(\n                        track => !track.isMuted()\n                            && tpc.getLocalSSRC(track) === ssrc\n                            && track.videoType === videoType));\n        }\n\n        let peerFpsSum = 0;\n        let peerSsrcCount = 0;\n\n        for (const ssrc of ssrcs) {\n            const peerSsrcFps = Number(videos[ssrc]);\n\n            // FPS is reported as 0 for users with no video\n            if (!isNaN(peerSsrcFps) && peerSsrcFps > 0) {\n                peerFpsSum += peerSsrcFps;\n                peerSsrcCount += 1;\n            }\n        }\n\n        return peerFpsSum / peerSsrcCount;\n    }\n\n    /**\n     * Sends the 'transport.stats' analytics event whenever we detect that\n     * there is a change in the local or remote candidate type on the transport\n     * that is currently selected.\n     * @param {*} data\n     * @private\n     */\n    _maybeSendTransportAnalyticsEvent(data) {\n        if (!data || !data.transport || !data.transport.length) {\n            return;\n        }\n        const transportStats = {\n            p2p: data.transport[0].p2p,\n            'local_candidate_type': data.transport[0].localCandidateType,\n            'remote_candidate_type': data.transport[0].remoteCandidateType,\n            'transport_type': data.transport[0].type\n        };\n\n        if (!this._cachedTransportStats || !isEqual(transportStats, this._cachedTransportStats)) {\n            this._cachedTransportStats = transportStats;\n            Statistics.sendAnalytics(createTransportStatsEvent(transportStats));\n        }\n    }\n\n    /**\n     * Resets the stats related to JVB connection. Must not be called when in\n     * P2P mode, because then the {@link AverageStatReport} instances are\n     * tracking P2P stats. Note that this should never happen unless something\n     * is wrong with the P2P and JVB121 events.\n     * @private\n     */\n    _resetAvgJvbStats() {\n        this._resetAvgStats();\n        this.jvbStatsMonitor._resetAvgStats();\n    }\n\n    /**\n     * Reset cache of all averages and {@link _sampleIdx}.\n     * @private\n     */\n    _resetAvgStats() {\n        this._avgAudioBitrateUp.reset();\n        this._avgAudioBitrateDown.reset();\n\n        this._avgVideoBitrateUp.reset();\n        this._avgVideoBitrateDown.reset();\n\n        this._avgBandwidthUp.reset();\n        this._avgBandwidthDown.reset();\n\n        this._avgPacketLossUp.reset();\n        this._avgPacketLossDown.reset();\n        this._avgPacketLossTotal.reset();\n\n        this._avgRemoteFPS.reset();\n        this._avgRemoteScreenFPS.reset();\n        this._avgLocalFPS.reset();\n        this._avgLocalScreenFPS.reset();\n\n        this._avgRemoteCameraPixels.reset();\n        this._avgRemoteScreenPixels.reset();\n        this._avgLocalCameraPixels.reset();\n        this._avgLocalScreenPixels.reset();\n\n        this._avgCQ.reset();\n\n        this._sampleIdx = 0;\n    }\n\n    /**\n     * Unregisters all event listeners and stops working.\n     */\n    dispose() {\n        this._conference.off(\n            ConferenceEvents.P2P_STATUS,\n            this._onP2PStatusChanged);\n        this._conference.off(\n            ConnectionQualityEvents.LOCAL_STATS_UPDATED,\n            this._onLocalStatsUpdated);\n        this._conference.off(\n            ConferenceEvents.JVB121_STATUS,\n            this._onJvb121StatusChanged);\n        this.jvbStatsMonitor.dispose();\n        this.p2pStatsMonitor.dispose();\n    }\n}\n","import * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\n\nimport SpeakerStats from './SpeakerStats';\n\n/**\n * A collection for tracking speaker stats. Attaches listeners\n * to the conference to automatically update on tracked events.\n */\nexport default class SpeakerStatsCollector {\n    /**\n     * Initializes a new SpeakerStatsCollector instance.\n     *\n     * @constructor\n     * @param {JitsiConference} conference - The conference to track.\n     * @returns {void}\n     */\n    constructor(conference) {\n        this.stats = {\n            users: {\n\n                // userId: SpeakerStats\n            },\n            dominantSpeakerId: null\n        };\n\n        const userId = conference.myUserId();\n\n        this.stats.users[userId] = new SpeakerStats(userId, null, true);\n        this.conference = conference;\n\n        conference.addEventListener(\n            JitsiConferenceEvents.DOMINANT_SPEAKER_CHANGED,\n            this._onDominantSpeaker.bind(this));\n        conference.addEventListener(\n            JitsiConferenceEvents.USER_JOINED,\n            this._onUserJoin.bind(this));\n        conference.addEventListener(\n            JitsiConferenceEvents.USER_LEFT,\n            this._onUserLeave.bind(this));\n        conference.addEventListener(\n            JitsiConferenceEvents.DISPLAY_NAME_CHANGED,\n            this._onDisplayNameChange.bind(this));\n        if (conference.xmpp) {\n            conference.xmpp.addListener(\n                XMPPEvents.SPEAKER_STATS_RECEIVED,\n                this._updateStats.bind(this));\n        }\n    }\n\n    /**\n     * Reacts to dominant speaker change events by changing its speaker stats\n     * models to reflect the current dominant speaker.\n     *\n     * @param {string} dominantSpeakerId - The user id of the new\n     * dominant speaker.\n     * @returns {void}\n     * @private\n     */\n    _onDominantSpeaker(dominantSpeakerId) {\n        const oldDominantSpeaker\n            = this.stats.users[this.stats.dominantSpeakerId];\n        const newDominantSpeaker = this.stats.users[dominantSpeakerId];\n\n        oldDominantSpeaker && oldDominantSpeaker.setDominantSpeaker(false);\n        newDominantSpeaker && newDominantSpeaker.setDominantSpeaker(true);\n        this.stats.dominantSpeakerId = dominantSpeakerId;\n    }\n\n    /**\n     * Reacts to user join events by creating a new SpeakerStats model.\n     *\n     * @param {string} userId - The user id of the new user.\n     * @param {JitsiParticipant} - The JitsiParticipant model for the new user.\n     * @returns {void}\n     * @private\n     */\n    _onUserJoin(userId, participant) {\n        if (participant.isHidden()) {\n            return;\n        }\n\n        if (!this.stats.users[userId]) {\n            this.stats.users[userId] = new SpeakerStats(userId, participant.getDisplayName());\n        }\n    }\n\n    /**\n     * Reacts to user leave events by updating the associated user's\n     * SpeakerStats model.\n     *\n     * @param {string} userId - The user id of the user that left.\n     * @returns {void}\n     * @private\n     */\n    _onUserLeave(userId) {\n        const savedUser = this.stats.users[userId];\n\n        if (savedUser) {\n            savedUser.markAsHasLeft();\n        }\n    }\n\n    /**\n     * Reacts to user name change events by updating the last known name\n     * tracked in the associated SpeakerStats model.\n     *\n     * @param {string} userId - The user id of the user that left.\n     * @returns {void}\n     * @private\n     */\n    _onDisplayNameChange(userId, newName) {\n        const savedUser = this.stats.users[userId];\n\n        if (savedUser) {\n            savedUser.setDisplayName(newName);\n        }\n    }\n\n    /**\n     * Return a copy of the tracked SpeakerStats models.\n     *\n     * @returns {Object} The keys are the user ids and the values are the\n     * associated user's SpeakerStats model.\n     * @private\n     */\n    getStats() {\n        return this.stats.users;\n    }\n\n    /**\n     * Updates of the current stats is requested, passing the new values.\n     *\n     * @param {Object} newStats - The new values used to update current one.\n     * @private\n     */\n    _updateStats(newStats) {\n        for (const userId in newStats) { // eslint-disable-line guard-for-in\n            let speakerStatsToUpdate;\n            const newParticipant = this.conference.getParticipantById(userId);\n\n            // we want to ignore hidden participants\n            if (!newParticipant || !newParticipant.isHidden()) {\n                if (this.stats.users[userId]) {\n                    speakerStatsToUpdate = this.stats.users[userId];\n\n                    if (!speakerStatsToUpdate.getDisplayName()) {\n                        speakerStatsToUpdate\n                            .setDisplayName(newStats[userId].displayName);\n                    }\n                } else {\n                    speakerStatsToUpdate = new SpeakerStats(\n                        userId, newStats[userId].displayName);\n                    this.stats.users[userId] = speakerStatsToUpdate;\n                    speakerStatsToUpdate.markAsHasLeft();\n                }\n            }\n\n            speakerStatsToUpdate.totalDominantSpeakerTime\n                = newStats[userId].totalDominantSpeakerTime;\n        }\n    }\n}\n","const AudioRecorder = require('./audioRecorder');\nconst SphinxService = require(\n    './transcriptionServices/SphinxTranscriptionService');\n\nconst BEFORE_STATE = 'before';\nconst RECORDING_STATE = 'recording';\nconst TRANSCRIBING_STATE = 'transcribing';\nconst FINISHED_STATE = 'finished';\n\n// the amount of characters each line in the transcription will have\nconst MAXIMUM_SENTENCE_LENGTH = 80;\n\n/**\n * This is the main object for handing the Transcription. It interacts with\n * the audioRecorder to record every person in a conference and sends the\n * recorder audio to a transcriptionService. The returned speech-to-text result\n * will be merged to create a transcript\n * @param {AudioRecorder} audioRecorder An audioRecorder recording a conference\n */\nfunction Transcriber() {\n    // the object which can record all audio in the conference\n    this.audioRecorder = new AudioRecorder();\n\n    // this object can send the recorder audio to a speech-to-text service\n    this.transcriptionService = new SphinxService();\n\n    // holds a counter to keep track if merging can start\n    this.counter = null;\n\n    // holds the date when transcription started which makes it possible\n    // to calculate the offset between recordings\n    this.startTime = null;\n\n    // will hold the transcription once it is completed\n    this.transcription = null;\n\n    // this will be a method which will be called once the transcription is done\n    // with the transcription as parameter\n    this.callback = null;\n\n    // stores all the retrieved speech-to-text results to merge together\n    // this value will store an Array<Word> object\n    this.results = [];\n\n    // Stores the current state of the transcription process\n    this.state = BEFORE_STATE;\n\n    // Used in the updateTranscription method to add a new line when the\n    // sentence becomes to long\n    this.lineLength = 0;\n}\n\n/**\n * Method to start the transcription process. It will tell the audioRecorder\n * to start storing all audio streams and record the start time for merging\n * purposes\n */\nTranscriber.prototype.start = function start() {\n    if (this.state !== BEFORE_STATE) {\n        throw new Error(\n            `The transcription can only start when it's in the \"${\n                BEFORE_STATE}\" state. It's currently in the \"${\n                this.state}\" state`);\n    }\n    this.state = RECORDING_STATE;\n    this.audioRecorder.start();\n    this.startTime = new Date();\n};\n\n/**\n * Method to stop the transcription process. It will tell the audioRecorder to\n * stop, and get all the recorded audio to send it to the transcription service\n\n * @param callback a callback which will receive the transcription\n */\nTranscriber.prototype.stop = function stop(callback) {\n    if (this.state !== RECORDING_STATE) {\n        throw new Error(\n            `The transcription can only stop when it's in the \"${\n                RECORDING_STATE}\" state. It's currently in the \"${\n                this.state}\" state`);\n    }\n\n    // stop the recording\n    console.log('stopping recording and sending audio files');\n    this.audioRecorder.stop();\n\n    // and send all recorded audio to the transcription service\n    const callBack = blobCallBack.bind(null, this);\n\n    this.audioRecorder.getRecordingResults().forEach(recordingResult => {\n        this.transcriptionService.send(recordingResult, callBack);\n        this.counter++;\n    });\n\n    // set the state to \"transcribing\" so that maybeMerge() functions correctly\n    this.state = TRANSCRIBING_STATE;\n\n    // and store the callback for later\n    this.callback = callback;\n};\n\n/**\n * This method gets the answer from the transcription service, calculates the\n * offset and adds is to every Word object. It will also start the merging\n * when every send request has been received\n *\n * note: Make sure to bind this as a Transcription object\n * @param {Transcriber} transcriber the transcriber instance\n * @param {RecordingResult} answer a RecordingResult object with a defined\n * WordArray\n */\nfunction blobCallBack(transcriber, answer) {\n    console.log(\n        'retrieved an answer from the transcription service. The answer has an'\n            + ` array of length: ${answer.wordArray.length}`);\n\n    // first add the offset between the start of the transcription and\n    // the start of the recording to all start and end times\n    if (answer.wordArray.length > 0) {\n        let offset = answer.startTime.getUTCMilliseconds()\n            - transcriber.startTime.getUTCMilliseconds();\n\n        // transcriber time will always be earlier\n\n        if (offset < 0) {\n            offset = 0; // presume 0 if it somehow not earlier\n        }\n\n        let array = '[';\n\n        answer.wordArray.forEach(wordObject => {\n            wordObject.begin += offset;\n            wordObject.end += offset;\n            array += `${wordObject.word},`;\n        });\n        array += ']';\n        console.log(array);\n\n        // give a name value to the Array object so that the merging can access\n        // the name value without having to use the whole recordingResult object\n        // in the algorithm\n        answer.wordArray.name = answer.name;\n    }\n\n    // then store the array and decrease the counter\n    transcriber.results.push(answer.wordArray);\n    transcriber.counter--;\n    console.log(`current counter: ${transcriber.counter}`);\n\n    // and check if all results have been received.\n    transcriber.maybeMerge();\n}\n\n/**\n * this method will check if the counter is zero. If it is, it will call\n * the merging method\n */\nTranscriber.prototype.maybeMerge = function() {\n    if (this.state === TRANSCRIBING_STATE && this.counter === 0) {\n        // make sure to include the events in the result arrays before\n        // merging starts\n        this.merge();\n    }\n};\n\n/**\n * This method will merge all speech-to-text arrays together in one\n * readable transcription string\n */\nTranscriber.prototype.merge = function() {\n    console.log(\n        `starting merge process!\\n The length of the array: ${\n            this.results.length}`);\n    this.transcription = '';\n\n    // the merging algorithm will look over all Word objects who are at pos 0 in\n    // every array. It will then select the one closest in time to the\n    // previously placed word, while removing the selected word from its array\n    // note: words can be skipped the skipped word's begin and end time somehow\n    // end up between the closest word start and end time\n    const arrays = this.results;\n\n    // arrays of Word objects\n    const potentialWords = []; // array of the first Word objects\n    // check if any arrays are already empty and remove them\n\n    hasPopulatedArrays(arrays);\n\n    // populate all the potential Words for a first time\n    arrays.forEach(array => pushWordToSortedArray(potentialWords, array));\n\n    // keep adding words to transcription until all arrays are exhausted\n    while (hasPopulatedArrays(arrays)) {\n        // first select the lowest array;\n        let lowestWordArray = arrays[0];\n\n        arrays.forEach(wordArray => {\n            if (wordArray[0].begin < lowestWordArray[0].begin) {\n                lowestWordArray = wordArray;\n            }\n        });\n\n        // put the word in the transcription\n        let wordToAdd = lowestWordArray.shift();\n\n        this.updateTranscription(wordToAdd, lowestWordArray.name);\n\n        // keep going until a word in another array has a smaller time\n        // or the array is empty\n        while (lowestWordArray.length > 0) {\n            let foundSmaller = false;\n            const wordToCompare = lowestWordArray[0].begin;\n\n            arrays.forEach(wordArray => {\n                if (wordArray[0].begin < wordToCompare) {\n                    foundSmaller = true;\n                }\n            });\n\n            // add next word if no smaller time has been found\n            if (foundSmaller) {\n                break;\n            }\n\n            wordToAdd = lowestWordArray.shift();\n            this.updateTranscription(wordToAdd, null);\n        }\n\n    }\n\n    // set the state to finished and do the necessary left-over tasks\n    this.state = FINISHED_STATE;\n    if (this.callback) {\n        this.callback(this.transcription);\n    }\n};\n\n/**\n * Appends a word object to the transcription. It will make a new line with a\n * name if a name is specified\n * @param {Word} word the Word object holding the word to append\n * @param {String|null} name the name of a new speaker. Null if not applicable\n */\nTranscriber.prototype.updateTranscription = function(word, name) {\n    if (name !== undefined && name !== null) {\n        this.transcription += `\\n${name}:`;\n        this.lineLength = name.length + 1; // +1 for the semi-colon\n    }\n    if (this.lineLength + word.word.length > MAXIMUM_SENTENCE_LENGTH) {\n        this.transcription += '\\n    ';\n        this.lineLength = 4; // because of the 4 spaces after the new line\n    }\n    this.transcription += ` ${word.word}`;\n    this.lineLength += word.word.length + 1; // +1 for the space\n};\n\n/**\n * Check if the given 2 dimensional array has any non-zero Word-arrays in them.\n * All zero-element arrays inside will be removed\n * If any non-zero-element arrays are found, the method will return true.\n * otherwise it will return false\n * @param {Array<Array>} twoDimensionalArray the array to check\n * @returns {boolean} true if any non-zero arrays inside, otherwise false\n */\nfunction hasPopulatedArrays(twoDimensionalArray) {\n    for (let i = 0; i < twoDimensionalArray.length; i++) {\n        if (twoDimensionalArray[i].length === 0) {\n            twoDimensionalArray.splice(i, 1);\n        }\n    }\n\n    return twoDimensionalArray.length > 0;\n}\n\n/**\n * Push a word to the right location in a sorted array. The array is sorted\n * from lowest to highest start time. Every word is stored in an object which\n * includes the name of the person saying the word.\n *\n * @param {Array<Word>} array the sorted array to push to\n * @param {Word} word the word to push into the array\n */\nfunction pushWordToSortedArray(array, word) {\n    if (array.length === 0) {\n        array.push(word);\n    } else {\n        if (array[array.length - 1].begin <= word.begin) {\n            array.push(word);\n\n            return;\n        }\n\n        for (let i = 0; i < array.length; i++) {\n            if (word.begin < array[i].begin) {\n                array.splice(i, 0, word);\n\n                return;\n            }\n        }\n        array.push(word); // fail safe\n    }\n}\n\n/**\n * Gives the transcriber a JitsiTrack holding an audioStream to transcribe.\n * The JitsiTrack is given to the audioRecorder. If it doesn't hold an\n * audiostream, it will not be added by the audioRecorder\n * @param {JitsiTrack} track the track to give to the audioRecorder\n */\nTranscriber.prototype.addTrack = function(track) {\n    this.audioRecorder.addTrack(track);\n};\n\n/**\n * Remove the given track from the auioRecorder\n * @param track\n */\nTranscriber.prototype.removeTrack = function(track) {\n    this.audioRecorder.removeTrack(track);\n};\n\n/**\n * Will return the created transcription if it's avialable or throw an error\n * when it's not done yet\n * @returns {String} the transcription as a String\n */\nTranscriber.prototype.getTranscription = function() {\n    if (this.state !== FINISHED_STATE) {\n        throw new Error(\n            `The transcription can only be retrieved when it's in the \"${\n                FINISHED_STATE}\" state. It's currently in the \"${\n                this.state}\" state`);\n    }\n\n    return this.transcription;\n};\n\n/**\n * Returns the current state of the transcription process\n */\nTranscriber.prototype.getState = function() {\n    return this.state;\n};\n\n/**\n * Resets the state to the \"before\" state, such that it's again possible to\n * call the start method\n */\nTranscriber.prototype.reset = function() {\n    this.state = BEFORE_STATE;\n    this.counter = null;\n    this.transcription = null;\n    this.startTime = null;\n    this.callback = null;\n    this.results = [];\n    this.lineLength = 0;\n};\n\nmodule.exports = Transcriber;\n","import Statistics from '../statistics/statistics';\n\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\n\n/**\n * Creates new instance of <tt>ComponentsVersions</tt> which will be discovering\n * the versions of conferencing system components in given\n * <tt>JitsiConference</tt>.\n * @param conference <tt>JitsiConference</tt> instance which will be used to\n *        listen for focus presence updates.\n * @constructor\n */\nexport default function ComponentsVersions(conference) {\n\n    this.versions = {};\n\n    this.conference = conference;\n    this.conference.addCommandListener(\n        'versions', this.processVersions.bind(this));\n}\n\nComponentsVersions.prototype.processVersions\n    = function(versions, mucResource, mucJid) {\n        if (!this.conference._isFocus(mucJid)) {\n            logger.warn(\n                `Received versions not from the focus user: ${versions}`,\n                mucJid);\n\n            return;\n        }\n\n        const log = [];\n\n        versions.children.forEach(component => {\n\n            const name = component.attributes.name;\n            const version = component.value;\n\n            if (this.versions[name] !== version) {\n                this.versions[name] = version;\n                logger.info(`Got ${name} version: ${version}`);\n\n                log.push({\n                    id: 'component_version',\n                    component: name,\n                    version\n                });\n            }\n        });\n\n        // logs versions to stats\n        if (log.length > 0) {\n            Statistics.sendLog(JSON.stringify(log));\n        }\n    };\n\n/**\n * Obtains the version of conferencing system component.\n * @param componentName the name of the component for which we want to obtain\n *        the version.\n * @returns {String} which describes the version of the component identified by\n *          given <tt>componentName</tt> or <tt>undefined</tt> if not found.\n */\nComponentsVersions.prototype.getComponentVersion = function(componentName) {\n    return this.versions[componentName];\n};\n","import { getLogger } from 'jitsi-meet-logger';\nconst logger = getLogger(__filename);\n\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\n\nimport JitsiVideoSIPGWSession from './JitsiVideoSIPGWSession';\nimport * as Constants from './VideoSIPGWConstants';\n\n/**\n * Main video SIP GW handler. Stores references of all created sessions.\n */\nexport default class VideoSIPGW {\n\n    /**\n     * Creates new handler.\n     *\n     * @param {ChatRoom} chatRoom - Tha chat room to handle.\n     */\n    constructor(chatRoom) {\n        this.chatRoom = chatRoom;\n        this.eventEmitter = chatRoom.eventEmitter;\n        logger.debug('creating VideoSIPGW');\n        this.sessions = {};\n\n        this.sessionStateChangeListener = this.sessionStateChanged.bind(this);\n\n        // VideoSIPGW, JitsiConference and ChatRoom are not reusable and no\n        // more than one VideoSIPGW can be created per JitsiConference,\n        // so we don't bother to cleanup\n        chatRoom.addPresenceListener('jibri-sip-call-state',\n            this.handleJibriSIPState.bind(this));\n    }\n\n    /**\n     * Handles presence nodes with name: jibri-sip-call-state.\n     *\n     * @param {Object} node the presence node Object to handle.\n     * Object representing part of the presence received over xmpp.\n     */\n    handleJibriSIPState(node) {\n        const attributes = node.attributes;\n\n        if (!attributes) {\n            return;\n        }\n\n        logger.debug('Handle video sip gw state : ', attributes);\n\n        const newState = attributes.state;\n\n        if (newState === this.state) {\n            return;\n        }\n\n        switch (newState) {\n        case Constants.STATE_ON:\n        case Constants.STATE_OFF:\n        case Constants.STATE_PENDING:\n        case Constants.STATE_RETRYING:\n        case Constants.STATE_FAILED: {\n            const address = attributes.sipaddress;\n\n            if (!address) {\n                return;\n            }\n\n            // find the corresponding session and set its state\n            const session = this.sessions[address];\n\n            if (session) {\n                session.setState(newState, attributes.failure_reason);\n            } else {\n                logger.warn('Video SIP GW session not found:', address);\n            }\n        }\n        }\n    }\n\n    /**\n     * Creates new session and stores its reference if it does not exist or\n     * returns an error otherwise.\n     *\n     * @param {string} sipAddress - The sip address to use.\n     * @param {string} displayName - The display name to use.\n     * @returns {JitsiVideoSIPGWSession|Error}\n     */\n    createVideoSIPGWSession(sipAddress, displayName) {\n        if (this.sessions[sipAddress]) {\n            logger.warn('There was already a Video SIP GW session for address',\n                sipAddress);\n\n            return new Error(Constants.ERROR_SESSION_EXISTS);\n        }\n\n        const session = new JitsiVideoSIPGWSession(\n            sipAddress, displayName, this.chatRoom);\n\n        session.addStateListener(this.sessionStateChangeListener);\n\n        this.sessions[sipAddress] = session;\n\n        return session;\n    }\n\n    /**\n     * Listener for session state changed. When a session goes to off or failed\n     * we delete its reference.\n     *\n     * @param {options} event - { address, oldState, newState, displayName }\n     */\n    sessionStateChanged(event) {\n        const address = event.address;\n\n        if (event.newState === Constants.STATE_OFF\n            || event.newState === Constants.STATE_FAILED) {\n            const session = this.sessions[address];\n\n            if (!session) {\n                logger.error('Missing Video SIP GW session with address:',\n                    address);\n\n                return;\n            }\n\n            session.removeStateListener(this.sessionStateChangeListener);\n            delete this.sessions[address];\n        }\n\n        this.eventEmitter.emit(\n            XMPPEvents.VIDEO_SIP_GW_SESSION_STATE_CHANGED,\n            event);\n    }\n}\n","import { getLogger } from 'jitsi-meet-logger';\nimport { $iq } from 'strophe.js';\n\nimport Listenable from '../util/Listenable';\n\nimport * as VideoSIPGWConstants from './VideoSIPGWConstants';\n\nconst logger = getLogger(__filename);\n\n/**\n * The event name for current sip video session state changed.\n * @type {string} event name for sip video session state changed.\n */\nconst STATE_CHANGED = 'STATE_CHANGED';\n\n/**\n * Jitsi video SIP GW session. Holding its state and able to start/stop it.\n * When session is in OFF or FAILED stated it cannot be used anymore.\n */\nexport default class JitsiVideoSIPGWSession extends Listenable {\n\n    /**\n     * Creates new session with the desired sip address and display name.\n     *\n     * @param {string} sipAddress - The sip address to use when\n     * starting the session.\n     * @param {string} displayName - The display name to use for\n     * that participant.\n     * @param {ChatRoom} chatRoom - The chat room this session is bound to.\n     */\n    constructor(sipAddress, displayName, chatRoom) {\n        super();\n\n        this.sipAddress = sipAddress;\n        this.displayName = displayName;\n        this.chatRoom = chatRoom;\n\n        /*\n         * The initial state is undefined. Initial state cannot be STATE_OFF,\n         * the session enters this state when it was in STATE_ON and was stopped\n         * and such session cannot be used anymore.\n         *\n         * @type {VideoSIPGWConstants|undefined}\n         */\n        this.state = undefined;\n    }\n\n    /**\n     * Stops the current session.\n     */\n    stop() {\n        if (this.state === VideoSIPGWConstants.STATE_OFF\n            || this.state === VideoSIPGWConstants.STATE_FAILED) {\n            logger.warn('Video SIP GW session already stopped or failed!');\n\n            return;\n        }\n\n        this._sendJibriIQ('stop');\n    }\n\n    /**\n     * Starts a new session. Sends an iq to the focus.\n     */\n    start() {\n        // if state is off, this session was active for some reason\n        // and we should create new one, rather than reusing it\n        if (this.state === VideoSIPGWConstants.STATE_ON\n            || this.state === VideoSIPGWConstants.STATE_OFF\n            || this.state === VideoSIPGWConstants.STATE_PENDING\n            || this.state === VideoSIPGWConstants.STATE_RETRYING) {\n            logger.warn('Video SIP GW session already started!');\n\n            return;\n        }\n\n        this._sendJibriIQ('start');\n    }\n\n    /**\n     * Changes the state of this session.\n     *\n     * @param {string} newState - The new {VideoSIPGWConstants} state to set.\n     * @param {string} [optional] failureReason - The reason why a failure state\n     * was entered.\n     * @returns {void}\n     */\n    setState(newState, failureReason) {\n        if (newState === this.state) {\n            return;\n        }\n\n        const oldState = this.state;\n\n        this.state = newState;\n        this.eventEmitter.emit(STATE_CHANGED,\n            {\n                address: this.sipAddress,\n                failureReason,\n                oldState,\n                newState: this.state,\n                displayName: this.displayName\n            }\n        );\n    }\n\n    /**\n     * Subscribes the passed listener to the event for state change of this\n     * session.\n     *\n     * @param {Function} listener - The function that will receive the event.\n     */\n    addStateListener(listener) {\n        this.addListener(STATE_CHANGED, listener);\n    }\n\n    /**\n     * Unsubscribes the passed handler.\n     *\n     * @param {Function} listener - The function to be removed.\n     */\n    removeStateListener(listener) {\n        this.removeListener(STATE_CHANGED, listener);\n    }\n\n    /**\n     * Sends a jibri command using an iq.\n     *\n     * @private\n     * @param {string} action - The action to send ('start' or 'stop').\n     */\n    _sendJibriIQ(action) {\n        const attributes = {\n            'xmlns': 'http://jitsi.org/protocol/jibri',\n            'action': action,\n            sipaddress: this.sipAddress\n        };\n\n        attributes.displayname = this.displayName;\n\n        const iq = $iq({\n            to: this.chatRoom.focusMucJid,\n            type: 'set' })\n            .c('jibri', attributes)\n            .up();\n\n        logger.debug(`${action} video SIP GW session`, iq.nodeTree);\n        this.chatRoom.connection.sendIQ(\n            iq,\n            () => {}, // eslint-disable-line no-empty-function\n            error => {\n                logger.error(\n                    `Failed to ${action} video SIP GW session, error: `, error);\n                this.setState(VideoSIPGWConstants.STATE_FAILED);\n            });\n    }\n}\n","import { getLogger } from 'jitsi-meet-logger';\n\nimport * as JitsiTrackEvents from '../../JitsiTrackEvents';\nimport RTC from '../RTC/RTC';\nimport Statistics from '../statistics/statistics';\n\n\nconst logger = getLogger(__filename);\n\n// If after 3000 ms the detector did not find any active devices consider that there aren't any usable ones available\n// i.e. audioLevel > 0.008\nconst DETECTION_TIMEOUT = 3000;\n\n\n/**\n * Go through all audio devices on the system and return one that is active, i.e. has audio signal.\n *\n * @returns Promise<Object> - Object containing information about the found device.\n */\nexport default function getActiveAudioDevice() {\n\n    return new Promise(resolve => {\n        RTC.enumerateDevices(devices => {\n            const audioDevices = devices.filter(device => device.kind === 'audioinput');\n            const devicePromiseArray = [];\n\n\n            for (const micDevice of audioDevices) {\n                const devicePromise = RTC.obtainAudioAndVideoPermissions({ devices: [ 'audio' ],\n                    micDeviceId: micDevice.deviceId }).then(tracks => {\n\n                    // We expect a single device to be available when obtained from obtainAudioAndVideoPermissions\n                    // that's  why only take p.value[0].\n                    const track = tracks[0];\n                    const originalStream = track.getOriginalStream();\n\n                    Statistics.startLocalStats(originalStream, track.setAudioLevel.bind(track));\n                    track.addEventListener(JitsiTrackEvents.LOCAL_TRACK_STOPPED, () => {\n                        Statistics.stopLocalStats(originalStream);\n                    });\n\n                    return track;\n                });\n\n                devicePromiseArray.push(devicePromise);\n            }\n\n            Promise.allSettled(devicePromiseArray).then(outcomeArray => {\n                const successfulPromises = outcomeArray.filter(p => p.status === 'fulfilled');\n                const rejectedPromises = outcomeArray.filter(p => p.status === 'rejected');\n\n\n                const availableDevices = successfulPromises.map(p => p.value);\n                const rejectReasons = rejectedPromises.map(p => p.value);\n\n                for (const reason of rejectReasons) {\n                    logger.error('Failed to acquire audio device with error: ', reason);\n                }\n\n                // Setup event handlers for monitored devices.\n                for (const device of availableDevices) {\n                    device.on(JitsiTrackEvents.TRACK_AUDIO_LEVEL_CHANGED, audioLevel => {\n                        // This is a very naive approach but works, a more accurate one would be to use rnnoise in\n                        // order to limit  the number of false positives. The 0.008 constant is due to how\n                        // LocalStatsCollector from lib-jitsi-meet publishes audio-levels, in this case 0.008 denotes //\n                        // no input.\n                        if (audioLevel > 0.008) {\n                            stopActiveDevices(availableDevices);\n                            resolve({ deviceId: device.deviceId,\n                                deviceLabel: device.track.label });\n                        }\n                    });\n                }\n\n                // Cancel the detection in case no devices was found with audioLevel > 0 in the set timeout.\n                setTimeout(() => {\n                    stopActiveDevices(availableDevices);\n                    resolve({\n                        deviceId: '',\n                        deviceLabel: '' }\n                    );\n                }, DETECTION_TIMEOUT);\n\n            });\n\n        });\n    });\n}\n\n/**\n * Stop the streams of the provided JitsiLocalTracks.\n *\n * @param {Array<JitsiLocalTrack>} deviceList - Array of JitsiLocalTracks to stop.\n * @returns {void}\n */\nfunction stopActiveDevices(deviceList) {\n    for (const device of deviceList) {\n        device.stopStream();\n    }\n}\n","/* globals $ */\n\nimport { getLogger } from 'jitsi-meet-logger';\nimport { $iq } from 'strophe.js';\n\nimport * as MediaType from '../../service/RTC/MediaType';\nimport VideoType from '../../service/RTC/VideoType';\nimport RTC from '../RTC/RTC';\n\nimport ProxyConnectionPC from './ProxyConnectionPC';\nimport { ACTIONS } from './constants';\n\nconst logger = getLogger(__filename);\n\n/**\n * Instantiates a new ProxyConnectionPC and ensures only one exists at a given\n * time. Currently it assumes ProxyConnectionPC is used only for screensharing\n * and assumes IQs to be used for communication.\n */\nexport default class ProxyConnectionService {\n    /**\n     * Initializes a new {@code ProxyConnectionService} instance.\n     *\n     * @param {Object} options - Values to initialize the instance with.\n     * @param {boolean} [options.convertVideoToDesktop] - Whether or not proxied\n     * video should be returned as a desktop stream. Defaults to false.\n     * @param {Object} [options.iceConfig] - The {@code RTCConfiguration} to use\n     * for the peer connection.\n     * @param {JitsiConnection} [options.jitsiConnection] - The\n     * {@code JitsiConnection} which will be used to fetch TURN credentials for\n     * the P2P connection.\n     * @param {Function} options.onRemoteStream - Callback to invoke when a\n     * remote video stream has been received and converted to a\n     * {@code JitsiLocakTrack}. The {@code JitsiLocakTrack} will be passed in.\n     * @param {Function} options.onSendMessage - Callback to invoke when a\n     * message has to be sent (signaled) out. The arguments passed in are the\n     * jid to send the message to and the message\n     */\n    constructor(options = {}) {\n        const {\n            jitsiConnection,\n            ...otherOptions\n        } = options;\n\n        /**\n         * Holds a reference to the collection of all callbacks.\n         *\n         * @type {Object}\n         */\n        this._options = {\n            iceConfig: jitsiConnection\n                && jitsiConnection.xmpp.connection.jingle.p2pIceConfig,\n            ...otherOptions\n        };\n\n        /**\n         * The active instance of {@code ProxyConnectionService}.\n         *\n         * @type {ProxyConnectionPC|null}\n         */\n        this._peerConnection = null;\n\n        // Bind event handlers so they are only bound once for every instance.\n        this._onFatalError = this._onFatalError.bind(this);\n        this._onSendMessage = this._onSendMessage.bind(this);\n        this._onRemoteStream = this._onRemoteStream.bind(this);\n    }\n\n    /**\n     * Parses a message object regarding a proxy connection to create a new\n     * proxy connection or update and existing connection.\n     *\n     * @param {Object} message - A message object regarding establishing or\n     * updating a proxy connection.\n     * @param {Object} message.data - An object containing additional message\n     * details.\n     * @param {string} message.data.iq - The stringified iq which explains how\n     * and what to update regarding the proxy connection.\n     * @param {string} message.from - The message sender's full jid. Used for\n     * sending replies.\n     * @returns {void}\n     */\n    processMessage(message) {\n        const peerJid = message.from;\n\n        if (!peerJid) {\n            return;\n        }\n\n        // If a proxy connection has already been established and messages come\n        // from another peer jid then those messages should be replied to with\n        // a rejection.\n        if (this._peerConnection\n            && this._peerConnection.getPeerJid() !== peerJid) {\n            this._onFatalError(\n                peerJid,\n                ACTIONS.CONNECTION_ERROR,\n                'rejected'\n            );\n\n            return;\n        }\n\n        const iq = this._convertStringToXML(message.data.iq);\n        const $jingle = iq && iq.find('jingle');\n        const action = $jingle && $jingle.attr('action');\n\n        if (action === ACTIONS.INITIATE) {\n            this._peerConnection = this._createPeerConnection(peerJid, {\n                isInitiator: false,\n                receiveVideo: true\n            });\n        }\n\n        // Truthy check for peer connection added to protect against possibly\n        // receiving actions before an ACTIONS.INITIATE.\n        if (this._peerConnection) {\n            this._peerConnection.processMessage($jingle);\n        }\n\n        // Take additional steps to ensure the peer connection is cleaned up\n        // if it is to be closed.\n        if (action === ACTIONS.CONNECTION_ERROR\n            || action === ACTIONS.UNAVAILABLE\n            || action === ACTIONS.TERMINATE) {\n            this._selfCloseConnection();\n        }\n\n        return;\n    }\n\n    /**\n     * Instantiates and initiates a proxy peer connection.\n     *\n     * @param {string} peerJid - The jid of the remote client that should\n     * receive messages.\n     * @param {Array<JitsiLocalTrack>} localTracks - Initial media tracks to\n     * send through to the peer.\n     * @returns {void}\n     */\n    start(peerJid, localTracks = []) {\n        this._peerConnection = this._createPeerConnection(peerJid, {\n            isInitiator: true,\n            receiveVideo: false\n        });\n\n        this._peerConnection.start(localTracks);\n    }\n\n    /**\n     * Terminates any active proxy peer connection.\n     *\n     * @returns {void}\n     */\n    stop() {\n        if (this._peerConnection) {\n            this._peerConnection.stop();\n        }\n\n        this._peerConnection = null;\n    }\n\n    /**\n     * Transforms a stringified xML into a XML wrapped in jQuery.\n     *\n     * @param {string} xml - The XML in string form.\n     * @private\n     * @returns {Object|null} A jQuery version of the xml. Null will be returned\n     * if an error is encountered during transformation.\n     */\n    _convertStringToXML(xml) {\n        try {\n            const xmlDom = new DOMParser().parseFromString(xml, 'text/xml');\n\n            return $(xmlDom);\n        } catch (e) {\n            logger.error('Attempted to convert incorrectly formatted xml');\n\n            return null;\n        }\n    }\n\n    /**\n     * Helper for creating an instance of {@code ProxyConnectionPC}.\n     *\n     * @param {string} peerJid - The jid of the remote peer with which the\n     * {@code ProxyConnectionPC} will be established with.\n     * @param {Object} options - Additional defaults to instantiate the\n     * {@code ProxyConnectionPC} with. See the constructor of ProxyConnectionPC\n     * for more details.\n     * @private\n     * @returns {ProxyConnectionPC}\n     */\n    _createPeerConnection(peerJid, options = {}) {\n        if (!peerJid) {\n            throw new Error('Cannot create ProxyConnectionPC without a peer.');\n        }\n\n        const pcOptions = {\n            iceConfig: this._options.iceConfig,\n            onError: this._onFatalError,\n            onRemoteStream: this._onRemoteStream,\n            onSendMessage: this._onSendMessage,\n            peerJid,\n            ...options\n        };\n\n        return new ProxyConnectionPC(pcOptions);\n    }\n\n    /**\n     * Callback invoked when an error occurs that should cause\n     * {@code ProxyConnectionPC} to be closed if the peer is currently\n     * connected. Sends an error message/reply back to the peer.\n     *\n     * @param {string} peerJid - The peer jid with which the connection was\n     * attempted or started, and to which an iq with error details should be\n     * sent.\n     * @param {string} errorType - The constant indicating the type of the error\n     * that occured.\n     * @param {string} details - Optional additional data about the error.\n     * @private\n     * @returns {void}\n     */\n    _onFatalError(peerJid, errorType, details = '') {\n        logger.error(\n            'Received a proxy connection error', peerJid, errorType, details);\n\n        const iq = $iq({\n            to: peerJid,\n            type: 'set'\n        })\n            .c('jingle', {\n                xmlns: 'urn:xmpp:jingle:1',\n                action: errorType\n            })\n            .c('details')\n            .t(details)\n            .up();\n\n        this._onSendMessage(peerJid, iq);\n\n        if (this._peerConnection\n            && this._peerConnection.getPeerJid() === peerJid) {\n            this._selfCloseConnection();\n        }\n    }\n\n    /**\n     * Callback invoked when the remote peer of the {@code ProxyConnectionPC}\n     * has offered a media stream. The stream is converted into a\n     * {@code JitsiLocalTrack} for local usage if the {@code onRemoteStream}\n     * callback is defined.\n     *\n     * @param {JitsiRemoteTrack} jitsiRemoteTrack - The {@code JitsiRemoteTrack}\n     * for the peer's media stream.\n     * @private\n     * @returns {void}\n     */\n    _onRemoteStream(jitsiRemoteTrack) {\n        if (!this._options.onRemoteStream) {\n            logger.error('Remote track received without callback.');\n            jitsiRemoteTrack.dispose();\n\n            return;\n        }\n\n        const isVideo = jitsiRemoteTrack.isVideoTrack();\n        let videoType;\n\n        if (isVideo) {\n            videoType = this._options.convertVideoToDesktop\n                ? VideoType.DESKTOP : VideoType.CAMERA;\n        }\n\n        // Grab the webrtc media stream and pipe it through the same processing\n        // that would occur for a locally obtained media stream.\n        const mediaStream = jitsiRemoteTrack.getOriginalStream();\n        const jitsiLocalTracks = RTC.createLocalTracks(\n            [\n                {\n                    deviceId:\n                        `proxy:${this._peerConnection.getPeerJid()}`,\n                    mediaType: isVideo ? MediaType.VIDEO : MediaType.AUDIO,\n                    sourceType: 'proxy',\n                    stream: mediaStream,\n                    track: mediaStream.getVideoTracks()[0],\n                    videoType\n                }\n            ]);\n\n        this._options.onRemoteStream(jitsiLocalTracks[0]);\n    }\n\n    /**\n     * Formats and forwards a message an iq to be sent to a peer jid.\n     *\n     * @param {string} peerJid - The jid the iq should be sent to.\n     * @param {Object} iq - The iq which would be sent to the peer jid.\n     * @private\n     * @returns {void}\n     */\n    _onSendMessage(peerJid, iq) {\n        if (!this._options.onSendMessage) {\n            return;\n        }\n\n        try {\n            const stringifiedIq\n                = new XMLSerializer().serializeToString(iq.nodeTree || iq);\n\n            this._options.onSendMessage(peerJid, { iq: stringifiedIq });\n        } catch (e) {\n            logger.error('Attempted to send an incorrectly formatted iq.');\n        }\n    }\n\n    /**\n     * Invoked when preemptively closing the {@code ProxyConnectionPC}.\n     *\n     * @private\n     * @returns {void}\n     */\n    _selfCloseConnection() {\n        this.stop();\n\n        this._options.onConnectionClosed\n            && this._options.onConnectionClosed();\n    }\n}\n","import { getLogger } from 'jitsi-meet-logger';\n\nimport RTCEvents from '../../service/RTC/RTCEvents';\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\nimport RTC from '../RTC/RTC';\nimport JingleSessionPC from '../xmpp/JingleSessionPC';\nimport { DEFAULT_STUN_SERVERS } from '../xmpp/xmpp';\n\nimport { ACTIONS } from './constants';\n\nconst logger = getLogger(__filename);\n\n/**\n * An adapter around {@code JingleSessionPC} so its logic can be re-used without\n * an XMPP connection. It is being re-used for consistency with the rest of the\n * codebase and to leverage existing peer connection event handling. Also\n * this class provides a facade to hide most of the API for\n * {@code JingleSessionPC}.\n */\nexport default class ProxyConnectionPC {\n    /**\n     * Initializes a new {@code ProxyConnectionPC} instance.\n     *\n     * @param {Object} options - Values to initialize the instance with.\n     * @param {Object} [options.iceConfig] - The {@code RTCConfiguration} to use\n     * for the peer connection.\n     * @param {boolean} [options.isInitiator] - If true, the local client should\n     * send offers. If false, the local client should send answers. Defaults to\n     * false.\n     * @param {Function} options.onRemoteStream - Callback to invoke when a\n     * remote media stream has been received through the peer connection.\n     * @param {string} options.peerJid - The jid of the remote client with which\n     * the peer connection is being establish and which should receive direct\n     * messages regarding peer connection updates.\n     * @param {boolean} [options.receiveVideo] - Whether or not the peer\n     * connection should accept incoming video streams. Defaults to false.\n     * @param {Function} options.onSendMessage - Callback to invoke when a\n     * message has to be sent (signaled) out.\n     */\n    constructor(options = {}) {\n        this._options = {\n            iceConfig: {},\n            isInitiator: false,\n            receiveAudio: false,\n            receiveVideo: false,\n            ...options\n        };\n\n        /**\n         * Instances of {@code JitsiTrack} associated with this instance of\n         * {@code ProxyConnectionPC}.\n         *\n         * @type {Array<JitsiTrack>}\n         */\n        this._tracks = [];\n\n        /**\n         * The active instance of {@code JingleSessionPC}.\n         *\n         * @type {JingleSessionPC|null}\n         */\n        this._peerConnection = null;\n\n        // Bind event handlers so they are only bound once for every instance.\n        this._onError = this._onError.bind(this);\n        this._onRemoteStream = this._onRemoteStream.bind(this);\n        this._onSendMessage = this._onSendMessage.bind(this);\n    }\n\n    /**\n     * Returns the jid of the remote peer with which this peer connection should\n     * be established with.\n     *\n     * @returns {string}\n     */\n    getPeerJid() {\n        return this._options.peerJid;\n    }\n\n    /**\n     * Updates the peer connection based on the passed in jingle.\n     *\n     * @param {Object} $jingle - An XML jingle element, wrapped in query,\n     * describing how the peer connection should be updated.\n     * @returns {void}\n     */\n    processMessage($jingle) {\n        switch ($jingle.attr('action')) {\n        case ACTIONS.ACCEPT:\n            this._onSessionAccept($jingle);\n            break;\n\n        case ACTIONS.INITIATE:\n            this._onSessionInitiate($jingle);\n            break;\n\n        case ACTIONS.TERMINATE:\n            this._onSessionTerminate($jingle);\n            break;\n\n        case ACTIONS.TRANSPORT_INFO:\n            this._onTransportInfo($jingle);\n            break;\n        }\n    }\n\n    /**\n     * Instantiates a peer connection and starts the offer/answer cycle to\n     * establish a connection with a remote peer.\n     *\n     * @param {Array<JitsiLocalTrack>} localTracks - Initial local tracks to add\n     * to add to the peer connection.\n     * @returns {void}\n     */\n    start(localTracks = []) {\n        if (this._peerConnection) {\n            return;\n        }\n\n        this._tracks = this._tracks.concat(localTracks);\n\n        this._peerConnection = this._createPeerConnection();\n\n        this._peerConnection.invite(localTracks);\n    }\n\n    /**\n     * Begins the process of disconnecting from a remote peer and cleaning up\n     * the peer connection.\n     *\n     * @returns {void}\n     */\n    stop() {\n        if (this._peerConnection) {\n            this._peerConnection.terminate();\n        }\n\n        this._onSessionTerminate();\n    }\n\n    /**\n     * Instantiates a new {@code JingleSessionPC} by stubbing out the various\n     * dependencies of {@code JingleSessionPC}.\n     *\n     * @private\n     * @returns {JingleSessionPC}\n     */\n    _createPeerConnection() {\n        /**\n         * {@code JingleSessionPC} takes in the entire jitsi-meet config.js\n         * object, which may not be accessible from the caller.\n         *\n         * @type {Object}\n         */\n        const configStub = {};\n\n        /**\n         * {@code JingleSessionPC} assumes an XMPP/Strophe connection object is\n         * passed through, which also has the jingle plugin initialized on it.\n         * This connection object is used to signal out peer connection updates\n         * via iqs, and those updates need to be piped back out to the remote\n         * peer.\n         *\n         * @type {Object}\n         */\n        const connectionStub = {\n            // At the time this is used for Spot and it's okay to say the connection is always connected, because if\n            // spot has no signalling it will not be in a meeting where this is used.\n            connected: true,\n            jingle: {\n                terminate: () => { /** no-op */ }\n            },\n            sendIQ: this._onSendMessage,\n\n            // Returns empty function, because it does not add any listeners for real\n            // eslint-disable-next-line no-empty-function\n            addEventListener: () => () => { }\n        };\n\n        /**\n         * {@code JingleSessionPC} can take in a custom ice configuration,\n         * depending on the peer connection type, peer-to-peer or other.\n         * However, {@code ProxyConnectionPC} always assume a peer-to-peer\n         * connection so the ice configuration is hard-coded with defaults.\n         *\n         * @type {Object}\n         */\n        const iceConfigStub = {\n            iceServers: DEFAULT_STUN_SERVERS,\n            ...this._options.iceConfig\n        };\n\n        /**\n         * {@code JingleSessionPC} expects an instance of\n         * {@code JitsiConference}, which has an event emitter that is used\n         * to signal various connection updates that the local client should\n         * act upon. The conference instance is not a dependency of a proxy\n         * connection, but the emitted events can be relevant to the proxy\n         * connection so the event emitter is stubbed.\n         *\n         * @param {string} event - The constant for the event type.\n         * @type {Function}\n         * @returns {void}\n         */\n        const emitter = event => {\n            switch (event) {\n            case XMPPEvents.CONNECTION_ICE_FAILED:\n            case XMPPEvents.CONNECTION_FAILED:\n                this._onError(ACTIONS.CONNECTION_ERROR, event);\n                break;\n            }\n        };\n\n        /**\n         * {@link JingleSessionPC} expects an instance of\n         * {@link ChatRoom} to be passed in. {@link ProxyConnectionPC}\n         * is instantiated outside of the {@code JitsiConference}, so it must be\n         * stubbed to prevent errors.\n         *\n         * @type {Object}\n         */\n        const roomStub = {\n            addPresenceListener: () => { /** no-op */ },\n            connectionTimes: [],\n            eventEmitter: { emit: emitter },\n            getMediaPresenceInfo: () => {\n                // Errors occur if this function does not return an object\n\n                return {};\n            },\n            removePresenceListener: () => { /** no-op */ }\n        };\n\n        /**\n         * A {@code JitsiConference} stub passed to the {@link RTC} module.\n         * @type {Object}\n         */\n        const conferenceStub = {};\n\n        /**\n         * Create an instance of {@code RTC} as it is required for peer\n         * connection creation by {@code JingleSessionPC}. An existing instance\n         * of {@code RTC} from elsewhere should not be re-used because it is\n         * a stateful grouping of utilities.\n         */\n        this._rtc = new RTC(conferenceStub, {});\n\n        /**\n         * Add the remote track listener here as {@code JingleSessionPC} has\n         * {@code TraceablePeerConnection} which uses {@code RTC}'s event\n         * emitter.\n         */\n        this._rtc.addListener(\n            RTCEvents.REMOTE_TRACK_ADDED,\n            this._onRemoteStream\n        );\n\n        const peerConnection = new JingleSessionPC(\n            undefined, // sid\n            undefined, // localJid\n            this._options.peerJid, // remoteJid\n            connectionStub, // connection\n            {\n                offerToReceiveAudio: this._options.receiveAudio,\n                offerToReceiveVideo: this._options.receiveVideo\n            }, // mediaConstraints\n            iceConfigStub, // iceConfig\n            true, // isP2P\n            this._options.isInitiator // isInitiator\n        );\n\n        /**\n         * An additional initialize call is necessary to properly set instance\n         * variable for calling.\n         */\n        peerConnection.initialize(roomStub, this._rtc, configStub);\n\n        return peerConnection;\n    }\n\n    /**\n     * Invoked when a connection related issue has been encountered.\n     *\n     * @param {string} errorType - The constant indicating the type of the error\n     * that occured.\n     * @param {string} details - Optional additional data about the error.\n     * @private\n     * @returns {void}\n     */\n    _onError(errorType, details = '') {\n        this._options.onError(this._options.peerJid, errorType, details);\n    }\n\n    /**\n     * Callback invoked when the peer connection has received a remote media\n     * stream.\n     *\n     * @param {JitsiRemoteTrack} jitsiRemoteTrack - The remote media stream\n     * wrapped in {@code JitsiRemoteTrack}.\n     * @private\n     * @returns {void}\n     */\n    _onRemoteStream(jitsiRemoteTrack) {\n        this._tracks.push(jitsiRemoteTrack);\n\n        this._options.onRemoteStream(jitsiRemoteTrack);\n    }\n\n    /**\n     * Callback invoked when {@code JingleSessionPC} needs to signal a message\n     * out to the remote peer.\n     *\n     * @param {XML} iq - The message to signal out.\n     * @private\n     * @returns {void}\n     */\n    _onSendMessage(iq) {\n        this._options.onSendMessage(this._options.peerJid, iq);\n    }\n\n    /**\n     * Callback invoked in response to an agreement to start a proxy connection.\n     * The passed in jingle element should contain an SDP answer to a previously\n     * sent SDP offer.\n     *\n     * @param {Object} $jingle - The jingle element wrapped in jQuery.\n     * @private\n     * @returns {void}\n     */\n    _onSessionAccept($jingle) {\n        if (!this._peerConnection) {\n            logger.error('Received an answer when no peer connection exists.');\n\n            return;\n        }\n\n        this._peerConnection.setAnswer($jingle);\n    }\n\n    /**\n     * Callback invoked in response to a request to start a proxy connection.\n     * The passed in jingle element should contain an SDP offer.\n     *\n     * @param {Object} $jingle - The jingle element wrapped in jQuery.\n     * @private\n     * @returns {void}\n     */\n    _onSessionInitiate($jingle) {\n        if (this._peerConnection) {\n            logger.error('Received an offer when an offer was already sent.');\n\n            return;\n        }\n\n        this._peerConnection = this._createPeerConnection();\n\n        this._peerConnection.acceptOffer(\n            $jingle,\n            () => { /** no-op */ },\n            () => this._onError(\n                this._options.peerJid,\n                ACTIONS.CONNECTION_ERROR,\n                'session initiate error'\n            )\n        );\n    }\n\n    /**\n     * Callback invoked in response to a request to disconnect an active proxy\n     * connection. Cleans up tracks and the peer connection.\n     *\n     * @private\n     * @returns {void}\n     */\n    _onSessionTerminate() {\n        this._tracks.forEach(track => track.dispose());\n        this._tracks = [];\n\n        if (this._peerConnection) {\n            this._peerConnection.onTerminated();\n        }\n\n        if (this._rtc) {\n            this._rtc.removeListener(\n                RTCEvents.REMOTE_TRACK_ADDED,\n                this._onRemoteStream\n            );\n\n            this._rtc.destroy();\n        }\n    }\n\n    /**\n     * Callback invoked in response to ICE candidates from the remote peer.\n     * The passed in jingle element should contain an ICE candidate.\n     *\n     * @param {Object} $jingle - The jingle element wrapped in jQuery.\n     * @private\n     * @returns {void}\n     */\n    _onTransportInfo($jingle) {\n        this._peerConnection.addIceCandidates($jingle);\n    }\n}\n","export default {\n    error: {\n        BUSY: 'busy',\n        ERROR: 'error',\n        RESOURCE_CONSTRAINT: 'resource-constraint',\n        SERVICE_UNAVAILABLE: 'service-unavailable'\n    },\n    mode: {\n        FILE: 'file',\n        STREAM: 'stream'\n    },\n    status: {\n        OFF: 'off',\n        ON: 'on',\n        PENDING: 'pending'\n    }\n};\n","import EventEmitter from 'events';\n\nimport browser from '../browser';\nimport Settings from '../settings/Settings';\nimport ScriptUtil from '../util/ScriptUtil';\n\nimport { CALLSTATS_SCRIPT_URL } from './constants';\n\nconst PRECALL_TEST_RESULTS = 'preCallTestResults';\nconst emitter = new EventEmitter();\nlet _initialized = false;\nlet api = null;\n\n/**\n * Loads the callstats io script.\n *\n * @returns {Promise<void>}\n */\nfunction _loadScript() {\n    if (browser.isReactNative()) {\n        return;\n    }\n\n    return new Promise(resolve => {\n        ScriptUtil.loadScript(\n            CALLSTATS_SCRIPT_URL,\n            /* async */ true,\n            /* prepend */ true,\n            /* relativeURL */ undefined,\n            /* loadCallback */ resolve);\n    });\n}\n\n/**\n * Initializes the callstats lib and registers a callback to be invoked\n * when there are 'preCallTestResults'.\n *\n * @typedef PrecallTestOptions\n * @type {Object}\n * @property {string} callStatsID - Callstats credentials - the id.\n * @property {string} callStatsSecret - Callstats credentials - the secret.\n * @property {string} statisticsId - The user name to use when initializing callstats.\n * @property {string} statisticsDisplayName - The user display name.\n *\n * @param { PrecallTestOptions} options - The init options.\n * @returns {Promise<void>}\n */\nfunction _initialize(options) {\n    return new Promise((resolve, reject) => {\n        const appId = options.callStatsID;\n        const appSecret = options.callStatsSecret;\n        const userId = options.statisticsId || options.statisticsDisplayName || Settings.callStatsUserName;\n\n        api.initialize(appId, appSecret, userId, (status, message) => {\n            if (status === 'success') {\n                api.on(PRECALL_TEST_RESULTS, (...args) => {\n                    emitter.emit(PRECALL_TEST_RESULTS, ...args);\n                });\n                _initialized = true;\n                resolve();\n            } else {\n                reject({\n                    status,\n                    message\n                });\n            }\n        }, null, { disablePrecalltest: true });\n    });\n}\n\n/**\n * Loads the callstats script and initializes the library.\n *\n * @param {Function} onResult - The callback to be invoked when results are received.\n * @returns {Promise<void>}\n */\nexport async function init(options) {\n    if (_initialized) {\n        throw new Error('Precall Test already initialized');\n    }\n\n    const { callStatsID, callStatsSecret, disableThirdPartyRequests } = options;\n\n    if (!callStatsID || !callStatsSecret || disableThirdPartyRequests) {\n        throw new Error('Callstats is disabled');\n    }\n\n    await _loadScript();\n    // eslint-disable-next-line new-cap\n    api = new window.callstats();\n\n    return _initialize(options);\n}\n\n/**\n * Executes a pre call test.\n *\n * @typedef PrecallTestResults\n * @type {Object}\n * @property {boolean} mediaConnectivity - If there is media connectivity or not.\n * @property {number} throughput  - The average throughput.\n * @property {number} fractionalLoss - The packet loss.\n * @property {number} rtt - The round trip time.\n * @property {string} provider - It is usually 'callstats'.\n *\n * @returns {Promise<{PrecallTestResults}>}\n */\nexport function execute() {\n    if (!_initialized) {\n        return Promise.reject('uninitialized');\n    }\n\n    return new Promise((resolve, reject) => {\n        emitter.on(PRECALL_TEST_RESULTS, (status, payload) => {\n            if (status === 'success') {\n                resolve(payload);\n            } else {\n                reject({\n                    status,\n                    payload\n                });\n            }\n\n        });\n\n        api.makePrecallTest();\n    });\n}\n\nexport default {\n    init,\n    execute\n};\n","const AuthUtil = {\n    /**\n     * Creates the URL pointing to JWT token authentication service. It is\n     * formatted from the 'urlPattern' argument which can contain the following\n     * constants:\n     * '{room}' - name of the conference room passed as <tt>roomName</tt>\n     * argument to this method.\n     * '{roleUpgrade}' - will contain 'true' if the URL will be used for\n     * the role upgrade scenario, where user connects from anonymous domain and\n     * then gets upgraded to the moderator by logging-in from the popup window.\n     *\n     * @param urlPattern a URL pattern pointing to the login service\n     * @param roomName the name of the conference room for which the user will\n     * be authenticated\n     * @param {bool} roleUpgrade <tt>true</tt> if the URL will be used for role\n     * upgrade scenario, where the user logs-in from the popup window in order\n     * to have the moderator rights granted\n     *\n     * @returns {string|null} the URL pointing to JWT login service or\n     * <tt>null</tt> if 'urlPattern' is not a string and the URL can not be\n     * constructed.\n     */\n    getTokenAuthUrl(urlPattern, roomName, roleUpgrade) {\n        const url = urlPattern;\n\n        if (typeof url !== 'string') {\n            return null;\n        }\n\n        return url.replace('{room}', roomName)\n            .replace('{roleUpgrade}', roleUpgrade === true);\n    }\n};\n\nmodule.exports = AuthUtil;\n","/* global\n    __filename\n*/\n\nimport { getLogger } from 'jitsi-meet-logger';\n\nimport { createAudioContext } from './WebAudioUtils';\n\nconst logger = getLogger(__filename);\n\n/**\n * The AudioMixer, as the name implies, mixes a number of MediaStreams containing audio tracks into a single\n * MediaStream.\n */\nexport default class AudioMixer {\n    /**\n     * Create AudioMixer instance.\n     */\n    constructor() {\n        this._started = false;\n        this._streamsToMix = [];\n        this._streamMSSArray = [];\n    }\n\n    /**\n     * Add audio MediaStream to be mixed, if the stream doesn't contain any audio tracks it will be ignored.\n     *\n     * @param {MediaStream} stream - MediaStream to be mixed.\n     */\n    addMediaStream(stream) {\n        if (!stream.getAudioTracks()) {\n            logger.warn('Added MediaStream doesn\\'t contain audio tracks.');\n        }\n\n        this._streamsToMix.push(stream);\n    }\n\n    /**\n     * At this point a WebAudio ChannelMergerNode is created and and the two associated MediaStreams are connected to\n     * it; the resulting mixed MediaStream is returned.\n     *\n     * @returns {MediaStream} - MediaStream containing added streams mixed together, or null if no MediaStream\n     * is added.\n     */\n    start() {\n        // If the mixer was already started just return the existing mixed stream.\n        if (this._started) {\n            return this._mixedMSD.stream;\n        }\n\n        this._audioContext = createAudioContext();\n\n        if (!this._streamsToMix.length) {\n            logger.warn('No MediaStream\\'s added to AudioMixer, nothing will happen.');\n\n            return null;\n        }\n\n        this._started = true;\n\n        this._mixedMSD = this._audioContext.createMediaStreamDestination();\n\n        for (const stream of this._streamsToMix) {\n            const streamMSS = this._audioContext.createMediaStreamSource(stream);\n\n            streamMSS.connect(this._mixedMSD);\n\n            // Maintain a list of MediaStreamAudioSourceNode so we can disconnect them on reset.\n            this._streamMSSArray.push(streamMSS);\n        }\n\n        return this._mixedMSD.stream;\n    }\n\n    /**\n     * Disconnect MediaStreamAudioSourceNode and clear references.\n     *\n     * @returns {void}\n     */\n    reset() {\n        this._started = false;\n        this._streamsToMix = [];\n\n        // Clean up created MediaStreamAudioSourceNode.\n        for (const streamMSS of this._streamMSSArray) {\n            streamMSS.disconnect();\n        }\n\n        this._streamMSSArray = [];\n\n        if (this._audioContext) {\n            this._audioContext = undefined;\n        }\n    }\n}\n","/* Copyright @ 2015 - Present, 8x8 Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport transform from 'sdp-transform';\n\n/**\n * Rewrites the source information in the way sdp-transform expects.\n * Source information is split into multiple ssrc objects each containing\n * an id, attribute and value.\n * @param {Object} media - media description to be modified.\n * @returns {void}\n */\nconst write = function(session, opts) {\n    if (typeof session !== 'undefined' && typeof session.media !== 'undefined' && Array.isArray(session.media)) {\n        session.media.forEach(mLine => {\n            if (mLine.sources && mLine.sources.length) {\n                mLine.ssrcs = [];\n                mLine.sources.forEach(source => {\n                    Object.keys(source).forEach(attribute => {\n                        if (attribute === 'id') {\n                            return;\n                        }\n                        mLine.ssrcs.push({\n                            id: source.id,\n                            attribute,\n                            value: source[attribute]\n                        });\n                    });\n                });\n                delete mLine.sources;\n            }\n\n            // join ssrcs in ssrc groups\n            if (mLine.ssrcGroups && mLine.ssrcGroups.length) {\n                mLine.ssrcGroups.forEach(ssrcGroup => {\n                    if (typeof ssrcGroup.ssrcs !== 'undefined'\n                    && Array.isArray(ssrcGroup.ssrcs)) {\n                        ssrcGroup.ssrcs = ssrcGroup.ssrcs.join(' ');\n                    }\n                });\n            }\n        });\n    }\n\n    return transform.write(session, opts);\n};\n\n/**\n * Rewrites the source information that we get from sdp-transform.\n * All the ssrc lines with different attributes that belong to the\n * same ssrc are grouped into a single soure object with multiple key value pairs.\n * @param {Object} media - media description to be modified.\n * @returns {void}\n */\nconst parse = function(sdp) {\n    const session = transform.parse(sdp);\n\n    if (typeof session !== 'undefined' && typeof session.media !== 'undefined' && Array.isArray(session.media)) {\n        session.media.forEach(mLine => {\n            // group sources attributes by ssrc\n            if (typeof mLine.ssrcs !== 'undefined' && Array.isArray(mLine.ssrcs)) {\n                mLine.sources = [];\n                mLine.ssrcs.forEach(ssrc => {\n                    const found = mLine.sources.findIndex(source => source.id === ssrc.id);\n\n                    if (found > -1) {\n                        mLine.sources[found][ssrc.attribute] = ssrc.value;\n                    } else {\n                        const src = { id: ssrc.id };\n\n                        src[ssrc.attribute] = ssrc.value;\n                        mLine.sources.push(src);\n                    }\n                });\n                delete mLine.ssrcs;\n            }\n\n            // split ssrcs in ssrc groups\n            if (typeof mLine.ssrcGroups !== 'undefined' && Array.isArray(mLine.ssrcGroups)) {\n                mLine.ssrcGroups.forEach(ssrcGroup => {\n                    if (typeof ssrcGroup.ssrcs === 'string') {\n                        ssrcGroup.ssrcs = ssrcGroup.ssrcs.split(' ');\n                    }\n                });\n            }\n        });\n    }\n\n    return session;\n};\n\nexport default {\n    write,\n    parse\n};\n","/* Copyright @ 2015 - Present, 8x8 Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport clonedeep from 'lodash.clonedeep';\nimport transform from './transform.js';\n\nconst PLAN_B_MIDS = [ 'audio', 'video', 'data' ];\nconst findSimGroup = ssrcGroup => ssrcGroup.find(grp => grp.semantics === 'SIM');\nconst findFidGroup = ssrcGroup => ssrcGroup.find(grp => grp.semantics === 'FID');\n\n/**\n * Add the ssrcs of the SIM group and their corresponding FID group ssrcs\n * to the m-line.\n * @param {Object} mLine - The m-line to which ssrcs have to be added.\n * @param {Object} simGroup - The SIM group whose ssrcs have to be added to\n * the m-line.\n * @param {Object} sourceGroups - inverted source-group map.\n * @param {Array<Object>} sourceList - array containing all the sources.\n */\nfunction addSimGroupSources(mLine, simGroup, sourceGroups, sourceList) {\n    if (!mLine || !simGroup) {\n        return;\n    }\n    const findSourcebyId = src => sourceList.find(source => source.id.toString() === src);\n\n    simGroup.ssrcs.forEach(src => {\n        mLine.sources.push(findSourcebyId(src));\n\n        // find the related FID group member for this ssrc.\n        const relatedFidGroup = sourceGroups[parseInt(src, 10)].find(grp => grp.semantics === 'FID');\n\n        if (relatedFidGroup) {\n            const relatedSsrc = relatedFidGroup.ssrcs.find(s => s !== src);\n\n            mLine.sources.push(findSourcebyId(relatedSsrc));\n            mLine.ssrcGroups.push(relatedFidGroup);\n        }\n    });\n\n    // Add the SIM group last.\n    mLine.ssrcGroups.push(simGroup);\n}\n\n/**\n * Add ssrcs and ssrc-groups to the m-line. When a primary ssrc, i.e., the\n * first ssrc in a SIM group is passed, all the other ssrcs from the SIM\n * group and the other ssrcs from the related FID groups are added to the same\n * m-line since they all belong to the same remote source. Since the ssrcs are\n * not guaranteed to be in the correct order, try to find if a SIM group exists,\n * if not, just add the FID group.\n * @param {Object} mLine - The m-line to which ssrcs have to be added.\n * @param {Object} ssrc - the primary ssrc.\n * @param {Object} sourceGroups - inverted source-group map.\n * @param {Array<Object>} sourceList - array containing all the sources.\n * @returns {void}\n */\nfunction addSourcesToMline(mLine, ssrc, sourceGroups, sourceList) {\n    if (!mLine || !ssrc) {\n        return;\n    }\n    mLine.sources = [];\n    mLine.ssrcGroups = [];\n\n    // If there are no associated ssrc-groups, just add the ssrc and msid.\n    if (!sourceGroups[ssrc.id]) {\n        mLine.sources.push(ssrc);\n        mLine.msid = ssrc.msid;\n\n        return;\n    }\n    const findSourcebyId = src => sourceList.find(source => source.id.toString() === src);\n\n    // Find the SIM and FID groups that this ssrc belongs to.\n    const simGroup = findSimGroup(sourceGroups[ssrc.id]);\n    const fidGroup = findFidGroup(sourceGroups[ssrc.id]);\n\n    // Add the ssrcs for the SIM group and their corresponding FID groups.\n    if (simGroup) {\n        addSimGroupSources(mLine, simGroup, sourceGroups, sourceList);\n    } else if (fidGroup) {\n        // check if the other ssrc from this FID group is part of a SIM group\n        const otherSsrc = fidGroup.ssrcs.find(s => s !== ssrc);\n        const simGroup2 = findSimGroup(sourceGroups[otherSsrc]);\n\n        if (simGroup2) {\n            addSimGroupSources(mLine, simGroup2, sourceGroups, sourceList);\n        } else {\n            // Add the FID group ssrcs.\n            fidGroup.ssrcs.forEach(src => {\n                mLine.sources.push(findSourcebyId(src));\n            });\n            mLine.ssrcGroups.push(fidGroup);\n        }\n    }\n\n    // Set the msid for the media description using the msid attribute of the ssrcs.\n    mLine.msid = mLine.sources[0].msid;\n}\n\n/**\n * Checks if there is a mline for the given ssrc or its related primary ssrc.\n * We always implode the SIM group to the first ssrc in the SIM group before sRD,\n * so we also check if mline for that ssrc exists.\n * For example:\n * If the following ssrcs are in a SIM group,\n * <ssrc-group xmlns=\\\"urn:xmpp:jingle:apps:rtp:ssma:0\\\" semantics=\\\"SIM\\\">\n *        <source ssrc=\\\"1806330949\\\"/>\n *        <source ssrc=\\\"4173145196\\\"/>\n *        <source ssrc=\\\"2002632207\\\"/>\n * </ssrc-group>\n * This method returns true for any one of the 3 ssrcs if there is a mline for 1806330949.\n * @param {Object} ssrc - ssrc to check.\n * @param {Object} sourceGroups - inverted source-group map.\n * @param {Array<Object>} mlines - mlines in the description\n\n * @returns {Boolean} - Returns true if mline for the given ssrc or the related primary ssrc\n * exists, returns false otherwise.\n */\nfunction checkIfMlineForSsrcExists(ssrc, sourceGroups, mlines) {\n    const findMatchingMline = mline => {\n        if (mline.sources) {\n            return mline.sources.some(source => source.id === ssrc.id);\n        }\n\n        return false;\n    };\n\n    if (!mlines.find(findMatchingMline)) {\n        // check if this ssrc is member of a SIM group. If so, check if there\n        // is a matching m-line for the primary ssrc of the SIM group.\n        if (!sourceGroups[ssrc.id]) {\n            return false;\n        }\n        const simGroup = findSimGroup(sourceGroups[ssrc.id]);\n        const fidGroup = findFidGroup(sourceGroups[ssrc.id]);\n\n        if (simGroup) {\n            return mlines.some(mline => mline.sources\n                && mline.sources.some(src => src.id.toString() === simGroup.ssrcs[0]));\n        } else if (fidGroup && ssrc.id.toString() !== fidGroup.ssrcs[0]) {\n            const otherSsrc = { id: fidGroup.ssrcs[0] };\n\n            return checkIfMlineForSsrcExists(otherSsrc, sourceGroups, mlines);\n\n        }\n\n        return false;\n    }\n\n    return true;\n}\n\n/**\n * Create an inverted sourceGroup map to put all the grouped ssrcs\n * in the same m-line.\n * @param {Array<Object>} sourceGroups\n * @returns {Object} - An inverted sourceGroup map.\n */\nfunction createSourceGroupMap(sourceGroups) {\n    const ssrc2group = {};\n\n    if (!sourceGroups || !Array.isArray(sourceGroups)) {\n        return ssrc2group;\n    }\n    sourceGroups.forEach(group => {\n        if (group.ssrcs && Array.isArray(group.ssrcs)) {\n            group.ssrcs.forEach(ssrc => {\n                if (typeof ssrc2group[ssrc] === 'undefined') {\n                    ssrc2group[ssrc] = [];\n                }\n                ssrc2group[ssrc].push(group);\n            });\n        }\n    });\n\n    return ssrc2group;\n}\n\n/**\n * Interop provides an API for tranforming a Plan B SDP to a Unified Plan SDP and\n * vice versa.\n */\nexport class Interop {\n    /**\n     * This method transforms a Unified Plan SDP to an equivalent Plan B SDP.\n     * @param {RTCSessionDescription} description - The description in Unified plan format.\n     * @returns RTCSessionDescription - The transformed session description.\n     */\n    toPlanB(description) {\n        if (!description || typeof description.sdp !== 'string') {\n            console.warn('An empty description was passed as an argument.');\n\n            return description;\n        }\n\n        // Objectify the SDP for easier manipulation.\n        const session = transform.parse(description.sdp);\n\n        // If the SDP contains no media, there's nothing to transform.\n        if (!session.media || !session.media.length) {\n            console.warn('The description has no media.');\n\n            return description;\n        }\n\n        // Make sure this is a unified plan sdp\n        if (session.media.every(m => PLAN_B_MIDS.indexOf(m.mid) !== -1)) {\n            console.warn('The description does not look like unified plan sdp');\n\n            return description;\n        }\n\n        const media = {};\n        const sessionMedia = session.media;\n\n        session.media = [];\n        sessionMedia.forEach(mLine => {\n            const type = mLine.type;\n\n            if (type === 'application') {\n                mLine.mid = 'data';\n                media[mLine.mid] = mLine;\n\n                return;\n            }\n            if (typeof media[type] === 'undefined') {\n                const bLine = clonedeep(mLine);\n\n                // Copy the msid attribute to all the ssrcs if they belong to the same source group\n                if (bLine.sources && Array.isArray(bLine.sources)) {\n                    bLine.sources.forEach(source => {\n                        mLine.msid ? source.msid = mLine.msid : delete source.msid;\n                    });\n                }\n\n                // Do not signal the FID groups if there is no msid attribute present\n                // on the sources as sesison-accept with this source info will fail strophe\n                // validation and the session will not be established. This behavior is seen\n                // on Firefox (with RTX enabled) when no video source is added at the join time.\n                // FF generates two recvonly ssrcs with no msid and a corresponding FID group in\n                // this case.\n                if (!bLine.ssrcGroups || !mLine.msid) {\n                    bLine.ssrcGroups = [];\n                }\n                delete bLine.msid;\n                bLine.mid = type;\n                media[type] = bLine;\n            } else if (mLine.msid) {\n                // Add sources and source-groups to the existing m-line of the same media type.\n                if (mLine.sources && Array.isArray(mLine.sources)) {\n                    media[type].sources = media[type].sources.concat(mLine.sources);\n                }\n                if (typeof mLine.ssrcGroups !== 'undefined' && Array.isArray(mLine.ssrcGroups)) {\n                    media[type].ssrcGroups = media[type].ssrcGroups.concat(mLine.ssrcGroups);\n                }\n            }\n        });\n        session.media = Object.values(media);\n\n        // Bundle the media only if it is active.\n        const bundle = [];\n\n        Object.values(media).forEach(mline => {\n            if (mline.direction !== 'inactive') {\n                bundle.push(mline.mid);\n            }\n        });\n\n        // We regenerate the BUNDLE group with the new mids.\n        session.groups.forEach(group => {\n            if (group.type === 'BUNDLE') {\n                group.mids = bundle.join(' ');\n            }\n        });\n\n        // msid semantic\n        session.msidSemantic = {\n            semantic: 'WMS',\n            token: '*'\n        };\n        const resStr = transform.write(session);\n\n        return new RTCSessionDescription({\n            type: description.type,\n            sdp: resStr\n        });\n    }\n\n    /**\n     * This method transforms a Plan B SDP to an equivalent Unified Plan SDP.\n     * @param {RTCSessionDescription} description - The description in plan-b format.\n     * @param {RTCSessionDescription} current - The current description set on\n     * the peerconnection in Unified-plan format, i.e., the readonly attribute\n     * remoteDescription on the RTCPeerConnection object.\n     * @returns RTCSessionDescription - The transformed session description.\n     */\n    toUnifiedPlan(description, current = null) {\n        if (!description || typeof description.sdp !== 'string') {\n            console.warn('An empty description was passed as an argument.');\n\n            return description;\n        }\n\n        // Objectify the SDP for easier manipulation.\n        const session = transform.parse(description.sdp);\n\n        // If the SDP contains no media, there's nothing to transform.\n        if (!session.media || !session.media.length) {\n            console.warn('The description has no media.');\n\n            return description;\n        }\n\n        // Make sure this is a plan-b sdp.\n        if (session.media.length > 3 || session.media.every(m => PLAN_B_MIDS.indexOf(m.mid) === -1)) {\n            console.warn('The description does not look like plan-b');\n\n            return description;\n        }\n        const currentDesc = current ? transform.parse(current.sdp) : null;\n        const media = {};\n\n        session.media.forEach(mLine => {\n            const type = mLine.type;\n\n            if (type === 'application') {\n                if (!currentDesc || !currentDesc.media) {\n                    const newMline = clonedeep(mLine);\n\n                    newMline.mid = Object.keys(media).length.toString();\n                    media[mLine.mid] = newMline;\n\n                    return;\n                }\n                const mLineForData = currentDesc.media.findIndex(m => m.type === type);\n\n                if (mLineForData) {\n                    currentDesc.media[mLineForData] = mLine;\n                    currentDesc.media[mLineForData].mid = mLineForData;\n                }\n\n                return;\n            }\n\n            // Create an inverted sourceGroup map here to put all the grouped SSRCs in the same m-line.\n            const ssrc2group = createSourceGroupMap(mLine.ssrcGroups);\n\n            // If there are no sources advertised for a media type, add the description if this is the first\n            // remote offer, i.e., no current description was passed. Chrome in Unified plan does not produce\n            // recvonly ssrcs unlike Firefox and Safari.\n            if (!mLine.sources) {\n                if (!currentDesc) {\n                    const newMline = clonedeep(mLine);\n\n                    newMline.mid = Object.keys(media).length.toString();\n                    media[mLine.mid] = newMline;\n                }\n\n                return;\n            }\n            mLine.sources.forEach((ssrc, idx) => {\n                // Do not add the receive-only ssrcs that Jicofo sends in the source-add.\n                // These ssrcs do not have the \"msid\" attribute set.\n                if (!ssrc.msid) {\n                    return;\n                }\n\n                // If there is no description set on the peerconnection, create new m-lines.\n                if (!currentDesc || !currentDesc.media) {\n                    if (checkIfMlineForSsrcExists(ssrc, ssrc2group, Object.values(media))) {\n                        return;\n                    }\n                    const newMline = clonedeep(mLine);\n\n                    newMline.mid = Object.keys(media).length.toString();\n                    newMline.direction = idx\n                        ? 'sendonly'\n                        : mLine.direction === 'sendonly' ? 'sendonly' : 'sendrecv';\n                    newMline.bundleOnly = undefined;\n                    addSourcesToMline(newMline, ssrc, ssrc2group, mLine.sources);\n                    media[newMline.mid] = newMline;\n\n                    return;\n                }\n\n                // Create and append the m-lines to the existing description.\n                if (checkIfMlineForSsrcExists(ssrc, ssrc2group, currentDesc.media)) {\n                    return;\n                }\n                const newMline = clonedeep(mLine);\n\n                newMline.mid = currentDesc.media.length.toString();\n                newMline.direction = 'sendonly';\n                addSourcesToMline(newMline, ssrc, ssrc2group, mLine.sources);\n                currentDesc.media.push(newMline);\n            });\n        });\n        session.media = currentDesc ? currentDesc.media : Object.values(media);\n        const mids = [];\n\n        session.media.forEach(mLine => {\n            mids.push(mLine.mid);\n        });\n\n        // We regenerate the BUNDLE group (since we regenerated the mids)\n        session.groups.forEach(group => {\n            if (group.type === 'BUNDLE') {\n                group.mids = mids.join(' ');\n            }\n        });\n\n        // msid semantic\n        session.msidSemantic = {\n            semantic: 'WMS',\n            token: '*'\n        };\n\n        // Increment the session version every time.\n        session.origin.sessionVersion++;\n        const resultSdp = transform.write(session);\n\n        return new RTCSessionDescription({\n            type: description.type,\n            sdp: resultSdp\n        });\n    }\n}\n","// For legacy purposes, preserve the UMD of the public API of the Jitsi Meet\n// library (a.k.a. JitsiMeetJS).\nmodule.exports = require('./JitsiMeetJS').default;\n","/* global __filename */\n\nimport Logger from 'jitsi-meet-logger';\n\nimport * as JitsiConferenceErrors from './JitsiConferenceErrors';\nimport * as JitsiConferenceEvents from './JitsiConferenceEvents';\nimport JitsiConnection from './JitsiConnection';\nimport * as JitsiConnectionErrors from './JitsiConnectionErrors';\nimport * as JitsiConnectionEvents from './JitsiConnectionEvents';\nimport JitsiMediaDevices from './JitsiMediaDevices';\nimport * as JitsiMediaDevicesEvents from './JitsiMediaDevicesEvents';\nimport JitsiTrackError from './JitsiTrackError';\nimport * as JitsiTrackErrors from './JitsiTrackErrors';\nimport * as JitsiTrackEvents from './JitsiTrackEvents';\nimport * as JitsiTranscriptionStatus from './JitsiTranscriptionStatus';\nimport RTC from './modules/RTC/RTC';\nimport browser from './modules/browser';\nimport NetworkInfo from './modules/connectivity/NetworkInfo';\nimport { ParticipantConnectionStatus }\n    from './modules/connectivity/ParticipantConnectionStatus';\nimport getActiveAudioDevice from './modules/detection/ActiveDeviceDetector';\nimport * as DetectionEvents from './modules/detection/DetectionEvents';\nimport TrackVADEmitter from './modules/detection/TrackVADEmitter';\nimport ProxyConnectionService\n    from './modules/proxyconnection/ProxyConnectionService';\nimport recordingConstants from './modules/recording/recordingConstants';\nimport Settings from './modules/settings/Settings';\nimport LocalStatsCollector from './modules/statistics/LocalStatsCollector';\nimport precallTest from './modules/statistics/PrecallTest';\nimport Statistics from './modules/statistics/statistics';\nimport AuthUtil from './modules/util/AuthUtil';\nimport GlobalOnErrorHandler from './modules/util/GlobalOnErrorHandler';\nimport ScriptUtil from './modules/util/ScriptUtil';\nimport * as VideoSIPGWConstants from './modules/videosipgw/VideoSIPGWConstants';\nimport AudioMixer from './modules/webaudio/AudioMixer';\nimport * as MediaType from './service/RTC/MediaType';\nimport * as ConnectionQualityEvents\n    from './service/connectivity/ConnectionQualityEvents';\nimport * as E2ePingEvents from './service/e2eping/E2ePingEvents';\nimport { createGetUserMediaEvent } from './service/statistics/AnalyticsEvents';\n\nconst logger = Logger.getLogger(__filename);\n\n/**\n * The amount of time to wait until firing\n * {@link JitsiMediaDevicesEvents.PERMISSION_PROMPT_IS_SHOWN} event.\n */\nconst USER_MEDIA_SLOW_PROMISE_TIMEOUT = 1000;\n\n/**\n * Extracts from an 'options' objects with a specific format (TODO what IS the\n * format?) the attributes which are to be logged in analytics events.\n *\n * @param options gum options (???)\n * @returns {*} the attributes to attach to analytics events.\n */\nfunction getAnalyticsAttributesFromOptions(options) {\n    const attributes = {\n        'audio_requested':\n            options.devices.includes('audio'),\n        'video_requested':\n            options.devices.includes('video'),\n        'screen_sharing_requested':\n            options.devices.includes('desktop')\n    };\n\n    if (attributes.video_requested) {\n        attributes.resolution = options.resolution;\n    }\n\n    return attributes;\n}\n\n/**\n * Tries to deal with the following problem: {@code JitsiMeetJS} is not only\n * this module, it's also a global (i.e. attached to {@code window}) namespace\n * for all globals of the projects in the Jitsi Meet family. If lib-jitsi-meet\n * is loaded through an HTML {@code script} tag, {@code JitsiMeetJS} will\n * automatically be attached to {@code window} by webpack. Unfortunately,\n * webpack's source code does not check whether the global variable has already\n * been assigned and overwrites it. Which is OK for the module\n * {@code JitsiMeetJS} but is not OK for the namespace {@code JitsiMeetJS}\n * because it may already contain the values of other projects in the Jitsi Meet\n * family. The solution offered here works around webpack by merging all\n * existing values of the namespace {@code JitsiMeetJS} into the module\n * {@code JitsiMeetJS}.\n *\n * @param {Object} module - The module {@code JitsiMeetJS} (which will be\n * exported and may be attached to {@code window} by webpack later on).\n * @private\n * @returns {Object} - A {@code JitsiMeetJS} module which contains all existing\n * value of the namespace {@code JitsiMeetJS} (if any).\n */\nfunction _mergeNamespaceAndModule(module) {\n    return (\n        typeof window.JitsiMeetJS === 'object'\n            ? Object.assign({}, window.JitsiMeetJS, module)\n            : module);\n}\n\n/**\n * The public API of the Jitsi Meet library (a.k.a. {@code JitsiMeetJS}).\n */\nexport default _mergeNamespaceAndModule({\n\n    version: '{#COMMIT_HASH#}',\n\n    JitsiConnection,\n\n    /**\n     * {@code ProxyConnectionService} is used to connect a remote peer to a\n     * local Jitsi participant without going through a Jitsi conference. It is\n     * currently used for room integration development, specifically wireless\n     * screensharing. Its API is experimental and will likely change; usage of\n     * it is advised against.\n     */\n    ProxyConnectionService,\n\n    constants: {\n        participantConnectionStatus: ParticipantConnectionStatus,\n        recording: recordingConstants,\n        sipVideoGW: VideoSIPGWConstants,\n        transcriptionStatus: JitsiTranscriptionStatus\n    },\n    events: {\n        conference: JitsiConferenceEvents,\n        connection: JitsiConnectionEvents,\n        detection: DetectionEvents,\n        track: JitsiTrackEvents,\n        mediaDevices: JitsiMediaDevicesEvents,\n        connectionQuality: ConnectionQualityEvents,\n        e2eping: E2ePingEvents\n    },\n    errors: {\n        conference: JitsiConferenceErrors,\n        connection: JitsiConnectionErrors,\n        track: JitsiTrackErrors\n    },\n    errorTypes: {\n        JitsiTrackError\n    },\n    logLevels: Logger.levels,\n    mediaDevices: JitsiMediaDevices,\n    analytics: Statistics.analytics,\n    init(options = {}) {\n        Settings.init(options.externalStorage);\n        Statistics.init(options);\n\n        // Initialize global window.connectionTimes\n        // FIXME do not use 'window'\n        if (!window.connectionTimes) {\n            window.connectionTimes = {};\n        }\n\n        if (options.enableAnalyticsLogging !== true) {\n            logger.warn('Analytics disabled, disposing.');\n            this.analytics.dispose();\n        }\n\n        if (options.enableWindowOnErrorHandler) {\n            GlobalOnErrorHandler.addHandler(\n                this.getGlobalOnErrorHandler.bind(this));\n        }\n\n        // Log deployment-specific information, if available. Defined outside\n        // the application by individual deployments\n        const aprops = options.deploymentInfo;\n\n        if (aprops && Object.keys(aprops).length > 0) {\n            const logObject = {};\n\n            for (const attr in aprops) {\n                if (aprops.hasOwnProperty(attr)) {\n                    logObject[attr] = aprops[attr];\n                }\n            }\n\n            logObject.id = 'deployment_info';\n            Statistics.sendLog(JSON.stringify(logObject));\n        }\n\n        if (this.version) {\n            const logObject = {\n                id: 'component_version',\n                component: 'lib-jitsi-meet',\n                version: this.version\n            };\n\n            Statistics.sendLog(JSON.stringify(logObject));\n        }\n\n        return RTC.init(options);\n    },\n\n    /**\n     * Returns whether the desktop sharing is enabled or not.\n     *\n     * @returns {boolean}\n     */\n    isDesktopSharingEnabled() {\n        return RTC.isDesktopSharingEnabled();\n    },\n\n    /**\n     * Returns whether the current execution environment supports WebRTC (for\n     * use within this library).\n     *\n     * @returns {boolean} {@code true} if WebRTC is supported in the current\n     * execution environment (for use within this library); {@code false},\n     * otherwise.\n     */\n    isWebRtcSupported() {\n        return RTC.isWebRtcSupported();\n    },\n\n    setLogLevel(level) {\n        Logger.setLogLevel(level);\n    },\n\n    /**\n     * Sets the log level to the <tt>Logger</tt> instance with given id.\n     *\n     * @param {Logger.levels} level the logging level to be set\n     * @param {string} id the logger id to which new logging level will be set.\n     * Usually it's the name of the JavaScript source file including the path\n     * ex. \"modules/xmpp/ChatRoom.js\"\n     */\n    setLogLevelById(level, id) {\n        Logger.setLogLevelById(level, id);\n    },\n\n    /**\n     * Registers new global logger transport to the library logging framework.\n     *\n     * @param globalTransport\n     * @see Logger.addGlobalTransport\n     */\n    addGlobalLogTransport(globalTransport) {\n        Logger.addGlobalTransport(globalTransport);\n    },\n\n    /**\n     * Removes global logging transport from the library logging framework.\n     *\n     * @param globalTransport\n     * @see Logger.removeGlobalTransport\n     */\n    removeGlobalLogTransport(globalTransport) {\n        Logger.removeGlobalTransport(globalTransport);\n    },\n\n    /**\n    * Sets global options which will be used by all loggers. Changing these\n    * works even after other loggers are created.\n    *\n    * @param options\n    * @see Logger.setGlobalOptions\n    */\n    setGlobalLogOptions(options) {\n        Logger.setGlobalOptions(options);\n    },\n\n    /**\n     * Creates the media tracks and returns them trough the callback.\n     *\n     * @param options Object with properties / settings specifying the tracks\n     * which should be created. should be created or some additional\n     * configurations about resolution for example.\n     * @param {Array} options.effects optional effects array for the track\n     * @param {boolean} options.firePermissionPromptIsShownEvent - if event\n     * JitsiMediaDevicesEvents.PERMISSION_PROMPT_IS_SHOWN should be fired\n     * @param {boolean} options.fireSlowPromiseEvent - if event\n     * JitsiMediaDevicesEvents.USER_MEDIA_SLOW_PROMISE_TIMEOUT should be fired\n     * @param {Array} options.devices the devices that will be requested\n     * @param {string} options.resolution resolution constraints\n     * @param {string} options.cameraDeviceId\n     * @param {string} options.micDeviceId\n     * @param {intiger} interval - the interval (in ms) for\n     * checking whether the desktop sharing extension is installed or not\n     * @param {Function} checkAgain - returns boolean. While checkAgain()==true\n     * createLocalTracks will wait and check on every \"interval\" ms for the\n     * extension. If the desktop extension is not install and checkAgain()==true\n     * createLocalTracks will finish with rejected Promise.\n     * @param {Function} listener - The listener will be called to notify the\n     * user of lib-jitsi-meet that createLocalTracks is starting external\n     * extension installation process.\n     * NOTE: If the inline installation process is not possible and external\n     * installation is enabled the listener property will be called to notify\n     * the start of external installation process. After that createLocalTracks\n     * will start to check for the extension on every interval ms until the\n     * plugin is installed or until checkAgain return false. If the extension\n     * is found createLocalTracks will try to get the desktop sharing track and\n     * will finish the execution. If checkAgain returns false, createLocalTracks\n     * will finish the execution with rejected Promise.\n     *\n     * @deprecated old firePermissionPromptIsShownEvent\n     * @returns {Promise.<{Array.<JitsiTrack>}, JitsiConferenceError>} A promise\n     * that returns an array of created JitsiTracks if resolved, or a\n     * JitsiConferenceError if rejected.\n     */\n    createLocalTracks(options = {}, oldfirePermissionPromptIsShownEvent) {\n        let promiseFulfilled = false;\n\n        const { firePermissionPromptIsShownEvent, fireSlowPromiseEvent, ...restOptions } = options;\n        const firePermissionPrompt = firePermissionPromptIsShownEvent || oldfirePermissionPromptIsShownEvent;\n\n        if (firePermissionPrompt && !RTC.arePermissionsGrantedForAvailableDevices()) {\n            JitsiMediaDevices.emitEvent(\n                JitsiMediaDevicesEvents.PERMISSION_PROMPT_IS_SHOWN,\n                browser.getName());\n        } else if (fireSlowPromiseEvent) {\n            window.setTimeout(() => {\n                if (!promiseFulfilled) {\n                    JitsiMediaDevices.emitEvent(JitsiMediaDevicesEvents.SLOW_GET_USER_MEDIA);\n                }\n            }, USER_MEDIA_SLOW_PROMISE_TIMEOUT);\n        }\n\n        if (!window.connectionTimes) {\n            window.connectionTimes = {};\n        }\n        window.connectionTimes['obtainPermissions.start']\n            = window.performance.now();\n\n        return RTC.obtainAudioAndVideoPermissions(restOptions)\n            .then(tracks => {\n                promiseFulfilled = true;\n\n                window.connectionTimes['obtainPermissions.end']\n                    = window.performance.now();\n\n                Statistics.sendAnalytics(\n                    createGetUserMediaEvent(\n                        'success',\n                        getAnalyticsAttributesFromOptions(restOptions)));\n\n                if (!RTC.options.disableAudioLevels) {\n                    for (let i = 0; i < tracks.length; i++) {\n                        const track = tracks[i];\n                        const mStream = track.getOriginalStream();\n\n                        if (track.getType() === MediaType.AUDIO) {\n                            Statistics.startLocalStats(mStream,\n                                track.setAudioLevel.bind(track));\n                            track.addEventListener(\n                                JitsiTrackEvents.LOCAL_TRACK_STOPPED,\n                                () => {\n                                    Statistics.stopLocalStats(mStream);\n                                });\n                        }\n                    }\n                }\n\n                // set real device ids\n                const currentlyAvailableMediaDevices\n                    = RTC.getCurrentlyAvailableMediaDevices();\n\n                if (currentlyAvailableMediaDevices) {\n                    for (let i = 0; i < tracks.length; i++) {\n                        const track = tracks[i];\n\n                        track._setRealDeviceIdFromDeviceList(\n                            currentlyAvailableMediaDevices);\n                    }\n                }\n\n                // set the contentHint to \"detail\" for desktop tracks\n                // eslint-disable-next-line prefer-const\n                for (const track of tracks) {\n                    if (track.type === MediaType.VIDEO\n                        && track.videoType === 'desktop') {\n                        this.setVideoTrackContentHints(track.track, 'detail');\n                    }\n                }\n\n                return tracks;\n            })\n            .catch(error => {\n                promiseFulfilled = true;\n\n                if (error.name === JitsiTrackErrors.SCREENSHARING_USER_CANCELED) {\n                    // User cancelled action is not really an error, so only\n                    // log it as an event to avoid having conference classified\n                    // as partially failed\n                    const logObject = {\n                        id: 'screensharing_user_canceled',\n                        message: error.message\n                    };\n\n                    Statistics.sendLog(JSON.stringify(logObject));\n\n                    Statistics.sendAnalytics(\n                        createGetUserMediaEvent(\n                            'warning',\n                            {\n                                reason: 'extension install user canceled'\n                            }));\n                } else if (error.name === JitsiTrackErrors.NOT_FOUND) {\n                    // logs not found devices with just application log to cs\n                    const logObject = {\n                        id: 'usermedia_missing_device',\n                        status: error.gum.devices\n                    };\n\n                    Statistics.sendLog(JSON.stringify(logObject));\n\n                    const attributes\n                        = getAnalyticsAttributesFromOptions(options);\n\n                    attributes.reason = 'device not found';\n                    attributes.devices = error.gum.devices.join('.');\n                    Statistics.sendAnalytics(\n                        createGetUserMediaEvent('error', attributes));\n                } else {\n                    // Report gUM failed to the stats\n                    Statistics.sendGetUserMediaFailed(error);\n\n                    const attributes\n                        = getAnalyticsAttributesFromOptions(options);\n\n                    attributes.reason = error.name;\n                    Statistics.sendAnalytics(\n                        createGetUserMediaEvent('error', attributes));\n                }\n\n                window.connectionTimes['obtainPermissions.end']\n                    = window.performance.now();\n\n                return Promise.reject(error);\n            });\n    },\n\n    /**\n     * Create a TrackVADEmitter service that connects an audio track to an VAD (voice activity detection) processor in\n     * order to obtain VAD scores for individual PCM audio samples.\n     * @param {string} localAudioDeviceId - The target local audio device.\n     * @param {number} sampleRate - Sample rate at which the emitter will operate. Possible values  256, 512, 1024,\n     * 4096, 8192, 16384. Passing other values will default to closes neighbor.\n     * I.e. Providing a value of 4096 means that the emitter will process 4096 PCM samples at a time, higher values mean\n     * longer calls, lowers values mean more calls but shorter.\n     * @param {Object} vadProcessor - VAD Processors that does the actual compute on a PCM sample.The processor needs\n     * to implement the following functions:\n     * - <tt>getSampleLength()</tt> - Returns the sample size accepted by calculateAudioFrameVAD.\n     * - <tt>getRequiredPCMFrequency()</tt> - Returns the PCM frequency at which the processor operates.\n     * i.e. (16KHz, 44.1 KHz etc.)\n     * - <tt>calculateAudioFrameVAD(pcmSample)</tt> - Process a 32 float pcm sample of getSampleLength size.\n     * @returns {Promise<TrackVADEmitter>}\n     */\n    createTrackVADEmitter(localAudioDeviceId, sampleRate, vadProcessor) {\n        return TrackVADEmitter.create(localAudioDeviceId, sampleRate, vadProcessor);\n    },\n\n    /**\n     * Create AudioMixer, which is essentially a wrapper over web audio ChannelMergerNode. It essentially allows the\n     * user to mix multiple MediaStreams into a single one.\n     *\n     * @returns {AudioMixer}\n     */\n    createAudioMixer() {\n        return new AudioMixer();\n    },\n\n    /**\n     * Go through all audio devices on the system and return one that is active, i.e. has audio signal.\n     *\n     * @returns Promise<Object> - Object containing information about the found device.\n     */\n    getActiveAudioDevice() {\n        return getActiveAudioDevice();\n    },\n\n    /**\n     * Checks if its possible to enumerate available cameras/microphones.\n     *\n     * @returns {Promise<boolean>} a Promise which will be resolved only once\n     * the WebRTC stack is ready, either with true if the device listing is\n     * available available or with false otherwise.\n     * @deprecated use JitsiMeetJS.mediaDevices.isDeviceListAvailable instead\n     */\n    isDeviceListAvailable() {\n        logger.warn('This method is deprecated, use '\n            + 'JitsiMeetJS.mediaDevices.isDeviceListAvailable instead');\n\n        return this.mediaDevices.isDeviceListAvailable();\n    },\n\n    /**\n     * Returns true if changing the input (camera / microphone) or output\n     * (audio) device is supported and false if not.\n     *\n     * @param {string} [deviceType] - type of device to change. Default is\n     * {@code undefined} or 'input', 'output' - for audio output device change.\n     * @returns {boolean} {@code true} if available; {@code false}, otherwise.\n     * @deprecated use JitsiMeetJS.mediaDevices.isDeviceChangeAvailable instead\n     */\n    isDeviceChangeAvailable(deviceType) {\n        logger.warn('This method is deprecated, use '\n            + 'JitsiMeetJS.mediaDevices.isDeviceChangeAvailable instead');\n\n        return this.mediaDevices.isDeviceChangeAvailable(deviceType);\n    },\n\n\n    /**\n     * Checks if the current environment supports having multiple audio\n     * input devices in use simultaneously.\n     *\n     * @returns {boolean} True if multiple audio input devices can be used.\n     */\n    isMultipleAudioInputSupported() {\n        return this.mediaDevices.isMultipleAudioInputSupported();\n    },\n\n    /**\n     * Checks if local tracks can collect stats and collection is enabled.\n     *\n     * @param {boolean} True if stats are being collected for local tracks.\n     */\n    isCollectingLocalStats() {\n        return Statistics.audioLevelsEnabled\n            && LocalStatsCollector.isLocalStatsSupported();\n    },\n\n    /**\n     * Executes callback with list of media devices connected.\n     *\n     * @param {function} callback\n     * @deprecated use JitsiMeetJS.mediaDevices.enumerateDevices instead\n     */\n    enumerateDevices(callback) {\n        logger.warn('This method is deprecated, use '\n            + 'JitsiMeetJS.mediaDevices.enumerateDevices instead');\n        this.mediaDevices.enumerateDevices(callback);\n    },\n\n    /* eslint-disable max-params */\n\n    /**\n     * @returns function that can be used to be attached to window.onerror and\n     * if options.enableWindowOnErrorHandler is enabled returns\n     * the function used by the lib.\n     * (function(message, source, lineno, colno, error)).\n     */\n    getGlobalOnErrorHandler(message, source, lineno, colno, error) {\n        logger.error(\n            `UnhandledError: ${message}`,\n            `Script: ${source}`,\n            `Line: ${lineno}`,\n            `Column: ${colno}`,\n            'StackTrace: ', error);\n        Statistics.reportGlobalError(error);\n    },\n\n    /**\n     * Informs lib-jitsi-meet about the current network status.\n     *\n     * @param {boolean} isOnline - {@code true} if the internet connectivity is online or {@code false}\n     * otherwise.\n     */\n    setNetworkInfo({ isOnline }) {\n        NetworkInfo.updateNetworkInfo({ isOnline });\n    },\n\n    /**\n     * Set the contentHint on the transmitted stream track to indicate\n     * charaterstics in the video stream, which informs PeerConnection\n     * on how to encode the track (to prefer motion or individual frame detail)\n     * @param {MediaStreamTrack} track - the track that is transmitted\n     * @param {String} hint - contentHint value that needs to be set on the track\n     */\n    setVideoTrackContentHints(track, hint) {\n        if ('contentHint' in track) {\n            track.contentHint = hint;\n            if (track.contentHint !== hint) {\n                logger.debug('Invalid video track contentHint');\n            }\n        } else {\n            logger.debug('MediaStreamTrack contentHint attribute not supported');\n        }\n    },\n\n    precallTest,\n\n    /* eslint-enable max-params */\n\n    /**\n     * Represents a hub/namespace for utility functionality which may be of\n     * interest to lib-jitsi-meet clients.\n     */\n    util: {\n        AuthUtil,\n        ScriptUtil,\n        browser\n    }\n});\n","/* Copyright @ 2016-present 8x8, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar Logger = require('./Logger.js');\n\n/**\n * Creates new <tt>LogCollector</tt>. Class implements <tt>LoggerTransport</tt>\n * and thus can be added as global transport in order to capture all the logs.\n *\n * It captures subsequent log lines created whenever <tt>Logger</tt> logs\n * a message and stores them in a queue in order to batch log entries. There are\n * time and size limit constraints which determine how often batch entries are\n * stored. Whenever one of these limits is exceeded the <tt>LogCollector</tt>\n * will use the <tt>logStorage</tt> object given as an argument to save\n * the batch log entry.\n *\n * @param {Object} logStorage an object which allows to store the logs collected\n * @param {function(string|object[])} logStorage.storeLogs a method called when\n * this <tt>LogCollector</tt> requests log entry storage. The method's argument\n * is an array which can contain <tt>string</tt>s and <tt>object</tt>s. If given\n * item is an object it means that it's an aggregated message. That is a message\n * which is the same as the previous one and it's representation has\n * the following format:\n * {\n *   {string} text: 'the text of some duplicated message'\n *   {number} count: 3 // how many times the message appeared in a row\n * }\n * If a message \"B\" after an aggregated message \"A\" is different, then it breaks\n * the sequence of \"A\". Which means that even if the next message \"C\" is\n * the same as \"A\" it will start a new aggregated message \"C\".\n * @param {function()} logStorage.isReady a method which should return\n * a <tt>boolean</tt> to tell the collector that it's ready to store. During the\n * time storage is not ready log batches will be cached and stored on the next\n * occasion (flush or interval timeout).\n *\n * @param {Object} options the <tt>LogCollector</tt> configuration options.\n * @param {number} options.maxEntryLength the size limit for a single log entry\n * to be stored. The <tt>LogCollector</tt> will push the entry as soon as it\n * reaches or exceeds this limit given that <tt>logStorage.isReady</tt>\n * returns <tt>true</tt>. Otherwise the log entry will be cached until the log\n * storage becomes ready. Note that the \"is ready\" condition is checked every\n * <tt>options.storeInterval</tt> milliseconds.\n * @param {number} options.storeInterval how often the logs should be stored in\n * case <tt>maxEntryLength</tt> was not exceeded.\n * @param {boolean} options.stringifyObjects indicates whether or not object\n * arguments should be \"stringified\" with <tt>JSON.stringify</tt> when a log\n * message is composed. Note that objects logged on the error log level are\n * always stringified.\n *\n * @constructor\n */\nfunction LogCollector(logStorage, options) {\n    this.logStorage = logStorage;\n    this.stringifyObjects = options && options.stringifyObjects ? options.stringifyObjects : false;\n    this.storeInterval = options && options.storeInterval ? options.storeInterval: 30000;\n    this.maxEntryLength = options && options.maxEntryLength ? options.maxEntryLength : 10000;\n    // Bind the log method for each level to the corresponding method name\n    // in order to implement \"global log transport\" object.\n    Object.keys(Logger.levels).forEach(\n    function (logLevel) {\n        var methodName = Logger.levels[logLevel];\n        this[methodName] = function () {\n            this._log.apply(this, arguments);\n        }.bind(this, logLevel);\n    }.bind(this));\n    /**\n     * The ID of store logs interval if one is currently scheduled or\n     * <tt>null</tt> otherwise.\n     * @type {number|null}\n     */\n    this.storeLogsIntervalID = null;\n    /**\n     * The log messages that are to be batched into log entry when\n     * {@link LogCollector._flush} method is called.\n     * @type {string[]}\n     */\n    this.queue = [];\n    /**\n     * The total length of all messages currently stored in the {@link queue}.\n     * @type {number}\n     */\n    this.totalLen = 0;\n    /**\n     * An array used to temporarily store log batches, before the storage gets\n     * ready.\n     * @type {string[]}\n     */\n    this.outputCache = [];\n}\n\n/**\n * Method called inside of {@link formatLogMessage} in order to covert an\n * <tt>Object</tt> argument to string. The conversion will happen when either\n * 'stringifyObjects' option is enabled or on the {@link Logger.levels.ERROR}\n * log level. The default implementation uses <tt>JSON.stringify</tt> and\n * returns \"[object with circular refs?]\" instead of an object if it fails.\n *\n * @param {object} someObject the <tt>object</tt> to be stringified.\n *\n * @return {string} the result of <tt>JSON.stringify</tt> or\n * \"[object with circular refs?]\" if any error occurs during \"stringification\".\n *\n * @protected\n */\nLogCollector.prototype.stringify = function (someObject) {\n    try {\n        return JSON.stringify(someObject);\n    } catch (error) {\n        return '[object with circular refs?]';\n    }\n};\n\n/**\n * Formats log entry for the given logging level and arguments passed to the\n * <tt>Logger</tt>'s log method. The first argument is log level and the next\n * arguments have to be captured using JS built-in 'arguments' variable.\n *\n * @param {Logger.levels} logLevel provides the logging level of the message to\n * be logged.\n * @param {Date} timestamp - The {@code Date} when a message has been logged.\n *\n * @return {string|null} a non-empty string representation of the log entry\n * crafted from the log arguments. If the return value is <tt>null</tt> then\n * the message wil be discarded by this <tt>LogCollector</tt>.\n *\n * @protected\n */\nLogCollector.prototype.formatLogMessage = function (\nlogLevel /* timestamp, arg2, arg3, arg4... */) {\n    var msg = '';\n    for (var i = 1, len = arguments.length; i < len; i++) {\n        var arg = arguments[i];\n        // objects logged on error level are always converted to JSON\n        if ((this.stringifyObjects || logLevel === Logger.levels.ERROR) &&\n            typeof arg === 'object') {\n            arg = this.stringify(arg);\n        }\n        msg += arg;\n        if (i !== len - 1) {\n            msg += ' ';\n        }\n    }\n    return msg.length ? msg : null;\n};\n\n/**\n * The log method bound to each of the logging levels in order to implement\n * \"global log transport\" object.\n *\n * @private\n */\nLogCollector.prototype._log = function() {\n\n    // var logLevel = arguments[0]; first argument is the log level\n    var timestamp = arguments[1];\n    var msg = this.formatLogMessage.apply(this, arguments);\n    if (msg) {\n        // The same as the previous message aggregation logic\n        var prevMessage = this.queue[this.queue.length - 1];\n        var prevMessageText = prevMessage && prevMessage.text;\n        if (prevMessageText === msg) {\n            prevMessage.count += 1;\n        } else {\n            this.queue.push({\n                text: msg,\n                timestamp: timestamp,\n                count: 1\n            });\n            this.totalLen += msg.length;\n        }\n    }\n\n    if (this.totalLen >= this.maxEntryLength) {\n        this._flush(true /* force */, true /* reschedule */);\n    }\n};\n\n/**\n * Starts periodical \"store logs\" task which will be triggered at the interval\n * specified in the constructor options.\n */\nLogCollector.prototype.start = function () {\n    this._reschedulePublishInterval();\n};\n\n/**\n * Reschedules the periodical \"store logs\" task which will store the next batch\n * log entry in the storage.\n * @private\n */\nLogCollector.prototype._reschedulePublishInterval = function () {\n    if (this.storeLogsIntervalID) {\n        window.clearTimeout(this.storeLogsIntervalID);\n        this.storeLogsIntervalID = null;\n    }\n    // It's actually a timeout, because it is rescheduled on every flush\n    this.storeLogsIntervalID = window.setTimeout(\n        this._flush.bind(\n            this, false /* do not force */, true /* reschedule */),\n        this.storeInterval);\n};\n\n/**\n * Call this method to flush the log entry buffer and store it in the log\n * storage immediately (given that the storage is ready).\n */\nLogCollector.prototype.flush = function() {\n    this._flush(\n        false /* do not force, as it will not be stored anyway */,\n        true /* reschedule next update */ );\n};\n\n/**\n * Stores the next batch log entry in the log storage.\n * @param {boolean} force enforce current logs batch to be stored or cached if\n * there is anything to be logged, but the storage is not ready yet. One of\n * legitimate reasons to force is when the logs length exceeds size limit which\n * could result in truncation.\n * @param {boolean} reschedule <tt>true</tt> if the next periodic task should be\n * scheduled after the log entry is stored. <tt>false</tt> will end the periodic\n * task cycle.\n * @private\n */\nLogCollector.prototype._flush = function(force, reschedule) {\n    // Publish only if there's anything to be logged\n    if (this.totalLen > 0 && (this.logStorage.isReady() || force)) {\n        //FIXME avoid truncating\n        // right now we don't care if the message size is \"slightly\" exceeded\n        if (this.logStorage.isReady()) {\n            // Sends all cached logs\n            if (this.outputCache.length) {\n                this.outputCache.forEach(\n                    function (cachedQueue) {\n                        this.logStorage.storeLogs(cachedQueue);\n                    }.bind(this)\n                );\n                // Clear the cache\n                this.outputCache = [];\n            }\n            // Send current batch\n            this.logStorage.storeLogs(this.queue);\n        } else {\n            this.outputCache.push(this.queue);\n        }\n\n        this.queue = [];\n        this.totalLen = 0;\n    }\n\n    if (reschedule) {\n        this._reschedulePublishInterval();\n    }\n};\n\n/**\n * Stops the periodical \"store logs\" task and immediately stores any pending\n * log entries as a batch.\n */\nLogCollector.prototype.stop = function() {\n    // Flush and stop publishing logs\n    this._flush(false /* do not force */, false /* do not reschedule */);\n};\n\nmodule.exports = LogCollector;\n","/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n","/*!\n * currentExecutingScript\n * Get the currently executing script, regardless of its source/trigger/synchronicity. Similar to HTML5's `document.currentScript` but arguably much more useful!\n * Copyright (c) 2015 James M. Greene\n * Licensed MIT\n * https://github.com/JamesMGreene/currentExecutingScript\n * v0.1.3\n */\n(function(root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof exports === \"object\") {\n    // CommonJS-like environments that support `module.exports`,\n    // like Node.js. Does not work with strict CommonJS!\n    module.exports = factory();\n  } else {\n    // Browser globals (`root` is `window`)\n    root.currentExecutingScript = factory();\n  }\n}(\n  // Current context/scope\n  this || window,\n\n  // Factory function to return the export\n  function() {\n\nvar scriptReadyRegex = /^(interactive|loaded|complete)$/;\n\n// This page's URL (minus query string and fragment identifer hash, if any)\nvar fullPageUrl = !!window.location ? window.location.href : null;\nvar pageUrl = fullPageUrl ? fullPageUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\") || null : null;\n\n// Live NodeList collection\nvar scripts = document.getElementsByTagName(\"script\");\n\n// Check if the browser supports the `readyState` property on `script` elements\nvar supportsScriptReadyState = \"readyState\" in (scripts[0] || document.createElement(\"script\"));\n\n// Lousy browser detection for [not] Opera\nvar isNotOpera = !window.opera || window.opera.toString() !== \"[object Opera]\";\n\n// Detect if `document.currentScript` is supported\nvar hasNativeCurrentScriptAccessor = \"currentScript\" in document;\n\nvar originalStackDepthConfig;\n// Detect if the V8 Error Stack Trace API is supported\nif (\"stackTraceLimit\" in Error && Error.stackTraceLimit !== Infinity) {\n  originalStackDepthConfig = Error.stackTraceLimit;\n  Error.stackTraceLimit = Infinity;\n}\n\n\n// In some browsers (e.g. Chrome), you can get the current stack from an Error\n// object instance without needing to throw it. Avoiding an unnecessary\n// use of `throw` saves time and performance.\nvar hasStackBeforeThrowing = false,\n    hasStackAfterThrowing = false;\n(function() {\n  try {\n    var err = new Error();\n    hasStackBeforeThrowing = typeof err.stack === \"string\" && !!err.stack;\n    throw err;\n  }\n  catch (thrownErr) {\n    hasStackAfterThrowing = typeof thrownErr.stack === \"string\" && !!thrownErr.stack;\n  }\n})();\n\n\n// Normalize whitespace within a string\nfunction normalizeWhitespace(str) {\n  return str ? str.replace(/^\\s+$|\\s+$/g, \"\").replace(/\\s\\s+/g, \" \") : \"\";\n}\n\n// Get script object based on the `src` URL\nfunction getScriptFromUrl(url, eligibleScripts) {\n  var i,\n      script = null;\n\n  eligibleScripts = eligibleScripts || scripts;\n\n  if (typeof url === \"string\" && url) {\n    for (i = eligibleScripts.length; i--; ) {\n      if (eligibleScripts[i].src === url) {\n        // NOTE: Could check if the same script URL is used by more than one `script` element\n        // here... but let's not. That would yield less useful results in \"loose\" detection. ;)\n        script = eligibleScripts[i];\n        break;\n      }\n    }\n  }\n  return script;\n}\n\n// Get script object based on the caller function's source code body (text)\nfunction getInlineScriptFromCallerSource(callerFnSource, eligibleScripts) {\n  var i, inlineScriptText,\n      script = null,\n      callerSourceText = normalizeWhitespace(callerFnSource);\n\n  eligibleScripts = eligibleScripts || scripts;\n\n  if (callerFnSource && callerSourceText) {\n    for (i = eligibleScripts.length; i--; ) {\n      // Only look at inline scripts\n      if (!eligibleScripts[i].hasAttribute(\"src\")) {\n        inlineScriptText = normalizeWhitespace(eligibleScripts[i].text);\n        if (inlineScriptText.indexOf(callerSourceText) !== -1) {\n          // If more than one match is found, don't return any\n          if (script) {\n            script = null;\n            break;\n          }\n          script = eligibleScripts[i];\n        }\n      }\n    }\n  }\n\n  return script;\n}\n\n// If there is only a single inline script on the page, return it; otherwise `null`\nfunction getSoleInlineScript(eligibleScripts) {\n  var i, len,\n      script = null;\n  eligibleScripts = eligibleScripts || scripts;\n  for (i = 0, len = eligibleScripts.length; i < len; i++) {\n    if (!eligibleScripts[i].hasAttribute(\"src\")) {\n      if (script) {\n        script = null;\n        break;\n      }\n      script = eligibleScripts[i];\n    }\n  }\n  return script;\n}\n\n// Get the currently executing script URL from an Error stack trace\nfunction getScriptUrlFromStack(stack, skipStackDepth) {\n  var matches, remainingStack,\n      url = null,\n      ignoreMessage = typeof skipStackDepth === \"number\";\n  skipStackDepth = ignoreMessage ? Math.round(skipStackDepth) : 0;\n  if (typeof stack === \"string\" && stack) {\n    if (ignoreMessage) {\n      matches = stack.match(/(data:text\\/javascript(?:;[^,]+)?,.+?|(?:|blob:)(?:http[s]?|file):\\/\\/[\\/]?.+?\\/[^:\\)]*?)(?::\\d+)(?::\\d+)?/);\n    }\n    else {\n      matches = stack.match(/^(?:|[^:@]*@|.+\\)@(?=data:text\\/javascript|blob|http[s]?|file)|.+?\\s+(?: at |@)(?:[^:\\(]+ )*[\\(]?)(data:text\\/javascript(?:;[^,]+)?,.+?|(?:|blob:)(?:http[s]?|file):\\/\\/[\\/]?.+?\\/[^:\\)]*?)(?::\\d+)(?::\\d+)?/);\n\n      if (!(matches && matches[1])) {\n        matches = stack.match(/\\)@(data:text\\/javascript(?:;[^,]+)?,.+?|(?:|blob:)(?:http[s]?|file):\\/\\/[\\/]?.+?\\/[^:\\)]*?)(?::\\d+)(?::\\d+)?/);\n      }\n    }\n\n    if (matches && matches[1]) {\n      if (skipStackDepth > 0) {\n        remainingStack = stack.slice(stack.indexOf(matches[0]) + matches[0].length);\n        url = getScriptUrlFromStack(remainingStack, (skipStackDepth - 1));\n      }\n      else {\n        url = matches[1];\n      }\n    }\n\n    // TODO: Handle more edge cases!\n    // Fixes #1\n    // See https://github.com/JamesMGreene/currentExecutingScript/issues/1\n\n    // ???\n\n  }\n  return url;\n}\n\n\n// Get the farthest currently executing (i.e. yes, EXECUTING) `script` DOM\n// element for the caller function, regardless of whether it is that `script`\n// DOM element is currently being evaluated for the first time. The farthest\n// currently executing `script` DOM element would typically be considered the\n// originator of the current execution stack.\nfunction _farthestExecutingScript() {\n  /*jshint noarg:false */\n\n  // TODO: Implement!\n  // Fixes #3\n  // See https://github.com/JamesMGreene/currentExecutingScript/issues/3\n  return null;\n\n/*\n  // Yes, this IS possible, i.e. if a script removes other scripts (or itself)\n  if (scripts.length === 0) {\n    return null;\n  }\n\n  // Guaranteed accurate in IE 6-10.\n  // Not accurate/supported in any other browsers.\n  if (isNotOpera && supportsScriptReadyState) {\n    for (var i = scripts.length; i--; ) {\n      if (scripts[i].readyState === \"interactive\") {\n        return scripts[i];\n      }\n    }\n  }\n\n  var stack,\n      e = new Error();\n  if (hasStackBeforeThrowing) {\n    stack = e.stack;\n  }\n  if (!stack && hasStackAfterThrowing) {\n    try {\n      throw e;\n    }\n    catch (err) {\n      // NOTE: Cannot use `err.sourceURL` or `err.fileName` as they will always be THIS script\n      stack = err.stack;\n    }\n  }\n  if (stack) {\n    var url = getScriptUrlFromStack(stack, skipStackDepth);\n    var script = getScriptFromUrl(url, scripts );\n    if (!script && pageUrl && url === pageUrl) {\n      // Try to find the correct inline script by searching through\n      // inline scripts' text content for the caller function's source\n      // code to be present. If the caller function's source code is\n      // not available, see if there is only one inline script element\n      // in the DOM and return that (even though it may be wrong)\n\n      // TODO: Implement!\n      // Fixes #4 in part\n      // See https://github.com/JamesMGreene/currentExecutingScript/issues/4\n\n      var callerFn = _farthestExecutingScript.caller || null,\n          callerFnStack = [],\n          callerFnSource = null;\n\n      while (callerFn) {\n        callerFnStack.push(callerFn);\n        callerFn = callerFn.caller || null;\n      }\n      callerFn = callerFnStack.slice(-1)[0];\n      callerFnSource = callerFn ? (\"\" + callerFn) : null;\n\n\n      if (callerFnSource) {\n        script = getInlineScriptFromCallerSource(callerFnSource);\n      }\n      else {\n        // NOTE: This is a loose assumption that could be inaccurate!\n        //\n        // Inaccuracies:\n        //  - If the inline script that initiated the call was also removed from the DOM.\n        //  - If the call was initiated by an element's inline event handler,\n        //    e.g. `<a onclick=\"(function() { alert(currentExecutingScript()); }()\">click</a>`\n        script = getSoleInlineScript();\n      }\n    }\n    return script;\n  }\n\n  // NOTE: This is a loose assumption that could be inaccurate!\n  //\n  // Inaccuracies:\n  //  - If a script is created dynamically and appended to some position\n  //    other than the very end of the document.\n  //  - If multiple scripts are created dynamically and all appended to the\n  //    same position within the document (and do not have their `async` attributes\n  //    set to `false`, at least in browsers that support async script evaluation.\n  //    other than the very end of the document.\n  //  - If any scripts are added with the `async` attribute set to `true` in a browser\n  //    that supports it.\n  //  - May get confused by `script` elements within `svg` elements\n  return scripts[scripts.length - 1] || null;\n*/\n}\n\n\n// Get the originating currently executing (i.e. yes, EXECUTING) `script` DOM\n// element or attribute node (e.g. `onclick`) for the caller function,\n// regardless of whether it is that `script` DOM element is currently being\n// evaluated for the first time. The originating currently executing `script`\n// DOM element [or attribute node] is the originator of the current execution stack.\nfunction _originatingExecutingScript() {\n  // TODO: Implement!\n  // Fixes #2\n  // See https://github.com/JamesMGreene/currentExecutingScript/issues/2\n  return null;\n}\n\n// Get the nearest currently executing (i.e. yes, EXECUTING) `script` DOM\n// element for the caller function, regardless of whether it is that `script`\n// DOM element is currently being evaluated for the first time.\nfunction _nearestExecutingScript() {\n  /*jshint noarg:false */\n\n  // Yes, this IS possible, i.e. if a script removes other scripts (or itself)\n  if (scripts.length === 0) {\n    return null;\n  }\n\n  var i, e, stack, url, script,\n      eligibleScripts = [],\n      skipStackDepth = _nearestExecutingScript.skipStackDepth || 1,\n\n      // TODO: Implement!\n      // Fixes #4 in part\n      // See https://github.com/JamesMGreene/currentExecutingScript/issues/4\n      callerFnSource = null;  //(\"\" + (_nearestExecutingScript.caller || \"\")) || null;\n\n  // This part will only help in IE 6-10.\n  for (i = 0; i < scripts.length; i++) {\n    if (isNotOpera && supportsScriptReadyState) {\n      if (scriptReadyRegex.test(scripts[i].readyState)) {\n        eligibleScripts.push(scripts[i]);\n      }\n    }\n    else {\n      eligibleScripts.push(scripts[i]);\n    }\n  }\n\n  e = new Error();\n  if (hasStackBeforeThrowing) {\n    stack = e.stack;\n  }\n  if (!stack && hasStackAfterThrowing) {\n    try {\n      throw e;\n    }\n    catch (err) {\n      // NOTE: Cannot use `err.sourceURL` or `err.fileName` as they will always be THIS script\n      stack = err.stack;\n    }\n  }\n\n  if (stack) {\n    url = getScriptUrlFromStack(stack, skipStackDepth);\n    script = getScriptFromUrl(url, eligibleScripts);\n\n    if (!script && pageUrl && url === pageUrl) {\n      // Try to find the correct inline script by searching through\n      // inline scripts' text content for the caller function's source\n      // code to be present.\n      if (callerFnSource) {\n        script = getInlineScriptFromCallerSource(callerFnSource, eligibleScripts);\n      }\n      // If the caller function's source code is not available, see if\n      // there is only one inline script element in the DOM and return\n      // that (even though it may be wrong)...\n      else {\n        // NOTE: This is a loose assumption that could be inaccurate!\n        //\n        // Inaccuracies:\n        //  - If the inline script that initiated the call was also removed from the DOM.\n        //  - If the call was initiated by an element's inline event handler,\n        //    e.g. `<a onclick=\"(function() { alert(currentExecutingScript()); }()\">click</a>`\n        script = getSoleInlineScript(eligibleScripts);\n      }\n    }\n  }\n\n  //\n  // Welcome to the Island of Inaccurate Assumptions!\n  // NOTE: ALL of the following are loose assumptions that could be inaccurate!\n  //\n\n  if (!script) {\n    // Inaccuracies:\n    //  - If the inline script that initiated the call was also removed from the DOM.\n    //  - If the call was initiated by an element's inline event handler,\n    //    e.g. `<a onclick=\"(function() { alert(currentExecutingScript()); }()\">click</a>`\n    if (eligibleScripts.length === 1) {\n      script = eligibleScripts[0];\n    }\n  }\n\n  if (!script) {\n    // Inaccuracies:\n    //  - If script currently being synchronously evaluated by the parser is the\n    //    originator of this call stack but NOT the source script of the caller/invocation\n    //    e.g.\n    //    ```html\n    //    <script id=\"a\">\n    //    function getCurrentScriptCallerFn() {\n    //      return currentExecutingScript.near();\n    //    }\n    //    </script>\n    //    <script id=\"b\">\n    //    // Should get `script[id=\"a\"]` but will get `script[id=\"b\"]` instead\n    //    getCurrentScriptCallerFn();\n    //    </script>\n    if (hasNativeCurrentScriptAccessor) {\n      script = document.currentScript;\n    }\n  }\n\n  if (!script) {\n    // Inaccuracies:\n    //  - If script currently being synchronously evaluated by the parser is the\n    //    originator of this call stack but NOT the source script of the caller/invocation\n    //    e.g.\n    //    ```html\n    //    <script id=\"a\">\n    //    function getCurrentScriptCallerFn() {\n    //      return currentExecutingScript.near();\n    //    }\n    //    </script>\n    //    <script id=\"b\">\n    //    // Should get `script[id=\"a\"]` but will get `script[id=\"b\"]` instead\n    //    getCurrentScriptCallerFn();\n    //    </script>\n    if (isNotOpera && supportsScriptReadyState) {\n      for (i = eligibleScripts.length; i--; ) {\n        if (eligibleScripts[i].readyState === \"interactive\") {\n          script = eligibleScripts[i];\n          break;\n        }\n      }\n    }\n  }\n\n  if (!script) {\n    // Inaccuracies:\n    //  - If a script is created dynamically and appended to some position\n    //    other than the very end of the document.\n    //  - If multiple scripts are created dynamically and all appended to the\n    //    same position within the document (and do not have their `async` attributes\n    //    set to `false`, at least in browsers that support async script evaluation.\n    //    other than the very end of the document.\n    //  - If any scripts are added with the `async` attribute set to `true` in a browser\n    //    that supports it.\n    //  - May get confused by `script` elements within `svg` elements\n    //  - If script currently being synchronously evaluated by the parser is the\n    //    originator of this call stack but NOT the source script of the caller/invocation\n    //    e.g.\n    //    ```html\n    //    <script id=\"a\">\n    //    function getCurrentScriptCallerFn() {\n    //      return currentExecutingScript.near();\n    //    }\n    //    </script>\n    //    <script id=\"b\">\n    //    // Should get `script[id=\"a\"]` but will get `script[id=\"b\"]` instead\n    //    getCurrentScriptCallerFn();\n    //    </script>\n    //    ```\n    script = eligibleScripts[eligibleScripts.length - 1] || null;\n  }\n\n  return script;\n}\n\n// Default stack depth to skip over when analyzing call stack frames\n_nearestExecutingScript.skipStackDepth = 1;\n\n\n\n    //\n    // Export the API\n    //\n    var currentExecutingScript    = _nearestExecutingScript;      // default\n    currentExecutingScript.near   = _nearestExecutingScript;\n    currentExecutingScript.far    = _farthestExecutingScript;\n    currentExecutingScript.origin = _originatingExecutingScript;\n\n\n    // Just return a value to define the module export.\n    // This example returns an object, but the module\n    // can return a function as the exported value.\n    return currentExecutingScript;\n  })\n);\n","const Constants = {\n    LOCAL_JID: 'local'\n};\n\nmodule.exports = Constants;\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(require('strophe.js')) :\n\ttypeof define === 'function' && define.amd ? define(['strophe.js'], factory) :\n\t(factory(global.window));\n}(this, (function (strophe_js) { 'use strict';\n\nstrophe_js.Strophe.addConnectionPlugin('disco',\n{\n    _connection: null,\n    _identities : [],\n    _features : [],\n    _items : [],\n    /** Function: init\n     * Plugin init\n     *\n     * Parameters:\n     *   (Strophe.Connection) conn - Strophe connection\n     */\n    init: function(conn)\n    {\n    this._connection = conn;\n        this._identities = [];\n        this._features   = [];\n        this._items      = [];\n        // disco info\n        conn.addHandler(this._onDiscoInfo.bind(this), strophe_js.Strophe.NS.DISCO_INFO, 'iq', 'get', null, null);\n        // disco items\n        conn.addHandler(this._onDiscoItems.bind(this), strophe_js.Strophe.NS.DISCO_ITEMS, 'iq', 'get', null, null);\n    },\n    /** Function: addIdentity\n     * See http://xmpp.org/registrar/disco-categories.html\n     * Parameters:\n     *   (String) category - category of identity (like client, automation, etc ...)\n     *   (String) type - type of identity (like pc, web, bot , etc ...)\n     *   (String) name - name of identity in natural language\n     *   (String) lang - lang of name parameter\n     *\n     * Returns:\n     *   Boolean\n     */\n    addIdentity: function(category, type, name, lang)\n    {\n        for (var i=0; i<this._identities.length; i++)\n        {\n            if (this._identities[i].category == category &&\n                this._identities[i].type == type &&\n                this._identities[i].name == name &&\n                this._identities[i].lang == lang)\n            {\n                return false;\n            }\n        }\n        this._identities.push({category: category, type: type, name: name, lang: lang});\n        return true;\n    },\n    /** Function: addFeature\n     *\n     * Parameters:\n     *   (String) var_name - feature name (like jabber:iq:version)\n     *\n     * Returns:\n     *   boolean\n     */\n    addFeature: function(var_name)\n    {\n        for (var i=0; i<this._features.length; i++)\n        {\n             if (this._features[i] == var_name)\n                 return false;\n        }\n        this._features.push(var_name);\n        return true;\n    },\n    /** Function: removeFeature\n     *\n     * Parameters:\n     *   (String) var_name - feature name (like jabber:iq:version)\n     *\n     * Returns:\n     *   boolean\n     */\n    removeFeature: function(var_name)\n    {\n        for (var i=0; i<this._features.length; i++)\n        {\n             if (this._features[i] === var_name){\n                 this._features.splice(i,1);\n                 return true;\n             }\n        }\n        return false;\n    },\n    /** Function: addItem\n     *\n     * Parameters:\n     *   (String) jid\n     *   (String) name\n     *   (String) node\n     *   (Function) call_back\n     *\n     * Returns:\n     *   boolean\n     */\n    addItem: function(jid, name, node, call_back)\n    {\n        if (node && !call_back)\n            return false;\n        this._items.push({jid: jid, name: name, node: node, call_back: call_back});\n        return true;\n    },\n    /** Function: info\n     * Info query\n     *\n     * Parameters:\n     *   (Function) call_back\n     *   (String) jid\n     *   (String) node\n     */\n    info: function(jid, node, success, error, timeout)\n    {\n        var attrs = {xmlns: strophe_js.Strophe.NS.DISCO_INFO};\n        if (node)\n            attrs.node = node;\n\n        var info = strophe_js.$iq({from:this._connection.jid,\n                         to:jid, type:'get'}).c('query', attrs);\n        this._connection.sendIQ(info, success, error, timeout);\n    },\n    /** Function: items\n     * Items query\n     *\n     * Parameters:\n     *   (Function) call_back\n     *   (String) jid\n     *   (String) node\n     */\n    items: function(jid, node, success, error, timeout)\n    {\n        var attrs = {xmlns: strophe_js.Strophe.NS.DISCO_ITEMS};\n        if (node)\n            attrs.node = node;\n\n        var items = strophe_js.$iq({from:this._connection.jid,\n                         to:jid, type:'get'}).c('query', attrs);\n        this._connection.sendIQ(items, success, error, timeout);\n    },\n\n    /** PrivateFunction: _buildIQResult\n     */\n    _buildIQResult: function(stanza, query_attrs)\n    {\n        var id   =  stanza.getAttribute('id');\n        var from = stanza.getAttribute('from');\n        var iqresult = strophe_js.$iq({type: 'result', id: id});\n\n        if (from !== null) {\n            iqresult.attrs({to: from});\n        }\n\n        return iqresult.c('query', query_attrs);\n    },\n\n    /** PrivateFunction: _onDiscoInfo\n     * Called when receive info request\n     */\n    _onDiscoInfo: function(stanza)\n    {\n        var node = stanza.getElementsByTagName('query')[0].getAttribute('node');\n        var attrs = {xmlns: strophe_js.Strophe.NS.DISCO_INFO};\n        var i;\n        if (node)\n        {\n            attrs.node = node;\n        }\n        var iqresult = this._buildIQResult(stanza, attrs);\n        for (i=0; i<this._identities.length; i++)\n        {\n            attrs = {category: this._identities[i].category,\n                         type    : this._identities[i].type};\n            if (this._identities[i].name)\n                attrs.name = this._identities[i].name;\n            if (this._identities[i].lang)\n                attrs['xml:lang'] = this._identities[i].lang;\n            iqresult.c('identity', attrs).up();\n        }\n        for (i=0; i<this._features.length; i++)\n        {\n            iqresult.c('feature', {'var':this._features[i]}).up();\n        }\n        this._connection.send(iqresult.tree());\n        return true;\n    },\n    /** PrivateFunction: _onDiscoItems\n     * Called when receive items request\n     */\n    _onDiscoItems: function(stanza)\n    {\n        var query_attrs = {xmlns: strophe_js.Strophe.NS.DISCO_ITEMS};\n        var node = stanza.getElementsByTagName('query')[0].getAttribute('node');\n        var items, i;\n        if (node)\n        {\n            query_attrs.node = node;\n            items = [];\n            for (i = 0; i < this._items.length; i++)\n            {\n                if (this._items[i].node == node)\n                {\n                    items = this._items[i].call_back(stanza);\n                    break;\n                }\n            }\n        }\n        else\n        {\n            items = this._items;\n        }\n        var iqresult = this._buildIQResult(stanza, query_attrs);\n        for (i = 0; i < items.length; i++)\n        {\n            var attrs = {jid:  items[i].jid};\n            if (items[i].name)\n                attrs.name = items[i].name;\n            if (items[i].node)\n                attrs.node = items[i].node;\n            iqresult.c('item', attrs).up();\n        }\n        this._connection.send(iqresult.tree());\n        return true;\n    }\n});\n\n})));\n//# sourceMappingURL=strophe.disco.js.map\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(require('strophe.js')) :\n\ttypeof define === 'function' && define.amd ? define(['strophe.js'], factory) :\n\t(global = global || self, factory(global.window));\n}(this, (function (strophe_js) { 'use strict';\n\n\t/**\n\t* StropheJS - Stream Management XEP-0198\n\t*\n\t* This plugin implements stream management ACK capabilities of the specs XEP-0198.\n\t* Note: Resumption is not supported in this current implementation.\n\t*\n\t* Reference: http://xmpp.org/extensions/xep-0198.html\n\t*\n\t* @class streamManagement\n\t*/\n\tstrophe_js.Strophe.addConnectionPlugin('streamManagement', {\n\n\t\t/**\n\t\t* @property {Boolean} logging: Set to true to enable logging regarding out of sync stanzas.\n\t\t*/\n\t\tlogging: false,\n\n\t\t/**\n\t\t* @property {Boolean} autoSendCountOnEveryIncomingStanza: Set to true to send an 'a' response after every stanza.\n\t\t* @default false\n\t\t* @public\n\t\t*/\n\t\tautoSendCountOnEveryIncomingStanza: false,\n\n\t\t/**\n\t\t* @property {Integer} requestResponseInterval: Set this value to send a request for counter on very interval\n\t\t* number of stanzas sent. Set to 0 to disable.\n\t\t* @default 5\n\t\t* @public\n\t\t*/\n\t\trequestResponseInterval: 5,\n\n\t\t/**\n\t\t* @property {Pointer} _c: Strophe connection instance.\n\t\t* @private\n\t\t*/\n\t\t_c: null,\n\n\t\t/**\n\t\t* @property {String} _NS XMPP Namespace.\n\t\t* @private\n\t\t*/\n\t\t_NS: 'urn:xmpp:sm:3',\n\n\t\t/**\n\t\t* @property {Boolean} _isStreamManagementEnabled\n\t\t* @private\n\t\t*/\n\t\t_isStreamManagementEnabled: false,\n\n\t\t/**\n\t\t* @property {Integer} _serverProcesssedStanzasCounter: Keeps count of stanzas confirmed processed by the server.\n\t\t* The server is the source of truth of this value. It is the 'h' attribute on the latest 'a' element received\n\t\t* from the server.\n\t\t* @private\n\t\t*/\n\t\t_serverProcesssedStanzasCounter: null,\n\n\t\t/**\n\t\t* @property {Integer} _clientProcessedStanzasCounter: Counter of stanzas received by the client from the server.\n\t\t* Client is the source of truth of this value. It is the 'h' attribute in the 'a' sent from the client to\n\t\t* the server.\n\t\t* @private\n\t\t*/\n\t\t_clientProcessedStanzasCounter: null,\n\n\t\t/**\n\t\t* @property {Integer} _clientSentStanzasCounter\n\t\t* @private\n\t\t*/\n\t\t_clientSentStanzasCounter: null,\n\n\t\t/**\n\t\t* Stores a reference to Strophe connection xmlOutput function to wrap counting functionality.\n\t\t* @method _originalXMLOutput\n\t\t* @type {Handler}\n\t\t* @private\n\t\t*/\n\t\t_originalXMLOutput: null,\n\n\t\t/**\n\t\t* @property {Handler} _requestHandler: Stores reference to handler that process count request from server.\n\t\t* @private\n\t\t*/\n\t\t_requestHandler: null,\n\n\t\t/**\n\t\t* @property {Handler} _incomingHandler: Stores reference to handler that processes incoming stanzas count.\n\t\t* @private\n\t\t*/\n\t\t_incomingHandler: null,\n\n\t\t/**\n\t\t* @property {Integer} _requestResponseIntervalCount: Counts sent stanzas since last response request.\n\t\t*/\n\t\t_requestResponseIntervalCount: 0,\n\n\t\t/**\n\t\t * @property {boolean} _isSupported: indicates whether or not the server has advertised support for the stream\n\t\t * management namespace.\n\t\t */\n\t\t_isSupported: false,\n\n\t\t/**\n\t\t* @property {Queue} _unacknowledgedStanzas: Maintains a list of packet ids for stanzas which have yet to be acknowledged.\n\t\t*/\n\t\t_unacknowledgedStanzas: [],\n\n\t\t/**\n\t\t* @property {Array} _acknowledgedStanzaListeners: Stores callbacks for each stanza acknowledged by the server.\n\t\t* Provides the packet id of the stanza as a parameter.\n\t\t* @private\n\t\t*/\n\t\t_acknowledgedStanzaListeners: [],\n\n\t\taddAcknowledgedStanzaListener: function(listener) {\n\t\t\tthis._acknowledgedStanzaListeners.push(listener);\n\t\t},\n\n\t\tenable: function(resume) {\n\t\t\tif (!this._isSupported) {\n\t\t\t\tthrow new Error('The server doesn\\'t support urn:xmpp:sm:3 namespace');\n\t\t\t} else if (this._connectionStatus !== strophe_js.Strophe.Status.CONNECTED) {\n\t\t\t\tthrow new Error('enable() can only be called in the CONNECTED state');\n\t\t\t}\n\t\t\tthis._c.send(strophe_js.$build('enable', { xmlns: this._NS, resume }));\n\t\t\tthis._c.flush();\n\t\t\tthis._c.pause();\n\t\t},\n\n\t\tgetResumeToken: function() {\n\t\t\treturn this._resumeToken;\n\t\t},\n\n\t\tisSupported() {\n\t\t\treturn this._isSupported;\n\t\t},\n\n\t\tresume: function() {\n\t\t\tif (!this.getResumeToken()) {\n\t\t\t\tthrow new Error('No resume token');\n\t\t\t}\n\t\t\tif (this._connectionStatus !== strophe_js.Strophe.Status.DISCONNECTED) {\n\t\t\t\tthrow new Error('resume() can only be called in the DISCONNECTED state');\n\t\t\t}\n\n\t\t\tthis._c.options.explicitResourceBinding = true;\n\t\t\tthis._resuming = true;\n\n\t\t\tthis._originalConnect.apply(this._c, this._connectArgs);\n\t\t},\n\n\t\trequestAcknowledgement: function() {\n\t\t\tif (this._connectionStatus !== strophe_js.Strophe.Status.CONNECTED) {\n\t\t\t\tthrow new Error('requestAcknowledgement() can only be called in the CONNECTED state');\n\t\t\t}\n\t\t\tthis._requestResponseIntervalCount = 0;\n\t\t\tthis._c.send(strophe_js.$build('r', { xmlns: this._NS }));\n\t\t},\n\n\t\tgetOutgoingCounter: function() {\n\t\t\treturn this._clientSentStanzasCounter;\n\t\t},\n\n\t\tgetIncomingCounter: function() {\n\t\t\treturn this._clientProcessedStanzasCounter;\n\t\t},\n\n\t\tinit: function(conn) {\n\t\t\tthis._c = conn;\n\t\t\tstrophe_js.Strophe.addNamespace('SM', this._NS);\n\n\t\t\t// Storing original xmlOutput function to use additional logic\n\t\t\tthis._originalXMLOutput = this._c.xmlOutput;\n\t\t\tthis._c.xmlOutput = this.xmlOutput.bind(this);\n\n\t\t\tthis._originalConnect = this._c.connect;\n\t\t\tthis._c.connect = this._interceptConnectArgs.bind(this);\n\n\t\t\tthis._originalOnStreamFeaturesAfterSASL = this._c._onStreamFeaturesAfterSASL;\n\t\t\tthis._c._onStreamFeaturesAfterSASL = this._onStreamFeaturesAfterSASL.bind(this);\n\n\t\t\tthis._originalDoDisconnect = this._c._doDisconnect;\n\t\t\tthis._c._doDisconnect = this._interceptDoDisconnect.bind(this);\n\n\t\t\tthis._originalDisconnect = this._c.disconnect;\n\t\t\tthis._c.disconnect = this._interceptDisconnect.bind(this);\n\t\t},\n\n\t\t_interceptDisconnect: function() {\n\t\t\tthis._resumeToken = undefined;\n\t\t\tthis._originalDisconnect.apply(this._c, arguments);\n\t\t},\n\n\t\t_interceptDoDisconnect: function() {\n\t\t\tif (this.getResumeToken()\n\t\t\t\t\t&& !this._resuming\n\t\t\t\t\t&& this._c.connected && !this._c.disconnecting) {\n\t\t\t\tthis._resumeState = {\n\t\t\t\t\thandlers: this._c.handlers,\n\t\t\t\t\ttimedHandlers: this._c.timedHandlers,\n\t\t\t\t\tremoveTimeds: this._c.removeTimeds,\n\t\t\t\t\tremoveHandlers: this._c.removeHandlers,\n\t\t\t\t\taddTimeds: this._c.addTimeds,\n\t\t\t\t\taddHandlers: this._c.addHandlers\n\t\t\t\t};\n\t\t\t\tthis._storedJid = this._c.jid;\n\n\t\t\t\tthis.logging && strophe_js.Strophe.debug('SM stored resume state, handler count: ' + this._resumeState.handlers.length);\n\t\t\t}\n\n\t\t\t// Remove any queued stanzas from the buffer that have failed to send while the socket was closed,\n\t\t\t// as they would interfere with the resume flow. They will be resent anyway.\n\t\t\tthis._c._data = [];\n\n\t\t\tthis._originalDoDisconnect.apply(this._c, arguments);\n\t\t},\n\n\t\t_interceptConnectArgs: function() {\n\t\t\tthis._connectArgs = arguments;\n\n\t\t\tthis._originalConnect.apply(this._c, arguments);\n\t\t},\n\n\t\t_onStreamFeaturesAfterSASL: function(elem) {\n\t\t\tthis._isSupported = elem.getElementsByTagNameNS(this._NS, \"sm\").length > 0;\n\n\t\t\treturn this._originalOnStreamFeaturesAfterSASL.apply(this._c, arguments);\n\t\t},\n\n\t\tstatusChanged: function (status) {\n\t\t\tthis._connectionStatus = status;\n\t\t\tif (!this.getResumeToken()\n\t\t\t\t&& (status === strophe_js.Strophe.Status.CONNECTED || status === strophe_js.Strophe.Status.DISCONNECTED)) {\n\t\t\t\tthis.logging && strophe_js.Strophe.debug('SM reset state');\n\n\t\t\t\tthis._serverProcesssedStanzasCounter = 0;\n\t\t\t\tthis._clientProcessedStanzasCounter = 0;\n\n\t\t\t\tthis._clientSentStanzasCounter = 0;\n\n\t\t\t\tthis._isStreamManagementEnabled = false;\n\t\t\t\tthis._requestResponseIntervalCount = 0;\n\n\t\t\t\t// FIXME not described in JSDocs\n\t\t\t\tthis._resuming = false;\n\n\t\t\t\tif (status === strophe_js.Strophe.Status.DISCONNECTED) {\n\t\t\t\t\tthis._isSupported = false;\n\t\t\t\t}\n\n\t\t\t\tthis._unacknowledgedStanzas = [];\n\n\t\t\t\tif (this._requestHandler) {\n\t\t\t\t\tthis._c.deleteHandler(this._requestHandler);\n\t\t\t\t}\n\n\t\t\t\tif (this._incomingHandler) {\n\t\t\t\t\tthis._c.deleteHandler(this._incomingHandler);\n\t\t\t\t}\n\n\t\t\t\tthis._requestHandler = this._c.addHandler(this._handleServerRequestHandler.bind(this), this._NS, 'r');\n\t\t\t\tthis._ackHandler = this._c.addHandler(this._handleServerAck.bind(this), this._NS, 'a');\n\t\t\t\tthis._incomingHandler = this._c.addHandler(this._incomingStanzaHandler.bind(this));\n\n\t\t\t\t// FIXME handler instances stored, but never used\n\t\t\t\tthis._enabledHandler = this._c._addSysHandler(this._handleEnabled.bind(this), this._NS, 'enabled');\n\t\t\t\tthis._resumeFailedHandler = this._c._addSysHandler(this._handleResumeFailed.bind(this), this._NS, 'failed');\n\t\t\t\tthis._resumedHandler =  this._c._addSysHandler(this._handleResumed.bind(this), this._NS,'resumed');\n\n\t\t\t} else if (status === strophe_js.Strophe.Status.BINDREQUIRED)  {\n\t\t\t\tthis._c.jid = this._storedJid;\n\n\t\t\t\t// Restore Strophe handlers\n\t\t\t\tfor (const property in this._resumeState) {\n\t\t\t\t\tthis._c[property] = this._resumeState[property];\n\t\t\t\t}\n\n\t\t\t\t// FIXME check conditions if there's session ID and if enabled\n\t\t\t\tthis._c.send(strophe_js.$build('resume', {\n\t\t\t\t\txmlns: this._NS,\n\t\t\t\t\th: this._clientProcessedStanzasCounter,\n\t\t\t\t\tprevid: this._resumeToken\n\t\t\t\t}));\n\t\t\t\tthis._c.flush();\n\t\t\t} else if (status === strophe_js.Strophe.Status.ERROR) {\n\t\t\t\tthis.logging && strophe_js.Strophe.debug('SM cleared resume token on error');\n\t\t\t\tthis._resumeToken = undefined;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t* This method overrides the send method implemented by Strophe.Connection\n\t\t* to count outgoing stanzas\n\t\t*\n\t\t* @method Send\n\t\t* @public\n\t\t*/\n\t\txmlOutput: function(elem) {\n\t\t\tif (strophe_js.Strophe.isTagEqual(elem, 'iq') ||\n\t\t\t\tstrophe_js.Strophe.isTagEqual(elem, 'presence') ||\n\t\t\t\tstrophe_js.Strophe.isTagEqual(elem, 'message')) {\n\t\t\t\tthis._increaseSentStanzasCounter(elem);\n\t\t\t}\n\n\t\t\treturn this._originalXMLOutput.call(this._c, elem);\n\t\t},\n\n\t\t_handleEnabled: function(elem) {\n\t\t\tthis._isStreamManagementEnabled = true;\n\t\t\t// FIXME fail if requested, but not enabled\n\t\t\tthis._resumeToken = elem.getAttribute('resume') === 'true' && elem.getAttribute('id');\n\n\t\t\tthis._c.resume();\n\n\t\t\treturn true;\n\t\t},\n\n\t\t_handleResumeFailed: function(elem) {\n\t\t\tconst error = elem && elem.firstElementChild && elem.firstElementChild.tagName;\n\n\t\t\tthis._c._changeConnectStatus(strophe_js.Strophe.Status.ERROR, error, elem);\n\t\t\tthis._c._doDisconnect();\n\n\t\t\treturn true;\n\t\t},\n\n\t\t_handleResumed: function(elem) {\n\t\t\t// FIXME check if in the correct state\n\t\t\tvar handledCount = parseInt(elem.getAttribute('h'));\n\t\t\tthis._handleAcknowledgedStanzas(handledCount, this._serverProcesssedStanzasCounter);\n\n\t\t\tthis._resuming = false;\n\t\t\tthis._c.do_bind = false; // No need to bind our resource anymore\n\t\t\tthis._c.authenticated = true;\n\t\t\tthis._c.restored = true;\n\n\t\t\tif (this._unacknowledgedStanzas.length > 0) {\n\t\t\t\tthis.logging && strophe_js.Strophe.debug('SM Sending unacknowledged stanzas', this._unacknowledgedStanzas);\n\t\t\t\tfor(const stanza of this._unacknowledgedStanzas) {\n\t\t\t\t\tthis._c.send(stanza);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.logging && strophe_js.Strophe.debug('SM No unacknowledged stanzas', this._unacknowledgedStanzas);\n\t\t\t}\n\n\t\t\tthis._c._changeConnectStatus(strophe_js.Strophe.Status.CONNECTED, null);\n\n\t\t\treturn true;\n\t\t},\n\n\t\t_incomingStanzaHandler: function(elem) {\n\t\t\tif (strophe_js.Strophe.isTagEqual(elem, 'iq') || strophe_js.Strophe.isTagEqual(elem, 'presence') || strophe_js.Strophe.isTagEqual(elem, 'message'))  {\n\t\t\t\tthis._increaseReceivedStanzasCounter();\n\n\t\t\t\tif (this.autoSendCountOnEveryIncomingStanza) {\n\t\t\t\t\tthis._answerProcessedStanzas();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\t_handleAcknowledgedStanzas: function(reportedHandledCount, lastKnownHandledCount) {\n\t\t\tvar delta = reportedHandledCount - lastKnownHandledCount;\n\n\t\t\tif (delta < 0) {\n\t\t\t\tthis._throwError('New reported stanza count lower than previous. New: ' + reportedHandledCount + ' - Previous: ' + lastKnownHandledCount);\n\t\t\t}\n\n\t\t\tif (delta > this._unacknowledgedStanzas.length) {\n\t\t\t\tthis._throwError('Higher reported acknowledge count than unacknowledged stanzas. Reported Acknowledge Count: ' + delta + ' - Unacknowledge Stanza Count: ' + this._unacknowledgedStanzas.length + ' - New: ' + reportedHandledCount + ' - Previous: ' + lastKnownHandledCount);\n\t\t\t}\n\n\t\t\tfor(var i = 0; i < delta; i++) {\n\t\t\t\tvar stanza = this._unacknowledgedStanzas.shift();\n\t\t\t\tfor (var j = 0; j < this._acknowledgedStanzaListeners.length; j++) {\n\t\t\t\t\tthis._acknowledgedStanzaListeners[j](stanza);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.logging && this._unacknowledgedStanzas.length > 0) {\n\t\t\t\tstrophe_js.Strophe.warn('SM Unacknowledged stanzas', this._unacknowledgedStanzas);\n\t\t\t}\n\n\t\t\tthis._serverProcesssedStanzasCounter = reportedHandledCount;\n\n\t\t\tif (this.requestResponseInterval > 0) {\n\t\t\t\tthis._requestResponseIntervalCount = 0;\n\t\t\t}\n\t\t},\n\n\t\t_handleServerRequestHandler: function() {\n\t\t\tthis._answerProcessedStanzas();\n\n\t\t\treturn true;\n\t\t},\n\n\t\t_handleServerAck: function(elem){\n\t\t\tvar handledCount = parseInt(elem.getAttribute('h'));\n\t\t\tthis._handleAcknowledgedStanzas(handledCount, this._serverProcesssedStanzasCounter);\n\n\t\t\treturn true;\n\t\t},\n\n\t\t_answerProcessedStanzas: function() {\n\t\t\tif (this._isStreamManagementEnabled) {\n\t\t\t\tthis._c.send(strophe_js.$build('a', { xmlns: this._NS, h: this._clientProcessedStanzasCounter }));\n\t\t\t}\n\t\t},\n\n\t\t_increaseSentStanzasCounter: function(elem) {\n\t\t\tif (this._isStreamManagementEnabled) {\n\t\t\t\tif (this._unacknowledgedStanzas.indexOf(elem) !== -1) {\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._unacknowledgedStanzas.push(elem);\n\t\t\t\tthis._clientSentStanzasCounter++;\n\n\t\t\t\tif (this.requestResponseInterval > 0) {\n\t\t\t\t\tthis._requestResponseIntervalCount++;\n\n\t\t\t\t\tif (this._requestResponseIntervalCount === this.requestResponseInterval) {\n\t\t\t\t\t\t// FIXME Can not call send from onIdle.\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tif (this._connectionStatus === strophe_js.Strophe.Status.CONNECTED) {\n\t\t\t\t\t\t\t\tthis.requestAcknowledgement();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_increaseReceivedStanzasCounter: function() {\n\t\t\tif (this._isStreamManagementEnabled) {\n\t\t\t\tthis._clientProcessedStanzasCounter++;\n\t\t\t}\n\t\t},\n\n\t\t_throwError: function(msg) {\n\t\t\tstrophe_js.Strophe.error(msg);\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t});\n\n})));\n//# sourceMappingURL=strophe.stream-management.js.map\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","var toIntIfInt = function (v) {\n  return String(Number(v)) === v ? Number(v) : v;\n};\n\nvar attachProperties = function (match, location, names, rawName) {\n  if (rawName && !names) {\n    location[rawName] = toIntIfInt(match[1]);\n  }\n  else {\n    for (var i = 0; i < names.length; i += 1) {\n      if (match[i+1] != null) {\n        location[names[i]] = toIntIfInt(match[i+1]);\n      }\n    }\n  }\n};\n\nvar parseReg = function (obj, location, content) {\n  var needsBlank = obj.name && obj.names;\n  if (obj.push && !location[obj.push]) {\n    location[obj.push] = [];\n  }\n  else if (needsBlank && !location[obj.name]) {\n    location[obj.name] = {};\n  }\n  var keyLocation = obj.push ?\n    {} :  // blank object that will be pushed\n    needsBlank ? location[obj.name] : location; // otherwise, named location or root\n\n  attachProperties(content.match(obj.reg), keyLocation, obj.names, obj.name);\n\n  if (obj.push) {\n    location[obj.push].push(keyLocation);\n  }\n};\n\nvar grammar = require('./grammar');\nvar validLine = RegExp.prototype.test.bind(/^([a-z])=(.*)/);\n\nexports.parse = function (sdp) {\n  var session = {}\n    , media = []\n    , location = session; // points at where properties go under (one of the above)\n\n  // parse lines we understand\n  sdp.split(/(\\r\\n|\\r|\\n)/).filter(validLine).forEach(function (l) {\n    var type = l[0];\n    var content = l.slice(2);\n    if (type === 'm') {\n      media.push({rtp: [], fmtp: []});\n      location = media[media.length-1]; // point at latest media line\n    }\n\n    for (var j = 0; j < (grammar[type] || []).length; j += 1) {\n      var obj = grammar[type][j];\n      if (obj.reg.test(content)) {\n        return parseReg(obj, location, content);\n      }\n    }\n  });\n\n  session.media = media; // link it up\n  return session;\n};\n\nvar paramReducer = function (acc, expr) {\n  var s = expr.split(/=(.+)/, 2);\n  if (s.length === 2) {\n    acc[s[0]] = toIntIfInt(s[1]);\n  }\n  return acc;\n};\n\nexports.parseParams = function (str) {\n  return str.split(/\\;\\s?/).reduce(paramReducer, {});\n};\n\n// For backward compatibility - alias will be removed in 3.0.0\nexports.parseFmtpConfig = exports.parseParams;\n\nexports.parsePayloads = function (str) {\n  return str.split(' ').map(Number);\n};\n\nexports.parseRemoteCandidates = function (str) {\n  var candidates = [];\n  var parts = str.split(' ').map(toIntIfInt);\n  for (var i = 0; i < parts.length; i += 3) {\n    candidates.push({\n      component: parts[i],\n      ip: parts[i + 1],\n      port: parts[i + 2]\n    });\n  }\n  return candidates;\n};\n\nexports.parseImageAttributes = function (str) {\n  return str.split(' ').map(function (item) {\n    return item.substring(1, item.length-1).split(',').reduce(paramReducer, {});\n  });\n};\n\nexports.parseSimulcastStreamList = function (str) {\n  return str.split(';').map(function (stream) {\n    return stream.split(',').map(function (format) {\n      var scid, paused = false;\n\n      if (format[0] !== '~') {\n        scid = toIntIfInt(format);\n      } else {\n        scid = toIntIfInt(format.substring(1, format.length));\n        paused = true;\n      }\n\n      return {\n        scid: scid,\n        paused: paused\n      };\n    });\n  });\n};\n","var grammar = require('./grammar');\n\n// customized util.format - discards excess arguments and can void middle ones\nvar formatRegExp = /%[sdv%]/g;\nvar format = function (formatStr) {\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  return formatStr.replace(formatRegExp, function (x) {\n    if (i >= len) {\n      return x; // missing argument\n    }\n    var arg = args[i];\n    i += 1;\n    switch (x) {\n    case '%%':\n      return '%';\n    case '%s':\n      return String(arg);\n    case '%d':\n      return Number(arg);\n    case '%v':\n      return '';\n    }\n  });\n  // NB: we discard excess arguments - they are typically undefined from makeLine\n};\n\nvar makeLine = function (type, obj, location) {\n  var str = obj.format instanceof Function ?\n    (obj.format(obj.push ? location : location[obj.name])) :\n    obj.format;\n\n  var args = [type + '=' + str];\n  if (obj.names) {\n    for (var i = 0; i < obj.names.length; i += 1) {\n      var n = obj.names[i];\n      if (obj.name) {\n        args.push(location[obj.name][n]);\n      }\n      else { // for mLine and push attributes\n        args.push(location[obj.names[i]]);\n      }\n    }\n  }\n  else {\n    args.push(location[obj.name]);\n  }\n  return format.apply(null, args);\n};\n\n// RFC specified order\n// TODO: extend this with all the rest\nvar defaultOuterOrder = [\n  'v', 'o', 's', 'i',\n  'u', 'e', 'p', 'c',\n  'b', 't', 'r', 'z', 'a'\n];\nvar defaultInnerOrder = ['i', 'c', 'b', 'a'];\n\n\nmodule.exports = function (session, opts) {\n  opts = opts || {};\n  // ensure certain properties exist\n  if (session.version == null) {\n    session.version = 0; // 'v=0' must be there (only defined version atm)\n  }\n  if (session.name == null) {\n    session.name = ' '; // 's= ' must be there if no meaningful name set\n  }\n  session.media.forEach(function (mLine) {\n    if (mLine.payloads == null) {\n      mLine.payloads = '';\n    }\n  });\n\n  var outerOrder = opts.outerOrder || defaultOuterOrder;\n  var innerOrder = opts.innerOrder || defaultInnerOrder;\n  var sdp = [];\n\n  // loop through outerOrder for matching properties on session\n  outerOrder.forEach(function (type) {\n    grammar[type].forEach(function (obj) {\n      if (obj.name in session && session[obj.name] != null) {\n        sdp.push(makeLine(type, obj, session));\n      }\n      else if (obj.push in session && session[obj.push] != null) {\n        session[obj.push].forEach(function (el) {\n          sdp.push(makeLine(type, obj, el));\n        });\n      }\n    });\n  });\n\n  // then for each media line, follow the innerOrder\n  session.media.forEach(function (mLine) {\n    sdp.push(makeLine('m', grammar.m[0], mLine));\n\n    innerOrder.forEach(function (type) {\n      grammar[type].forEach(function (obj) {\n        if (obj.name in mLine && mLine[obj.name] != null) {\n          sdp.push(makeLine(type, obj, mLine));\n        }\n        else if (obj.push in mLine && mLine[obj.push] != null) {\n          mLine[obj.push].forEach(function (el) {\n            sdp.push(makeLine(type, obj, el));\n          });\n        }\n      });\n    });\n  });\n\n  return sdp.join('\\r\\n') + '\\r\\n';\n};\n","/* Copyright @ 2016 Atlassian Pty Ltd\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar transform = require('sdp-transform');\nvar transformUtils = require('./transform-utils');\nvar parseSsrcs = transformUtils.parseSsrcs;\nvar writeSsrcs = transformUtils.writeSsrcs;\n\n//region Constants\n\nvar DEFAULT_NUM_OF_LAYERS = 3;\n\n//endregion\n\nfunction getSsrcAttribute (mLine, ssrc, attributeName) {\n    return mLine\n        .ssrcs\n        .filter(function(ssrcInfo) { return ssrcInfo.id === ssrc; })\n        .filter(function(ssrcInfo) { return ssrcInfo.attribute === attributeName; })\n        .map(function(ssrcInfo) { return ssrcInfo.value; })[0];\n}\n\n//region Ctor\n\nfunction Simulcast(options) {\n\n    this.options = options ? options : {};\n\n    if (!this.options.numOfLayers) {\n        this.options.numOfLayers = DEFAULT_NUM_OF_LAYERS;\n    }\n    console.log(\"SdpSimulcast: using \" + this.options.numOfLayers + \" layers\");\n\n    /**\n     * An IN-ORDER list of the simulcast ssrcs\n     * @type {list<number>}\n     */\n    this.ssrcCache = [];\n}\n\n//endregion\n\n//region Stateless private utility functions\n\n/**\n * Returns a random integer between min (included) and max (excluded)\n * Using Math.round() gives a non-uniform distribution!\n * @returns {number}\n */\nfunction generateSSRC() {\n    var min = 0, max = 0xffffffff;\n    return Math.floor(Math.random() * (max - min)) + min;\n};\n\nfunction processVideo(session, action) {\n    if (session == null || !Array.isArray(session.media)) {\n        return;\n    }\n\n    session.media.forEach(function (mLine) {\n        if (mLine.type === 'video') {\n            action(mLine);\n        }\n    });\n};\n\nfunction validateDescription(desc)\n{\n    return desc && desc != null\n        && desc.type && desc.type != ''\n        && desc.sdp && desc.sdp != '';\n}\n\nfunction explodeRemoteSimulcast(mLine) {\n\n    if (!mLine || !Array.isArray(mLine.ssrcGroups)) {\n        return;\n    }\n\n    var sources = parseSsrcs(mLine);\n    var order = [];\n\n    // Find the SIM group and explode its sources.\n    var j = mLine.ssrcGroups.length;\n    while (j--) {\n\n        if (mLine.ssrcGroups[j].semantics !== 'SIM') {\n            continue;\n        }\n\n        var simulcastSsrcs = mLine.ssrcGroups[j].ssrcs.split(' ');\n\n        for (var i = 0; i < simulcastSsrcs.length; i++) {\n\n            var ssrc = simulcastSsrcs[i];\n            order.push(ssrc);\n\n            var parts = sources[ssrc].msid.split(' ');\n            sources[ssrc].msid = [parts[0], '/', i, ' ', parts[1], '/', i].join('');\n            sources[ssrc].cname = [sources[ssrc].cname, '/', i].join('');\n\n            // Remove all the groups that this SSRC participates in.\n            mLine.ssrcGroups.forEach(function (relatedGroup) {\n                if (relatedGroup.semantics === 'SIM') {\n                    return;\n                }\n\n                var relatedSsrcs = relatedGroup.ssrcs.split(' ');\n                if (relatedSsrcs.indexOf(ssrc) === -1) {\n                    return;\n                }\n\n                // Nuke all the related SSRCs.\n                relatedSsrcs.forEach(function (relatedSSRC) {\n                    sources[relatedSSRC].msid = sources[ssrc].msid;\n                    sources[relatedSSRC].cname = sources[ssrc].cname;\n                    if (relatedSSRC !== ssrc) {\n                        order.push(relatedSSRC);\n                    }\n                });\n\n                // Schedule the related group for nuking.\n            })\n        }\n\n        mLine.ssrcs = writeSsrcs(sources, order);\n        mLine.ssrcGroups.splice(j, 1);\n    };\n}\n\nfunction implodeRemoteSimulcast(mLine) {\n\n    if (!mLine || !Array.isArray(mLine.ssrcGroups)) {\n        console.info('Halt: There are no SSRC groups in the remote ' +\n                'description.');\n        return;\n    }\n\n    var sources = parseSsrcs(mLine);\n\n    // Find the SIM group and nuke it.\n    mLine.ssrcGroups.forEach(function (simulcastGroup) {\n        if (simulcastGroup.semantics !== 'SIM') {\n            return;\n        }\n\n        console.info(\"Imploding SIM group: \" + simulcastGroup.ssrcs);\n        // Schedule the SIM group for nuking.\n        simulcastGroup.nuke = true;\n\n        var simulcastSsrcs = simulcastGroup.ssrcs.split(' ');\n\n        // Nuke all the higher layer SSRCs.\n        for (var i = 1; i < simulcastSsrcs.length; i++) {\n\n            var ssrc = simulcastSsrcs[i];\n            delete sources[ssrc];\n\n            // Remove all the groups that this SSRC participates in.\n            mLine.ssrcGroups.forEach(function (relatedGroup) {\n                if (relatedGroup.semantics === 'SIM') {\n                    return;\n                }\n\n                var relatedSsrcs = relatedGroup.ssrcs.split(' ');\n                if (relatedSsrcs.indexOf(ssrc) === -1) {\n                    return;\n                }\n\n                // Nuke all the related SSRCs.\n                relatedSsrcs.forEach(function (relatedSSRC) {\n                    delete sources[relatedSSRC];\n                });\n\n                // Schedule the related group for nuking.\n                relatedGroup.nuke = true;\n            })\n        }\n\n        return;\n    });\n\n    mLine.ssrcs = writeSsrcs(sources);\n\n    // Nuke all the scheduled groups.\n    var i = mLine.ssrcGroups.length;\n    while (i--) {\n        if (mLine.ssrcGroups[i].nuke) {\n            mLine.ssrcGroups.splice(i, 1);\n        }\n    }\n}\n\nfunction removeGoogConference(mLine) {\n    if (!mLine || typeof mLine.xGoogleFlag === 'undefined') {\n        return;\n    }\n\n    mLine.xGoogleFlag = undefined;\n}\n\nfunction assertGoogConference(mLine) {\n    if (!mLine) {\n        return;\n    }\n\n    if (!Array.isArray(mLine.invalid)) {\n        mLine.invalid = [];\n    }\n\n    if (!mLine.invalid.some(\n            function (i) { return i.value === 'x-google-flag:conference' })) {\n        mLine.invalid.push({'value': 'x-google-flag:conference'});\n    }\n}\n\nSimulcast.prototype.clearSsrcCache = function() {\n    this.ssrcCache = [];\n}\n\n/**\n * When we start as video muted, all of the video\n *  ssrcs get generated so we can include them as part\n *  of the original session-accept.  That means we\n *  need this library to restore to those same ssrcs\n *  the first time we unmute, so we need the ability to\n *  force its cache\n */\nSimulcast.prototype.setSsrcCache = function(ssrcs) {\n    this.ssrcCache = ssrcs;\n}\n\n//endregion\n\n//region \"Private\" functions\n\n/**\n * Given a video mLine, return a list of the video ssrcs\n *  in simulcast layer order (returns a list of just\n *  the primary ssrc if there are no simulcast layers)\n */\nSimulcast.prototype._parseSimLayers = function (mLine) {\n    var simGroup = mLine.ssrcGroups &&\n        mLine.ssrcGroups.find(function(group) { return group.semantics === \"SIM\"; });\n    if (simGroup) {\n        return simGroup.ssrcs\n            .split(\" \")\n            .map(function(ssrcStr) { return parseInt(ssrcStr) });\n    } else {\n        return [mLine.ssrcs[0].id];\n    }\n}\n\nSimulcast.prototype._buildNewToOldSsrcMap = function (newSsrcList, oldSsrcList) {\n    var ssrcMap = {};\n    for (var i = 0; i < newSsrcList.length; ++i) {\n        var newSsrc = newSsrcList[i];\n        var oldSsrc = oldSsrcList[i] || null;\n        ssrcMap[newSsrc] = oldSsrc;\n    }\n    return ssrcMap;\n}\n\nSimulcast.prototype._fillInSourceDataFromCache = function(mLine) {\n    console.log(\"SdpSimulcast restoring from cache: \", this.ssrcCache);\n    var newSimSsrcs = this._parseSimLayers(mLine);\n    console.log(\"SdpSimulcast Parsed new sim ssrcs: \", newSimSsrcs);\n    var newMsid = getSsrcAttribute(mLine, newSimSsrcs[0], \"msid\");\n    var newCname = getSsrcAttribute(mLine, newSimSsrcs[0], \"cname\");\n    var ssrcsToReplace = this._buildNewToOldSsrcMap(newSimSsrcs, this.ssrcCache);\n    console.log(\"SdpSimulcast built replacement map: \", ssrcsToReplace);\n    // New sdp might only have 1 layer, so not every cached ssrc will have a new one\n    //  to replace directly\n    var ssrcsToAdd = this.ssrcCache\n        .filter(function(ssrc) { return Object.values(ssrcsToReplace).indexOf(ssrc) === -1; });\n    console.log(\"SdpSimulcast built ssrcs to add: \", ssrcsToAdd);\n\n    // First do the replacements\n    mLine.ssrcs.forEach(function(ssrc) {\n        if (ssrcsToReplace[ssrc.id]) {\n            ssrc.id = ssrcsToReplace[ssrc.id];\n        }\n    });\n    // Now the adds\n    ssrcsToAdd.forEach(function(ssrc) {\n        mLine.ssrcs.push({\n            id: ssrc,\n            attribute: \"msid\",\n            value: newMsid\n        });\n        mLine.ssrcs.push({\n            id: ssrc,\n            attribute: \"cname\",\n            value: newCname\n        });\n    });\n    mLine.ssrcGroups = mLine.ssrcGroups || [];\n    mLine.ssrcGroups.push({\n        semantics: \"SIM\",\n        ssrcs: this.ssrcCache.join(\" \")\n    });\n    return mLine;\n}\n\nSimulcast.prototype._generateSourceData = function(mLine, primarySsrc) {\n    var addAssociatedStream = function(mLine, ssrc) {\n        mLine.ssrcs.push({\n            id: ssrc,\n            attribute: \"cname\",\n            value: primarySsrcCname\n        });\n        mLine.ssrcs.push({\n            id: ssrc,\n            attribute: \"msid\",\n            value: primarySsrcMsid\n        });\n    }\n    var primarySsrcMsid = getSsrcAttribute(mLine, primarySsrc, \"msid\");\n    var primarySsrcCname = getSsrcAttribute(mLine, primarySsrc, \"cname\");\n\n    // In Unified-plan mode, the a=ssrc lines with the msid attribute are not present\n    // in the answers that Chrome and Safari generate for an offer received from Jicofo.\n    // Generate these a=ssrc lines using the msid values from the a=msid line.\n    if (this.options.usesUnifiedPlan && !primarySsrcMsid) {\n        primarySsrcMsid = mLine.msid;\n        var primarySsrcs = mLine.ssrcs;\n        primarySsrcs.forEach(ssrc => {\n            mLine.ssrcs.push({\n                id: ssrc.id,\n                attribute: \"msid\",\n                value: primarySsrcMsid\n            });\n        });\n    }\n\n    // Generate sim layers\n    var simSsrcs = [];\n    for (var i = 0; i < this.options.numOfLayers - 1; ++i) {\n        var simSsrc = generateSSRC();\n        addAssociatedStream(mLine, simSsrc);\n        simSsrcs.push(simSsrc);\n    }\n    mLine.ssrcGroups = mLine.ssrcGroups || [];\n    mLine.ssrcGroups.push({\n        semantics: \"SIM\",\n        ssrcs: primarySsrc + \" \" + simSsrcs.join(\" \")\n    });\n    return mLine;\n}\n\n\n\n// Assumptions:\n//  1) 'mLine' contains only a single primary video source\n//   (i.e. it will not already have simulcast streams inserted)\n//  2) 'mLine' MAY already contain an RTX stream for its video source\n//  3) 'mLine' is in sendrecv or sendonly state\n// Guarantees:\n//  1) return mLine will contain 2 additional simulcast layers\n//   generated\n//  2) if the base video ssrc in mLine has been seen before,\n//   then the same generated simulcast streams from before will\n//   be used again\n//  3) if rtx is enabled for the mLine, all generated simulcast\n//   streams will have rtx streams generated as well\n//  4) if rtx has been generated for a src before, we will generate\n//   the same rtx stream again\nSimulcast.prototype._restoreSimulcast = function(mLine) {\n    // First, find the primary video source in the given\n    // mLine and see if we've seen it before.\n    var primarySsrc;\n    var numSsrcs = mLine.ssrcs && mLine.ssrcs\n        .map(function(ssrcInfo) { return ssrcInfo.id; })\n        .filter(function(ssrc, index, array) {\n            return array.indexOf(ssrc) === index;\n        })\n        .length || 0;\n    var numGroups = (mLine.ssrcGroups && mLine.ssrcGroups.length) || 0;\n\n    if (numSsrcs === 0 || numSsrcs > 2) {\n        // Unsupported scenario\n        return mLine;\n    }\n    if (numSsrcs == 2 && numGroups === 0) {\n        // Unsupported scenario\n        return mLine;\n    }\n\n    if (numSsrcs === 1) {\n        primarySsrc = mLine.ssrcs[0].id;\n    } else {\n        // There must be an FID group, so parse\n        //  that and pull the primary ssrc from there\n        var fidGroup = mLine.ssrcGroups.filter(function(group) { return group.semantics === \"FID\"; })[0];\n        if (fidGroup) {\n            primarySsrc = parseInt(fidGroup.ssrcs.split(\" \")[0]);\n        } else {\n            // Unsupported scenario\n            return mLine;\n        }\n    }\n    console.log(\"SdpSimulcast: current ssrc cache: \", this.ssrcCache);\n    console.log(\"SdpSimulcast: parsed primary ssrc \" + primarySsrc);\n\n    var seenPrimarySsrc = this.ssrcCache.indexOf(primarySsrc) !== -1;\n\n    if (seenPrimarySsrc) {\n        console.log(\"SdpSimulcast: Have seen primary ssrc before, \" +\n            \"filling in data from cache\");\n        mLine = this._fillInSourceDataFromCache(mLine);\n    } else {\n        console.log(\"SdpSimulcast: Have not seen primary ssrc before, \" +\n            \"generating source data\");\n        mLine = this._generateSourceData(mLine, primarySsrc);\n    }\n    // Now update the cache to match whatever we've just put into this sdp\n    this.ssrcCache = this._parseSimLayers(mLine);\n    return mLine;\n}\n\n//endregion\n\n//region \"Public\" functions\n\n/**\n *\n * @param desc\n * @param enableConferenceFlag\n * @returns {RTCSessionDescription}\n */\nSimulcast.prototype.mungeRemoteDescription = function (desc, enableConferenceFlag) {\n\n    if (!validateDescription(desc)) {\n        return desc;\n    }\n\n    var session = transform.parse(desc.sdp);\n\n    var self = this;\n    processVideo(session, function (mLine) {\n\n        // Handle simulcast reception.\n        if (self.options.explodeRemoteSimulcast) {\n            explodeRemoteSimulcast(mLine);\n        } else {\n            implodeRemoteSimulcast(mLine);\n        }\n\n        // Add or remove \"x-google-conference\" from the remote description based on whether the client\n        // has enabled simulcast for the local video source. For cases where we disable simulcast for desktop share,\n        // it is necessary to remove the flag so that Chrome stops sending T1 temporal layers. It also fixes other\n        // issues related to screensharing like https://bugs.chromium.org/p/chromium/issues/detail?id=1093819.\n        if (!self.options.usesUnifiedPlan && enableConferenceFlag) {\n            assertGoogConference(mLine);\n        } else {\n            removeGoogConference(mLine);\n        }\n    });\n\n    return new RTCSessionDescription({\n        type: desc.type,\n        sdp: transform.write(session)\n    });\n};\n\n/**\n *\n * NOTE this method should be called only if simulcast is supported by\n * the current browser, otherwise local SDP should not be munged.\n * @param desc\n * @returns {RTCSessionDescription}\n */\nSimulcast.prototype.mungeLocalDescription = function (desc) {\n\n    if (!validateDescription(desc)) {\n        return desc;\n    }\n\n    var session = transform.parse(desc.sdp);\n\n    var self = this;\n    processVideo(session, function (mLine) {\n        if (mLine.direction == 'recvonly' || mLine.direction == 'inactive')\n        {\n            return;\n        }\n        self._restoreSimulcast(mLine);\n    });\n\n    return new RTCSessionDescription({\n        type: desc.type,\n        sdp: transform.write(session)\n    });\n};\n\n//endregion\n\nmodule.exports = Simulcast;\n","/* Copyright @ 2015 Atlassian Pty Ltd\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * FIXME\n * @param sources FIXME\n * @param order An array of SSRCs which will be used to order the entries in\n * the returned array. Sources whose SSRC appears in 'order' will be added first,\n * in the specified order, and all other sources will be added afterwards (in\n * no specific order).\n * @returns {Array} FIXME\n */\nexports.writeSsrcs = function(sources, order) {\n  var ssrcs = [];\n\n  // expand sources to ssrcs\n  if (typeof sources !== 'undefined' &&\n      Object.keys(sources).length !== 0) {\n\n    if (!Array.isArray(order)) {\n      order = []\n    }\n\n    // Add the sources that appear in 'order' first.\n    for (var i = 0; i < order.length; i++) {\n      var ssrc = order[i];\n      var source = sources[ssrc];\n      Object.keys(source).forEach(function (attribute) {\n        ssrcs.push({\n          id: ssrc,\n          attribute: attribute,\n          value: source[attribute]\n        });\n      });\n    }\n\n    // Now add the rest of the sources.\n    Object.keys(sources).forEach(function (ssrc) {\n      ssrc = parseInt(ssrc); // Object.keys() returns string\n      if (order.indexOf(ssrc) >= 0) {\n        // Already added.\n        return;\n      }\n\n      var source = sources[ssrc];\n      Object.keys(source).forEach(function (attribute) {\n        ssrcs.push({\n          id: ssrc,\n          attribute: attribute,\n          value: source[attribute]\n        });\n      });\n    });\n  }\n\n  return ssrcs;\n};\n\nexports.parseSsrcs = function (mLine) {\n  var sources = {};\n  // group sources attributes by ssrc.\n  if (typeof mLine.ssrcs !== 'undefined' && Array.isArray(mLine.ssrcs)) {\n    mLine.ssrcs.forEach(function (ssrc) {\n      if (!sources[ssrc.id])\n        sources[ssrc.id] = {};\n      sources[ssrc.id][ssrc.attribute] = ssrc.value;\n    });\n  }\n  return sources;\n};\n\n","/* eslint-disable max-params */\n\n/**\n * This object stores variables needed around the recording of an audio stream\n * and passing this recording along with additional information along to\n * different processes\n * @param blob the recording audio stream as a single blob\n * @param name the name of the person of the audio stream\n * @param startTime the time in UTC when recording of the audiostream started\n * @param wordArray the recorder audio stream transcribed as an array of Word\n *                  objects\n */\nconst RecordingResult = function(blob, name, startTime, wordArray) {\n    this.blob = blob;\n    this.name = name;\n    this.startTime = startTime;\n    this.wordArray = wordArray;\n};\n\n/* eslint-enable max-params */\n\nmodule.exports = RecordingResult;\n","/* global config */\n\nconst Word = require('../word');\n\nconst audioRecorder = require('./../audioRecorder');\nconst TranscriptionService = require('./AbstractTranscriptionService');\n\n/**\n * Implements a TranscriptionService for a Sphinx4 http server\n */\nconst SphinxService = function() {\n    // set the correct url\n    this.url = getURL();\n};\n\n/**\n * Subclass of AbstractTranscriptionService\n */\nSphinxService.prototype = Object.create(TranscriptionService.prototype);\n\n/**\n * Set the right constructor\n */\nSphinxService.constructor = SphinxService;\n\n/**\n * Overrides the sendRequest method from AbstractTranscriptionService\n * it will send the audio stream the a Sphinx4 server to get the transcription\n *\n * @param audioFileBlob the recorder audio stream an a single Blob\n * @param callback the callback function retrieving the server response\n */\nSphinxService.prototype.sendRequest = function(audioFileBlob, callback) {\n    console.log(`sending an audio file  to ${this.url}`);\n    console.log(`the audio file being sent: ${audioFileBlob}`);\n    const request = new XMLHttpRequest();\n\n    request.onreadystatechange = function() {\n        if (request.readyState === XMLHttpRequest.DONE\n            && request.status === 200) {\n            callback(request.responseText);\n        } else if (request.readyState === XMLHttpRequest.DONE) {\n            throw new Error(\n                `unable to accept response from sphinx server. status: ${\n                    request.status}`);\n        }\n\n        // if not ready no point to throw an error\n    };\n    request.open('POST', this.url);\n    request.setRequestHeader('Content-Type',\n        audioRecorder.determineCorrectFileType());\n    request.send(audioFileBlob);\n    console.log(`send ${audioFileBlob}`);\n};\n\n/**\n * Overrides the formatResponse method from AbstractTranscriptionService\n * It will parse the answer from the server in the expected format\n *\n * @param response the JSON body retrieved from the Sphinx4 server\n */\nSphinxService.prototype.formatResponse = function(response) {\n    const result = JSON.parse(response).objects;\n\n    // make sure to delete the session id object, which is always\n    // the first value in the JSON array\n\n    result.shift();\n    const array = [];\n\n    result.forEach(\n        word =>\n            word.filler\n                || array.push(new Word(word.word, word.start, word.end)));\n\n    return array;\n};\n\n/**\n * checks wether the reply is empty, or doesn't contain a correct JSON object\n * @param response the server response\n * @return {boolean} whether the response is valid\n */\nSphinxService.prototype.verify = function(response) {\n    console.log(`response from server:${response.toString()}`);\n\n    // test if server responded with a string object\n    if (typeof response !== 'string') {\n        return false;\n    }\n\n    // test if the string can be parsed into valid JSON\n    let json;\n\n    try {\n        json = JSON.parse(response);\n    } catch (error) {\n        console.log(error);\n\n        return false;\n    }\n\n    // check if the JSON has a \"objects\" value\n    if (json.objects === undefined) {\n        return false;\n    }\n\n    // get the \"objects\" value and check for a session ID\n    const array = json.objects;\n\n    if (!(array[0] && array[0]['session-id'])) {\n        return false;\n    }\n\n    // everything seems to be in order\n    return true;\n};\n\n/**\n * Gets the URL to the Sphinx4 server from the config file. If it's not there,\n * it will throw an error\n *\n * @returns {string} the URL to the sphinx4 server\n */\nfunction getURL() {\n    const message = 'config does not contain an url to a Sphinx4 https server';\n\n    if (config.sphinxURL === undefined) {\n        console.log(message);\n    } else {\n        const toReturn = config.sphinxURL;\n\n        if (toReturn.includes !== undefined && toReturn.includes('https://')) {\n            return toReturn;\n        }\n        console.log(message);\n\n    }\n}\n\nmodule.exports = SphinxService;\n","/**\n * An object representing a transcribed word, with some additional information\n * @param word the word\n * @param begin the time the word was started being uttered\n * @param end the time the word stopped being uttered\n */\nconst Word = function(word, begin, end) {\n    this.word = word;\n    this.begin = begin;\n    this.end = end;\n};\n\n/**\n * Get the string representation of the word\n * @returns {*} the word as a string\n */\nWord.prototype.getWord = function() {\n    return this.word;\n};\n\n/**\n * Get the time the word started being uttered\n * @returns {*} the start time as an integer\n */\nWord.prototype.getBeginTime = function() {\n    return this.begin;\n};\n\n/**\n * Get the time the word stopped being uttered\n * @returns {*} the end time as an integer\n */\nWord.prototype.getEndTime = function() {\n    return this.end;\n};\n\nmodule.exports = Word;\n","/**\n * Abstract class representing an interface to implement a speech-to-text\n * service on.\n */\nconst TranscriptionService = function() {\n    throw new Error('TranscriptionService is abstract and cannot be'\n        + 'created');\n};\n\n/**\n * This method can be used to send the recorder audio stream and\n * retrieve the answer from the transcription service from the callback\n *\n * @param {RecordingResult} recordingResult a recordingResult object which\n * includes the recorded audio stream as a blob\n * @param {Function} callback  which will retrieve the a RecordingResult with\n *        the answer as a WordArray\n */\nTranscriptionService.prototype.send = function send(recordingResult, callback) {\n    this.sendRequest(recordingResult.blob, response => {\n        if (this.verify(response)) {\n            recordingResult.wordArray = this.formatResponse(response);\n        } else {\n            console.log('the retrieved response from the server is not valid!');\n            recordingResult.wordArray = [];\n        }\n        callback(recordingResult);\n    });\n};\n\n/**\n * Abstract method which will rend the recorder audio stream to the implemented\n * transcription service and will retrieve an answer, which will be\n * called on the given callback method\n *\n * @param {Blob} audioBlob the recorded audio stream as a single Blob\n * @param {function} callback function which will retrieve the answer\n *                            from the service\n */\n// eslint-disable-next-line no-unused-vars\nTranscriptionService.prototype.sendRequest = function(audioBlob, callback) {\n    throw new Error('TranscriptionService.sendRequest is abstract');\n};\n\n/**\n * Abstract method which will parse the output from the implemented\n * transcription service to the expected format\n *\n * The transcriber class expect an array of word objects, where each word\n * object is one transcribed word by the service.\n *\n * The expected output of this method is an array of word objects, in\n * the correct order. That is, the first object in the array is the first word\n * being said, and the last word in the array is the last word being said\n *\n * @param response the answer from the speech-to-text server which needs to be\n *                 formatted\n * @return {Array<Word>} an array of Word objects\n */\n// eslint-disable-next-line no-unused-vars\nTranscriptionService.prototype.formatResponse = function(response) {\n    throw new Error('TranscriptionService.format is abstract');\n};\n\n/**\n * Abstract method which will verify that the response from the server is valid\n *\n * @param response the response from the server\n * @return {boolean} true if response is valid, false otherwise\n */\n// eslint-disable-next-line no-unused-vars\nTranscriptionService.prototype.verify = function(response) {\n    throw new Error('TranscriptionService.verify is abstract');\n};\n\nmodule.exports = TranscriptionService;\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nlet logDisabled_ = true;\nlet deprecationWarnings_ = true;\n\n/**\n * Extract browser version out of the provided user agent string.\n *\n * @param {!string} uastring userAgent string.\n * @param {!string} expr Regular expression used as match criteria.\n * @param {!number} pos position in the version string to be returned.\n * @return {!number} browser version.\n */\nexport function extractVersion(uastring, expr, pos) {\n  const match = uastring.match(expr);\n  return match && match.length >= pos && parseInt(match[pos], 10);\n}\n\n// Wraps the peerconnection event eventNameToWrap in a function\n// which returns the modified event object (or false to prevent\n// the event).\nexport function wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  const nativeAddEventListener = proto.addEventListener;\n  proto.addEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap) {\n      return nativeAddEventListener.apply(this, arguments);\n    }\n    const wrappedCallback = (e) => {\n      const modifiedEvent = wrapper(e);\n      if (modifiedEvent) {\n        if (cb.handleEvent) {\n          cb.handleEvent(modifiedEvent);\n        } else {\n          cb(modifiedEvent);\n        }\n      }\n    };\n    this._eventMap = this._eventMap || {};\n    if (!this._eventMap[eventNameToWrap]) {\n      this._eventMap[eventNameToWrap] = new Map();\n    }\n    this._eventMap[eventNameToWrap].set(cb, wrappedCallback);\n    return nativeAddEventListener.apply(this, [nativeEventName,\n      wrappedCallback]);\n  };\n\n  const nativeRemoveEventListener = proto.removeEventListener;\n  proto.removeEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap || !this._eventMap\n        || !this._eventMap[eventNameToWrap]) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    if (!this._eventMap[eventNameToWrap].has(cb)) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    const unwrappedCb = this._eventMap[eventNameToWrap].get(cb);\n    this._eventMap[eventNameToWrap].delete(cb);\n    if (this._eventMap[eventNameToWrap].size === 0) {\n      delete this._eventMap[eventNameToWrap];\n    }\n    if (Object.keys(this._eventMap).length === 0) {\n      delete this._eventMap;\n    }\n    return nativeRemoveEventListener.apply(this, [nativeEventName,\n      unwrappedCb]);\n  };\n\n  Object.defineProperty(proto, 'on' + eventNameToWrap, {\n    get() {\n      return this['_on' + eventNameToWrap];\n    },\n    set(cb) {\n      if (this['_on' + eventNameToWrap]) {\n        this.removeEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap]);\n        delete this['_on' + eventNameToWrap];\n      }\n      if (cb) {\n        this.addEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap] = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n}\n\nexport function disableLog(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  logDisabled_ = bool;\n  return (bool) ? 'adapter.js logging disabled' :\n      'adapter.js logging enabled';\n}\n\n/**\n * Disable or enable deprecation warnings\n * @param {!boolean} bool set to true to disable warnings.\n */\nexport function disableWarnings(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  deprecationWarnings_ = !bool;\n  return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\n}\n\nexport function log() {\n  if (typeof window === 'object') {\n    if (logDisabled_) {\n      return;\n    }\n    if (typeof console !== 'undefined' && typeof console.log === 'function') {\n      console.log.apply(console, arguments);\n    }\n  }\n}\n\n/**\n * Shows a deprecation warning suggesting the modern and spec-compatible API.\n */\nexport function deprecated(oldMethod, newMethod) {\n  if (!deprecationWarnings_) {\n    return;\n  }\n  console.warn(oldMethod + ' is deprecated, please use ' + newMethod +\n      ' instead.');\n}\n\n/**\n * Browser detector.\n *\n * @return {object} result containing browser and version\n *     properties.\n */\nexport function detectBrowser(window) {\n  // Returned result object.\n  const result = {browser: null, version: null};\n\n  // Fail early if it's not a browser\n  if (typeof window === 'undefined' || !window.navigator) {\n    result.browser = 'Not a browser.';\n    return result;\n  }\n\n  const {navigator} = window;\n\n  if (navigator.mozGetUserMedia) { // Firefox.\n    result.browser = 'firefox';\n    result.version = extractVersion(navigator.userAgent,\n        /Firefox\\/(\\d+)\\./, 1);\n  } else if (navigator.webkitGetUserMedia ||\n      (window.isSecureContext === false && window.webkitRTCPeerConnection &&\n       !window.RTCIceGatherer)) {\n    // Chrome, Chromium, Webview, Opera.\n    // Version matches Chrome/WebRTC version.\n    // Chrome 74 removed webkitGetUserMedia on http as well so we need the\n    // more complicated fallback to webkitRTCPeerConnection.\n    result.browser = 'chrome';\n    result.version = extractVersion(navigator.userAgent,\n        /Chrom(e|ium)\\/(\\d+)\\./, 2);\n  } else if (window.RTCPeerConnection &&\n      navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) { // Safari.\n    result.browser = 'safari';\n    result.version = extractVersion(navigator.userAgent,\n        /AppleWebKit\\/(\\d+)\\./, 1);\n    result.supportsUnifiedPlan = window.RTCRtpTransceiver &&\n        'currentDirection' in window.RTCRtpTransceiver.prototype;\n  } else { // Default fallthrough: not supported.\n    result.browser = 'Not a supported browser.';\n    return result;\n  }\n\n  return result;\n}\n\n/**\n * Checks if something is an object.\n *\n * @param {*} val The something you want to check.\n * @return true if val is an object, false otherwise.\n */\nfunction isObject(val) {\n  return Object.prototype.toString.call(val) === '[object Object]';\n}\n\n/**\n * Remove all empty objects and undefined values\n * from a nested object -- an enhanced and vanilla version\n * of Lodash's `compact`.\n */\nexport function compactObject(data) {\n  if (!isObject(data)) {\n    return data;\n  }\n\n  return Object.keys(data).reduce(function(accumulator, key) {\n    const isObj = isObject(data[key]);\n    const value = isObj ? compactObject(data[key]) : data[key];\n    const isEmptyObject = isObj && !Object.keys(value).length;\n    if (value === undefined || isEmptyObject) {\n      return accumulator;\n    }\n    return Object.assign(accumulator, {[key]: value});\n  }, {});\n}\n\n/* iterates the stats graph recursively. */\nexport function walkStats(stats, base, resultSet) {\n  if (!base || resultSet.has(base.id)) {\n    return;\n  }\n  resultSet.set(base.id, base);\n  Object.keys(base).forEach(name => {\n    if (name.endsWith('Id')) {\n      walkStats(stats, stats.get(base[name]), resultSet);\n    } else if (name.endsWith('Ids')) {\n      base[name].forEach(id => {\n        walkStats(stats, stats.get(id), resultSet);\n      });\n    }\n  });\n}\n\n/* filter getStats for a sender/receiver track. */\nexport function filterStats(result, track, outbound) {\n  const streamStatsType = outbound ? 'outbound-rtp' : 'inbound-rtp';\n  const filteredResult = new Map();\n  if (track === null) {\n    return filteredResult;\n  }\n  const trackStats = [];\n  result.forEach(value => {\n    if (value.type === 'track' &&\n        value.trackIdentifier === track.id) {\n      trackStats.push(value);\n    }\n  });\n  trackStats.forEach(trackStat => {\n    result.forEach(stats => {\n      if (stats.type === streamStatsType && stats.trackId === trackStat.id) {\n        walkStats(result, stats, filteredResult);\n      }\n    });\n  });\n  return filteredResult;\n}\n\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\nconst logging = utils.log;\n\nexport function shimGetUserMedia(window, browserDetails) {\n  const navigator = window && window.navigator;\n\n  if (!navigator.mediaDevices) {\n    return;\n  }\n\n  const constraintsToChrome_ = function(c) {\n    if (typeof c !== 'object' || c.mandatory || c.optional) {\n      return c;\n    }\n    const cc = {};\n    Object.keys(c).forEach(key => {\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n        return;\n      }\n      const r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\n      if (r.exact !== undefined && typeof r.exact === 'number') {\n        r.min = r.max = r.exact;\n      }\n      const oldname_ = function(prefix, name) {\n        if (prefix) {\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n        }\n        return (name === 'deviceId') ? 'sourceId' : name;\n      };\n      if (r.ideal !== undefined) {\n        cc.optional = cc.optional || [];\n        let oc = {};\n        if (typeof r.ideal === 'number') {\n          oc[oldname_('min', key)] = r.ideal;\n          cc.optional.push(oc);\n          oc = {};\n          oc[oldname_('max', key)] = r.ideal;\n          cc.optional.push(oc);\n        } else {\n          oc[oldname_('', key)] = r.ideal;\n          cc.optional.push(oc);\n        }\n      }\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\n        cc.mandatory = cc.mandatory || {};\n        cc.mandatory[oldname_('', key)] = r.exact;\n      } else {\n        ['min', 'max'].forEach(mix => {\n          if (r[mix] !== undefined) {\n            cc.mandatory = cc.mandatory || {};\n            cc.mandatory[oldname_(mix, key)] = r[mix];\n          }\n        });\n      }\n    });\n    if (c.advanced) {\n      cc.optional = (cc.optional || []).concat(c.advanced);\n    }\n    return cc;\n  };\n\n  const shimConstraints_ = function(constraints, func) {\n    if (browserDetails.version >= 61) {\n      return func(constraints);\n    }\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (constraints && typeof constraints.audio === 'object') {\n      const remap = function(obj, a, b) {\n        if (a in obj && !(b in obj)) {\n          obj[b] = obj[a];\n          delete obj[a];\n        }\n      };\n      constraints = JSON.parse(JSON.stringify(constraints));\n      remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');\n      remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');\n      constraints.audio = constraintsToChrome_(constraints.audio);\n    }\n    if (constraints && typeof constraints.video === 'object') {\n      // Shim facingMode for mobile & surface pro.\n      let face = constraints.video.facingMode;\n      face = face && ((typeof face === 'object') ? face : {ideal: face});\n      const getSupportedFacingModeLies = browserDetails.version < 66;\n\n      if ((face && (face.exact === 'user' || face.exact === 'environment' ||\n                    face.ideal === 'user' || face.ideal === 'environment')) &&\n          !(navigator.mediaDevices.getSupportedConstraints &&\n            navigator.mediaDevices.getSupportedConstraints().facingMode &&\n            !getSupportedFacingModeLies)) {\n        delete constraints.video.facingMode;\n        let matches;\n        if (face.exact === 'environment' || face.ideal === 'environment') {\n          matches = ['back', 'rear'];\n        } else if (face.exact === 'user' || face.ideal === 'user') {\n          matches = ['front'];\n        }\n        if (matches) {\n          // Look for matches in label, or use last cam for back (typical).\n          return navigator.mediaDevices.enumerateDevices()\n          .then(devices => {\n            devices = devices.filter(d => d.kind === 'videoinput');\n            let dev = devices.find(d => matches.some(match =>\n              d.label.toLowerCase().includes(match)));\n            if (!dev && devices.length && matches.includes('back')) {\n              dev = devices[devices.length - 1]; // more likely the back cam\n            }\n            if (dev) {\n              constraints.video.deviceId = face.exact ? {exact: dev.deviceId} :\n                                                        {ideal: dev.deviceId};\n            }\n            constraints.video = constraintsToChrome_(constraints.video);\n            logging('chrome: ' + JSON.stringify(constraints));\n            return func(constraints);\n          });\n        }\n      }\n      constraints.video = constraintsToChrome_(constraints.video);\n    }\n    logging('chrome: ' + JSON.stringify(constraints));\n    return func(constraints);\n  };\n\n  const shimError_ = function(e) {\n    if (browserDetails.version >= 64) {\n      return e;\n    }\n    return {\n      name: {\n        PermissionDeniedError: 'NotAllowedError',\n        PermissionDismissedError: 'NotAllowedError',\n        InvalidStateError: 'NotAllowedError',\n        DevicesNotFoundError: 'NotFoundError',\n        ConstraintNotSatisfiedError: 'OverconstrainedError',\n        TrackStartError: 'NotReadableError',\n        MediaDeviceFailedDueToShutdown: 'NotAllowedError',\n        MediaDeviceKillSwitchOn: 'NotAllowedError',\n        TabCaptureError: 'AbortError',\n        ScreenCaptureError: 'AbortError',\n        DeviceCaptureError: 'AbortError'\n      }[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint || e.constraintName,\n      toString() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  const getUserMedia_ = function(constraints, onSuccess, onError) {\n    shimConstraints_(constraints, c => {\n      navigator.webkitGetUserMedia(c, onSuccess, e => {\n        if (onError) {\n          onError(shimError_(e));\n        }\n      });\n    });\n  };\n  navigator.getUserMedia = getUserMedia_.bind(navigator);\n\n  // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n  // function which returns a Promise, it does not accept spec-style\n  // constraints.\n  if (navigator.mediaDevices.getUserMedia) {\n    const origGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(cs) {\n      return shimConstraints_(cs, c => origGetUserMedia(c).then(stream => {\n        if (c.audio && !stream.getAudioTracks().length ||\n            c.video && !stream.getVideoTracks().length) {\n          stream.getTracks().forEach(track => {\n            track.stop();\n          });\n          throw new DOMException('', 'NotFoundError');\n        }\n        return stream;\n      }, e => Promise.reject(shimError_(e))));\n    };\n  }\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nexport function shimGetDisplayMedia(window, getSourceId) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  // getSourceId is a function that returns a promise resolving with\n  // the sourceId of the screen/window/tab to be shared.\n  if (typeof getSourceId !== 'function') {\n    console.error('shimGetDisplayMedia: getSourceId argument is not ' +\n        'a function');\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    function getDisplayMedia(constraints) {\n      return getSourceId(constraints)\n        .then(sourceId => {\n          const widthSpecified = constraints.video && constraints.video.width;\n          const heightSpecified = constraints.video &&\n            constraints.video.height;\n          const frameRateSpecified = constraints.video &&\n            constraints.video.frameRate;\n          constraints.video = {\n            mandatory: {\n              chromeMediaSource: 'desktop',\n              chromeMediaSourceId: sourceId,\n              maxFrameRate: frameRateSpecified || 3\n            }\n          };\n          if (widthSpecified) {\n            constraints.video.mandatory.maxWidth = widthSpecified;\n          }\n          if (heightSpecified) {\n            constraints.video.mandatory.maxHeight = heightSpecified;\n          }\n          return window.navigator.mediaDevices.getUserMedia(constraints);\n        });\n    };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\n\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimMediaStream(window) {\n  window.MediaStream = window.MediaStream || window.webkitMediaStream;\n}\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n      window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n      get() {\n        return this._ontrack;\n      },\n      set(f) {\n        if (this._ontrack) {\n          this.removeEventListener('track', this._ontrack);\n        }\n        this.addEventListener('track', this._ontrack = f);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    const origSetRemoteDescription =\n        window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        if (!this._ontrackpoly) {\n          this._ontrackpoly = (e) => {\n            // onaddstream does not fire when a track is added to an existing\n            // stream. But stream.onaddtrack is implemented so we use that.\n            e.stream.addEventListener('addtrack', te => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === te.track.id);\n              } else {\n                receiver = {track: te.track};\n              }\n\n              const event = new Event('track');\n              event.track = te.track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n            e.stream.getTracks().forEach(track => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === track.id);\n              } else {\n                receiver = {track};\n              }\n              const event = new Event('track');\n              event.track = track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n          };\n          this.addEventListener('addstream', this._ontrackpoly);\n        }\n        return origSetRemoteDescription.apply(this, arguments);\n      };\n  } else {\n    // even if RTCRtpTransceiver is in window, it is only used and\n    // emitted in unified-plan. Unfortunately this means we need\n    // to unconditionally wrap the event.\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      if (!e.transceiver) {\n        Object.defineProperty(e, 'transceiver',\n          {value: {receiver: e.receiver}});\n      }\n      return e;\n    });\n  }\n}\n\nexport function shimGetSendersWithDtmf(window) {\n  // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\n  if (typeof window === 'object' && window.RTCPeerConnection &&\n      !('getSenders' in window.RTCPeerConnection.prototype) &&\n      'createDTMFSender' in window.RTCPeerConnection.prototype) {\n    const shimSenderWithDtmf = function(pc, track) {\n      return {\n        track,\n        get dtmf() {\n          if (this._dtmf === undefined) {\n            if (track.kind === 'audio') {\n              this._dtmf = pc.createDTMFSender(track);\n            } else {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        },\n        _pc: pc\n      };\n    };\n\n    // augment addTrack when getSenders is not available.\n    if (!window.RTCPeerConnection.prototype.getSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        this._senders = this._senders || [];\n        return this._senders.slice(); // return a copy of the internal state.\n      };\n      const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n      window.RTCPeerConnection.prototype.addTrack =\n        function addTrack(track, stream) {\n          let sender = origAddTrack.apply(this, arguments);\n          if (!sender) {\n            sender = shimSenderWithDtmf(this, track);\n            this._senders.push(sender);\n          }\n          return sender;\n        };\n\n      const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n      window.RTCPeerConnection.prototype.removeTrack =\n        function removeTrack(sender) {\n          origRemoveTrack.apply(this, arguments);\n          const idx = this._senders.indexOf(sender);\n          if (idx !== -1) {\n            this._senders.splice(idx, 1);\n          }\n        };\n    }\n    const origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      this._senders = this._senders || [];\n      origAddStream.apply(this, [stream]);\n      stream.getTracks().forEach(track => {\n        this._senders.push(shimSenderWithDtmf(this, track));\n      });\n    };\n\n    const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        this._senders = this._senders || [];\n        origRemoveStream.apply(this, [stream]);\n\n        stream.getTracks().forEach(track => {\n          const sender = this._senders.find(s => s.track === track);\n          if (sender) { // remove sender\n            this._senders.splice(this._senders.indexOf(sender), 1);\n          }\n        });\n      };\n  } else if (typeof window === 'object' && window.RTCPeerConnection &&\n             'getSenders' in window.RTCPeerConnection.prototype &&\n             'createDTMFSender' in window.RTCPeerConnection.prototype &&\n             window.RTCRtpSender &&\n             !('dtmf' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = this._pc.createDTMFSender(this.track);\n          } else {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n}\n\nexport function shimGetStats(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n\n    // If selector is a function then we are in the old style stats so just\n    // pass back the original getStats format to avoid breaking old users.\n    if (arguments.length > 0 && typeof selector === 'function') {\n      return origGetStats.apply(this, arguments);\n    }\n\n    // When spec-style getStats is supported, return those when called with\n    // either no arguments or the selector argument is null.\n    if (origGetStats.length === 0 && (arguments.length === 0 ||\n        typeof selector !== 'function')) {\n      return origGetStats.apply(this, []);\n    }\n\n    const fixChromeStats_ = function(response) {\n      const standardReport = {};\n      const reports = response.result();\n      reports.forEach(report => {\n        const standardStats = {\n          id: report.id,\n          timestamp: report.timestamp,\n          type: {\n            localcandidate: 'local-candidate',\n            remotecandidate: 'remote-candidate'\n          }[report.type] || report.type\n        };\n        report.names().forEach(name => {\n          standardStats[name] = report.stat(name);\n        });\n        standardReport[standardStats.id] = standardStats;\n      });\n\n      return standardReport;\n    };\n\n    // shim getStats with maplike support\n    const makeMapStats = function(stats) {\n      return new Map(Object.keys(stats).map(key => [key, stats[key]]));\n    };\n\n    if (arguments.length >= 2) {\n      const successCallbackWrapper_ = function(response) {\n        onSucc(makeMapStats(fixChromeStats_(response)));\n      };\n\n      return origGetStats.apply(this, [successCallbackWrapper_,\n        selector]);\n    }\n\n    // promise-support\n    return new Promise((resolve, reject) => {\n      origGetStats.apply(this, [\n        function(response) {\n          resolve(makeMapStats(fixChromeStats_(response)));\n        }, reject]);\n    }).then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender && window.RTCRtpReceiver)) {\n    return;\n  }\n\n  // shim sender stats.\n  if (!('getStats' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    if (origGetSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        const senders = origGetSenders.apply(this, []);\n        senders.forEach(sender => sender._pc = this);\n        return senders;\n      };\n    }\n\n    const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n    if (origAddTrack) {\n      window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n        const sender = origAddTrack.apply(this, arguments);\n        sender._pc = this;\n        return sender;\n      };\n    }\n    window.RTCRtpSender.prototype.getStats = function getStats() {\n      const sender = this;\n      return this._pc.getStats().then(result =>\n        /* Note: this will include stats of all senders that\n         *   send a track with the same id as sender.track as\n         *   it is not possible to identify the RTCRtpSender.\n         */\n        utils.filterStats(result, sender.track, true));\n    };\n  }\n\n  // shim receiver stats.\n  if (!('getStats' in window.RTCRtpReceiver.prototype)) {\n    const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n    if (origGetReceivers) {\n      window.RTCPeerConnection.prototype.getReceivers =\n        function getReceivers() {\n          const receivers = origGetReceivers.apply(this, []);\n          receivers.forEach(receiver => receiver._pc = this);\n          return receivers;\n        };\n    }\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      e.receiver._pc = e.srcElement;\n      return e;\n    });\n    window.RTCRtpReceiver.prototype.getStats = function getStats() {\n      const receiver = this;\n      return this._pc.getStats().then(result =>\n        utils.filterStats(result, receiver.track, false));\n    };\n  }\n\n  if (!('getStats' in window.RTCRtpSender.prototype &&\n      'getStats' in window.RTCRtpReceiver.prototype)) {\n    return;\n  }\n\n  // shim RTCPeerConnection.getStats(track).\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    if (arguments.length > 0 &&\n        arguments[0] instanceof window.MediaStreamTrack) {\n      const track = arguments[0];\n      let sender;\n      let receiver;\n      let err;\n      this.getSenders().forEach(s => {\n        if (s.track === track) {\n          if (sender) {\n            err = true;\n          } else {\n            sender = s;\n          }\n        }\n      });\n      this.getReceivers().forEach(r => {\n        if (r.track === track) {\n          if (receiver) {\n            err = true;\n          } else {\n            receiver = r;\n          }\n        }\n        return r.track === track;\n      });\n      if (err || (sender && receiver)) {\n        return Promise.reject(new DOMException(\n          'There are more than one sender or receiver for the track.',\n          'InvalidAccessError'));\n      } else if (sender) {\n        return sender.getStats();\n      } else if (receiver) {\n        return receiver.getStats();\n      }\n      return Promise.reject(new DOMException(\n        'There is no sender or receiver for the track.',\n        'InvalidAccessError'));\n    }\n    return origGetStats.apply(this, arguments);\n  };\n}\n\nexport function shimAddTrackRemoveTrackWithNative(window) {\n  // shim addTrack/removeTrack with native variants in order to make\n  // the interactions with legacy getLocalStreams behave as in other browsers.\n  // Keeps a mapping stream.id => [stream, rtpsenders...]\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      return Object.keys(this._shimmedLocalStreams)\n        .map(streamId => this._shimmedLocalStreams[streamId][0]);\n    };\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (!stream) {\n        return origAddTrack.apply(this, arguments);\n      }\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n      const sender = origAddTrack.apply(this, arguments);\n      if (!this._shimmedLocalStreams[stream.id]) {\n        this._shimmedLocalStreams[stream.id] = [stream, sender];\n      } else if (this._shimmedLocalStreams[stream.id].indexOf(sender) === -1) {\n        this._shimmedLocalStreams[stream.id].push(sender);\n      }\n      return sender;\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n    });\n    const existingSenders = this.getSenders();\n    origAddStream.apply(this, arguments);\n    const newSenders = this.getSenders()\n      .filter(newSender => existingSenders.indexOf(newSender) === -1);\n    this._shimmedLocalStreams[stream.id] = [stream].concat(newSenders);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      delete this._shimmedLocalStreams[stream.id];\n      return origRemoveStream.apply(this, arguments);\n    };\n\n  const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      if (sender) {\n        Object.keys(this._shimmedLocalStreams).forEach(streamId => {\n          const idx = this._shimmedLocalStreams[streamId].indexOf(sender);\n          if (idx !== -1) {\n            this._shimmedLocalStreams[streamId].splice(idx, 1);\n          }\n          if (this._shimmedLocalStreams[streamId].length === 1) {\n            delete this._shimmedLocalStreams[streamId];\n          }\n        });\n      }\n      return origRemoveTrack.apply(this, arguments);\n    };\n}\n\nexport function shimAddTrackRemoveTrack(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // shim addTrack and removeTrack.\n  if (window.RTCPeerConnection.prototype.addTrack &&\n      browserDetails.version >= 65) {\n    return shimAddTrackRemoveTrackWithNative(window);\n  }\n\n  // also shim pc.getLocalStreams when addTrack is shimmed\n  // to return the original streams.\n  const origGetLocalStreams = window.RTCPeerConnection.prototype\n      .getLocalStreams;\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      const nativeStreams = origGetLocalStreams.apply(this);\n      this._reverseStreams = this._reverseStreams || {};\n      return nativeStreams.map(stream => this._reverseStreams[stream.id]);\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n    });\n    // Add identity mapping for consistency with addTrack.\n    // Unless this is being used with a stream from addTrack.\n    if (!this._reverseStreams[stream.id]) {\n      const newStream = new window.MediaStream(stream.getTracks());\n      this._streams[stream.id] = newStream;\n      this._reverseStreams[newStream.id] = stream;\n      stream = newStream;\n    }\n    origAddStream.apply(this, [stream]);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n\n      origRemoveStream.apply(this, [(this._streams[stream.id] || stream)]);\n      delete this._reverseStreams[(this._streams[stream.id] ?\n          this._streams[stream.id].id : stream.id)];\n      delete this._streams[stream.id];\n    };\n\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      const streams = [].slice.call(arguments, 1);\n      if (streams.length !== 1 ||\n          !streams[0].getTracks().find(t => t === track)) {\n        // this is not fully correct but all we can manage without\n        // [[associated MediaStreams]] internal slot.\n        throw new DOMException(\n          'The adapter.js addTrack polyfill only supports a single ' +\n          ' stream which is associated with the specified track.',\n          'NotSupportedError');\n      }\n\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n      const oldStream = this._streams[stream.id];\n      if (oldStream) {\n        // this is using odd Chrome behaviour, use with caution:\n        // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\n        // Note: we rely on the high-level addTrack/dtmf shim to\n        // create the sender with a dtmf sender.\n        oldStream.addTrack(track);\n\n        // Trigger ONN async.\n        Promise.resolve().then(() => {\n          this.dispatchEvent(new Event('negotiationneeded'));\n        });\n      } else {\n        const newStream = new window.MediaStream([track]);\n        this._streams[stream.id] = newStream;\n        this._reverseStreams[newStream.id] = stream;\n        this.addStream(newStream);\n      }\n      return this.getSenders().find(s => s.track === track);\n    };\n\n  // replace the internal stream id with the external one and\n  // vice versa.\n  function replaceInternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(internalStream.id, 'g'),\n          externalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  function replaceExternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(externalStream.id, 'g'),\n          internalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  ['createOffer', 'createAnswer'].forEach(function(method) {\n    const nativeMethod = window.RTCPeerConnection.prototype[method];\n    const methodObj = {[method]() {\n      const args = arguments;\n      const isLegacyCall = arguments.length &&\n          typeof arguments[0] === 'function';\n      if (isLegacyCall) {\n        return nativeMethod.apply(this, [\n          (description) => {\n            const desc = replaceInternalStreamId(this, description);\n            args[0].apply(null, [desc]);\n          },\n          (err) => {\n            if (args[1]) {\n              args[1].apply(null, err);\n            }\n          }, arguments[2]\n        ]);\n      }\n      return nativeMethod.apply(this, arguments)\n      .then(description => replaceInternalStreamId(this, description));\n    }};\n    window.RTCPeerConnection.prototype[method] = methodObj[method];\n  });\n\n  const origSetLocalDescription =\n      window.RTCPeerConnection.prototype.setLocalDescription;\n  window.RTCPeerConnection.prototype.setLocalDescription =\n    function setLocalDescription() {\n      if (!arguments.length || !arguments[0].type) {\n        return origSetLocalDescription.apply(this, arguments);\n      }\n      arguments[0] = replaceExternalStreamId(this, arguments[0]);\n      return origSetLocalDescription.apply(this, arguments);\n    };\n\n  // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\n\n  const origLocalDescription = Object.getOwnPropertyDescriptor(\n      window.RTCPeerConnection.prototype, 'localDescription');\n  Object.defineProperty(window.RTCPeerConnection.prototype,\n      'localDescription', {\n        get() {\n          const description = origLocalDescription.get.apply(this);\n          if (description.type === '') {\n            return description;\n          }\n          return replaceInternalStreamId(this, description);\n        }\n      });\n\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      // We can not yet check for sender instanceof RTCRtpSender\n      // since we shim RTPSender. So we check if sender._pc is set.\n      if (!sender._pc) {\n        throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' +\n            'does not implement interface RTCRtpSender.', 'TypeError');\n      }\n      const isLocal = sender._pc === this;\n      if (!isLocal) {\n        throw new DOMException('Sender was not created by this connection.',\n            'InvalidAccessError');\n      }\n\n      // Search for the native stream the senders track belongs to.\n      this._streams = this._streams || {};\n      let stream;\n      Object.keys(this._streams).forEach(streamid => {\n        const hasTrack = this._streams[streamid].getTracks()\n          .find(track => sender.track === track);\n        if (hasTrack) {\n          stream = this._streams[streamid];\n        }\n      });\n\n      if (stream) {\n        if (stream.getTracks().length === 1) {\n          // if this is the last track of the stream, remove the stream. This\n          // takes care of any shimmed _senders.\n          this.removeStream(this._reverseStreams[stream.id]);\n        } else {\n          // relying on the same odd chrome behaviour as above.\n          stream.removeTrack(sender.track);\n        }\n        this.dispatchEvent(new Event('negotiationneeded'));\n      }\n    };\n}\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (!window.RTCPeerConnection && window.webkitRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.webkitRTCPeerConnection;\n  }\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n  if (browserDetails.version < 53) {\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          const nativeMethod = window.RTCPeerConnection.prototype[method];\n          const methodObj = {[method]() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                window.RTCIceCandidate :\n                window.RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          }};\n          window.RTCPeerConnection.prototype[method] = methodObj[method];\n        });\n  }\n}\n\n// Attempt to fix ONN in plan-b mode.\nexport function fixNegotiationNeeded(window, browserDetails) {\n  utils.wrapPeerConnectionEvent(window, 'negotiationneeded', e => {\n    const pc = e.target;\n    if (browserDetails.version < 72 || (pc.getConfiguration &&\n        pc.getConfiguration().sdpSemantics === 'plan-b')) {\n      if (pc.signalingState !== 'stable') {\n        return;\n      }\n    }\n    return e;\n  });\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n\nexport function shimGetUserMedia(window, browserDetails) {\n  const navigator = window && window.navigator;\n  const MediaStreamTrack = window && window.MediaStreamTrack;\n\n  navigator.getUserMedia = function(constraints, onSuccess, onError) {\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\n    utils.deprecated('navigator.getUserMedia',\n        'navigator.mediaDevices.getUserMedia');\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  };\n\n  if (!(browserDetails.version > 55 &&\n      'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\n    const remap = function(obj, a, b) {\n      if (a in obj && !(b in obj)) {\n        obj[b] = obj[a];\n        delete obj[a];\n      }\n    };\n\n    const nativeGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      if (typeof c === 'object' && typeof c.audio === 'object') {\n        c = JSON.parse(JSON.stringify(c));\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\n      }\n      return nativeGetUserMedia(c);\n    };\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\n      const nativeGetSettings = MediaStreamTrack.prototype.getSettings;\n      MediaStreamTrack.prototype.getSettings = function() {\n        const obj = nativeGetSettings.apply(this, arguments);\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\n        return obj;\n      };\n    }\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\n      const nativeApplyConstraints =\n        MediaStreamTrack.prototype.applyConstraints;\n      MediaStreamTrack.prototype.applyConstraints = function(c) {\n        if (this.kind === 'audio' && typeof c === 'object') {\n          c = JSON.parse(JSON.stringify(c));\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\n        }\n        return nativeApplyConstraints.apply(this, [c]);\n      };\n    }\n  }\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window, preferredMediaSource) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    function getDisplayMedia(constraints) {\n      if (!(constraints && constraints.video)) {\n        const err = new DOMException('getDisplayMedia without video ' +\n            'constraints is undefined');\n        err.name = 'NotFoundError';\n        // from https://heycam.github.io/webidl/#idl-DOMException-error-names\n        err.code = 8;\n        return Promise.reject(err);\n      }\n      if (constraints.video === true) {\n        constraints.video = {mediaSource: preferredMediaSource};\n      } else {\n        constraints.video.mediaSource = preferredMediaSource;\n      }\n      return window.navigator.mediaDevices.getUserMedia(constraints);\n    };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      ('receiver' in window.RTCTrackEvent.prototype) &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (typeof window !== 'object' ||\n      !(window.RTCPeerConnection || window.mozRTCPeerConnection)) {\n    return; // probably media.peerconnection.enabled=false in about:config\n  }\n  if (!window.RTCPeerConnection && window.mozRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.mozRTCPeerConnection;\n  }\n\n  if (browserDetails.version < 53) {\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          const nativeMethod = window.RTCPeerConnection.prototype[method];\n          const methodObj = {[method]() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                window.RTCIceCandidate :\n                window.RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          }};\n          window.RTCPeerConnection.prototype[method] = methodObj[method];\n        });\n  }\n\n  const modernStatsTypes = {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  };\n\n  const nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n    return nativeGetStats.apply(this, [selector || null])\n      .then(stats => {\n        if (browserDetails.version < 53 && !onSucc) {\n          // Shim only promise getStats with spec-hyphens in type names\n          // Leave callback version alone; misc old uses of forEach before Map\n          try {\n            stats.forEach(stat => {\n              stat.type = modernStatsTypes[stat.type] || stat.type;\n            });\n          } catch (e) {\n            if (e.name !== 'TypeError') {\n              throw e;\n            }\n            // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n            stats.forEach((stat, i) => {\n              stats.set(i, Object.assign({}, stat, {\n                type: modernStatsTypes[stat.type] || stat.type\n              }));\n            });\n          }\n        }\n        return stats;\n      })\n      .then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {\n    return;\n  }\n  const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n  if (origGetSenders) {\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n  }\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  if (origAddTrack) {\n    window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n      const sender = origAddTrack.apply(this, arguments);\n      sender._pc = this;\n      return sender;\n    };\n  }\n  window.RTCRtpSender.prototype.getStats = function getStats() {\n    return this.track ? this._pc.getStats(this.track) :\n        Promise.resolve(new Map());\n  };\n}\n\nexport function shimReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {\n    return;\n  }\n  const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n  if (origGetReceivers) {\n    window.RTCPeerConnection.prototype.getReceivers = function getReceivers() {\n      const receivers = origGetReceivers.apply(this, []);\n      receivers.forEach(receiver => receiver._pc = this);\n      return receivers;\n    };\n  }\n  utils.wrapPeerConnectionEvent(window, 'track', e => {\n    e.receiver._pc = e.srcElement;\n    return e;\n  });\n  window.RTCRtpReceiver.prototype.getStats = function getStats() {\n    return this._pc.getStats(this.track);\n  };\n}\n\nexport function shimRemoveStream(window) {\n  if (!window.RTCPeerConnection ||\n      'removeStream' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      utils.deprecated('removeStream', 'removeTrack');\n      this.getSenders().forEach(sender => {\n        if (sender.track && stream.getTracks().includes(sender.track)) {\n          this.removeTrack(sender);\n        }\n      });\n    };\n}\n\nexport function shimRTCDataChannel(window) {\n  // rename DataChannel to RTCDataChannel (native fix in FF60):\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851\n  if (window.DataChannel && !window.RTCDataChannel) {\n    window.RTCDataChannel = window.DataChannel;\n  }\n}\n\nexport function shimAddTransceiver(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origAddTransceiver = window.RTCPeerConnection.prototype.addTransceiver;\n  if (origAddTransceiver) {\n    window.RTCPeerConnection.prototype.addTransceiver =\n      function addTransceiver() {\n        this.setParametersPromises = [];\n        const initParameters = arguments[1];\n        const shouldPerformCheck = initParameters &&\n                                  'sendEncodings' in initParameters;\n        if (shouldPerformCheck) {\n          // If sendEncodings params are provided, validate grammar\n          initParameters.sendEncodings.forEach((encodingParam) => {\n            if ('rid' in encodingParam) {\n              const ridRegex = /^[a-z0-9]{0,16}$/i;\n              if (!ridRegex.test(encodingParam.rid)) {\n                throw new TypeError('Invalid RID value provided.');\n              }\n            }\n            if ('scaleResolutionDownBy' in encodingParam) {\n              if (!(parseFloat(encodingParam.scaleResolutionDownBy) >= 1.0)) {\n                throw new RangeError('scale_resolution_down_by must be >= 1.0');\n              }\n            }\n            if ('maxFramerate' in encodingParam) {\n              if (!(parseFloat(encodingParam.maxFramerate) >= 0)) {\n                throw new RangeError('max_framerate must be >= 0.0');\n              }\n            }\n          });\n        }\n        const transceiver = origAddTransceiver.apply(this, arguments);\n        if (shouldPerformCheck) {\n          // Check if the init options were applied. If not we do this in an\n          // asynchronous way and save the promise reference in a global object.\n          // This is an ugly hack, but at the same time is way more robust than\n          // checking the sender parameters before and after the createOffer\n          // Also note that after the createoffer we are not 100% sure that\n          // the params were asynchronously applied so we might miss the\n          // opportunity to recreate offer.\n          const {sender} = transceiver;\n          const params = sender.getParameters();\n          if (!('encodings' in params) ||\n              // Avoid being fooled by patched getParameters() below.\n              (params.encodings.length === 1 &&\n               Object.keys(params.encodings[0]).length === 0)) {\n            params.encodings = initParameters.sendEncodings;\n            sender.sendEncodings = initParameters.sendEncodings;\n            this.setParametersPromises.push(sender.setParameters(params)\n              .then(() => {\n                delete sender.sendEncodings;\n              }).catch(() => {\n                delete sender.sendEncodings;\n              })\n            );\n          }\n        }\n        return transceiver;\n      };\n  }\n}\n\nexport function shimGetParameters(window) {\n  if (!(typeof window === 'object' && window.RTCRtpSender)) {\n    return;\n  }\n  const origGetParameters = window.RTCRtpSender.prototype.getParameters;\n  if (origGetParameters) {\n    window.RTCRtpSender.prototype.getParameters =\n      function getParameters() {\n        const params = origGetParameters.apply(this, arguments);\n        if (!('encodings' in params)) {\n          params.encodings = [].concat(this.sendEncodings || [{}]);\n        }\n        return params;\n      };\n  }\n}\n\nexport function shimCreateOffer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer = function createOffer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n      .then(() => {\n        return origCreateOffer.apply(this, arguments);\n      })\n      .finally(() => {\n        this.setParametersPromises = [];\n      });\n    }\n    return origCreateOffer.apply(this, arguments);\n  };\n}\n\nexport function shimCreateAnswer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateAnswer = window.RTCPeerConnection.prototype.createAnswer;\n  window.RTCPeerConnection.prototype.createAnswer = function createAnswer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n      .then(() => {\n        return origCreateAnswer.apply(this, arguments);\n      })\n      .finally(() => {\n        this.setParametersPromises = [];\n      });\n    }\n    return origCreateAnswer.apply(this, arguments);\n  };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n'use strict';\nimport * as utils from '../utils';\n\nexport function shimLocalStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getLocalStreams =\n      function getLocalStreams() {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        return this._localStreams;\n      };\n  }\n  if (!('addStream' in window.RTCPeerConnection.prototype)) {\n    const _addTrack = window.RTCPeerConnection.prototype.addTrack;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      if (!this._localStreams.includes(stream)) {\n        this._localStreams.push(stream);\n      }\n      // Try to emulate Chrome's behaviour of adding in audio-video order.\n      // Safari orders by track id.\n      stream.getAudioTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n      stream.getVideoTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n    };\n\n    window.RTCPeerConnection.prototype.addTrack =\n      function addTrack(track, ...streams) {\n        if (streams) {\n          streams.forEach((stream) => {\n            if (!this._localStreams) {\n              this._localStreams = [stream];\n            } else if (!this._localStreams.includes(stream)) {\n              this._localStreams.push(stream);\n            }\n          });\n        }\n        return _addTrack.apply(this, arguments);\n      };\n  }\n  if (!('removeStream' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        const index = this._localStreams.indexOf(stream);\n        if (index === -1) {\n          return;\n        }\n        this._localStreams.splice(index, 1);\n        const tracks = stream.getTracks();\n        this.getSenders().forEach(sender => {\n          if (tracks.includes(sender.track)) {\n            this.removeTrack(sender);\n          }\n        });\n      };\n  }\n}\n\nexport function shimRemoteStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getRemoteStreams =\n      function getRemoteStreams() {\n        return this._remoteStreams ? this._remoteStreams : [];\n      };\n  }\n  if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\n      get() {\n        return this._onaddstream;\n      },\n      set(f) {\n        if (this._onaddstream) {\n          this.removeEventListener('addstream', this._onaddstream);\n          this.removeEventListener('track', this._onaddstreampoly);\n        }\n        this.addEventListener('addstream', this._onaddstream = f);\n        this.addEventListener('track', this._onaddstreampoly = (e) => {\n          e.streams.forEach(stream => {\n            if (!this._remoteStreams) {\n              this._remoteStreams = [];\n            }\n            if (this._remoteStreams.includes(stream)) {\n              return;\n            }\n            this._remoteStreams.push(stream);\n            const event = new Event('addstream');\n            event.stream = stream;\n            this.dispatchEvent(event);\n          });\n        });\n      }\n    });\n    const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        const pc = this;\n        if (!this._onaddstreampoly) {\n          this.addEventListener('track', this._onaddstreampoly = function(e) {\n            e.streams.forEach(stream => {\n              if (!pc._remoteStreams) {\n                pc._remoteStreams = [];\n              }\n              if (pc._remoteStreams.indexOf(stream) >= 0) {\n                return;\n              }\n              pc._remoteStreams.push(stream);\n              const event = new Event('addstream');\n              event.stream = stream;\n              pc.dispatchEvent(event);\n            });\n          });\n        }\n        return origSetRemoteDescription.apply(pc, arguments);\n      };\n  }\n}\n\nexport function shimCallbacksAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  const prototype = window.RTCPeerConnection.prototype;\n  const origCreateOffer = prototype.createOffer;\n  const origCreateAnswer = prototype.createAnswer;\n  const setLocalDescription = prototype.setLocalDescription;\n  const setRemoteDescription = prototype.setRemoteDescription;\n  const addIceCandidate = prototype.addIceCandidate;\n\n  prototype.createOffer =\n    function createOffer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateOffer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  prototype.createAnswer =\n    function createAnswer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateAnswer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  let withCallback = function(description, successCallback, failureCallback) {\n    const promise = setLocalDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setLocalDescription = withCallback;\n\n  withCallback = function(description, successCallback, failureCallback) {\n    const promise = setRemoteDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setRemoteDescription = withCallback;\n\n  withCallback = function(candidate, successCallback, failureCallback) {\n    const promise = addIceCandidate.apply(this, [candidate]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.addIceCandidate = withCallback;\n}\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    // shim not needed in Safari 12.1\n    const mediaDevices = navigator.mediaDevices;\n    const _getUserMedia = mediaDevices.getUserMedia.bind(mediaDevices);\n    navigator.mediaDevices.getUserMedia = (constraints) => {\n      return _getUserMedia(shimConstraints(constraints));\n    };\n  }\n\n  if (!navigator.getUserMedia && navigator.mediaDevices &&\n    navigator.mediaDevices.getUserMedia) {\n    navigator.getUserMedia = function getUserMedia(constraints, cb, errcb) {\n      navigator.mediaDevices.getUserMedia(constraints)\n      .then(cb, errcb);\n    }.bind(navigator);\n  }\n}\n\nexport function shimConstraints(constraints) {\n  if (constraints && constraints.video !== undefined) {\n    return Object.assign({},\n      constraints,\n      {video: utils.compactObject(constraints.video)}\n    );\n  }\n\n  return constraints;\n}\n\nexport function shimRTCIceServerUrls(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n  const OrigPeerConnection = window.RTCPeerConnection;\n  window.RTCPeerConnection =\n    function RTCPeerConnection(pcConfig, pcConstraints) {\n      if (pcConfig && pcConfig.iceServers) {\n        const newIceServers = [];\n        for (let i = 0; i < pcConfig.iceServers.length; i++) {\n          let server = pcConfig.iceServers[i];\n          if (!server.hasOwnProperty('urls') &&\n              server.hasOwnProperty('url')) {\n            utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n            server = JSON.parse(JSON.stringify(server));\n            server.urls = server.url;\n            delete server.url;\n            newIceServers.push(server);\n          } else {\n            newIceServers.push(pcConfig.iceServers[i]);\n          }\n        }\n        pcConfig.iceServers = newIceServers;\n      }\n      return new OrigPeerConnection(pcConfig, pcConstraints);\n    };\n  window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n  // wrap static methods. Currently just generateCertificate.\n  if ('generateCertificate' in OrigPeerConnection) {\n    Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n      get() {\n        return OrigPeerConnection.generateCertificate;\n      }\n    });\n  }\n}\n\nexport function shimTrackEventTransceiver(window) {\n  // Add event.transceiver member over deprecated event.receiver\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      'receiver' in window.RTCTrackEvent.prototype &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimCreateOfferLegacy(window) {\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer =\n    function createOffer(offerOptions) {\n      if (offerOptions) {\n        if (typeof offerOptions.offerToReceiveAudio !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveAudio =\n            !!offerOptions.offerToReceiveAudio;\n        }\n        const audioTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'audio');\n        if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {\n          if (audioTransceiver.direction === 'sendrecv') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('sendonly');\n            } else {\n              audioTransceiver.direction = 'sendonly';\n            }\n          } else if (audioTransceiver.direction === 'recvonly') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('inactive');\n            } else {\n              audioTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveAudio === true &&\n            !audioTransceiver) {\n          this.addTransceiver('audio');\n        }\n\n        if (typeof offerOptions.offerToReceiveVideo !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveVideo =\n            !!offerOptions.offerToReceiveVideo;\n        }\n        const videoTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'video');\n        if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {\n          if (videoTransceiver.direction === 'sendrecv') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('sendonly');\n            } else {\n              videoTransceiver.direction = 'sendonly';\n            }\n          } else if (videoTransceiver.direction === 'recvonly') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('inactive');\n            } else {\n              videoTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveVideo === true &&\n            !videoTransceiver) {\n          this.addTransceiver('video');\n        }\n      }\n      return origCreateOffer.apply(this, arguments);\n    };\n}\n\nexport function shimAudioContext(window) {\n  if (typeof window !== 'object' || window.AudioContext) {\n    return;\n  }\n  window.AudioContext = window.webkitAudioContext;\n}\n","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport SDPUtils from 'sdp';\nimport * as utils from './utils';\n\nexport function shimRTCIceCandidate(window) {\n  // foundation is arbitrarily chosen as an indicator for full support for\n  // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\n  if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'foundation' in\n      window.RTCIceCandidate.prototype)) {\n    return;\n  }\n\n  const NativeRTCIceCandidate = window.RTCIceCandidate;\n  window.RTCIceCandidate = function RTCIceCandidate(args) {\n    // Remove the a= which shouldn't be part of the candidate string.\n    if (typeof args === 'object' && args.candidate &&\n        args.candidate.indexOf('a=') === 0) {\n      args = JSON.parse(JSON.stringify(args));\n      args.candidate = args.candidate.substr(2);\n    }\n\n    if (args.candidate && args.candidate.length) {\n      // Augment the native candidate with the parsed fields.\n      const nativeCandidate = new NativeRTCIceCandidate(args);\n      const parsedCandidate = SDPUtils.parseCandidate(args.candidate);\n      const augmentedCandidate = Object.assign(nativeCandidate,\n          parsedCandidate);\n\n      // Add a serializer that does not serialize the extra attributes.\n      augmentedCandidate.toJSON = function toJSON() {\n        return {\n          candidate: augmentedCandidate.candidate,\n          sdpMid: augmentedCandidate.sdpMid,\n          sdpMLineIndex: augmentedCandidate.sdpMLineIndex,\n          usernameFragment: augmentedCandidate.usernameFragment,\n        };\n      };\n      return augmentedCandidate;\n    }\n    return new NativeRTCIceCandidate(args);\n  };\n  window.RTCIceCandidate.prototype = NativeRTCIceCandidate.prototype;\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', e => {\n    if (e.candidate) {\n      Object.defineProperty(e, 'candidate', {\n        value: new window.RTCIceCandidate(e.candidate),\n        writable: 'false'\n      });\n    }\n    return e;\n  });\n}\n\nexport function shimMaxMessageSize(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  if (!('sctp' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'sctp', {\n      get() {\n        return typeof this._sctp === 'undefined' ? null : this._sctp;\n      }\n    });\n  }\n\n  const sctpInDescription = function(description) {\n    if (!description || !description.sdp) {\n      return false;\n    }\n    const sections = SDPUtils.splitSections(description.sdp);\n    sections.shift();\n    return sections.some(mediaSection => {\n      const mLine = SDPUtils.parseMLine(mediaSection);\n      return mLine && mLine.kind === 'application'\n          && mLine.protocol.indexOf('SCTP') !== -1;\n    });\n  };\n\n  const getRemoteFirefoxVersion = function(description) {\n    // TODO: Is there a better solution for detecting Firefox?\n    const match = description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\n    if (match === null || match.length < 2) {\n      return -1;\n    }\n    const version = parseInt(match[1], 10);\n    // Test for NaN (yes, this is ugly)\n    return version !== version ? -1 : version;\n  };\n\n  const getCanSendMaxMessageSize = function(remoteIsFirefox) {\n    // Every implementation we know can send at least 64 KiB.\n    // Note: Although Chrome is technically able to send up to 256 KiB, the\n    //       data does not reach the other peer reliably.\n    //       See: https://bugs.chromium.org/p/webrtc/issues/detail?id=8419\n    let canSendMaxMessageSize = 65536;\n    if (browserDetails.browser === 'firefox') {\n      if (browserDetails.version < 57) {\n        if (remoteIsFirefox === -1) {\n          // FF < 57 will send in 16 KiB chunks using the deprecated PPID\n          // fragmentation.\n          canSendMaxMessageSize = 16384;\n        } else {\n          // However, other FF (and RAWRTC) can reassemble PPID-fragmented\n          // messages. Thus, supporting ~2 GiB when sending.\n          canSendMaxMessageSize = 2147483637;\n        }\n      } else if (browserDetails.version < 60) {\n        // Currently, all FF >= 57 will reset the remote maximum message size\n        // to the default value when a data channel is created at a later\n        // stage. :(\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n        canSendMaxMessageSize =\n          browserDetails.version === 57 ? 65535 : 65536;\n      } else {\n        // FF >= 60 supports sending ~2 GiB\n        canSendMaxMessageSize = 2147483637;\n      }\n    }\n    return canSendMaxMessageSize;\n  };\n\n  const getMaxMessageSize = function(description, remoteIsFirefox) {\n    // Note: 65536 bytes is the default value from the SDP spec. Also,\n    //       every implementation we know supports receiving 65536 bytes.\n    let maxMessageSize = 65536;\n\n    // FF 57 has a slightly incorrect default remote max message size, so\n    // we need to adjust it here to avoid a failure when sending.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1425697\n    if (browserDetails.browser === 'firefox'\n         && browserDetails.version === 57) {\n      maxMessageSize = 65535;\n    }\n\n    const match = SDPUtils.matchPrefix(description.sdp,\n      'a=max-message-size:');\n    if (match.length > 0) {\n      maxMessageSize = parseInt(match[0].substr(19), 10);\n    } else if (browserDetails.browser === 'firefox' &&\n                remoteIsFirefox !== -1) {\n      // If the maximum message size is not present in the remote SDP and\n      // both local and remote are Firefox, the remote peer can receive\n      // ~2 GiB.\n      maxMessageSize = 2147483637;\n    }\n    return maxMessageSize;\n  };\n\n  const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription =\n    function setRemoteDescription() {\n      this._sctp = null;\n      // Chrome decided to not expose .sctp in plan-b mode.\n      // As usual, adapter.js has to do an 'ugly worakaround'\n      // to cover up the mess.\n      if (browserDetails.browser === 'chrome' && browserDetails.version >= 76) {\n        const {sdpSemantics} = this.getConfiguration();\n        if (sdpSemantics === 'plan-b') {\n          Object.defineProperty(this, 'sctp', {\n            get() {\n              return typeof this._sctp === 'undefined' ? null : this._sctp;\n            },\n            enumerable: true,\n            configurable: true,\n          });\n        }\n      }\n\n      if (sctpInDescription(arguments[0])) {\n        // Check if the remote is FF.\n        const isFirefox = getRemoteFirefoxVersion(arguments[0]);\n\n        // Get the maximum message size the local peer is capable of sending\n        const canSendMMS = getCanSendMaxMessageSize(isFirefox);\n\n        // Get the maximum message size of the remote peer.\n        const remoteMMS = getMaxMessageSize(arguments[0], isFirefox);\n\n        // Determine final maximum message size\n        let maxMessageSize;\n        if (canSendMMS === 0 && remoteMMS === 0) {\n          maxMessageSize = Number.POSITIVE_INFINITY;\n        } else if (canSendMMS === 0 || remoteMMS === 0) {\n          maxMessageSize = Math.max(canSendMMS, remoteMMS);\n        } else {\n          maxMessageSize = Math.min(canSendMMS, remoteMMS);\n        }\n\n        // Create a dummy RTCSctpTransport object and the 'maxMessageSize'\n        // attribute.\n        const sctp = {};\n        Object.defineProperty(sctp, 'maxMessageSize', {\n          get() {\n            return maxMessageSize;\n          }\n        });\n        this._sctp = sctp;\n      }\n\n      return origSetRemoteDescription.apply(this, arguments);\n    };\n}\n\nexport function shimSendThrowTypeError(window) {\n  if (!(window.RTCPeerConnection &&\n      'createDataChannel' in window.RTCPeerConnection.prototype)) {\n    return;\n  }\n\n  // Note: Although Firefox >= 57 has a native implementation, the maximum\n  //       message size can be reset for all data channels at a later stage.\n  //       See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n\n  function wrapDcSend(dc, pc) {\n    const origDataChannelSend = dc.send;\n    dc.send = function send() {\n      const data = arguments[0];\n      const length = data.length || data.size || data.byteLength;\n      if (dc.readyState === 'open' &&\n          pc.sctp && length > pc.sctp.maxMessageSize) {\n        throw new TypeError('Message too large (can send a maximum of ' +\n          pc.sctp.maxMessageSize + ' bytes)');\n      }\n      return origDataChannelSend.apply(dc, arguments);\n    };\n  }\n  const origCreateDataChannel =\n    window.RTCPeerConnection.prototype.createDataChannel;\n  window.RTCPeerConnection.prototype.createDataChannel =\n    function createDataChannel() {\n      const dataChannel = origCreateDataChannel.apply(this, arguments);\n      wrapDcSend(dataChannel, this);\n      return dataChannel;\n    };\n  utils.wrapPeerConnectionEvent(window, 'datachannel', e => {\n    wrapDcSend(e.channel, e.target);\n    return e;\n  });\n}\n\n\n/* shims RTCConnectionState by pretending it is the same as iceConnectionState.\n * See https://bugs.chromium.org/p/webrtc/issues/detail?id=6145#c12\n * for why this is a valid hack in Chrome. In Firefox it is slightly incorrect\n * since DTLS failures would be hidden. See\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1265827\n * for the Firefox tracking bug.\n */\nexport function shimConnectionState(window) {\n  if (!window.RTCPeerConnection ||\n      'connectionState' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  Object.defineProperty(proto, 'connectionState', {\n    get() {\n      return {\n        completed: 'connected',\n        checking: 'connecting'\n      }[this.iceConnectionState] || this.iceConnectionState;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(proto, 'onconnectionstatechange', {\n    get() {\n      return this._onconnectionstatechange || null;\n    },\n    set(cb) {\n      if (this._onconnectionstatechange) {\n        this.removeEventListener('connectionstatechange',\n            this._onconnectionstatechange);\n        delete this._onconnectionstatechange;\n      }\n      if (cb) {\n        this.addEventListener('connectionstatechange',\n            this._onconnectionstatechange = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ['setLocalDescription', 'setRemoteDescription'].forEach((method) => {\n    const origMethod = proto[method];\n    proto[method] = function() {\n      if (!this._connectionstatechangepoly) {\n        this._connectionstatechangepoly = e => {\n          const pc = e.target;\n          if (pc._lastConnectionState !== pc.connectionState) {\n            pc._lastConnectionState = pc.connectionState;\n            const newEvent = new Event('connectionstatechange', e);\n            pc.dispatchEvent(newEvent);\n          }\n          return e;\n        };\n        this.addEventListener('iceconnectionstatechange',\n          this._connectionstatechangepoly);\n      }\n      return origMethod.apply(this, arguments);\n    };\n  });\n}\n\nexport function removeExtmapAllowMixed(window, browserDetails) {\n  /* remove a=extmap-allow-mixed for webrtc.org < M71 */\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  if (browserDetails.browser === 'chrome' && browserDetails.version >= 71) {\n    return;\n  }\n  if (browserDetails.browser === 'safari' && browserDetails.version >= 605) {\n    return;\n  }\n  const nativeSRD = window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription =\n  function setRemoteDescription(desc) {\n    if (desc && desc.sdp && desc.sdp.indexOf('\\na=extmap-allow-mixed') !== -1) {\n      const sdp = desc.sdp.split('\\n').filter((line) => {\n        return line.trim() !== 'a=extmap-allow-mixed';\n      }).join('\\n');\n      // Safari enforces read-only-ness of RTCSessionDescription fields.\n      if (window.RTCSessionDescription &&\n          desc instanceof window.RTCSessionDescription) {\n        arguments[0] = new window.RTCSessionDescription({\n          type: desc.type,\n          sdp,\n        });\n      } else {\n        desc.sdp = sdp;\n      }\n    }\n    return nativeSRD.apply(this, arguments);\n  };\n}\n\nexport function shimAddIceCandidateNullOrEmpty(window, browserDetails) {\n  // Support for addIceCandidate(null or undefined)\n  // as well as addIceCandidate({candidate: \"\", ...})\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=978582\n  // Note: must be called before other polyfills which change the signature.\n  if (!(window.RTCPeerConnection && window.RTCPeerConnection.prototype)) {\n    return;\n  }\n  const nativeAddIceCandidate =\n      window.RTCPeerConnection.prototype.addIceCandidate;\n  if (!nativeAddIceCandidate || nativeAddIceCandidate.length === 0) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.addIceCandidate =\n    function addIceCandidate() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      // Firefox 68+ emits and processes {candidate: \"\", ...}, ignore\n      // in older versions.\n      // Native support for ignoring exists for Chrome M77+.\n      // Safari ignores as well, exact version unknown but works in the same\n      // version that also ignores addIceCandidate(null).\n      if (((browserDetails.browser === 'chrome' && browserDetails.version < 78)\n           || (browserDetails.browser === 'firefox'\n               && browserDetails.version < 68)\n           || (browserDetails.browser === 'safari'))\n          && arguments[0] && arguments[0].candidate === '') {\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n\n'use strict';\n\nimport {adapterFactory} from './adapter_factory.js';\n\nconst adapter =\n  adapterFactory({window: typeof window === 'undefined' ? undefined : window});\nexport default adapter;\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\nimport * as utils from './utils';\n\n  // Browser shims.\nimport * as chromeShim from './chrome/chrome_shim';\nimport * as firefoxShim from './firefox/firefox_shim';\nimport * as safariShim from './safari/safari_shim';\nimport * as commonShim from './common_shim';\nimport * as sdp from 'sdp';\n\n// Shimming starts here.\nexport function adapterFactory({window} = {}, options = {\n  shimChrome: true,\n  shimFirefox: true,\n  shimSafari: true,\n}) {\n  // Utils.\n  const logging = utils.log;\n  const browserDetails = utils.detectBrowser(window);\n\n  const adapter = {\n    browserDetails,\n    commonShim,\n    extractVersion: utils.extractVersion,\n    disableLog: utils.disableLog,\n    disableWarnings: utils.disableWarnings,\n    // Expose sdp as a convenience. For production apps include directly.\n    sdp,\n  };\n\n  // Shim browser if found.\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection ||\n          !options.shimChrome) {\n        logging('Chrome shim is not included in this adapter release.');\n        return adapter;\n      }\n      if (browserDetails.version === null) {\n        logging('Chrome shim can not determine version, not shimming.');\n        return adapter;\n      }\n      logging('adapter.js shimming chrome.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = chromeShim;\n\n      // Must be called before shimPeerConnection.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n\n      chromeShim.shimGetUserMedia(window, browserDetails);\n      chromeShim.shimMediaStream(window, browserDetails);\n      chromeShim.shimPeerConnection(window, browserDetails);\n      chromeShim.shimOnTrack(window, browserDetails);\n      chromeShim.shimAddTrackRemoveTrack(window, browserDetails);\n      chromeShim.shimGetSendersWithDtmf(window, browserDetails);\n      chromeShim.shimGetStats(window, browserDetails);\n      chromeShim.shimSenderReceiverGetStats(window, browserDetails);\n      chromeShim.fixNegotiationNeeded(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection ||\n          !options.shimFirefox) {\n        logging('Firefox shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming firefox.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = firefoxShim;\n\n      // Must be called before shimPeerConnection.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n\n      firefoxShim.shimGetUserMedia(window, browserDetails);\n      firefoxShim.shimPeerConnection(window, browserDetails);\n      firefoxShim.shimOnTrack(window, browserDetails);\n      firefoxShim.shimRemoveStream(window, browserDetails);\n      firefoxShim.shimSenderGetStats(window, browserDetails);\n      firefoxShim.shimReceiverGetStats(window, browserDetails);\n      firefoxShim.shimRTCDataChannel(window, browserDetails);\n      firefoxShim.shimAddTransceiver(window, browserDetails);\n      firefoxShim.shimGetParameters(window, browserDetails);\n      firefoxShim.shimCreateOffer(window, browserDetails);\n      firefoxShim.shimCreateAnswer(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      break;\n    case 'safari':\n      if (!safariShim || !options.shimSafari) {\n        logging('Safari shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming safari.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = safariShim;\n\n      // Must be called before shimCallbackAPI.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n\n      safariShim.shimRTCIceServerUrls(window, browserDetails);\n      safariShim.shimCreateOfferLegacy(window, browserDetails);\n      safariShim.shimCallbacksAPI(window, browserDetails);\n      safariShim.shimLocalStreamsAPI(window, browserDetails);\n      safariShim.shimRemoteStreamsAPI(window, browserDetails);\n      safariShim.shimTrackEventTransceiver(window, browserDetails);\n      safariShim.shimGetUserMedia(window, browserDetails);\n      safariShim.shimAudioContext(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n    default:\n      logging('Unsupported browser!');\n      break;\n  }\n\n  return adapter;\n}\n"],"sourceRoot":""}